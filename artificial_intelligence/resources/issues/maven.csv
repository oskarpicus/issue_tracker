Summary,Issue key,Issue id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Component/s,Component/s,Component/s,Component/s,Due Date,Votes,Labels,Labels,Labels,Description,Environment,Log Work,Log Work,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Outward issue link (Blocked),Outward issue link (Blocker),Inward issue link (Completes),Outward issue link (Completes),Outward issue link (Completes),Inward issue link (Duplicate),Inward issue link (Duplicate),Inward issue link (Duplicate),Inward issue link (Duplicate),Inward issue link (Duplicate),Inward issue link (Duplicate),Inward issue link (Duplicate),Outward issue link (Duplicate),Outward issue link (Duplicate),Inward issue link (Problem/Incident),Outward issue link (Problem/Incident),Inward issue link (Reference),Inward issue link (Reference),Inward issue link (Reference),Outward issue link (Reference),Outward issue link (Reference),Outward issue link (Reference),Outward issue link (Reference),Inward issue link (Regression),Outward issue link (Regression),Inward issue link (Related),Inward issue link (Related),Inward issue link (Related),Inward issue link (Related),Inward issue link (Related),Inward issue link (Related),Outward issue link (Related),Outward issue link (Related),Outward issue link (Related),Outward issue link (Related),Outward issue link (Related),Inward issue link (Supercedes),Outward issue link (Supercedes),Inward issue link (Testing),Inward issue link (dependent),Inward issue link (dependent),Outward issue link (dependent),Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Custom field (Affects version (Component)),Custom field (Blog - New Blog Administrators),Custom field (Blog - New Blog PMC),Custom field (Blog - Write access),Custom field (Blog Administrator?),Custom field (Blogs - Admin for blog),Custom field (Blogs - Email Address),Custom field (Blogs - Existing Blog Access Level),Custom field (Blogs - Existing Blog Name),Custom field (Blogs - New Blog Write Access),Custom field (Blogs - Username),Custom field (Bug Category),Custom field (Bugzilla - Email Notification Address),Custom field (Bugzilla - List of usernames),Custom field (Bugzilla - PMC Name),Custom field (Bugzilla - Project Name),Custom field (Bugzilla Id),Custom field (Bugzilla Id),Custom field (Change Category),Custom field (Complexity),Custom field (Discovered By),Custom field (Docs Text),Custom field (Enable Automatic Patch Review),Custom field (Epic Link),Custom field (Estimated Complexity),Custom field (Evidence Of Open Source Adoption),Custom field (Evidence Of Registration),Custom field (Evidence Of Use On World Wide Web),Custom field (Existing GitBox Approval),Custom field (External issue URL),Custom field (Fix version (Component)),Custom field (Flags),Custom field (Flags),Custom field (Git Notification Mailing List),Custom field (Git Repository Import Path),Custom field (Git Repository Name),Custom field (Git Repository Type),Custom field (GitHub Options),Custom field (Github Integration),Custom field (Github Integrations - Other),Custom field (Global Rank),Custom field (INFRA - Subversion Repository Path),Custom field (Initial Confluence Contributors),Custom field (Language),Custom field (Level of effort),Custom field (Machine Readable Info),Custom field (Mentor),Custom field (New-TLP-TLPName),Custom field (Original story points),Custom field (Parent Link),Custom field (Priority),Custom field (Project),Custom field (Protected Branch),Custom field (Rank),Custom field (Rank (Obsolete)),Custom field (Review Date),Custom field (Reviewer),Custom field (Severity),Custom field (Severity),Custom field (Skill Level),Custom field (Source Control Link),Custom field (Space Description),Custom field (Space Key),Custom field (Space Name),Custom field (Start Date),Custom field (Tags),Custom field (Target end),Custom field (Target start),Custom field (Team),Custom field (Test and Documentation Plan),Custom field (Testcase included),Custom field (Tester),Custom field (Workaround),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
Maven downloading log4j version not specified in POM when building the Project.,MNG-7366,13417937,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Invalid,,srini1801,srini1801,16/Dec/21 09:49,22/Dec/21 06:09,03/Jan/22 13:12,16/Dec/21 09:58,3.8.4,,,,,,,,Artifacts and Repositories,Dependencies,,,,0,,,,"Maven downloading log4j version not specified in POM when building the Project.

In POM i have updated my log4j to log4j core 2.16.0 to fix the Log4j Vulnerability with Older version. But even after changing the Version Maven is downloading 1.2.12 and 1.2.17 version of Log4j when running the build.

I'm not seeing these version even in the dependency tree of my Project. 

Please help to fix this issue as its a Critical Security Issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Dec/21 07:42;srini1801;maven log4j issue.png;https://issues.apache.org/jira/secure/attachment/13037757/maven+log4j+issue.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,Important,Patch,,,,,,,,9223372036854775807,,,Java,,,,,,,,,,"0|z0xryw:",9223372036854775807,,,,,,,,,,,,,,,,,,,"16/Dec/21 09:57;mthmulders;This is not a bug in Maven. Your project probably has a transitive dependency on Log4J 1.x. You can inspect all dependencies with {{mvn dependency:tree}}. In the output, look for {{log4j:log4j:1.2.12}} or {{log4j:log4j:1.2.17}} and see which dependencies of your project cause this older version to be downloaded.

Be aware that the log file of Maven may also mention downloading plugins and their dependencies. Those will not end up in your project build.;;;","17/Dec/21 10:08;srini1801;[~mthmulders] I checked the dependency tree and didn't find any transitive dependency for Log4j older version. so is there any other way to narrow down this to see why/where maven is downloading older version?;;;","17/Dec/21 10:42;mthmulders;Then it is _probably_ downloaded because some plugin needs it. I can't tell you if that's the case.

By the way, the fact that Maven downloads a particular JAR is in itself not a critical security issue.;;;","21/Dec/21 07:44;srini1801;I tried saving with No dependency in the POM File but still seeing Log4j version1.2.12 getting downloaded. Please refer the attached image and investigate if its issue or not.;;;","21/Dec/21 08:05;mthmulders;As said before:
{quote}By the way, the fact that Maven downloads a particular JAR is in itself not a critical security issue.
{quote}
Because as long as Log4J is not loaded by the application you package, deploy or run, nobody will be able to exploit any issue in Log4J.;;;","22/Dec/21 06:09;srini1801;Thanks [~mthmulders] got it. But I was curious why Maven is downloading Log4j when no Dependency specified in the Project POM.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot disable server password encryption,MNG-7313,13407113,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Not A Problem,,Benczedi,Benczedi,18/Oct/21 16:23,19/Oct/21 09:19,03/Jan/22 13:12,19/Oct/21 09:19,3.6.3,3.8.3,,,,,,,,,,,,0,,,,"I'm working with [AWS CodeArrifact |https://aws.amazon.com/codeartifact/]and aws resets the artifact repository password every 12 hours which makes the motivation behind encrypting the server password moot.

 

My settings.xml: 
{code:java}
 <servers>
        <server>
            <id>aws-artifacts</id>
            <username>aws</username>
            <password>awsgeneratedpassword</password>
        </server>
    </servers>
{code}
 

Current behaviour:
 aws authentication fails - possibly because the server password encryption is not set up - mvn fails to download the artifacts

Expected behaviour:

the dependencies are downloaded successfully & the build continues.

 
{code:java}
[DEBUG] Failed to decrypt password for server aws-artifacts: org.sonatype.plexus.components.sec.dispatcher.SecDispatcherException: java.io.FileNotFoundException: C:\Users\JozsefBenczedi\.m2\settings-security.xml (The system cannot find the file specified) org.sonatype.plexus.components.sec.dispatcher.SecDispatcherException: org.sonatype.plexus.components.sec.dispatcher.SecDispatcherException: java.io.FileNotFoundException: C:\Users\JozsefBenczedi\.m2\settings-security.xml (The system cannot find the file specified) at org.sonatype.plexus.components.sec.dispatcher.DefaultSecDispatcher.decrypt (DefaultSecDispatcher.java:121) at org.apache.maven.settings.crypto.DefaultSettingsDecrypter.decrypt (DefaultSettingsDecrypter.java:114) at org.apache.maven.settings.crypto.DefaultSettingsDecrypter.decrypt (DefaultSettingsDecrypter.java:70) at org.apache.maven.internal.aether.DefaultRepositorySystemSessionFactory.newRepositorySession (DefaultRepositorySystemSessionFactory.java:167) at org.apache.maven.DefaultMaven.newRepositorySession (DefaultMaven.java:350) at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:185) at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105) at org.apache.maven.cli.MavenCli.execute (MavenCli.java:957) at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:289) at org.apache.maven.cli.MavenCli.main (MavenCli.java:193) at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method) at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:77) at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke (Method.java:568) at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282) at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225) at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406) at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347) at org.codehaus.classworlds.Launcher.main (Launcher.java:47) Caused by: org.sonatype.plexus.components.sec.dispatcher.SecDispatcherException: java.io.FileNotFoundException: C:\Users\JozsefBenczedi\.m2\settings-security.xml (The system cannot find the file specified) at org.sonatype.plexus.components.sec.dispatcher.SecUtil.read (SecUtil.java:69) at org.sonatype.plexus.components.sec.dispatcher.DefaultSecDispatcher.getSec (DefaultSecDispatcher.java:206) at org.sonatype.plexus.components.sec.dispatcher.DefaultSecDispatcher.decrypt (DefaultSecDispatcher.java:90) at org.apache.maven.settings.crypto.DefaultSettingsDecrypter.decrypt (DefaultSettingsDecrypter.java:114) at org.apache.maven.settings.crypto.DefaultSettingsDecrypter.decrypt (DefaultSettingsDecrypter.java:70) at org.apache.maven.internal.aether.DefaultRepositorySystemSessionFactory.newRepositorySession (DefaultRepositorySystemSessionFactory.java:167) at org.apache.maven.DefaultMaven.newRepositorySession (DefaultMaven.java:350) at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:185) at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105) at org.apache.maven.cli.MavenCli.execute (MavenCli.java:957) at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:289) at org.apache.maven.cli.MavenCli.main (MavenCli.java:193) at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method) at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:77) at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke (Method.java:568) at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282) at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225) at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406) at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347) at org.codehaus.classworlds.Launcher.main (Launcher.java:47) Caused by: java.io.FileNotFoundException: C:\Users\JozsefBenczedi\.m2\settings-security.xml (The system cannot find the file specified) at java.io.FileInputStream.open0 (Native Method) at java.io.FileInputStream.open (FileInputStream.java:216) at java.io.FileInputStream.<init> (FileInputStream.java:157) at org.sonatype.plexus.components.sec.dispatcher.SecUtil.toStream (SecUtil.java:100) at org.sonatype.plexus.components.sec.dispatcher.SecUtil.read (SecUtil.java:56) at org.sonatype.plexus.components.sec.dispatcher.DefaultSecDispatcher.getSec (DefaultSecDispatcher.java:206) at org.sonatype.plexus.components.sec.dispatcher.DefaultSecDispatcher.decrypt (DefaultSecDispatcher.java:90) at org.apache.maven.settings.crypto.DefaultSettingsDecrypter.decrypt (DefaultSettingsDecrypter.java:114) at org.apache.maven.settings.crypto.DefaultSettingsDecrypter.decrypt (DefaultSettingsDecrypter.java:70) at org.apache.maven.internal.aether.DefaultRepositorySystemSessionFactory.newRepositorySession (DefaultRepositorySystemSessionFactory.java:167) at org.apache.maven.DefaultMaven.newRepositorySession (DefaultMaven.java:350) at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:185) at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105) at org.apache.maven.cli.MavenCli.execute (MavenCli.java:957) at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:289) at org.apache.maven.cli.MavenCli.main (MavenCli.java:193) at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method) at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:77) at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke (Method.java:568) at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282) at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225) at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406) at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347) at org.codehaus.classworlds.Launcher.main (Launcher.java:47)
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|z0vxug:",9223372036854775807,,,,,,,,,,,,,,,,,,,"18/Oct/21 17:42;khmarbaise;The password encryption means to encrypt the passwords in your {{settings.xml}} file...where it is necessary to have a {{settings-security.xml}} which means you have not encrypted your passwords. Based on the missing setup it can not being used.

So you have written that you expect to download the artifacts without setup the encryption which will not work...maybe I misunderstand a thing but based on what I read Maven itself can not do anything?

Maybe you can give more details...?;;;","18/Oct/21 20:19;michael-o;There is no encryption if you don't enable it.;;;","19/Oct/21 09:07;Benczedi;Update: yeah, when I removed the servers from the settings.xml file in the project it worked.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[Regression] MavenProject.getArtifacts() not returning correct value across multiple threads,MNG-7285,13405271,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,michael-o,mickael.istria,mickael.istria,06/Oct/21 20:34,17/Dec/21 08:20,03/Jan/22 13:12,22/Oct/21 20:22,3.8.2,3.8.3,4.0.0-alpha-1,,,3.8.4,4.0.0,4.0.0-alpha-1,Core,,,,,0,,,,"Patch for MNG-6843 seems to cause that when trying to use MavenProject.getArtifacts() across different threads, some of them get an incorrect result.

This cause an issue in m2e where we schedule a lot of work and don't have much control over which thread will do the work (there is a thread pool); we've faced several regressions because of this issue when trying to adopt 3.8.3 from 3.8.1. More details at [https://github.com/eclipse-m2e/m2e-core/pull/346|https://github.com/eclipse-m2e/m2e-core/pull/350] , [https://github.com/eclipse-m2e/m2e-core/pull/347|https://github.com/eclipse-m2e/m2e-core/pull/350] and [https://github.com/eclipse-m2e/m2e-core/pull/350] .

I'll try to capture it in a test case for maven repo in the next days.",,,,,,,,,,,,,,MNG-7312,,,,,,,,,,,,,,MNG-7156,,,,,,,MNG-6843,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|z0vmi0:",9223372036854775807,,,,,,,,,,,,,,,,,,,"06/Oct/21 20:50;michael-o;Can this be reproduced within m2e only?;;;","07/Oct/21 07:19;mickael.istria;I also believe that some mojos, or even Maven core, running with a -T<threads> option can reach this issue.;;;","07/Oct/21 08:19;michael-o;If you can reproduce the issue, you can try to revert those two commits by Falko Modler and see whether your issue is fixed. However, I guess a revert will break other things :-(;;;","07/Oct/21 08:20;michael-o;Here they are: https://github.com/apache/maven/commits?author=famod;;;","07/Oct/21 08:21;michael-o;[~famod], please stay tuned.;;;","07/Oct/21 20:23;mickael.istria;PR at [https://github.com/apache/maven/pull/570] shows the regression. This same test is working with maven 3.8.1 and starts failing since 3.8.3.

I think any mojo that uses project.getArtifacts() can get faulty result if using parallel build.;;;","11/Oct/21 15:31;michael-o;[~mickael.istria], I guess this issue applies to master as well?;;;","11/Oct/21 16:18;mickael.istria;> I guess this issue applies to master as well?

I guess so; but we didn't try for m2e as there are other issues with Maven 4 that prevents us to go far enough to notice this bug.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix threadLocalArtifactsHolder leaking into cloned project,MNG-7251,13401048,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,michael-o,michael-o,michael-o,14/Sep/21 15:20,22/Oct/21 20:40,03/Jan/22 13:12,14/Sep/21 15:29,3.8.2,4.0.0-alpha-1,,,,3.8.3,4.0.0,4.0.0-alpha-1,Class Loading,Dependencies,,,,0,,,,,,,,,,,,,,,,,,,MNG-7220,,,,,,,,,,,,,,,,,,,,,MNG-7312,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|z0uwgo:",9223372036854775807,,,,,,,,,,,,,,,,,,,"14/Sep/21 15:29;michael-o;Fixed with [a6e462b53a4b6c87ef43f6cfe7fbde0b0939e3d6|https://gitbox.apache.org/repos/asf?p=maven.git;a=commit;h=a6e462b53a4b6c87ef43f6cfe7fbde0b0939e3d6] for {{master}} and  with [4e5b3d55545e5f03f05ac7b0cd1b56689df36201|https://gitbox.apache.org/repos/asf?p=maven.git;a=commit;h=4e5b3d55545e5f03f05ac7b0cd1b56689df36201] for {{maven-3.8.x}} branch.;;;","14/Sep/21 15:55;hudson;Build unstable in Jenkins: Maven » Maven TLP » maven » maven-3.8.x #69

See https://ci-maven.apache.org/job/Maven/job/maven-box/job/maven/job/maven-3.8.x/69/;;;","14/Sep/21 15:58;hudson;Build succeeded in Jenkins: Maven » Maven TLP » maven » master #229

See https://ci-maven.apache.org/job/Maven/job/maven-box/job/maven/job/master/229/;;;","22/Oct/21 20:40;hudson;Build unstable in Jenkins: Maven » Maven TLP » maven » maven-3.8.x #83

See https://ci-maven.apache.org/job/Maven/job/maven-box/job/maven/job/maven-3.8.x/83/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DefaultModelBuilder.buildRawModel fails as it ignores pom file,MNG-7226,13398465,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,gnodet,mickael.istria,mickael.istria,31/Aug/21 13:21,03/Sep/21 09:27,03/Jan/22 13:12,03/Sep/21 07:56,4.0.0-alpha-1,,,,,4.0.0,4.0.0-alpha-1,,Core,,,,,0,,,,"LemMinX-Maven uses DefaultModelBuilder.buildRawModel() to retrieve some informations about some models (in case loading the whole project is not necessary).

Since MNG-6957, this method is broken as it ignores the input pom file. I imagine the request would simply have to set the FileModelSource instead.

This issue has happened because it looks like this method as no user in the other parts of Maven, nor has a test case covering it.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|z0ugiw:",9223372036854775807,,,,,,,,,,,,,,,,,,,"31/Aug/21 14:08;mickael.istria;See [https://github.com/apache/maven/pull/528] for a proposed solution.;;;","31/Aug/21 15:39;michael-o;I will pick this up next month unless someone else is faster....;;;","03/Sep/21 08:03;mickael.istria;Thanks for the review & merge!;;;","03/Sep/21 08:07;michael-o;Link to SCM is missing, issue isn't closed, and fix version is incomplete.;;;","03/Sep/21 08:56;gnodet;Fixed by commit
   https://github.com/apache/maven/commit/76d7f58a61eb6aea8d2e8b78551e5d500cc74f6e

What about the fix version ?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[REGRESSION] test-classpath incorrectly resolved ,MNG-7220,13396301,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,michael-o,rfscholte,rfscholte,20/Aug/21 08:31,14/Sep/21 16:02,03/Jan/22 13:12,14/Sep/21 15:30,3.8.2,,,,,3.8.3,4.0.0,4.0.0-alpha-1,Dependencies,,,,,0,,,,"The integrationtest of MJAVADOC-259 succeeds with Maven 3.8.1, but fails with 3.8.2.

Git bisect identifies 76d5f0d942f52650d3bdf775b6af42d23d69066b as the first bad commit
",,,,,,,,,,,,,,MNG-7251,,,,,,,,,,,,MNG-6843,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Aug/21 08:04;rfscholte;381.log;https://issues.apache.org/jira/secure/attachment/13032233/381.log","20/Aug/21 08:09;rfscholte;382.log;https://issues.apache.org/jira/secure/attachment/13032232/382.log",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|z0u36g:",9223372036854775807,,,,,,,,,,,,,,,,,,,"20/Aug/21 08:49;rfscholte;I hope [~famod] can help investigate this one. My first suspect would be the {{@Execute( phase = LifecyclePhase.GENERATE_TEST_SOURCES )}} on the Mojo class.;;;","20/Aug/21 20:56;famod;Standard Maven plugins are not tested with a new Maven release before it's released? That's unfortunate, given all the test coverage that's in those plugins...

I'm not familiar with the internals of {{@Execute}}. Does it spawn a new Thread? Can you point me to the implementation, [~rfscholte]? Thanks!;;;","20/Aug/21 21:02;michael-o;Robert started working on this, but the setups are getting more and more complex as you can see. Another unfortunately thing is that people don't test during voting phase. I have the vote open for at least one week. If we can't sort this out, I will need to revert until we can solve this. :-(;;;","20/Aug/21 21:05;famod;I understand the urgency, that's why I'll try to help. I was actually about to integrate Maven 3.8.2 in Quarkus and I will pause that now, until we better understand the impact of this.;;;","21/Aug/21 15:05;michael-o;I know and I am grateful for your help. Take your time.;;;","22/Aug/21 15:00;famod;I think I got it!
The problem is how MavenProject is cloned for those forked lifecycles: {{clone()}} simply copies {{threadLocalArtifactsHolder}} over to the clone and so both instances share the same ThreadLocal, which is wrong and leads to artifacts getting lost in the fork (in this specific case, different scenarios might yield other stange results).
I succeeded in fixing this problem locally by swapping the copied {{threadLocalArtifactsHolder}} with a new one and doing an explicit deep copy of {{ArtifactsHolder}}.

I'll have to think about on how to clean this up. I'd rather prevent the TL from being ""copied"" in the firstplace (instead of swapping it ""manually"").;;;","22/Aug/21 15:04;famod;FTR, this is the trace leading to the clone:
{noformat}
	at org.apache.maven.project.MavenProject.deepCopy(MavenProject.java:1229)
	at org.apache.maven.project.MavenProject.clone(MavenProject.java:1192)
	at org.apache.maven.lifecycle.internal.MojoExecutor.executeForkedExecutions(MojoExecutor.java:336)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeForkedExecutions(DefaultLifecycleExecutor.java:173)
	at org.apache.maven.reporting.exec.DefaultMavenReportExecutor.buildReportPlugin(DefaultMavenReportExecutor.java:273)
	at org.apache.maven.reporting.exec.DefaultMavenReportExecutor.buildMavenReports(DefaultMavenReportExecutor.java:154)
	at org.apache.maven.plugins.site.AbstractSiteRenderingMojo.getReports(AbstractSiteRenderingMojo.java:235)
	at org.apache.maven.plugins.site.SiteMojo.execute(SiteMojo.java:121)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:137)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:210)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:156)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:148)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:117)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:81)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:56)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:305)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:192)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:105)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:972)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:293)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:196)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:282)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:225)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:406)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:347)
{noformat};;;","22/Aug/21 16:47;michael-o;This is awesome news...please keep us updated!;;;","22/Aug/21 17:16;famod;[~michael-o] Do I have to create a PR targeting {{master}} first? Or can I create the 3.8.x one first?;;;","22/Aug/21 17:30;michael-o;Lets try on 3.8.x first, then merge and then to master.;;;","22/Aug/21 21:07;famod;PR for 3.8.x: https://github.com/apache/maven/pull/527;;;","04/Sep/21 15:10;sseifert;the ticket [WTOOL-78|https://wcm-io.atlassian.net/browse/WTOOL-78] described a problem with building javadoc as part of a maven site generation that fails due to the problem described in this ticket:
- build fails in when generating the maven site during the javadoc step, which is unable to find a couple of dependencies which are defined correctly (they are defined as ""provided"" in the <dependency> section of one of the parent POMs)
- the build does not fail when ""javadoc:javadoc"" is executed directly, only as part of the ""site"" goal
- everything runs fine with Maven 3.8.1 or 3.6.3

i can confirm that the problem is fixed with https://github.com/apache/maven/pull/527;;;","12/Sep/21 15:50;michael-o;I can confirm that this issue is fixed by the provided PR and the issue can be observed on Maven master. [~famod], can you provide a PR for master as well?;;;","12/Sep/21 22:00;famod;[~michael-o]:
{quote}Falko Modler, can you provide a PR for master as well?{quote}
Done: https://github.com/apache/maven/pull/535;;;","13/Sep/21 07:31;michael-o;Thanks, will try apply in the next couple of days...;;;","14/Sep/21 10:41;michael-o;I can also confirm that the fix for master is working. I will go on with the merge today.;;;","14/Sep/21 15:30;michael-o;Fixed with MNG-7251.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Revert MNG-7170,MNG-7216,13395548,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,michael-o,michael-o,michael-o,16/Aug/21 19:57,12/Sep/21 17:39,03/Jan/22 13:12,12/Sep/21 14:42,3.8.2,,,,,3.8.3,,,Inheritance and Interpolation,POM,Sites & Reporting,,,2,,,,This issue turned out to set implicitly the base directory of a POM which is only available in the local repository and not in the reactor. This is an unwanted behavior and needs to be reverted for now.,,,,,,,,,,,,,,,MNG-7215,MNG-7218,,,,,,,,,,MNG-7170,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|z0tyj4:",9223372036854775807,,,,,,,,,,,,,,,,,,,"07/Sep/21 11:30;gnodet;Fwiw, this also has a serious performance impact when reading big projects.  The cause for the loss of performance is because parent poms are read again, even if they are cached as all cache hits end up being discarded at line:
  https://github.com/apache/maven/blob/maven-3.8.1/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilder.java#L869;;;","11/Sep/21 20:00;michael-o;You mean MNG-7170 or the revert?;;;","12/Sep/21 14:42;michael-o;Fixed with [383cabf9e4992eeff36c9b5731d95bafa72398d3|https://gitbox.apache.org/repos/asf?p=maven.git;a=commit;h=383cabf9e4992eeff36c9b5731d95bafa72398d3] for {{maven-3.8.x}} branch.;;;","12/Sep/21 15:10;hudson;Build unstable in Jenkins: Maven » Maven TLP » maven » maven-3.8.x #67

See https://ci-maven.apache.org/job/Maven/job/maven-box/job/maven/job/maven-3.8.x/67/;;;","12/Sep/21 17:39;gnodet;[~michael-o] MNG-7170 causes a performance loss, the revert is required. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[Regression] Maven Site Plugin cannot resolve parent site descriptor without locale,MNG-7215,13395533,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,michael-o,sjaranowski,sjaranowski,16/Aug/21 18:47,12/Sep/21 14:43,03/Jan/22 13:12,12/Sep/21 14:43,3.8.2,,,,,3.8.3,,,Core,,,,,2,,,,"Maven site parent descriptor is not resolved by maven 3.8.2.

Without changing in project, build on maven 3.8.1, I have in logs:

{code}
[INFO] Rendering site with default locale English (en)
[DEBUG] Computing decoration model of groupId:artifactId for locale en
[DEBUG] Reading site descriptor from .../src/site/site.xml
[DEBUG] Looking for site descriptor of level 1 parent project: parentGroupId:artifactId...
[DEBUG] No site descriptor found for parentGroupId:artifactId... for locale en, trying without locale...
[DEBUG] Reading parent level 1 site descriptor from .../parent-x.x.x-site.xml
[INFO] Rendering content with org.apache.maven.skins:maven-fluido-skin:jar:1.9 skin.
{code}

And with maven 3.8.2
{code}
[INFO] Rendering site with default locale English (en)
[DEBUG] Computing decoration model of groupId:artifactId for locale en
[DEBUG] Reading site descriptor from .../site/site.xml
[DEBUG] Looking for site descriptor of level 1 parent project: parentGroupId:artifactId
[DEBUG] No parent level 1 site descriptor.
[INFO] Rendering content with org.apache.maven.skins:maven-default-skin:jar:1.3 skin.
{code}

Only one difference I see in logs is that in maven 3.8.2 I don't have:
[DEBUG] No site descriptor found for parentGroupId:artifactId for locale en, trying without locale...

The problem is introduced by commit:
https://github.com/apache/maven/commit/5a8997312680a4b9c69a129801524691bc546c08

Similar problem https://github.com/eclipse-ee4j/eclipselink/issues/1242

",,,,,,,,,,,,,,MNG-7216,,,,,,,,,,,,MNG-7170,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|z0tyfs:",9223372036854775807,,,,,,,,,,,,,,,,,,,"16/Aug/21 19:28;mickael.istria;Apparently the change cause that all projects now have the basedir set while it used to be only the case for reactor projects. So the result of {{MavenProject#getBasedir()}} is now different for non-reactor projects. I don't know whether this is breaking some API contract of Maven. At least, no test was covering that and no Javadoc declares that, so one can assume it's not a reliable assumption to use for plugins.

If the goal is to know whether a project is in the reactor, one could use `session.getProjects().contains(project)` instead, which seems more reliable.;;;","16/Aug/21 20:01;michael-o;[~mickael.istria], yes this is unfortunately lack of documentation which caused this issue. My understanding of {{basedir}} (as of now) is that it only exits IF the project is in a reactor. I have created MNG-7216 for now to revert this until we can provide a better solution for this.;;;","16/Aug/21 20:11;mickael.istria;> lack of documentation 

and tests.

Note that reverting will actually be another form of regression, as the API to build project models will then send errors in some cases when it shouldn't; and some model would have pomFile set to null when the modelSource actually has all pom infos.

IMO, reverting is not the right approach, and the current state of Maven is more correct from API POV. Reverting reduces quality of the library.;;;","16/Aug/21 20:16;michael-o;{quote}Note that reverting will actually be another form of regression, as the API to build project models will then send errors in some cases when it shouldn't; and some model would have pomFile set to null when the modelSource actually has all pom infos.

IMO, reverting is not the right approach, and the current state of Maven is more correct from API POV. Reverting reduces quality of the library.
{quote}
I know and I fully agree, unfortunately I don't see a reasonable solution for this now, do you see one? I have checked Maven 4 (debugged): the POM isn't set so isn't basedir.;;;","16/Aug/21 20:22;mickael.istria;>I have checked Maven 4 (debugged): the POM isn't set so isn't basedir.

So Maven 4 will also suffer from MNG-7170  ?

 

> I know and I fully agree, unfortunately I don't see a reasonable solution for this now, do you see one?

IMO, plugins that have assumed that project.getBasedir() == null has a semantic about the reactor have just written erroneous code and relied on a side-effect; without investing in covering it with a test or some documentation. Consumers using bad code is not a reason for a platform to reduce its quality; on the contrary.

So concretely, I'd just let the code as it and let plugins that have used this bad code fix their code to use what seems to be the intended API (session.getProjects().contains(...)).;;;","16/Aug/21 20:26;michael-o;No, Maven 4 does not suffer from it because your change isn't visible in this case, i.e., neither POM not basedir are set on the failing project. That was clearly not your intention, was it? You should run the debugger on {{sign-maven-plugin}} and set breakpoints in {{DefaultSiteTool}} and you'll that it should fail too, but it doesn't.;;;","16/Aug/21 20:29;michael-o;{noformat}
Apache Maven 4.0.0-alpha-1-SNAPSHOT (0137f35c1bbc3a3dadd07af105df66bd1293d5e5)
Maven home: D:\apache-maven-4.0.0-alpha-1-SNAPSHOT
Java version: 1.8.0_292, vendor: AdoptOpenJDK, runtime: C:\Program Files\AdoptOpenJDK\jdk-8.0.292.10-hotspot\jre
Default locale: de_DE, platform encoding: Cp1252
OS name: ""windows 10"", version: ""10.0"", arch: ""amd64"", family: ""windows""
...
[DEBUG] Computing decoration model of org.simplify4u.plugins:sign-maven-plugin:maven-plugin:0.3.2-SNAPSHOT for locale en
[DEBUG] Reading site descriptor from D:\Entwicklung\Projekte\sign-maven-plugin\src\site\site.xml
[DEBUG] Looking for site descriptor of level 1 parent project: org.simplify4u:parent:pom:2.13.0
[DEBUG] No site descriptor found for org.simplify4u:parent:pom:2.13.0 for locale en, trying without locale...
[DEBUG] Reading parent level 1 site descriptor from C:\Users\mosipov\.m2\repository\org\simplify4u\parent\2.13.0\parent-2.13.0-site.xml
[DEBUG] Site decoration model inheritance: assembling child with level 1 parent: distributionManagement.site.url child = file:/D:/Entwicklung/Projekte/sign-maven-plugin/scm:git:git@github.com:s4u/sign-maven-plugin.git and parent = file:/D:/Entwicklung/Projekte/sign-maven-plugin/scm:git:git@github.com:s4u/parent
[INFO] Relativizing decoration links with respect to localized project URL: https://www.simplify4u.org/sign-maven-plugin
[INFO] Rendering content with org.apache.maven.skins:maven-fluido-skin:jar:1.9 skin.
[DEBUG] Skin doxia-sitetools prerequisite: 1.9.1, current: 1.9.2, matched = true
[INFO] Rendering 4 Doxia documents: 2 markdown, 2 xdoc
...
{noformat}

This is wrong according to your understanding, it should have failed just like 3.8.2 did.;;;","16/Aug/21 20:30;michael-o;[~rfscholte], what is your opinion on the behavior?;;;","16/Aug/21 20:41;mickael.istria;The intention of MNG-7170 is to set the pomFile when passing a FileModelSource, because it's the only entry point in the API that allow to build a ""dirty"" (not saved) content toreport error without saving file. Setting the pomFile makes further steps (eg computation of basedir and other properties) work as expected.

So if Maven 4 doesn't do that, then Maven 4 is, quite similarly to Maven 3.8.1, not able to be used efficiently for as-you-type validation and not suitable for usage in a language server or IDE that would want to provde reliable fast feedback.

The change I introduced is IMO not a bug; the fact that DefaultSiteTool uses a not explicit nor documented nor specified ssumption to verify a project is in the reactor or not when there is some API that's almost inteded to verify that is IMO the real bug here. My former change unveils that some plugins have relied on something they shouldn't rely, and has increased usability of Maven API to build pom.xml edition tool while also improving the API. IMO, it's not really what needs to be reverted or fixed.;;;","16/Aug/21 20:50;michael-o;But Maven 4 is expected to set it. I have just checked https://github.com/apache/maven/commit/5cdb8332f99a36e5a1da202da43e3c7dfbb49322 and the code hunk has been changed since then. It isn't identical with 3.8.x anymore. Maybe this is the reason for the failure?

[~mickael.istria], can you add a unit test or IT which depicts the behavior you expect in 4? The same as in MNG-7170?;;;","16/Aug/21 20:55;mickael.istria;This test [https://github.com/apache/maven/commit/5a8997312680a4b9c69a129801524691bc546c08#diff-07febfae60761fe55c18956d192eb8c1f5a6609c02cb4b22e5c686f54c3edd10R88] covers what I think can be expected from the ModelBuilding API. It apparently wasn't integrated in Maven 4 (I focused on 3.8.2, so don't know how things have been ported or not to Maven 4).;;;","16/Aug/21 21:01;michael-o;It isn't present. I will try it and let you know.;;;","16/Aug/21 21:17;michael-o;The test passes on Maven 4. I will add it to master.;;;","17/Aug/21 06:42;mickael.istria;OK, thanks. I looked at [https://github.com/apache/maven/pull/321/commits/d478e2a91dc18f8881a7351ed9947cf5a00f5921] and I think the reason why Maven 4 is both setting the making the test pass and not setting basedir on repository pom files is because it's using a different ModelSource (not a FileModelSource nor a pom file) for poms that come from local repository. That's a good thing.
However, it still seems to me that any plugin that assumes that project.getBasedir() is enough to decide whether a project is part of the reactor or not is relying on a very fragile assumption and should improve its code to rely on mavenSession.getProjects() instead which seems more reliable.;;;","12/Sep/21 11:46;sjaranowski;Do you think that DefaultSiteTool should be fixed?

As I see more work should be expected to DefaultSiteTool, like: https://issues.apache.org/jira/browse/DOXIASITETOOLS-167;;;","12/Sep/21 14:43;michael-o;This has been implicitly fixed by MNG-7216.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven might pick up the wrong configuration when the plugin happens to include relocation information,MNG-7204,13392957,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Duplicate,michael-o,TheSnoozer,TheSnoozer,01/Aug/21 20:07,25/Dec/21 18:43,03/Jan/22 13:12,25/Dec/21 15:29,3.6.1,3.8.1,,,,,,,,,,,,2,,,,"h1. Issue Description

The relocation process is outlined in [here|https://maven.apache.org/guides/mini/guide-relocation.html] and IMHO boils down to adding the relocation information into the distributionManagement.

For the sake of experimenting assume we want to relocate a plugin from
{code:java}
    <groupId>com.example.plugins</groupId>
    <artifactId>test-plugin</artifactId>
{code}
to
{code:java}
    <groupId>com.test.plugins</groupId>
    <artifactId>test-plugin-enhanced</artifactId>
{code}
To visualize the issue the plugin needs one configuration parameter (let's call it helloString). Based on the relocation guide my understanding is that we need two publications. One under the old coordinates and one under the new coordinates.

When invoking the plugin with the old coordinates it will **not** pickup our configuration supplied. Consider:
{code:java}
<groupId>com.example.plugins</groupId>
<artifactId>test-plugin</artifactId>
<version>0.0.1</version>
<configuration>
	<helloString>from Maven!</helloString>
</configuration>
{code}
h1. Issue Reproducer

Attached I have an example that consists of essentially two parts. On a high level my understanding is that the the publication under the ""old"" coordinates can have a jar (""01_project_old_coordinates_with_jar""), but doesn't need to have one which would then essentially be a relocation pom (""01_project_old_coordinates_without_jar"").

The project publication with jar allows to see the expected by running
{code:java}
cd 01_project_old_coordinates_with_jar
mvn clean install
mvn clean package -Pdemo
{code}
which outputs {{Hello from Maven!}} (since this is the setting configured in the pom).

When the relocation is done (""02_project_new_coordinates"") and a new version under the new coordinates is published (but one still points to the old configuration) the configuration will not be picked up.
{code:java}
cd 02_project_new_coordinates
# install the SAME version under new coordinates
mvn clean install
# run the demo again which still points to the OLD config
mvn clean package -Pdemo
{code}
which output {{Hello World!}}. World is the default encoded in the Mojo, but **not** what was provided to the plugin config!

This issue can also be observed when the publication under the old coordinates is just a relocation pom.
h1. Reproducible under
{code:java}
$ mvn --version
Apache Maven 3.6.1 (d66c9c0b3152b2e69ee9bac180bb8fcc8e6af555; 2019-04-04T21:00:29+02:00)
Maven home: /usr/share/maven-3.6.1
Java version: 11.0.11, vendor: Oracle Corporation, runtime: /usr/lib/jvm/java-11-oracle
Default locale: en_US, platform encoding: UTF-8
OS name: ""linux"", version: ""5.4.0-77-generic"", arch: ""amd64"", family: ""unix""
{code}
{code:java}
$ mvn --version
Apache Maven 3.8.1 (05c21c65bdfed0f71a2f2ada8b84da59348c4c5d)
Maven home: /usr/share/maven-3.8.1
Java version: 11.0.11, vendor: Oracle Corporation, runtime: /usr/lib/jvm/java-11-oracle
Default locale: en_US, platform encoding: UTF-8
OS name: ""linux"", version: ""5.4.0-77-generic"", arch: ""amd64"", family: ""unix""
{code}
Potentially many other versions.",,,,,,,,,,,,,,,,,,,,,,,,MNG-5561,,,,MNG-7373,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Aug/21 20:08;TheSnoozer;MNG-7204.zip;https://issues.apache.org/jira/secure/attachment/13031354/MNG-7204.zip","24/Dec/21 21:04;michael-o;screenshot-1.png;https://issues.apache.org/jira/secure/attachment/13037930/screenshot-1.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|z0tijk:",9223372036854775807,,,,,,,,,,,,,,,,,,,"01/Aug/21 20:32;lprimak;Voted;;;","24/Dec/21 02:36;Marcono1234;Might be the same as MNG-5561;;;","24/Dec/21 19:56;michael-o;I think the first problem here is that you did wrong and changed the packaging type of a plugin from maven-plugin to pom which leads to undefined behavior. The guide is horribly outdated. I think what likely should be done, independent of the relocation is that if the packaging fo the plugin is not what expected it should yield a warn/error.

I will check whether it still will lose plugin config when the packaging is correctly retained.;;;","24/Dec/21 21:06;michael-o;Analyzed, I quite convinced now that this is a dup of MNG-5561.

Now, as far as I can see the bug is here:
 !screenshot-1.png! 

{{mojoExecution}} contains the *new* GA, but the project contains the plugin under the *old* GA, same for plugin management. Therefore, the subsequent block is never executed and you run a virgin/vanilla plugin.;;;","24/Dec/21 22:08;michael-o;Digging a bit deeper: The code as such existed eversince, more than 12 years now. I do not really understand why it is necessary to find the plugin in the current project when it is available from {{mojoExecution}}, but on needs a two stage approach: the one done above and one from {{MojoExectuion#getPlugin()}} which is the original element from the POM and not the relocated one.;;;","25/Dec/21 00:56;michael-o;I think I have a solution for the problem which uncovers a dynamically replaced vs statically configured issue. Will share soon.;;;","25/Dec/21 15:29;michael-o;While the issue description and sample are fantastic, I am closing this one since it is a complete dup of MNG-5561. Will move all discussion there. Please join.;;;","25/Dec/21 18:43;michael-o;[~TheSnoozer], I have reused your example in the IT, do you want to be mentioned in the IT commit?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven does not start if there is no Jansi native library available,MNG-7165,13381126,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,rfscholte,michael-o,michael-o,29/May/21 20:10,14/Sep/21 08:02,03/Jan/22 13:13,12/Jun/21 10:53,4.0.0-alpha-1,,,,,4.0.0,4.0.0-alpha-1,,,,,,,0,,,,"Compiled Maven from 5c45b3fe22d8ec4270b2cf1016581b8927d2913d and started on:
{noformat}
$ uname -a
HP-UX deblndw0 B.11.31 U ia64 HP-UX
$ java -version
java version ""1.8.0.21-hp-ux""
Java(TM) SE Runtime Environment (build 1.8.0.21-hp-ux-b1)
Java HotSpot(TM) Server VM (build 25.21-b1, mixed mode)
{noformat}
with following result:
{noformat}
$ ~/apache-maven-4.0.0-alpha-1-SNAPSHOT/bin/mvn
---------------------------------------------------
constituent[0]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/conf/logging/
constituent[1]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/maven-embedder-4.0.0-alpha-1-SNAPSHOT.jar
constituent[2]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/maven-settings-4.0.0-alpha-1-SNAPSHOT.jar
constituent[3]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/maven-settings-builder-4.0.0-alpha-1-SNAPSHOT.jar
constituent[4]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/maven-plugin-api-4.0.0-alpha-1-SNAPSHOT.jar
constituent[5]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/maven-model-4.0.0-alpha-1-SNAPSHOT.jar
constituent[6]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/maven-model-builder-4.0.0-alpha-1-SNAPSHOT.jar
constituent[7]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/maven-builder-support-4.0.0-alpha-1-SNAPSHOT.jar
constituent[8]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/maven-resolver-api-1.7.0.jar
constituent[9]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/maven-resolver-util-1.7.0.jar
constituent[10]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/maven-shared-utils-3.3.4.jar
constituent[11]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/commons-io-2.6.jar
constituent[12]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/maven-slf4j-wrapper-4.0.0-alpha-1-SNAPSHOT.jar
constituent[13]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/guice-4.2.3-no_aop.jar
constituent[14]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/guava-30.1-jre.jar
constituent[15]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/failureaccess-1.0.1.jar
constituent[16]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/javax.inject-1.jar
constituent[17]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/jsr250-api-1.0.jar
constituent[18]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/plexus-utils-3.3.0.jar
constituent[19]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/plexus-sec-dispatcher-1.4.jar
constituent[20]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/slf4j-api-1.7.30.jar
constituent[21]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/commons-lang3-3.8.1.jar
constituent[22]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/maven-core-4.0.0-alpha-1-SNAPSHOT.jar
constituent[23]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/maven-repository-metadata-4.0.0-alpha-1-SNAPSHOT.jar
constituent[24]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/maven-artifact-4.0.0-alpha-1-SNAPSHOT.jar
constituent[25]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/maven-model-transform-4.0.0-alpha-1-SNAPSHOT.jar
constituent[26]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/maven-resolver-provider-4.0.0-alpha-1-SNAPSHOT.jar
constituent[27]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/maven-resolver-impl-1.7.0.jar
constituent[28]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/maven-resolver-named-locks-1.7.0.jar
constituent[29]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/javax.annotation-api-1.3.2.jar
constituent[30]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/maven-resolver-spi-1.7.0.jar
constituent[31]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/org.eclipse.sisu.inject-0.3.4.jar
constituent[32]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/maven-compat-4.0.0-alpha-1-SNAPSHOT.jar
constituent[33]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/plexus-interpolation-1.26.jar
constituent[34]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/plexus-component-annotations-2.1.0.jar
constituent[35]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/wagon-provider-api-3.4.3.jar
constituent[36]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/org.eclipse.sisu.plexus-0.3.4.jar
constituent[37]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/commons-cli-1.4.jar
constituent[38]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/wagon-http-3.4.3-shaded.jar
constituent[39]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/jcl-over-slf4j-1.7.30.jar
constituent[40]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/wagon-file-3.4.3.jar
constituent[41]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/maven-resolver-connector-basic-1.7.0.jar
constituent[42]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/maven-resolver-transport-wagon-1.7.0.jar
constituent[43]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/maven-slf4j-provider-4.0.0-alpha-1-SNAPSHOT.jar
constituent[44]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/jansi-2.2.0.jar
constituent[45]: file:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/plexus-cipher-1.8.jar
---------------------------------------------------
Exception in thread ""main"" java.lang.ExceptionInInitializerError
        at org.fusesource.jansi.AnsiConsole.ansiStream(AnsiConsole.java:239)
        at org.fusesource.jansi.AnsiConsole.initStreams(AnsiConsole.java:542)
        at org.fusesource.jansi.AnsiConsole.systemInstall(AnsiConsole.java:496)
        at org.apache.maven.shared.utils.logging.MessageUtils.systemInstall(MessageUtils.java:67)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:200)
        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.base/java.lang.reflect.Method.invoke(Method.java:566)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:282)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:225)
        at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:406)
        at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:347)
Caused by: java.lang.RuntimeException: Unable to load jansi native library
        at org.fusesource.jansi.internal.JansiLoader.initialize(JansiLoader.java:62)
        at org.fusesource.jansi.internal.CLibrary.<clinit>(CLibrary.java:30)
        ... 13 more
Caused by: java.lang.Exception: No native library found for os.name=HPUX, os.arch=ia64_32, paths=[/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/jansi-native/HPUX/ia64_32:/net/home/osipovmi/apache-maven-4.0.0-alpha-1-SNAPSHOT/lib/jansi-native:/opt/oracle/product/19.0.0/client_1/lib:/usr/lib]
        at org.fusesource.jansi.internal.JansiLoader.loadJansiNativeLibrary(JansiLoader.java:333)
        at org.fusesource.jansi.internal.JansiLoader.initialize(JansiLoader.java:60)
        ... 14 more
{noformat}

This makes Maven unusable if Jansi native is not available. This behavior is unacceptable for a portable application.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-7179,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|z0rhow:",9223372036854775807,,,,,,,,,,,,,,,,,,,"29/May/21 20:11;michael-o;[~martinkanters], [~gnodet], what to do with this?

[~rfscholte], is this a blocker for 4.0.0-alpha-1?;;;","30/May/21 08:58;rfscholte;It means that this class-check ( https://github.com/apache/maven-shared-utils/blob/master/src/main/java/org/apache/maven/shared/utils/logging/MessageUtils.java#L44-L57 ) is not enough. It seems like there's no method yet to verify if JAnsi is avialable without calling {{systemInstall()}} and catching the Exception.

Assuming it does work with Maven 3.8.1, I wonder why it did work with that version.;;;","30/May/21 09:07;michael-o;I will try 3.8.x as well this evening and let you know.;;;","30/May/21 09:27;michael-o;3.8.1 still works:
{noformat}
osipovmi@deblndw024v:/tmp
$ uname -a
HP-UX deblndw0 B.11.31 U ia64 HP-UX
osipovmi@deblndw024v:/tmp
$ apache-maven-3.8.1/bin/mvn -v
Apache Maven 3.8.1 (05c21c65bdfed0f71a2f2ada8b84da59348c4c5d)
Maven home: /tmp/apache-maven-3.8.1
Java version: 11.0.4, vendor: Hewlett Packard Enterprise, runtime: /opt/java11
Default locale: de_DE, platform encoding: UTF8
OS name: ""hp-ux"", version: ""b.11.31"", arch: ""ia64n"", family: ""unix""
osipovmi@deblndw024v:/tmp
$ unset JAVA_HOME
osipovmi@deblndw024v:/tmp
$ apache-maven-3.8.1/bin/mvn -v
Apache Maven 3.8.1 (05c21c65bdfed0f71a2f2ada8b84da59348c4c5d)
Maven home: /tmp/apache-maven-3.8.1
Java version: 1.8.0.21-hp-ux, vendor: Hewlett Packard Enterprise, runtime: /opt/java8/jre
Default locale: de_DE, platform encoding: UTF8
OS name: ""hp-ux"", version: ""b.11.31"", arch: ""ia64n"", family: ""unix""
{noformat};;;","30/May/21 10:20;rfscholte;Looking at the Maven code, I see no differences. It looks like this regression is caused by a change in JAnsi. 
This is important enough for me to delay the release of 4.0.0-alpha-1, as it might result in a lot of negative experiences.;;;","30/May/21 13:52;michael-o;I agree.;;;","31/May/21 20:34;rfscholte;[#207|https://github.com/fusesource/jansi/issues/207] is exactly the same error.
https://github.com/fusesource/jansi/blob/jansi-2.3.2/src/main/java/org/fusesource/jansi/AnsiConsole.java#L239-L250 shows a line using CLibrary which should probably be in the catch of the next try/catch block, based on the comment.;;;","12/Jun/21 10:53;rfscholte;Fixed in [371faf7a49298bd1752632c2675aa499fee64667|https://gitbox.apache.org/repos/asf?p=maven.git;a=commit;h=371faf7a49298bd1752632c2675aa499fee64667];;;","12/Jun/21 11:06;hudson;Build succeeded in Jenkins: Maven » Maven TLP » maven » master #169

See https://ci-builds.apache.org/job/Maven/job/maven-box/job/maven/job/master/169/;;;","13/Jun/21 10:10;michael-o;I can confirm now that this issue is fixed.;;;","13/Jun/21 10:48;kwin;With the latest SNAPSHOT (downloaded from https://ci-builds.apache.org/job/Maven/job/maven-box/job/maven/job/master/169/artifact/org/apache/maven/apache-maven/4.0.0-alpha-1-SNAPSHOT/apache-maven-4.0.0-alpha-1-SNAPSHOT-bin.tar.gz) I get

{code}
./mvn --version
Failed to load native library:libjansi.jnilib. osinfo: Mac/x86_64
java.lang.UnsatisfiedLinkError: /Users/konradwindszus/Downloads/apache-maven/lib/jansi-native/Mac/x86_64/libjansi.jnilib: dlopen(/Users/konradwindszus/Downloads/apache-maven/lib/jansi-native/Mac/x86_64/libjansi.jnilib, 1): no suitable image found.  Did find:
	/Users/konradwindszus/Downloads/apache-maven/lib/jansi-native/Mac/x86_64/libjansi.jnilib: code signature in (/Users/konradwindszus/Downloads/apache-maven/lib/jansi-native/Mac/x86_64/libjansi.jnilib) not valid for use in process using Library Validation: library load disallowed by system policy
Apache Maven 4.0.0-alpha-1-SNAPSHOT (371faf7a49298bd1752632c2675aa499fee64667)
Maven home: /Users/konradwindszus/Downloads/apache-maven
Java version: 11.0.11, vendor: AdoptOpenJDK, runtime: /Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home
Default locale: en_DE, platform encoding: UTF-8
OS name: ""mac os x"", version: ""11.4"", arch: ""x86_64"", family: ""mac""
{code}

And Mac OS shows a warning {{“libjansi.jnilib” cannot be opened because the developer cannot be verified.}}.
Is the last version of JAnsi included in Maven properly signed?

Also it seems that two different versions of jansi native libraries are now shipped: The ones contained in lib/jansi-2.3.3.jar and the ones in lib/jansi-native. The latter are deprecated (https://github.com/fusesource/jansi-native#deprecation) and the warning goes away once I remove lib/jansi-native.;;;","13/Jun/21 11:21;rfscholte;[~kwin] thanks for your feedback. Just to be sure: you don't see these issues with Maven 3.8.1?
The libs/jansi-native are extracted from the jansi jar by https://github.com/apache/maven/blob/master/apache-maven/src/assembly/maven/component.xml#L66-L73. Either [~gnodet] or [~hboutemy] needs to verify this, maybe these lines can be removed. 
I do remember we explicitly extracted them, otherwise JAnsi would do it, always creating temp files (without removing them).
;;;","13/Jun/21 13:02;kwin;3.8.1 works fine without any warnings and also the warning vanish from 4.0.0-alpha1 SNAPSHOT once I remove the folder {{lib/jansi-native}}.

I think GateKeeper prevents loading binaries downloaded from a browser (https://support.blackfire.io/en/articles/3669492-issues-with-macos-catalina).
I don't know why the temp files extracted from the JAR on demand don't suffer from that issue.

But it seems the issue with orphaned tmp files has been solved meanwhile https://github.com/fusesource/jansi/issues/98.

In any case the binaries are not signed at all.
{code}
codesign -vvvv /Users/konradwindszus/Downloads/apache-maven/lib/jansi-native/Mac/x86_64/libjansi.jnilib
/Users/konradwindszus/Downloads/apache-maven/lib/jansi-native/Mac/x86_64/libjansi.jnilib: code object is not signed at all
In architecture: x86_64

xattr /Users/konradwindszus/Downloads/apache-maven/lib/jansi-native/Mac/x86_64/libjansi.jnilib
com.apple.quarantine

xattr /Users/konradwindszus/Downloads/apache-maven/lib/jansi-2.3.3.jar
com.apple.quarantine
{code};;;","13/Jun/21 16:52;michael-o;The exploaded directory must stay.;;;","13/Jun/21 18:02;michael-o;[~kwin], this issue is addressed. Don't hijack. Open a new one. Library signing is a macOS issue, nothing we can solve here. The purpose of the expanded directory is to avoid constant extraction, clutter and deletion.;;;","13/Jun/21 18:41;kwin;[~michael-o] I was trying to provide constructive feedback in the context of this issue, as to me it seemed related. Do whatever you want with that. I don't invest more time in it just to get harsh reactions...;;;","13/Jun/21 19:22;michael-o;I appreciate your feedback, but both issues aren't related. If you hijack a closed ticket the issue you experience will disappear in oblivion. Please create an issue, this will make your effort publically visibile.;;;","14/Jun/21 07:54;mthmulders;I've moved the discussion about the signing of libjansi to a separate ticket: MNG-7172.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error thrown during uninstalling of JAnsi,MNG-7161,13380505,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,michael-o,Brand,Brand,26/May/21 09:27,25/Jul/21 19:14,03/Jan/22 13:13,25/Jul/21 12:36,3.8.2,4.0.0,4.0.0-alpha-1,,,3.8.2,4.0.0,4.0.0-alpha-1,,,,,,0,,,,"Our integration tests stopped working after we started to test with a Maven {{4.0.0-alpha-1}} nightly which included this commit: [https://github.com/apache/maven/commit/195fb626a9a4e5a0774f779b6d8da1cb9ef38468#diff-9c5fb3d1b7e3b0f54bc5c4182965c4fe1f9023d449017cece3005d3f90e8e4d8R310-R317]

In this commit the {{maven-shared-utils}} and the {{jansi}} dependencies are being upgraded. When we then run our integration tests we get the following null pointer exception:
{code:java}
java.lang.NullPointerException
  at org.fusesource.jansi.AnsiPrintStream.uninstall(AnsiPrintStream.java:79)
  at org.fusesource.jansi.AnsiConsole.systemUninstall(AnsiConsole.java:524)
  at org.apache.maven.shared.utils.logging.MessageUtils.doSystemUninstall(MessageUtils.java:101)
  at org.apache.maven.shared.utils.logging.MessageUtils.systemUninstall(MessageUtils.java:80)
  at org.apache.maven.cli.MavenCli.main(MavenCli.java:203)
  at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
  at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  at java.base/java.lang.reflect.Method.invoke(Method.java:566)
  at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:282)
  at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:225)
  at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:406)
  at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:347)
{code}
 
 We debugged this and [these changes|https://github.com/fusesource/jansi/commit/63bd892b2bdfc253ec119a57bdd42df5e80fd859#diff-d59db8655d9ae2d11948e2b411c34fc9e8513f29065d82c978d7128dafbe3bafR414-R420] in JAnsi introduced in the above upgraded version, is the source of the exception. The NPE is caused because the {{out}} reference is {{null}} at the time it wants to uninstall the {{AnsiOutputStream}}. This reference is nulled because we use the Plexus interactivity library which [disposes the {{DefaultOutputHandler}}|https://github.com/codehaus-plexus/plexus-interactivity/blob/master/plexus-interactivity-api/src/main/java/org/codehaus/plexus/components/interactivity/DefaultOutputHandler.java#L51-L54] on the tear down of Plexus, in which the {{System.out}} reference will be closed which is in fact the {{out}} reference of the {{AnsiConsole}} JAnsi will be [initialized before|https://github.com/apache/maven/blob/3e917677e484067b853eaa4a6de44ebcf5a988de/maven-embedder/src/main/java/org/apache/maven/cli/MavenCli.java#L200] the Plexus container). This happens [here|https://github.com/apache/maven/blob/3e917677e484067b853eaa4a6de44ebcf5a988de/maven-embedder/src/main/java/org/apache/maven/cli/MavenCli.java#L202], so before JAnsi will be uninstalled in [here|https://github.com/apache/maven/blob/3e917677e484067b853eaa4a6de44ebcf5a988de/maven-embedder/src/main/java/org/apache/maven/cli/MavenCli.java#L203].

There are two options to solve this:
 1. Report this to JAnsi such that they catch this valid use case and do not throw as this worked without any exceptions in older versions.
 2. Fix the {{MessageUtils#doSystemUninstall()}} and catch all exceptions and swallow them, as if it can't uninstall it, then Maven itself is not capable of fixing this state either. This is already done in a similar way [here|https://github.com/apache/maven-shared-utils/blob/17091d82508deb9b7067f3434ba16f660ffc5023/src/main/java/org/apache/maven/shared/utils/logging/MessageUtils.java#L85-L92] for removing the shutdown hook.

Our proposal is to do #2 which would make Maven itself resilient to such use cases as there are other extensions/plugin out there which also retrieve a reference for the system output streams and therefore they would fail with Maven 4.0.0. This would also make this part future proof, as when there are other errors thrown during the uninstall, Maven itself does not break.

We can as well report this to JAnsi too such that this gets fixed there as well.

 

What are your opinions on that?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-7196,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|z0rdv4:",9223372036854775807,,,,,,,,,,,,,,,,,,,"26/May/21 13:01;michael-o;[~gnodet], have look please.;;;","26/May/21 13:03;michael-o;[~Brand], can you explain why your ITs need interactivity?;;;","26/May/21 13:17;mthmulders;This also happens with {{archetype:generate}}:
{code:java}
mvn archetype:generate -DgroupId=foo -DartifactId=bar3 -DarchetypeArtifactId=maven-archetype-quickstart -DarchetypeVersion=1.4
[INFO] Scanning for projects...
[INFO] 
[INFO] -------------------------------------------< org.apache.maven:standalone-pom >--------------------------------------------
[INFO] Building Maven Stub Project (No POM) 1
[INFO] ---------------------------------------------------------[ pom ]----------------------------------------------------------
[INFO] 
[INFO] --- maven-archetype-plugin:3.1.2:generate (default-cli) @ standalone-pom ---
[INFO] Generating project in Interactive mode
[INFO] Using property: groupId = foo
[INFO] Using property: artifactId = bar3
Define value for property 'version' 1.0-SNAPSHOT: : 
[INFO] Using property: package = foo
Confirm properties configuration:
groupId: foo
artifactId: bar3
version: 1.0-SNAPSHOT
package: foo
 Y: : y
[INFO] ----------------------------------------------------------------------------
[INFO] Using following parameters for creating project from Archetype: maven-archetype-quickstart:1.4
[INFO] ----------------------------------------------------------------------------
[INFO] Parameter: groupId, Value: foo
[INFO] Parameter: artifactId, Value: bar3
[INFO] Parameter: version, Value: 1.0-SNAPSHOT
[INFO] Parameter: package, Value: foo
[INFO] Parameter: packageInPathFormat, Value: foo
[INFO] Parameter: package, Value: foo
[INFO] Parameter: groupId, Value: foo
[INFO] Parameter: artifactId, Value: bar3
[INFO] Parameter: version, Value: 1.0-SNAPSHOT
[INFO] Project created from Archetype in dir: /private/tmp/bar3
[INFO] --------------------------------------------------------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] --------------------------------------------------------------------------------------------------------------------------
[INFO] Total time:  5.681 s
[INFO] Finished at: 2021-05-26T15:15:08+02:00
[INFO] --------------------------------------------------------------------------------------------------------------------------
java.lang.NullPointerException
	at org.fusesource.jansi.AnsiPrintStream.uninstall(AnsiPrintStream.java:79)
	at org.fusesource.jansi.AnsiConsole.systemUninstall(AnsiConsole.java:524)
	at org.apache.maven.shared.utils.logging.MessageUtils.doSystemUninstall(MessageUtils.java:101)
	at org.apache.maven.shared.utils.logging.MessageUtils.systemUninstall(MessageUtils.java:80)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:203)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:282)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:225)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:406)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:347)

{code}
 

Not sure if it's related, but I thought I'd mention it.;;;","26/May/21 13:26;Brand;[~michael-o] We use it for the included {{Prompter}} but we'll now remove this dependency and do it by our own to fix this for the current extension. But we'd like that all our old extensions still work with Maven 4.0.0 and this error would not make it possible.

This error can always occur when a plugin or extension holds a reference to the system output streams and then does it's own disposal or similar before JAnsi uninstalls itself.

[~mthmulders] Thanks for adding another example.;;;","26/May/21 18:00;Brand;[~mthmulders] the Maven Archetype plugin also uses the Plexus interactivity: [https://github.com/apache/maven-archetype/blob/master/pom.xml#L163-L173] So it might be the same issue as we face.;;;","08/Jun/21 15:09;VictorMartinezRubio;This is also affecting the maven release plugin, as a workaround we have reverted to the latest 3.8 version:
 - [https://github.com/elastic/apm-pipeline-library/pull/1145]

 

 

What command did I ran to see the above error?
  
  
{code:java}
./mvnw release:prepare release:perform -V --batch-mode '-Darguments=-DskipTests=true --batch-mode' 
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 
Apache Maven 4.0.0-alpha-1-SNAPSHOT (12f3e7e878e3a22a696f7ba9b5c615d520807afb)  
Maven home: /var/lib/jenkins/.m2/wrapper/dists/apache-maven-4.0.0-alpha-1-SNAPSHOT-bin/s0m0e7mg6h9hr8umuisf0sdq9/apache-maven 
Java version: 1.8.0_292, vendor: Private Build, runtime: /usr/lib/jvm/java-8-openjdk-amd64/jre  
Default locale: en, platform encoding: UTF8 
OS name: ""linux"", version: ""5.4.0-1044-gcp"", arch: ""amd64"", family: ""unix""
{code};;;","11/Jun/21 08:03;Brand;[~michael-o] [~gnodet] Are you ok with doing the proposed option #2 ? We are currently not able to reliably test with the latest Maven nightly, therefore should we provide a pull request for that change such that we can get that into the main branch soonish?;;;","12/Jun/21 09:07;michael-o;[~Brand], to be honest. I cannot judge here. [~gnodet] is the expert here. I will leave the decision up to him.;;;","03/Jul/21 14:12;michael-o;[~gnodet], can you provide some insight? This is a blocker.;;;","03/Jul/21 14:15;michael-o;[~Brand], can you meanwhile provide a PR for this?;;;","05/Jul/21 08:27;Brand;[~michael-o] Yes I'll try to have something ready by the end of this week. ;;;","07/Jul/21 12:17;Brand;I've opened https://issues.apache.org/jira/browse/MSHARED-993 and the [respective pull request|https://github.com/apache/maven-shared-utils/pull/93]. [~michael-o] Is there something missing and can you take it from here to push a new release of the Maven shared utils library and update it accordingly on {{master}} ?;;;","07/Jul/21 12:43;Brand;Also see [https://github.com/fusesource/jansi/issues/214] which is the issue reported at Jansi to fix the root cause.;;;","23/Jul/21 13:22;gnodet;[~michael-o] jansi 2.3.4 has been released with a fix for https://github.com/fusesource/jansi/issues/214 and should be available in maven central soon.;;;","23/Jul/21 18:05;michael-o;[~gnodet], are you certain there are no commits on master for the release?;;;","25/Jul/21 12:36;michael-o;Fixed implicitly by MNG-7196.;;;","25/Jul/21 18:25;Brand;[~michael-o] I think this should be MNG-7196 correct? Thanks for fixing this! ;;;","25/Jul/21 19:14;michael-o;Thank you, yes done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TransferFailedException in httpcomponents-client-4.5.13 with JDK11,MNG-7159,13379454,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Cannot Reproduce,,schincho,schincho,20/May/21 08:11,20/May/21 09:31,03/Jan/22 13:13,20/May/21 09:31,,,,,,,,,,,,,,0,,,,"When running ""mvn clean package"" in httpcomponents-client-4.5.13. Could you please help fix this issue.


 [INFO] — download-maven-plugin:1.2.1:wget (download-public-suffix-list) @ httpclient —
 Downloading: [https://publicsuffix.org/list/effective_tld_names.dat]
 org.apache.maven.wagon.TransferFailedException: Error transferring file
 at org.apache.maven.wagon.providers.http.LightweightHttpWagon.fillInputData(LightweightHttpWagon.java:104)
 at org.apache.maven.wagon.StreamWagon.getInputStream(StreamWagon.java:116)
 at org.apache.maven.wagon.StreamWagon.getIfNewer(StreamWagon.java:88)
 at org.apache.maven.wagon.StreamWagon.get(StreamWagon.java:61)
 at com.googlecode.WGet.doGet(WGet.java:293)
 at com.googlecode.WGet.execute(WGet.java:223)
 at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
 at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207)
 at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
 at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
 at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
 at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
 at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
 at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
 at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
 at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
 at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
 at org.apache.maven.cli.MavenCli.execute(MavenCli.java:863)
 at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:288)
 at org.apache.maven.cli.MavenCli.main(MavenCli.java:199)
 at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.base/java.lang.reflect.Method.invoke(Method.java:566)
 at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
 at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
 at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
 at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
 Caused by: java.net.ConnectException: Connection timed out (Connection timed out)
 at java.base/java.net.PlainSocketImpl.socketConnect(Native Method)
 at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)
 at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)
 at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)
 at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403)
 at java.base/java.net.Socket.connect(Socket.java:609)
 at java.base/sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:285)
 at java.base/sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173)
 at java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:182)
 at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:474)
 at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:569)
 at java.base/sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:265)
 at java.base/sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:372)
 at java.base/sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191)
 at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1187)
 at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1081)
 at java.base/sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177)
 at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1587)
 at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1515)
 at java.base/sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:250)
 at org.apache.maven.wagon.providers.http.LightweightHttpWagon.fillInputData(LightweightHttpWagon.java:83)
 ... 27 more
 [WARNING] Could not get content
 org.apache.maven.wagon.TransferFailedException: Error transferring file
 at org.apache.maven.wagon.providers.http.LightweightHttpWagon.fillInputData(LightweightHttpWagon.java:104)
 at org.apache.maven.wagon.StreamWagon.getInputStream(StreamWagon.java:116)
 at org.apache.maven.wagon.StreamWagon.getIfNewer(StreamWagon.java:88)
 at org.apache.maven.wagon.StreamWagon.get(StreamWagon.java:61)
 at com.googlecode.WGet.doGet(WGet.java:293)
 at com.googlecode.WGet.execute(WGet.java:223)
 at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
 at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207)
 at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
 at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
 at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
 at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
 at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
 at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
 at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
 at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
 at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
 at org.apache.maven.cli.MavenCli.execute(MavenCli.java:863)
 at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:288)
 at org.apache.maven.cli.MavenCli.main(MavenCli.java:199)
 at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.base/java.lang.reflect.Method.invoke(Method.java:566)
 at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
 at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
 at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
 at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
 Caused by: java.net.ConnectException: Connection timed out (Connection timed out)
 at java.base/java.net.PlainSocketImpl.socketConnect(Native Method)
 at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)
 at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)
 at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)
 at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403)
 at java.base/java.net.Socket.connect(Socket.java:609)
 at java.base/sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:285)
 at java.base/sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173)
 at java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:182)
 at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:474)
 at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:569)
 at java.base/sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:265)
 at java.base/sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:372)
 at java.base/sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191)
 at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1187)
 at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1081)
 at java.base/sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177)
 at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1587)
 at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1515)
 at java.base/sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:250)
 at org.apache.maven.wagon.providers.http.LightweightHttpWagon.fillInputData(LightweightHttpWagon.java:83)
 ... 27 more
 [WARNING] Retrying (1 more)
 Downloading: [https://publicsuffix.org/list/effective_tld_names.dat]
 org.apache.maven.wagon.TransferFailedException: Error transferring file
 at org.apache.maven.wagon.providers.http.LightweightHttpWagon.fillInputData(LightweightHttpWagon.java:104)
 at org.apache.maven.wagon.StreamWagon.getInputStream(StreamWagon.java:116)
 at org.apache.maven.wagon.StreamWagon.getIfNewer(StreamWagon.java:88)
 at org.apache.maven.wagon.StreamWagon.get(StreamWagon.java:61)
 at com.googlecode.WGet.doGet(WGet.java:293)
 at com.googlecode.WGet.execute(WGet.java:223)
 at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
 at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207)
 at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
 at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
 at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
 at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
 at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
 at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
 at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
 at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
 at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
 at org.apache.maven.cli.MavenCli.execute(MavenCli.java:863)
 at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:288)
 at org.apache.maven.cli.MavenCli.main(MavenCli.java:199)
 at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.base/java.lang.reflect.Method.invoke(Method.java:566)
 at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
 at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
 at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
 at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
 Caused by: java.net.ConnectException: Connection timed out (Connection timed out)
 at java.base/java.net.PlainSocketImpl.socketConnect(Native Method)
 at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)
 at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)
 at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)
 at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403)
 at java.base/java.net.Socket.connect(Socket.java:609)
 at java.base/sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:285)
 at java.base/sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173)
 at java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:182)
 at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:474)
 at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:569)
 at java.base/sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:265)
 at java.base/sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:372)
 at java.base/sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191)
 at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1187)
 at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1081)
 at java.base/sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177)
 at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1587)
 at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1515)
 at java.base/sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:250)
 at org.apache.maven.wagon.providers.http.LightweightHttpWagon.fillInputData(LightweightHttpWagon.java:83)
 ... 27 more
 [WARNING] Could not get content
 org.apache.maven.wagon.TransferFailedException: Error transferring file
 at org.apache.maven.wagon.providers.http.LightweightHttpWagon.fillInputData(LightweightHttpWagon.java:104)
 at org.apache.maven.wagon.StreamWagon.getInputStream(StreamWagon.java:116)
 at org.apache.maven.wagon.StreamWagon.getIfNewer(StreamWagon.java:88)
 at org.apache.maven.wagon.StreamWagon.get(StreamWagon.java:61)
 at com.googlecode.WGet.doGet(WGet.java:293)
 at com.googlecode.WGet.execute(WGet.java:223)
 at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
 at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207)
 at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
 at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
 at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
 at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
 at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
 at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
 at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
 at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
 at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
 at org.apache.maven.cli.MavenCli.execute(MavenCli.java:863)
 at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:288)
 at org.apache.maven.cli.MavenCli.main(MavenCli.java:199)
 at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 at java.base/java.lang.reflect.Method.invoke(Method.java:566)
 at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
 at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
 at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
 at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
 Caused by: java.net.ConnectException: Connection timed out (Connection timed out)
 at java.base/java.net.PlainSocketImpl.socketConnect(Native Method)
 at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)
 at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)
 at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)
 at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403)
 at java.base/java.net.Socket.connect(Socket.java:609)
 at java.base/sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:285)
 at java.base/sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173)
 at java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:182)
 at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:474)
 at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:569)
 at java.base/sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:265)
 at java.base/sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:372)
 at java.base/sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191)
 at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1187)
 at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1081)
 at java.base/sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177)
 at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1587)
 at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1515)
 at java.base/sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:250)
 at org.apache.maven.wagon.providers.http.LightweightHttpWagon.fillInputData(LightweightHttpWagon.java:83)
 ... 27 more
 [INFO] ------------------------------------------------------------------------
 [INFO] Reactor Summary:
 [INFO]
 [INFO] Apache HttpComponents Client ....................... SUCCESS [ 4.044 s]
 [INFO] Apache HttpClient .................................. FAILURE [04:28 min]
 [INFO] Apache HttpClient Mime ............................. SKIPPED
 [INFO] Apache HttpClient Fluent API ....................... SKIPPED
 [INFO] Apache HttpClient Cache ............................ SKIPPED
 [INFO] Apache HttpClient Windows features ................. SKIPPED
 [INFO] Apache HttpClient OSGi bundle ...................... SKIPPED
 [INFO] ------------------------------------------------------------------------
 [INFO] BUILD FAILURE
 [INFO] ------------------------------------------------------------------------
 [INFO] Total time: 04:33 min
 [INFO] Finished at: 2021-05-20T12:53:37+05:30
 [INFO] Final Memory: 43M/154M
 [INFO] ------------------------------------------------------------------------
 [ERROR] Failed to execute goal com.googlecode.maven-download-plugin:download-maven-plugin:1.2.1:wget (download-public-suffix-list) on project httpclient: IO Error: Could not get content -> [Help 1]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|z0r7e0:",9223372036854775807,,,,,,,,,,,,,,,,,,,"20/May/21 09:05;michael-o;It must be an issue at your end. Works here.;;;","20/May/21 09:18;schincho;I am getting multiple errors. Is there any proxy setting which we need to add to maven to avoid below error - 
Downloading: https://publicsuffix.org/list/effective_tld_names.dat
org.apache.http.conn.HttpHostConnectException: Connect to publicsuffix.org:443 [publicsuffix.org/13.227.223.9, publicsuffix.org/13.227.223.45, publicsuffix.org/13.227.223.75, publicsuffix.org/13.227.223.10] failed: Connection timed out (Connection timed out)

Manual wget to the url https://publicsuffix.org/list/effective_tld_names.dat works fine. ;;;","20/May/21 09:31;michael-o;No problem with the HttpClient. Seek help on SO or Maven user list.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven 4 can't build itself with Java 11,MNG-7087,13355018,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,rfscholte,mthmulders,mthmulders,27/Jan/21 19:30,19/Dec/21 19:38,03/Jan/22 13:13,13/Mar/21 12:22,4.0.0-alpha-1,,,,,4.0.0-alpha-1,,,,,,,,0,,,,"It's not possible to build Maven HEAD (I've tested with rev. bb916d0) using a recent Maven 4 snapshot. Even {{mvn validate}} doesn't succeed:

{code}
[INFO] Scanning for projects...
ERROR:  ''
[ERROR] [ERROR] Some problems were encountered while processing the POMs:
[WARNING] 'dependencies.dependency.(groupId:artifactId:type:classifier)' must be unique: org.junit.jupiter:junit-jupiter-params:jar -> version ${junitVersion} vs 5.7.0 @ line 77, column 17
[FATAL] input contained no data @ 
 @ 
[ERROR] The build could not read 1 project -> [Help 1]
[ERROR]   
[ERROR]   The project  (/Users/maarten/Code/open-source/maven/maven/maven-model-builder/pom.xml) has 1 error
[ERROR]     input contained no data
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the '-e' switch.
[ERROR] Re-run Maven using the '-X' switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/ProjectBuildingException
{code}

I've done `git bisect` (first time, I hope I did it correctly):

{code}
9f88494b6064ad45ea2e2e1e3478afc7af0bc065 is the first bad commit
Author: rfscholte
Date:   Mon Dec 21 22:23:43 2020 +0100

    [MNG-6957] Versionless reactor dependencies/parent should work even if modules are aggregated in reverse order
    
    This closes #391

{code}","Apache Maven 4.0.0-alpha-1-SNAPSHOT (bb916d0784c7631866167928e4d0615df3317567)
Java version: 11.0.10, vendor: AdoptOpenJDK, runtime: /Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Jan/21 00:39;michael-o;screenshot-1.png;https://issues.apache.org/jira/secure/attachment/13019728/screenshot-1.png","31/Jan/21 00:52;michael-o;screenshot-2.png;https://issues.apache.org/jira/secure/attachment/13019729/screenshot-2.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|z0n26o:",9223372036854775807,,,,,,,,,,,,,,,,,,,"27/Jan/21 20:44;michael-o;Clearly a regression.;;;","30/Jan/21 18:41;michael-o;This is not a regression, I have checked. Look at the POM, it contains:

{noformat}
...
 42     <dependency>
 43       <groupId>org.junit.jupiter</groupId>
 44       <artifactId>junit-jupiter-params</artifactId>
 45       <version>${junitVersion}</version>
 46       <scope>test</scope>
 47     </dependency>
...
 77     <dependency>
 78       <groupId>org.junit.jupiter</groupId>
 79       <artifactId>junit-jupiter-params</artifactId>
 80       <version>5.7.0</version>
 81       <scope>compile</scope>
 82     </dependency>
{noformat};;;","30/Jan/21 18:53;michael-o;This dep has to be in compile scope:
{noformat}
mosipov@bsd1srv:~/var/Projekte/maven/maven-test-support/src (mng-7051-non-existing-profile-activation=)
$ grep -r org.junit.jupiter.params .
./main/java/org/apache/maven/test/ParameterizedExtension.java:import org.junit.jupiter.params.converter.DefaultArgumentConverter;
./main/java/org/apache/maven/test/ParameterizedExtension.java:import org.junit.jupiter.params.provider.Arguments;
./main/java/org/apache/maven/test/ParameterizedExtension.java:import static org.junit.jupiter.params.provider.Arguments.arguments;
{noformat};;;","30/Jan/21 18:55;michael-o;This should do it:
{noformat}
mosipov@bsd1srv:~/var/Projekte/maven/maven-test-support (mng-7051-non-existing-profile-activation *=)
$ git diff
diff --git a/maven-test-support/pom.xml b/maven-test-support/pom.xml
index c051cc447..9abe4401f 100644
--- a/maven-test-support/pom.xml
+++ b/maven-test-support/pom.xml
@@ -43,7 +43,6 @@ under the License.
       <groupId>org.junit.jupiter</groupId>
       <artifactId>junit-jupiter-params</artifactId>
       <version>${junitVersion}</version>
-      <scope>test</scope>
     </dependency>
     <dependency>
       <groupId>com.google.inject</groupId>
@@ -74,12 +73,6 @@ under the License.
       <groupId>org.codehaus.plexus</groupId>
       <artifactId>plexus-component-annotations</artifactId>
     </dependency>
-    <dependency>
-      <groupId>org.junit.jupiter</groupId>
-      <artifactId>junit-jupiter-params</artifactId>
-      <version>5.7.0</version>
-      <scope>compile</scope>
-    </dependency>
   </dependencies>

 </project>
mosipov@bsd1srv:~/var/Projekte/maven/maven-test-support (mng-7051-non-existing-profile-activation *=)
$ ~/apache-maven/bin/mvn -V clean install -q
Apache Maven 4.0.0-alpha-1-SNAPSHOT (c4e1aee95324fe6550513715b6e61de4f55cff6a)
Maven home: /home/mosipov/apache-maven
Java version: 1.8.0_282, vendor: OpenJDK BSD Porting Team, runtime: /usr/local/openjdk8/jre
Default locale: de_DE, platform encoding: UTF-8
OS name: ""freebsd"", version: ""12.2-stable"", arch: ""amd64"", family: ""unix""
mosipov@bsd1srv:~/var/Projekte/maven/maven-test-support (mng-7051-non-existing-profile-activation *=)
$ echo $?
0
{noformat}

[~gnodet], your JUnit skills are better than mine. WDYT? Is that an error in the from bb916d0784c7631866167928e4d0615df3317567?;;;","30/Jan/21 19:02;mthmulders;With Maven 3.6.3, this is a warning that points to the correct location in the correct POM:
{code:java}
[WARNING] Some problems were encountered while building the effective model for org.apache.maven:maven-test-support:jar:4.0.0-alpha-1-SNAPSHOT
[WARNING] 'dependencies.dependency.(groupId:artifactId:type:classifier)' must be unique: org.junit.jupiter:junit-jupiter-params:jar -> version ${junitVersion} vs 5.7.0 @ line 77, column 17
{code}
With Maven 4.0.0-alpha-1-SNAPSHOT, this is still a warning:
{code:java}
[WARNING] 'dependencies.dependency.(groupId:artifactId:type:classifier)' must be unique: org.junit.jupiter:junit-jupiter-params:jar -> version ${junitVersion} vs 5.7.0 @ line 77, column 17
{code}
But the problem is not in this warning, it's the *error message*:
{code:java}
[ERROR] [ERROR] Some problems were encountered while processing the POMs:
[WARNING] 'dependencies.dependency.(groupId:artifactId:type:classifier)' must be unique: org.junit.jupiter:junit-jupiter-params:jar -> version ${junitVersion} vs 5.7.0 @ line 77, column 17
[FATAL] input contained no data @ 
 @ 
[ERROR] The build could not read 1 project -> [Help 1]
[ERROR]   
[ERROR]   The project  (/home/maarten/code/maven/maven/maven-model-builder/pom.xml) has 1 error
[ERROR]     input contained no data
[ERROR] 
{code}
It points to a different POM, not related to the duplicate dependency declaration, and it reads:
{code:java}
[FATAL] input contained no data @ 
 @ 
{code}
which doesn't make any sense to me. I have to meet the first person who can say what's wrong with their project based on this error message alone. I think this is a regression indeed.;;;","30/Jan/21 19:49;michael-o;Argh, I completely missed that. There are two issues here. The duplicate dep triggered a regression. The warning was always there.;;;","30/Jan/21 19:53;mthmulders;Indeed, the warning isn't much of an issue (although we should fix that, of course, let's hope [~gnodet] can help there) but that's not blocking the build as far as I can tell.;;;","30/Jan/21 20:14;michael-o;The errror comes from {{MXParser}} in Plexus Utils. Either it is PU bug, or Robert's change is really a regression.;;;","30/Jan/21 20:18;michael-o;This one cannot be reproduced with Java 8, but with 11+ only.;;;","30/Jan/21 20:53;michael-o;I am debugging through this. I have the feeling that the model is read twice, therefore the error. The output looks weird too:
{noformat}
$ JAVA_VERSION=11 ~/apache-maven/bin/mvn -Vvalidate  -X -pl maven-model-builder/
Apache Maven 4.0.0-alpha-1-SNAPSHOT (c4e1aee95324fe6550513715b6e61de4f55cff6a)
Maven home: /home/mosipov/apache-maven
Java version: 11.0.10, vendor: OpenJDK BSD Porting Team, runtime: /usr/local/openjdk11
Default locale: de_DE, platform encoding: UTF-8
OS name: ""freebsd"", version: ""12.2-stable"", arch: ""amd64"", family: ""unix""
[DEBUG] Created new class realm maven.api
[DEBUG] Importing foreign packages into class realm maven.api
[DEBUG]   Imported: javax.annotation.* < plexus.core
[DEBUG]   Imported: javax.annotation.security.* < plexus.core
[DEBUG]   Imported: javax.inject.* < plexus.core
[DEBUG]   Imported: org.apache.maven.* < plexus.core
[DEBUG]   Imported: org.apache.maven.artifact < plexus.core
[DEBUG]   Imported: org.apache.maven.classrealm < plexus.core
[DEBUG]   Imported: org.apache.maven.cli < plexus.core
[DEBUG]   Imported: org.apache.maven.configuration < plexus.core
[DEBUG]   Imported: org.apache.maven.exception < plexus.core
[DEBUG]   Imported: org.apache.maven.execution < plexus.core
[DEBUG]   Imported: org.apache.maven.execution.scope < plexus.core
[DEBUG]   Imported: org.apache.maven.graph < plexus.core
[DEBUG]   Imported: org.apache.maven.lifecycle < plexus.core
[DEBUG]   Imported: org.apache.maven.model < plexus.core
[DEBUG]   Imported: org.apache.maven.monitor < plexus.core
[DEBUG]   Imported: org.apache.maven.plugin < plexus.core
[DEBUG]   Imported: org.apache.maven.profiles < plexus.core
[DEBUG]   Imported: org.apache.maven.project < plexus.core
[DEBUG]   Imported: org.apache.maven.reporting < plexus.core
[DEBUG]   Imported: org.apache.maven.repository < plexus.core
[DEBUG]   Imported: org.apache.maven.rtinfo < plexus.core
[DEBUG]   Imported: org.apache.maven.settings < plexus.core
[DEBUG]   Imported: org.apache.maven.toolchain < plexus.core
[DEBUG]   Imported: org.apache.maven.usability < plexus.core
[DEBUG]   Imported: org.apache.maven.wagon.* < plexus.core
[DEBUG]   Imported: org.apache.maven.wagon.authentication < plexus.core
[DEBUG]   Imported: org.apache.maven.wagon.authorization < plexus.core
[DEBUG]   Imported: org.apache.maven.wagon.events < plexus.core
[DEBUG]   Imported: org.apache.maven.wagon.observers < plexus.core
[DEBUG]   Imported: org.apache.maven.wagon.proxy < plexus.core
[DEBUG]   Imported: org.apache.maven.wagon.repository < plexus.core
[DEBUG]   Imported: org.apache.maven.wagon.resource < plexus.core
[DEBUG]   Imported: org.codehaus.classworlds < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.* < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.classworlds < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.component < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.configuration < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.container < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.context < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.lifecycle < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.logging < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.personality < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.util.xml.Xpp3Dom < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.util.xml.pull.XmlPullParser < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.util.xml.pull.XmlPullParserException < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.util.xml.pull.XmlSerializer < plexus.core
[DEBUG]   Imported: org.eclipse.aether.* < plexus.core
[DEBUG]   Imported: org.eclipse.aether.artifact < plexus.core
[DEBUG]   Imported: org.eclipse.aether.collection < plexus.core
[DEBUG]   Imported: org.eclipse.aether.deployment < plexus.core
[DEBUG]   Imported: org.eclipse.aether.graph < plexus.core
[DEBUG]   Imported: org.eclipse.aether.impl < plexus.core
[DEBUG]   Imported: org.eclipse.aether.installation < plexus.core
[DEBUG]   Imported: org.eclipse.aether.internal.impl < plexus.core
[DEBUG]   Imported: org.eclipse.aether.metadata < plexus.core
[DEBUG]   Imported: org.eclipse.aether.repository < plexus.core
[DEBUG]   Imported: org.eclipse.aether.resolution < plexus.core
[DEBUG]   Imported: org.eclipse.aether.spi < plexus.core
[DEBUG]   Imported: org.eclipse.aether.transfer < plexus.core
[DEBUG]   Imported: org.eclipse.aether.transform < plexus.core
[DEBUG]   Imported: org.eclipse.aether.version < plexus.core
[DEBUG]   Imported: org.fusesource.jansi.* < plexus.core
[DEBUG]   Imported: org.slf4j.* < plexus.core
[DEBUG]   Imported: org.slf4j.event.* < plexus.core
[DEBUG]   Imported: org.slf4j.helpers.* < plexus.core
[DEBUG]   Imported: org.slf4j.spi.* < plexus.core
[DEBUG] Populating class realm maven.api
[INFO] Error stacktraces are turned on.
[DEBUG] Message scheme: color
[DEBUG] Message styles: debug info warning error success failure strong mojo project
[DEBUG] Reading global settings from '/home/mosipov/apache-maven/conf/settings.xml'
[DEBUG] Reading user settings from '/home/mosipov/.m2/settings.xml'
[DEBUG] Reading global toolchains from '/home/mosipov/apache-maven/conf/toolchains.xml'
[DEBUG] Reading user toolchains from '/home/mosipov/.m2/toolchains.xml'
[DEBUG] Using local repository at /home/mosipov/.m2/repository
[DEBUG] Using manager EnhancedLocalRepositoryManager with priority 10.0 for /home/mosipov/.m2/repository
[INFO] Scanning for projects...
[DEBUG] Extension realms for project org.apache.maven:maven:pom:4.0.0-alpha-1-SNAPSHOT: (none)
[DEBUG] Looking up lifecycle mappings for packaging pom from ClassRealm[plexus.core, parent: null]
[DEBUG] Extension realms for project org.apache.maven:maven-parent:pom:34: (none)
[DEBUG] Looking up lifecycle mappings for packaging pom from ClassRealm[plexus.core, parent: null]
[DEBUG] Extension realms for project org.apache:apache:pom:23: (none)
[DEBUG] Looking up lifecycle mappings for packaging pom from ClassRealm[plexus.core, parent: null]
[DEBUG] Extension realms for project org.apache.maven:maven-test-support:jar:4.0.0-alpha-1-SNAPSHOT: (none)
[DEBUG] Looking up lifecycle mappings for packaging jar from ClassRealm[plexus.core, parent: null]
[DEBUG] Extension realms for project org.apache.maven:maven-plugin-api:jar:4.0.0-alpha-1-SNAPSHOT: (none)
[DEBUG] Looking up lifecycle mappings for packaging jar from ClassRealm[plexus.core, parent: null]
[DEBUG] Extension realms for project org.apache.maven:maven-builder-support:jar:4.0.0-alpha-1-SNAPSHOT: (none)
[DEBUG] Looking up lifecycle mappings for packaging jar from ClassRealm[plexus.core, parent: null]
[DEBUG] Extension realms for project org.apache.maven:maven-model:jar:4.0.0-alpha-1-SNAPSHOT: (none)
[DEBUG] Looking up lifecycle mappings for packaging jar from ClassRealm[plexus.core, parent: null]
ERROR:  ''
[DEBUG] Extension realms for project org.apache.maven:maven-core:jar:4.0.0-alpha-1-SNAPSHOT: (none)
[DEBUG] Looking up lifecycle mappings for packaging jar from ClassRealm[plexus.core, parent: null]
[DEBUG] Extension realms for project org.apache.maven:maven-settings:jar:4.0.0-alpha-1-SNAPSHOT: (none)
[DEBUG] Looking up lifecycle mappings for packaging jar from ClassRealm[plexus.core, parent: null]
[DEBUG] Extension realms for project org.apache.maven:maven-settings-builder:jar:4.0.0-alpha-1-SNAPSHOT: (none)
[DEBUG] Looking up lifecycle mappings for packaging jar from ClassRealm[plexus.core, parent: null]
[DEBUG] Extension realms for project org.apache.maven:maven-artifact:jar:4.0.0-alpha-1-SNAPSHOT: (none)
[DEBUG] Looking up lifecycle mappings for packaging jar from ClassRealm[plexus.core, parent: null]
[DEBUG] Extension realms for project org.apache.maven:maven-resolver-provider:jar:4.0.0-alpha-1-SNAPSHOT: (none)
[DEBUG] Looking up lifecycle mappings for packaging jar from ClassRealm[plexus.core, parent: null]
[DEBUG] Extension realms for project org.apache.maven:maven-repository-metadata:jar:4.0.0-alpha-1-SNAPSHOT: (none)
[DEBUG] Looking up lifecycle mappings for packaging jar from ClassRealm[plexus.core, parent: null]
[DEBUG] Extension realms for project org.apache.maven:maven-slf4j-provider:jar:4.0.0-alpha-1-SNAPSHOT: (none)
[DEBUG] Looking up lifecycle mappings for packaging jar from ClassRealm[plexus.core, parent: null]
[DEBUG] Extension realms for project org.apache.maven:maven-slf4j-wrapper:jar:4.0.0-alpha-1-SNAPSHOT: (none)
[DEBUG] Looking up lifecycle mappings for packaging jar from ClassRealm[plexus.core, parent: null]
[DEBUG] Extension realms for project org.apache.maven:maven-embedder:jar:4.0.0-alpha-1-SNAPSHOT: (none)
[DEBUG] Looking up lifecycle mappings for packaging jar from ClassRealm[plexus.core, parent: null]
[DEBUG] Extension realms for project org.apache.maven:maven-compat:jar:4.0.0-alpha-1-SNAPSHOT: (none)
[DEBUG] Looking up lifecycle mappings for packaging jar from ClassRealm[plexus.core, parent: null]
[DEBUG] Extension realms for project org.apache.maven:apache-maven:pom:4.0.0-alpha-1-SNAPSHOT: (none)
[DEBUG] Looking up lifecycle mappings for packaging pom from ClassRealm[plexus.core, parent: null]
[DEBUG] Extension realms for project org.apache.maven:maven-wrapper:jar:4.0.0-alpha-1-SNAPSHOT: (none)
[DEBUG] Looking up lifecycle mappings for packaging jar from ClassRealm[plexus.core, parent: null]
[DEBUG] Extension realms for project org.apache.maven:apache-maven-wrapper:pom:4.0.0-alpha-1-SNAPSHOT: (none)
[DEBUG] Looking up lifecycle mappings for packaging pom from ClassRealm[plexus.core, parent: null]
[DEBUG] Extension realms for project org.apache.maven:maven-xml:jar:4.0.0-alpha-1-SNAPSHOT: (none)
[DEBUG] Looking up lifecycle mappings for packaging jar from ClassRealm[plexus.core, parent: null]
[ERROR] [ERROR] Some problems were encountered while processing the POMs:
[WARNING] 'dependencies.dependency.(groupId:artifactId:type:classifier)' must be unique: org.junit.jupiter:junit-jupiter-params:jar -> version ${junitVersion} vs 5.7.0 @ line 77, column 17
[FATAL] input contained no data @
 @
[ERROR] The build could not read 1 project -> [Help 1]
org.apache.maven.project.ProjectBuildingException: Some problems were encountered while processing the POMs:
[WARNING] 'dependencies.dependency.(groupId:artifactId:type:classifier)' must be unique: org.junit.jupiter:junit-jupiter-params:jar -> version ${junitVersion} vs 5.7.0 @ line 77, column 17
[FATAL] input contained no data @

    at org.apache.maven.project.DefaultProjectBuilder.build (DefaultProjectBuilder.java:417)
    at org.apache.maven.project.collector.DefaultProjectsSelector.selectProjects (DefaultProjectsSelector.java:63)
    at org.apache.maven.project.collector.MultiModuleCollectionStrategy.collectProjects (MultiModuleCollectionStrategy.java:71)
    at org.apache.maven.graph.DefaultGraphBuilder.getProjectsForMavenReactor (DefaultGraphBuilder.java:426)
    at org.apache.maven.graph.DefaultGraphBuilder.build (DefaultGraphBuilder.java:97)
    at org.apache.maven.DefaultMaven.buildGraph (DefaultMaven.java:637)
    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:239)
    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:212)
    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:125)
    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:980)
    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:294)
    at org.apache.maven.cli.MavenCli.main (MavenCli.java:198)
    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)
    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)
    at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke (Method.java:566)
    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)
    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)
    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)
    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)
[ERROR]
[ERROR]   The project  (/var/mosipov/Projekte/maven/maven-model-builder/pom.xml) has 1 error
[ERROR]     input contained no data
java.io.EOFException: input contained no data
    at org.codehaus.plexus.util.xml.pull.MXParser.fillBuf (MXParser.java:3694)
    at org.codehaus.plexus.util.xml.pull.MXParser.more (MXParser.java:3776)
    at org.codehaus.plexus.util.xml.pull.MXParser.parseProlog (MXParser.java:1717)
    at org.codehaus.plexus.util.xml.pull.MXParser.nextImpl (MXParser.java:1700)
    at org.codehaus.plexus.util.xml.pull.MXParser.next (MXParser.java:1319)
    at org.apache.maven.model.io.xpp3.MavenXpp3Reader.read (MavenXpp3Reader.java:3876)
    at org.apache.maven.model.io.xpp3.MavenXpp3Reader.read (MavenXpp3Reader.java:595)
    at org.apache.maven.model.io.DefaultModelReader.read (DefaultModelReader.java:151)
    at org.apache.maven.model.io.DefaultModelReader.read (DefaultModelReader.java:118)
    at org.apache.maven.model.io.DefaultModelReader.read (DefaultModelReader.java:90)
    at org.apache.maven.model.building.DefaultModelProcessor.read (DefaultModelProcessor.java:97)
    at org.apache.maven.model.building.DefaultModelBuilder.readRawModel (DefaultModelBuilder.java:743)
    at org.apache.maven.model.building.DefaultModelBuilder.readEffectiveModel (DefaultModelBuilder.java:364)
    at org.apache.maven.model.building.DefaultModelBuilder.build (DefaultModelBuilder.java:506)
    at org.apache.maven.model.building.DefaultModelBuilder.build (DefaultModelBuilder.java:494)
    at org.apache.maven.project.DefaultProjectBuilder.build (DefaultProjectBuilder.java:619)
    at org.apache.maven.project.DefaultProjectBuilder.build (DefaultProjectBuilder.java:634)
    at org.apache.maven.project.DefaultProjectBuilder.build (DefaultProjectBuilder.java:401)
    at org.apache.maven.project.collector.DefaultProjectsSelector.selectProjects (DefaultProjectsSelector.java:63)
    at org.apache.maven.project.collector.MultiModuleCollectionStrategy.collectProjects (MultiModuleCollectionStrategy.java:71)
    at org.apache.maven.graph.DefaultGraphBuilder.getProjectsForMavenReactor (DefaultGraphBuilder.java:426)
    at org.apache.maven.graph.DefaultGraphBuilder.build (DefaultGraphBuilder.java:97)
    at org.apache.maven.DefaultMaven.buildGraph (DefaultMaven.java:637)
    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:239)
    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:212)
    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:125)
    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:980)
    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:294)
    at org.apache.maven.cli.MavenCli.main (MavenCli.java:198)
    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)
    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)
    at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke (Method.java:566)
    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)
    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)
    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)
    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)
[ERROR]
[ERROR]
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/ProjectBuildingException
{noformat}

Note  these:
{noformat}
ERROR:  ''
...
[ERROR] [ERROR] Some problems were encountered while processing the POMs:
{noformat}

;;;","30/Jan/21 21:01;michael-o;Just noticed, it is NOT related to the warning of the duplicate dep entry. [~gnodet], this does not affect you or the change you have done.;;;","30/Jan/21 21:53;michael-o;Just made a step forward to avoid junk. Pushed branch {{avoid-empty-locations}} which turned:
{noformat}
[DEBUG] Looking up lifecycle mappings for packaging jar from ClassRealm[plexus.core, parent: null]
[ERROR] [ERROR] Some problems were encountered while processing the POMs:
[FATAL] input contained no data @
 @
[ERROR] The build could not read 1 project -> [Help 1]
org.apache.maven.project.ProjectBuildingException: Some problems were encountered while processing the POMs:
[FATAL] input contained no data @
{noformat}

into
{noformat}
[DEBUG] Looking up lifecycle mappings for packaging jar from ClassRealm[plexus.core, parent: null]
[ERROR] [ERROR] Some problems were encountered while processing the POMs:
[FATAL] input contained no data
[ERROR] The build could not read 1 project -> [Help 1]
org.apache.maven.project.ProjectBuildingException: Some problems were encountered while processing the POMs:
[FATAL] input contained no data
    at org.apache.maven.project.DefaultProjectBuilder.build (DefaultProjectBuilder.java:417)
    at org.apache.maven.project.collector.DefaultProjectsSelector.selectProjects (DefaultProjectsSelector.java:63)
    at org.apache.maven.project.collector.MultiModuleCollectionStrategy.collectProjects (MultiModuleCollectionStrategy.java:71)
    at org.apache.maven.graph.DefaultGraphBuilder.getProjectsForMavenReactor (DefaultGraphBuilder.java:426)
    at org.apache.maven.graph.DefaultGraphBuilder.build (DefaultGraphBuilder.java:97)
{noformat};;;","30/Jan/21 23:56;michael-o;I understand why this now fails, but not the actual reason. When the transformer thread starts it immediately says {{ERROR:  ''}} which means something happened, but we don't see an exception. Since no result is written to the piped output stream MXReader says no input data.;;;","31/Jan/21 00:40;michael-o;Here is the cause:
 !screenshot-1.png! 

To make it even worse, the close method is never called from the wrapped input stream so we never see {{throw new RuntimeException( ""Failed to transform pom"", t );}}.

The actual error is:
{noformat}
ERROR:  ''

FATAL_ERR_MSG

ERROR_MSG

./src/java.xml/share/classes/com/sun/org/apache/xalan/internal/xsltc/compiler/util/ErrorMessages.java
{noformat}
;;;","31/Jan/21 00:53;michael-o;These elements:
 !screenshot-2.png! 
aren't threadsafe and are likely to be the cause if it is not a Java internal problem.;;;","01/Feb/21 09:26;michael-o;[~rfscholte], please take a look at this as soon as you can. I consider this severe.;;;","01/Feb/21 09:49;michael-o;[~mthmulders], did you try to disable the feature and does it work now?
I wonder whether when we'd not use pipes, but write to a temp file and then read from it whether we'd still observe the behavior.;;;","01/Feb/21 13:40;mthmulders;Disabling build/consumer (tested with {{mvn validate -Dmaven.experimental.buildconsumer=false}}) works fine.;;;","01/Feb/21 20:59;rfscholte;I first want to finish MNG-7063 with the changes done by [~gnodet], because that already confirms a fix. It might be this one could benefit from it too.;;;","08/Feb/21 18:56;gnodet;Possible fix available at https://github.com/apache/maven/pull/442 and https://github.com/apache/maven/pull/443

The duplicated junit entry is clearly a problem (fixed in one of the PR).  It seems maven 3 does not complain, but master definitely does.;;;","13/Mar/21 11:42;rfscholte;I've merged MNG-7111, now I cannot reproduce this issue anymore. Please confirm;;;","13/Mar/21 12:20;mthmulders;Can confirm the issue is fixed with
{code:java}
Apache Maven 4.0.0-alpha-1-SNAPSHOT (9e19b57c720d226b0b30992535819f700a665d14)
Maven home: /usr/local/Cellar/maven-snapshot/4.0.0-alpha-1-SNAPSHOT_117/libexec
Java version: 11.0.10, vendor: AdoptOpenJDK, runtime: /Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home
Default locale: en_GB, platform encoding: UTF-8
OS name: ""mac os x"", version: ""10.15.7"", arch: ""x86_64"", family: ""mac"" {code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Classified dependencies not resolved in workspace,MNG-7025,13341515,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Not A Problem,mthmulders,mthmulders,mthmulders,19/Nov/20 07:50,23/Dec/20 09:01,03/Jan/22 13:13,20/Nov/20 06:37,,,,,,,,,Reactor and Workspace,,,,,0,,,,"In a project that has multiple modules, one of the modules depends on a *test-jar* artifact of another module. That dependency is not resolved through the {{ReactorReader}}, but it should, as it is available in the same workspace.",Apache Maven 3.7.0-SNAPSHOT (7b04f82f8728c8e1b20ee59481a733d85c990ee2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|z0kqrc:",9223372036854775807,,,,,,,,,,,,,,,,,,,"19/Nov/20 07:52;mthmulders;I have updated the integration test for MNG-4660 with this scenario as I believe the bug was introduced there.;;;","20/Nov/20 06:37;mthmulders;Need to at least invoke {{test-compile}} before the *test-jar* is available.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"MavenXpp3Writer doesn't write plugin with groupId ""org.apache.maven.plugins""",MNG-7013,13339230,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Incomplete,,CarlosMatos,CarlosMatos,06/Nov/20 19:09,13/Apr/21 17:23,03/Jan/22 13:13,13/Apr/21 17:23,3.6.3,,,,,,,,Plugins and Lifecycle,,,,,0,,,,"When writing a pom.xml, when I try to create a plugin with the groupId ""org.apache.maven.plugins"", this is ignored and the plugin is written without groupId in the pom.xml file. If I add a space at the end like: ""org.apache.maven.plugins "" it seems to work though.

 

Here's some code to reproduce:
{code:java}
Model model = new Model();
Writer writer = new FileWriter(""pom.xml"");
Build build = new Build();
List<Plugin> plugins = new ArrayList<>();
Plugin mavenCompiler = new Plugin();
mavenCompiler.setArtifactId(""maven-compiler-plugin"");
mavenCompiler.setGroupId(""org.apache.maven.plugins"");
mavenCompiler.setVersion(""3.1"");
plugins.add(mavenCompiler);
build.setPlugins(plugins);
model.setName(""test"");
model.setArtifactId(""test"");
model.setModelVersion(""4.0.0"");
model.setVersion(""0.0.1"");
model.setGroupId(""test"");
model.setBuild(build);
new MavenXpp3Writer().write(writer, model);
writer.close();

{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|z0kcns:",9223372036854775807,,,,,,,,,,,,,,,,,,,"06/Nov/20 20:55;pzygielo;I think it works as designed, i.e. default is not written down.
 # [https://github.com/codehaus-plexus/modello/blob/5213c0b907068d088a8d626d373d711613f17643/modello-plugins/modello-plugin-java/src/main/java/org/codehaus/modello/plugin/java/AbstractJavaModelloGenerator.java#L324]
 # [https://github.com/apache/maven/blob/cecedd343002696d0abb50b32b541b8a6ba2883f/maven-model/src/main/mdo/maven.mdo#L2187]
 # above produced {{MavenXpp3Writer.writePlugin}} with
{code:java}
         if ( ( plugin.getGroupId() != null ) && !plugin.getGroupId().equals( ""org.apache.maven.plugin"" ) )
         {
             serializer.startTag( NAMESPACE, ""groupId"" ).text( plugin.getGroupId() ).endTag( NAMESPACE, ""groupId"" );
         } {code}

And with your {{mavenCompiler.setGroupId(""org.apache.maven.plugins"");}} you get the result as described.;;;","07/Nov/20 06:36;mthmulders;Then this may also be the reason why {{mvn archetype:generate}} writes a POM that doesn't contain the {{<groupId>}} for official Maven plugins?
That's something I personally dislike (prefer to have that explicit rather than implicit). As far as I'm concerned, we could reconsider this. But maybe there's strong reasons why it was omitted in the first place?;;;","07/Nov/20 20:34;michael-o;Brevity and settings contains plugin groups.;;;","15/Nov/20 11:00;michael-o;What issue does this cause?;;;","23/Dec/20 10:58;michael-o;Friendly reminder for feedback...;;;","13/Apr/21 17:23;michael-o;No reaction for months.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
maven concurrent builds ignore synchronized in mojo execute-method,MNG-6984,13326654,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Incomplete,,thomas.loercher,thomas.loercher,09/Sep/20 10:43,03/Jul/21 13:25,03/Jan/22 13:13,03/Jul/21 13:25,3.6.0,3.6.3,,,,,,,,,,,,0,,,,"I have written a custom maven-Mojo. 
 Since libraries used in this mojo are not thread-safe, i followed the guide [https://cwiki.apache.org/confluence/display/MAVEN/Parallel+builds+in+Maven+3] to avoid parallel executions of the code.

Doesnt seem to work though.

I tried to use other approaches like semaphors or synchronized functions, maven does execute the code snippets in parallel. It seems to me that every mvn module will get build in an own process.

Build started using 
mvn clean package -T1C",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|z0ig3c:",9223372036854775807,,,,,,,,,,,,,,,,,,,"11/Sep/20 08:56;michael-o;Is that public code?;;;","11/Sep/20 10:01;thomas.loercher;Unfortunately the code of the multi-module-project isn't public.;;;","11/Sep/20 10:52;michael-o;Can you futher describe how race conditions affect your build, maybe a log file if possible?;;;","03/Jul/21 13:25;michael-o;No reaction for nine months.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Using MINSTALL/DEPLOY 3.0.0-M1+ does not write plugin information into maven-metadata.xml,MNG-7055,13320420,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,cstamas,elharo,elharo,31/Jul/20 14:20,19/Dec/21 19:40,03/Jan/22 13:13,02/Oct/21 13:22,,,,,,3.9.0-candidate,4.0.0,4.0.0-alpha-1,Artifacts and Repositories,Plugins and Lifecycle,,,,0,,,,"Copying [~michael-o]'s comment from mailing list on HEAD with Maven core ITs:

https://markmail.org/message/ggcioupa6yaet4xe#query:+page:1+mid:noyp5d3iyclrfgyp+state:results


{noformat}[ERROR] Tests run: 834, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 287.261 s <<< FAILURE! - in org.apache.maven.it.IntegrationTestSuite
[ERROR] testitMNG3372(org.apache.maven.it.MavenITmng3372DirectInvocationOfPluginsTest)
Time elapsed: 1.5 s  <<< ERROR!
org.apache.maven.it.VerificationException:
Exit code was non-zero: 1; command line and log =
/var/osipovmi/Projekte/maven-integration-testing/core-it-suite/target/apache-maven/bin/mvn
--global-settings
/var/osipovmi/Projekte/maven-integration-testing/core-it-suite/target/test-classes/settings.xml
-s
/var/osipovmi/Projekte/maven-integration-testing/core-it-suite/target/test-classes/mng-3372/direct-using-prefix/settings.xml
-e --batch-mode
-Dmaven.repo.local=/net/home/osipovmi/var/Projekte/maven-integration-testing/repo
mng3372:test
[INFO] Error stacktraces are turned on.
[INFO] Scanning for projects...
[WARNING]
[WARNING] Some problems were encountered while building the effective model for
org.apache.maven.its.mng3372:project:jar:1.0-SNAPSHOT
[WARNING] Version not locked for default bindings plugins [maven-clean-plugin,
maven-resources-plugin, maven-jar-plugin, maven-compiler-plugin,
maven-surefire-plugin, maven-install-plugin, maven-deploy-plugin,
maven-site-plugin], you should define versions in pluginManagement section of
your pom.xml or parent @ line 6, column 14
[WARNING]
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING]
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING]
[INFO] Downloading from central: file:target/null/org/apache/maven/its/mng3372/maven-metadata.xml
[INFO] Downloading from central: file:target/null/org/apache/maven/plugins/maven-metadata.xml
[INFO] Downloading from central: file:target/null/org/codehaus/mojo/maven-metadata.xml
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  0.056 s
[INFO] Finished at: 2020-06-04T22:03:01+02:00
[INFO] ------------------------------------------------------------------------
[ERROR] No plugin found for prefix 'mng3372' in the current project and in the
plugin groups [org.apache.maven.its.mng3372, org.apache.maven.plugins,
org.codehaus.mojo] available from the repositories [local
(/net/home/osipovmi/var/Projekte/maven-integration-testing/repo), central
(file:target/null)] -> [Help 1]
org.apache.maven.plugin.prefix.NoPluginFoundForPrefixException: No plugin found
for prefix 'mng3372' in the current project and in the plugin groups
[org.apache.maven.its.mng3372, org.apache.maven.plugins, org.codehaus.mojo]
available from the repositories [local (/net/home/osipovmi/var/Projekte/maven-integration-testing/repo), central (file:target/null)]
    at org.apache.maven.plugin.prefix.internal.DefaultPluginPrefixResolver.resolve(DefaultPluginPrefixResolver.java:98)
    at org.apache.maven.lifecycle.internal.MojoDescriptorCreator.findPluginForPrefix(MojoDescriptorCreator.java:269)
    at org.apache.maven.lifecycle.internal.MojoDescriptorCreator.getMojoDescript{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-6556,,,MSHARED-920,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|z0hdrc:",9223372036854775807,,,,,,,,,,,,,,,,,,,"21/Dec/20 13:11;michael-o;I did more investigation and the cause of this is:
{noformat}
commit 55f1f640dff5e2dbdd44d53949bb0735a7e78d26
Author: Robert Scholte <rfscholte@apache.org>
Date:   2015-10-11T20:39:20+02:00

    Merge with 3.0-branch

    git-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@1708008 13f79535-47bb-0310-9956-ffa450edef68

{noformat}

With this change Maven Artifact Manager has been replaced with Manager Artifact Transfer. It does not touch group repository metadata at all, it simply ignores plugins.;;;","21/Dec/20 13:22;michael-o;[~rfscholte], I know it has been many years, but do you remember anything special with that change?;;;","21/Dec/20 16:18;rfscholte;Looking at it, this looks like this is the start of dropping the Maven2 mechanism to install artifacts and to start using Aether/Maven Artifact Resolver. Looks unrelated to the error.
;;;","21/Dec/20 19:49;michael-o;It seems, but it is not. Artifact Manager did take care of plugin metadata in the repo while Artifact Transfer does not anymore. Can we completely get rid of Artifact Transfer?;;;","21/Dec/20 21:02;rfscholte;Artifact Transfer is just a bridge, to make it possible to work with Sonetype Aether and Eclipse Aether. The logic for plugin metadata doesn't belong there. I don't know where it should be now.;;;","21/Dec/20 21:08;michael-o;I agree with that because this is packaging specific. The problem is the it currently not possible to install or deploy that piece of information with MINSTALL/MDEPLOY 3.0.0-x. Maven needs this metadata to work properly, so we have to solve this problem somehow.;;;","21/Dec/20 21:16;rfscholte;IMO this belongs in Maven itself, not in a library or plugin. I'll need ito investigate if there is a clean way for plugin artifacts to hook into MAven Artifact Resolver;;;","21/Dec/20 21:26;michael-o;Thanks, this is really something to be very nice in 4.0.0. Let me know if I can help.;;;","21/Dec/20 21:40;michael-o;So this should be moved to MNG and I can perform a release of this component?;;;","21/Dec/20 21:42;rfscholte;issue is unrelated to maven-artifact-transfer, so go ahead.;;;","12/Jul/21 07:37;mthmulders;[~martinkanters] and I will start working on this. We will move the existing ""install / deploy"" logic into Core, implementing it on top of Maven Resolver API. The M-I-P and M-D-P will leverage that, but they will still need a fallback (implemented with Eclipse Aether) so they are compatible with Maven 3.1 and above. We expect to drop Maven 3.0 compatibility.;;;","28/Sep/21 17:42;cstamas;Failing ITs when update m-i-p and m-d-p to 3.x are:
{noformat}
[INFO] Results:
[INFO] 
[ERROR] Failures: 
[ERROR]   MavenITmng3441MetadataUpdatedFromDeploymentRepositoryTest>AbstractMavenIntegrationTestCase.runTest:265->testitMNG3441:72 expected:<[test-artifact]> but was:<[blah]>
[ERROR] Errors: 
[ERROR]   MavenITmng3372DirectInvocationOfPluginsTest>AbstractMavenIntegrationTestCase.runTest:265->testitMNG3372:65 » Verification
[INFO] 
[ERROR] Tests run: 879, Failures: 1, Errors: 1, Skipped: 0
 {noformat};;;","19/Dec/21 19:40;michael-o;[~cstamas], can you tell whether this can/should be backported to 3.9.0?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Build/consumer incorrectly transforms name of artifactId,MNG-6946,13313110,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,rfscholte,rfscholte,rfscholte,23/Jun/20 21:20,08/Nov/20 17:17,03/Jan/22 13:13,26/Jun/20 11:08,4.0.0,,,,,,,,,,,,,0,,,,"While trying to build maven-clean-plugin with Maven 3.7.0-SNAPSHOT, most tests called by the maven-invoker-plugins fail.
It looks like the copy of maven-plugins-34.pom is one of the root causes.
Comparing the original and this file (assuming transformation) the following are expected differences:
- removed whitespace around the license 
- removed relativePath
- removed whitespaces after closing root-tag

The only invalid difference is
{{<artifactId>maven-plugin-annotations</artifactId>}}
which became
{{<artifactId>tions</artifactId>}}

There are 2 issues:
- the artifactId is incorrect
- as this file is not part of the reactor, there's no need to transform the file.

One thing I noticed as well (only happens with build/consumer active):
{noformat}
[INFO] --- maven-enforcer-plugin:1.4.1:enforce (enforce-bytecode-version) @ maven-clean-plugin ---
ERROR:  'The entity ""oslash"" was referenced, but not declared.'
{noformat}

Workaround: add -Dmaven.experimental.buildconsumer=false

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|z0g4w0:",9223372036854775807,,,,,,,,,,,,,,,,,,,"23/Jun/20 21:46;rfscholte;Root cause found: only first part of this artifactId is available in the buffer, a second call of {{characters( char[] ch, int start, int length )}} contains the rest.
All Filters need to be rewritten to handle multiple characters-calls correctly.;;;","26/Jun/20 10:51;hudson;Build succeeded in Jenkins: Maven TLP » maven » MNG-6946 #2

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6946/2/;;;","26/Jun/20 11:08;rfscholte;Fixed in [a945ca4ed314714fdc2be4616bcf34eaf6d3c1f5|https://gitbox.apache.org/repos/asf?p=maven.git;a=commit;h=a945ca4ed314714fdc2be4616bcf34eaf6d3c1f5];;;","26/Jun/20 11:39;hudson;Build unstable in Jenkins: Maven TLP » maven » master #439

See https://builds.apache.org/job/maven-box/job/maven/job/master/439/;;;","26/Jun/20 15:05;rfscholte;btw, I still see the ERROR.

It seems to be caused by e.g. org.codehaus.plexus:1.0.5:pom, which contains

{code:xml}
<developer>
 <name>Trygve Laugst&oslash;l</name>
 <id>trygvis</id>
 <email>trygvis@codehaus.org</email>
 <roles>
 <role>Developer</role>
 </roles>
 </developer>
{code}

Need to figure out how to solve this, but that'll be a different ticket.;;;","08/Nov/20 16:15;hudson;Build succeeded in Jenkins: Maven » Maven TLP » maven » MNG-6169/MNG-6553 #14

See https://ci-builds.apache.org/job/Maven/job/maven-box/job/maven/job/MNG-6169%252FMNG-6553/14/;;;","08/Nov/20 16:27;hudson;Build succeeded in Jenkins: Maven » Maven TLP » maven » MNG-6169/MNG-6555 #14

See https://ci-builds.apache.org/job/Maven/job/maven-box/job/maven/job/MNG-6169%252FMNG-6555/14/;;;","08/Nov/20 16:53;hudson;Build succeeded in Jenkins: Maven » Maven TLP » maven » MNG-6169/MNG-6556 #14

See https://ci-builds.apache.org/job/Maven/job/maven-box/job/maven/job/MNG-6169%252FMNG-6556/14/;;;","08/Nov/20 17:17;hudson;Build unstable in Jenkins: Maven » Maven TLP » maven » MNG-6169/MNG-6551 #14

See https://ci-builds.apache.org/job/Maven/job/maven-box/job/maven/job/MNG-6169%252FMNG-6551/14/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
881274914a80946f8af6e435eff064d3c89974fa introduces regression,MNG-6944,13313000,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,rfscholte,michael-o,michael-o,23/Jun/20 08:57,08/Nov/20 17:17,03/Jan/22 13:13,23/Jun/20 18:30,4.0.0,,,,,,,,Core,,,,,0,,,,"When tests are run on OpenJDK 11+:
{noformat}
$ mvn -v
Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T20:33:14+02:00)
Maven home: /usr/local/apache-maven-3.5.4
Java version: 11.0.7, vendor: Oracle Corporation, runtime: /usr/local/openjdk11
Default locale: de_DE, platform encoding: UTF-8
OS name: ""freebsd"", version: ""12.1-stable"", arch: ""amd64"", family: ""unix""
{noformat}

I see the following failure:
{noformat}
[INFO]
[INFO] Results:
[INFO]
[ERROR] Failures:
[ERROR]   DefaultLifecyclesTest.testCustomLifecycle:116
Expected: is ""clean""
     but: was ""site""
[INFO]
[ERROR] Tests run: 359, Failures: 1, Errors: 0, Skipped: 1
{noformat}

{{git bisect}} points to:
{noformat}
$ git bisect bad
881274914a80946f8af6e435eff064d3c89974fa is the first bad commit
commit 881274914a80946f8af6e435eff064d3c89974fa
Author: rfscholte <rfscholte@apache.org>
Date:   Mon Jun 22 20:26:56 2020 +0200

    [MNG-6917] Introduce wrapper lifecycle

 .../apache/maven/lifecycle/DefaultLifecycles.java  | 83 ++++++++++----------
 .../main/resources/META-INF/plexus/components.xml  | 20 +++++
 .../maven/lifecycle/DefaultLifecyclesTest.java     | 90 ++++++++++++++++++----
 .../maven/lifecycle/LifecycleExecutorTest.java     | 14 ++--
 .../internal/stub/DefaultLifecyclesStub.java       |  4 +-
 .../stub/LifecycleExecutionPlanCalculatorStub.java |  4 +
 6 files changed, 153 insertions(+), 62 deletions(-)
{noformat}

It does not fail with:
{noformat}
$ mvn -v
Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T20:33:14+02:00)
Maven home: /usr/local/apache-maven-3.5.4
Java version: 1.8.0_252, vendor: The FreeBSD Project, runtime: /usr/local/openjdk8/jre
Default locale: de_DE, platform encoding: UTF-8
OS name: ""freebsd"", version: ""12.1-stable"", arch: ""amd64"", family: ""unix""
{noformat}

and fails also with:
{noformat}
$ ~/apache-maven-3.6.3/bin/mvn -v clean verify -Drat.skip
Apache Maven 3.6.3 (cecedd343002696d0abb50b32b541b8a6ba2883f)
Maven home: /net/home/osipovmi/apache-maven-3.6.3
Java version: 11.0.7, vendor: Oracle Corporation, runtime: /usr/local/openjdk11
Default locale: de_DE, platform encoding: UTF-8
OS name: ""freebsd"", version: ""12.1-stable"", arch: ""amd64"", family: ""unix""
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|z0g47k:",9223372036854775807,,,,,,,,,,,,,,,,,,,"23/Jun/20 18:24;rfscholte;I think it has always been a problem, but now it is covered by a unittest. The root cause is that since Java 10(?) the order of Map entries are not predicatable anymore. And that exposed an issue in the comparator, which I will fix.

This also shows another issue. We're running unittests only with Java 8, but ITs with the whole range. Makes we wonder if we should go for Java 8 and LATEST for unittests.;;;","23/Jun/20 18:30;rfscholte;Fixed in [a945ca4ed314714fdc2be4616bcf34eaf6d3c1f5|https://gitbox.apache.org/repos/asf?p=maven.git;a=commit;h=a945ca4ed314714fdc2be4616bcf34eaf6d3c1f5];;;","23/Jun/20 19:00;michael-o;Thanks for the fix, works for me! We definitvely need more coverage. I think I have already found another issue. Will report shortly.;;;","23/Jun/20 19:17;hudson;Build succeeded in Jenkins: Maven TLP » maven » master #438

See https://builds.apache.org/job/maven-box/job/maven/job/master/438/;;;","08/Nov/20 16:15;hudson;Build succeeded in Jenkins: Maven » Maven TLP » maven » MNG-6169/MNG-6553 #14

See https://ci-builds.apache.org/job/Maven/job/maven-box/job/maven/job/MNG-6169%252FMNG-6553/14/;;;","08/Nov/20 16:27;hudson;Build succeeded in Jenkins: Maven » Maven TLP » maven » MNG-6169/MNG-6555 #14

See https://ci-builds.apache.org/job/Maven/job/maven-box/job/maven/job/MNG-6169%252FMNG-6555/14/;;;","08/Nov/20 16:53;hudson;Build succeeded in Jenkins: Maven » Maven TLP » maven » MNG-6169/MNG-6556 #14

See https://ci-builds.apache.org/job/Maven/job/maven-box/job/maven/job/MNG-6169%252FMNG-6556/14/;;;","08/Nov/20 17:17;hudson;Build unstable in Jenkins: Maven » Maven TLP » maven » MNG-6169/MNG-6551 #14

See https://ci-builds.apache.org/job/Maven/job/maven-box/job/maven/job/MNG-6169%252FMNG-6551/14/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MavenITBootstrapTest fails with StringIndexOutOfBoundsException: String index out of range: -1,MNG-6938,13310605,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,michael-o,michael-o,michael-o,10/Jun/20 09:02,03/Jul/20 00:31,03/Jan/22 13:13,11/Jun/20 07:22,,,,,,,,,Integration Tests,,,,,0,,,,This is caused when the IT is not related to a JIRA issue or an indexed test. A regression caused by 2c060ccf4912313eef65a5f6de0684efd7185979.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|z0fphs:",9223372036854775807,,,,,,,,,,,,,,,,,,,"10/Jun/20 18:45;rfscholte;Ah, good catch. This one was blocking my work on a branch, thought it was caused by my changes.;;;","10/Jun/20 21:03;michael-o;Good, will merge the PR tomorrow.;;;","11/Jun/20 07:22;michael-o;Fixed with [d76e7f870f1195b93f842791f6ff26f54ea0e02f|https://gitbox.apache.org/repos/asf?p=maven-integration-testing.git&a=commit&h=d76e7f870f1195b93f842791f6ff26f54ea0e02f].;;;","11/Jun/20 08:17;hudson;Build succeeded in Jenkins: Maven TLP » maven » master #422

See https://builds.apache.org/job/maven-box/job/maven/job/master/422/;;;","13/Jun/20 10:00;hudson;Build unstable in Jenkins: Maven TLP » maven » MNG-6656 #72

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6656/72/;;;","21/Jun/20 10:15;hudson;Build succeeded in Jenkins: Maven TLP » maven » MNG-6878 #8

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6878/8/;;;","02/Jul/20 04:13;hudson;Build unstable in Jenkins: Maven TLP » maven » MNG-6909 #8

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6909/8/;;;","02/Jul/20 04:32;hudson;Build unstable in Jenkins: Maven TLP » maven » MNG-6512-build-11 #15

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6512-build-11/15/;;;","02/Jul/20 04:33;hudson;Build unstable in Jenkins: Maven TLP » maven » MNG-6169/MNG-6552 #38

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6169%252FMNG-6552/38/;;;","02/Jul/20 04:34;hudson;Build unstable in Jenkins: Maven TLP » maven » MRESOLVER-94 #3

See https://builds.apache.org/job/maven-box/job/maven/job/MRESOLVER-94/3/;;;","02/Jul/20 04:48;hudson;Build unstable in Jenkins: Maven TLP » maven » MNG-6169/MNG-6554 #37

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6169%252FMNG-6554/37/;;;","02/Jul/20 04:54;hudson;Build unstable in Jenkins: Maven TLP » maven » MNG-6169/MNG-6555 #45

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6169%252FMNG-6555/45/;;;","02/Jul/20 05:05;hudson;Build unstable in Jenkins: Maven TLP » maven » MNG-6169/MNG-6551 #44

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6169%252FMNG-6551/44/;;;","02/Jul/20 05:15;hudson;Build unstable in Jenkins: Maven TLP » maven » MNG-6169/MNG-6550 #41

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6169%252FMNG-6550/41/;;;","02/Jul/20 05:23;hudson;Build unstable in Jenkins: Maven TLP » maven » MNG-6548 #22

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6548/22/;;;","02/Jul/20 05:36;hudson;Build unstable in Jenkins: Maven TLP » maven » MODELTESTS_IMPROVEMENT #26

See https://builds.apache.org/job/maven-box/job/maven/job/MODELTESTS_IMPROVEMENT/26/;;;","02/Jul/20 05:41;hudson;Build unstable in Jenkins: Maven TLP » maven » MNG-6169/MNG-6556 #44

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6169%252FMNG-6556/44/;;;","02/Jul/20 06:02;hudson;Build unstable in Jenkins: Maven TLP » maven » MNG-6169/MNG-6553 #38

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6169%252FMNG-6553/38/;;;","02/Jul/20 06:07;hudson;Build unstable in Jenkins: Maven TLP » maven » Bananeweizen-MNG-6907 #3

See https://builds.apache.org/job/maven-box/job/maven/job/Bananeweizen-MNG-6907/3/;;;","02/Jul/20 06:17;hudson;Build unstable in Jenkins: Maven TLP » maven » checkstyle-3.1 #2

See https://builds.apache.org/job/maven-box/job/maven/job/checkstyle-3.1/2/;;;","02/Jul/20 06:38;hudson;Build unstable in Jenkins: Maven TLP » maven » MNG-6888 #3

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6888/3/;;;","02/Jul/20 06:50;hudson;Build unstable in Jenkins: Maven TLP » maven » MNG-6889 #3

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6889/3/;;;","02/Jul/20 06:59;hudson;Build unstable in Jenkins: Maven TLP » maven » MNG-5567 #55

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-5567/55/;;;","02/Jul/20 07:20;hudson;Build unstable in Jenkins: Maven TLP » maven » MNG-6829 #24

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6829/24/;;;","02/Jul/20 07:24;hudson;Build unstable in Jenkins: Maven TLP » maven » MNG-6012-Missing-Profile-At-End #57

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6012-Missing-Profile-At-End/57/;;;","02/Jul/20 07:42;hudson;Build unstable in Jenkins: Maven TLP » maven » mng-5668-poc #24

See https://builds.apache.org/job/maven-box/job/maven/job/mng-5668-poc/24/;;;","02/Jul/20 07:57;hudson;Build unstable in Jenkins: Maven TLP » maven » REMOVE_DEPRECATED #16

See https://builds.apache.org/job/maven-box/job/maven/job/REMOVE_DEPRECATED/16/;;;","02/Jul/20 08:02;hudson;Build failed in Jenkins: Maven TLP » maven » MPOM-215 #33

See https://builds.apache.org/job/maven-box/job/maven/job/MPOM-215/33/;;;","02/Jul/20 08:36;hudson;Build failed in Jenkins: Maven TLP » maven » slf4j-1.8-modules #34

See https://builds.apache.org/job/maven-box/job/maven/job/slf4j-1.8-modules/34/;;;","03/Jul/20 00:31;hudson;Build unstable in Jenkins: Maven TLP » maven-studies » maven-metrics #20

See https://builds.apache.org/job/maven-box/job/maven-studies/job/maven-metrics/20/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
not storing/getting artifacts in/from local repository,MNG-6902,13303568,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Not A Problem,,emingora,emingora,08/May/20 07:36,19/Jul/20 18:07,03/Jan/22 13:13,19/Jul/20 18:07,,,,,,,,,,,,,,0,,,,"This is more a question than a bug itself (I guess so)

I have two machines:
 * I build same project [https://github.com/kiegroup/appformer/] from both of them.
 * same maven version in both of them 3.5.2
 * same settings.xml in both of them
 * clean repository ~/.m2/repository in both of them
 * both of them show the same DEBUG information

{code}
[DEBUG] Reading global settings from /opt/tools/apache-maven-3.5.2/conf/settings.xml
[DEBUG] Reading user settings from /home/user/settings.xml
[DEBUG] Reading global toolchains from /opt/tools/apache-maven-3.5.2/conf/toolchains.xml
[DEBUG] Reading user toolchains from /home/user/.m2/toolchains.xml
[DEBUG] Using local repository at /home/user/.m2/repository
[DEBUG] Using manager EnhancedLocalRepositoryManager with priority 10.0 for /home/user/.m2/repository
{code}

I run the command (-pl and -am to make the test faster) with OK in both of them
{code}
/opt/tools/apache-maven-3.5.2/bin/mvn -s /home/user/settings.xml -DskipTests clean install -pl :appformer-js -am
{code}

In the first machine:
 * the kie-parent and the rest of the artifacts are in the ~/.m2/repository folder (org/kie/kie-parent)

In the second machine:
 * the kie-parent *IS NOT* but some other artifacts in the ~/.m2/repository folder


so... my question is, in the second machine, where should/can they be? *How can I know where maven is taking the kie-parent artifact from*?
Sorry for the blocker priority but it's blocking us https://issues.redhat.com/browse/BXMSPROD-746",rhel7 with java RE 1.8.0_202,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|z0ei5s:",9223372036854775807,,,,,,,,,,,,,,,,,,,"08/May/20 10:23;michael-o;Unless you can show some bug, this will be closed. Questions go to the mailing list.;;;","09/May/20 10:51;nhoj.patrick;Clicking the link and logging in I get;
{{
You can't view this issue
It may have been deleted or you don't have permission to view it.
}}

On the second machine is {{'kie-parent'}} anywhere on the file system? i.e. have you done a search for the following {{find / -name pom.xml -exec grep \<artifactId\>kie-parent\<\/artifactId\> {} \; -print}} or {{find / -name ""*.pom"" -exec grep \<artifactId\>kie-parent\<\/artifactId\> {} \; -print}}

The above 2 commands return all files so you'll need to result out those in target, work out those using that parent and those which are the parent.

Also for parent the relativePath defaults to {{../pom.xml}} i believe, so from where you are executing the command, would that location be kie-parent?;;;","11/May/20 09:53;emingora;[~nhoj.patrick] thanks a lot. Yes I did, let me explain you what I found because this is the weird thing.
I have two project folders
[droolsjbpm-build-bootstrap (where kie-parent is located)|https://github.com/kiegroup/droolsjbpm-build-bootstrap] and [appformer (where kie-parent is used)|https://github.com/kiegroup/appformer], then:

*First case*
* I clean the repo
* No results for *.pom find command. Two results for pom.xml find command (the one for droolsjbpm-build-bootstrap and appformer)
* I build the appformer project, the kie-parent is resolved but there's nothing on the local repo related with kie-parent (magic)

*Second case*
* I clean the repo
* I build the droolsjbpm-build-bootstrap project and the artifact is in the local repo
* I build appformer but still taking the old artifact (not the just built one)

I'm starting to thing it's a kind of sync problem with my volume (which is an external one);;;","19/Jul/20 18:07;michael-o;Please move discussions to mailing lists or SO, I see no evidence of an issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[Regression] tycho pom-less builds fails with 3.6.2,MNG-6765,13256681,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,rfscholte,jadedaemon,jadedaemon,14/Sep/19 08:05,28/Mar/20 23:16,03/Jan/22 13:13,19/Oct/19 16:25,3.6.2,,,,,3.6.3,,,,,,,,4,,,,"Projects using tycho pom-less builds fail with maven-3.6.2.

One such example would be using maven-3.6.2 to build Eclipse-4.13, which fails pretty early in the build with:
{noformat}
[INFO] Scanning for projects...
[ERROR] [ERROR] Some problems were encountered while processing the POMs:
[FATAL] Non-readable POM
/home/jonc/work/ports/freebsd-eclipse/eclipse.platform.releng.aggregator/eclipse.pde.ui/apitools/org.eclipse.pde.api.tools.ee.cdcfoundation10/.polyglot.build.properties:
input contained no data @
[FATAL] Non-readable POM
/home/jonc/work/ports/freebsd-eclipse/eclipse.platform.releng.aggregator/eclipse.pde.ui/apitools/org.eclipse.pde.api.tools.ee.cdcfoundation11/.polyglot.build.properties:
input contained no data @
[FATAL] Non-readable POM
/home/jonc/work/ports/freebsd-eclipse/eclipse.platform.releng.aggregator/eclipse.pde.ui/apitools/org.eclipse.pde.api.tools.ee.feature/.polyglot.build.properties:
input contained no data @
[FATAL] Non-readable POM
/home/jonc/work/ports/freebsd-eclipse/eclipse.platform.releng.aggregator/eclipse.pde.ui/apitools/org.eclipse.pde.api.tools.ee.j2se12/.polyglot.build.properties:
input contained no data @
[FATAL] Non-readable POM
/home/jonc/work/ports/freebsd-eclipse/eclipse.platform.releng.aggregator/eclipse.pde.ui/apitools/org.eclipse.pde.api.tools.ee.j2se13/.polyglot.build.properties:
input contained no data @
[FATAL] Non-readable POM
/home/jonc/work/ports/freebsd-eclipse/eclipse.platform.releng.aggregator/eclipse.pde.ui/apitools/org.eclipse.pde.api.tools.ee.j2se14/.polyglot.build.properties:
input contained no data @
[FATAL] Non-readable POM
/home/jonc/work/ports/freebsd-eclipse/eclipse.platform.releng.aggregator/eclipse.pde.ui/apitools/org.eclipse.pde.api.tools.ee.j2se15/.polyglot.build.properties:
input contained no data @
[FATAL] Non-readable POM
/home/jonc/work/ports/freebsd-eclipse/eclipse.platform.releng.aggregator/eclipse.pde.ui/apitools/org.eclipse.pde.api.tools.ee.javase16/.polyglot.build.properties:
input contained no data @
[FATAL] Non-readable POM
/home/jonc/work/ports/freebsd-eclipse/eclipse.platform.releng.aggregator/eclipse.pde.ui/apitools/org.eclipse.pde.api.tools.ee.javase17/.polyglot.build.properties:
input contained no data @
...
{noformat}

These errors do not arise with maven-3.6.0 or maven-3.6.1",,,,,,,,,,,,,,,,,MNG-6788,,,,,,,,,MNG-6685,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|z06n5s:",9223372036854775807,,,,,,,,,,,,,,,,,,,"14/Sep/19 08:09;jadedaemon;Other people experiencing the same issue can be found on this thread:
https://www.mail-archive.com/users@maven.apache.org/msg141654.html;;;","14/Sep/19 08:53;rfscholte;I assume you're using an extension to support tycho pom-less projects. I would focus on that extension first, that project should be able to spot the issue. Based on that the extension needs to be changed or we need to discuss the root cause in case Maven needs to be changed.;;;","14/Sep/19 09:20;jadedaemon;This has been raised with {{polyglot-maven}}: https://github.com/takari/polyglot-maven/issues/200;;;","28/Sep/19 16:03;hboutemy;I don't know if it is exactly the same root cause, but issue reported against maven-git-versioning-extension https://lists.apache.org/thread.html/f48f1eca8af1ef00e5a1e761beae3893227f6853b645c1335995a0f1@%3Cusers.maven.apache.org%3E

or more generally MNG-6685 switch to Guice for ModelBuilder https://lists.apache.org/thread.html/82aab6776aa9ff7af86733f743ad49812cbb6c2289f7ed52c06f1975@%3Cusers.maven.apache.org%3E;;;","30/Sep/19 20:18;mickael.istria;This is now surfacing in Tycho tests against snapshot: https://ci.eclipse.org/tycho/job/tycho-build-with-maven-snapshots/41/
When a patch is merged and snapshot is built, just running this job should highlight whether it fixes the Tycho case or not.;;;","12/Oct/19 17:41;hboutemy;hypothesis: if ModelReader switched from Plexus to JSR 330 / Sisu / Guice in Maven core, would that mean that projects that provide alternative implementation should also switch to JSR 330 to have a chance to be injected?

I can't easily reproduce the issue, then it's not easy to try to fix.
But if someone knows how to test, I can help testing switching to JSR 330 to see if that hypothesis is true.

I don't have a simple test to show the failure then dig into the issue and try to fix...;;;","12/Oct/19 17:51;rfscholte;Guice should take care of that. It understands both injection frameworks and makes it possible to mix both. I suggest a GIT bi-sect to confirm if this is indeed the breaking change first before doing assumptions.;;;","13/Oct/19 10:42;hboutemy;ok, let's go step by step.
I'm using ""mvn verify"" on https://github.com/takari/polyglot-maven as test: it works with Maven 3.6.1 but fails with Maven 3.6.2 during invoker:run in module polyglot-kotlin
Then I checked around commit https://github.com/apache/maven/commit/353d3eaa8f2be47878f584a7da398572b41d90af: it is ok with the commit before but fails the same way as 3.6.2 with this commit applied

Can you reproduce the same?
Do you have a simpler test?;;;","18/Oct/19 03:19;simpligility;I would rather not have to update polyglot to work with 3.6.2 and break compatibility with 3.6.1 and below.... but if we have to I am prepared to do that. Most polyglot users are using the latest version of Maven so it being busted with 3.6.2 is a problem for jruby community and others.  cc [~headius];;;","18/Oct/19 06:02;hboutemy;we're not yet at that step: if someone confirms what I wrote, we'll try to dig into finding the root cause and find different ways of fixing the issue.

THen we'll see what is the best one (forcing an extension to have different code based on Maven version is not the most appealing solution, we'll see if this is the only way).;;;","18/Oct/19 06:32;michael-o;Before we revert then offending commit I'd second Hervé's approach.;;;","18/Oct/19 16:32;hudson;Build succeeded in Jenkins: Maven TLP » maven » MNG-6765 #2

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6765/2/;;;","18/Oct/19 22:06;mickael.istria;[https://ci.eclipse.org/tycho/job/tycho-build-with-maven-snapshots/43/] confirms that Eclipse Tycho, which had failing test for pom-less with 3.6.3-SNAPSHOT last week, seems to work fine with [https://builds.apache.org/job/maven-box/job/maven/job/MNG-6765/2/artifact/org/apache/maven/apache-maven/3.6.3-SNAPSHOT/apache-maven-3.6.3-SNAPSHOT-bin.tar.gz]

 https://github.com/apache/maven/tree/MNG-6765;;;","19/Oct/19 10:30;hudson;Build succeeded in Jenkins: Maven TLP » maven » MNG-6765 #3

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6765/3/;;;","19/Oct/19 16:14;hudson;Build succeeded in Jenkins: Maven TLP » maven » MNG-6765 #4

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6765/4/;;;","19/Oct/19 16:25;rfscholte;Fixed in [07ab962c85950b034be3216996900920c0204c3a|https://gitbox.apache.org/repos/asf?p=maven.git;a=commit;h=07ab962c85950b034be3216996900920c0204c3a];;;","19/Oct/19 17:04;hudson;Build succeeded in Jenkins: Maven TLP » maven » master #297

See https://builds.apache.org/job/maven-box/job/maven/job/master/297/;;;","20/Oct/19 12:15;hudson;Build failed in Jenkins: Maven TLP » maven » reproducible #47

See https://builds.apache.org/job/maven-box/job/maven/job/reproducible/47/;;;","25/Nov/19 07:59;hudson;Build unstable in Jenkins: Maven TLP » maven » MNG-6656 #23

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6656/23/;;;","26/Jan/20 23:17;hudson;Build succeeded in Jenkins: Maven TLP » maven » MNG-6071 #33

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6071/33/;;;","28/Mar/20 15:04;hudson;Build failed in Jenkins: Maven TLP » maven-studies » maven-metrics #4

See https://builds.apache.org/job/maven-box/job/maven-studies/job/maven-metrics/4/;;;","28/Mar/20 23:16;hudson;Build succeeded in Jenkins: Maven TLP » maven » MNG-5868 #51

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-5868/51/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[Regression] Compilation failure,MNG-6758,13254932,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Cannot Reproduce,rfscholte,gnodet,gnodet,05/Sep/19 07:36,18/Oct/19 17:57,03/Jan/22 13:13,18/Oct/19 17:57,3.6.2,,,,,,,,,,,,,0,,,,"Compilation failure when building with maven 3.6.2 but works with 3.6.1.

{{Repository: [https://github.com/quarkusio/quarkus.git]}}
 {{Branch: 0.21}}
 {{Commit: }}{{63643eff9b10cd5e14aa12a75aae2e0b6e771612}}

 

Steps to reproduce:

{{git clone [https://github.com/quarkusio/quarkus.git]}}
 {{cd quarkus}}
 {{git checkout 63643eff9b10cd5e14aa12a75aae2e0b6e771612}}
 {{mvn install -DskipTests}}

 

This leads to the following error:

{{[*ERROR*] Failed to execute goal io.quarkus:quarkus-maven-plugin:999-SRC-revision-c9add195bbc0014a984dc0f73835e84ff042d021:build *(default)* on project quarkus-integration-test-hibernate-validator: *Failed to build a runnable JAR*: Failed to build a runner jar: Failed to augment application classes: Unsupported method parameter class io.quarkus.resteasy.server.common.runtime.ResteasyServerCommonRecorder at io.quarkus.resteasy.server.common.runtime.ResteasyServerCommonRecorder arg0 of io.quarkus.resteasy.server.common.deployment.ResteasyInjectionReadyBuildItem io.quarkus.resteasy.server.common.deployment.ResteasyServerCommonProcessor.setupInjection(io.quarkus.resteasy.server.common.runtime.ResteasyServerCommonRecorder,io.quarkus.arc.deployment.BeanContainerBuildItem,java.util.List) of class io.quarkus.resteasy.server.common.deployment.ResteasyServerCommonProcessor -> *[Help 1]*}}

Which seems to be caused by an annotation not being recognized correctly (different classloader ?).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|z06cd4:",9223372036854775807,,,,,,,,,,,,,,,,,,,"05/Sep/19 12:14;michael-o;That's a third party plugin: {{io.quarkus:quarkus-maven-plugin:999-SRC-revision-c9add195bbc0014a984dc0f73835e84ff042d021:build}}

Did you try to bisect?;;;","18/Oct/19 17:57;rfscholte;I cannot reproduce the issue, compiles as expected with both versions.
Also, I cannot see how Maven could cause such an exception, that's really at a different level.
(and please provide a small reproducible project next time, so we can transform it into a unittest or integration-test.  Quarkus is just too big to analyse for 1 issue);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.sonatype.maven.polyglot.TeslaModelProcessor.locatePom(File) ignores files ending in.xml,MNG-6742,13251817,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Invalid,rfscholte,laeubi,laeubi,20/Aug/19 11:58,20/Aug/19 14:14,03/Jan/22 13:13,20/Aug/19 13:57,,,,,,,,,,,,,,1,,,,"in org.sonatype.maven.polyglot.TeslaModelProcessor.locatePom(File) there is the following code:

{code:java}
 File pomFile = manager.locatePom(dir);
    if (pomFile != null && !pomFile.getName().endsWith("".pom"") && !pomFile.getName().endsWith("".xml"")) {
 ...
}
{code}
This makes it impossible to return any file with xml ending as alternative to pom.xml, in my case data is stored in a file named category.xml and i can't use ist because then my Mapping is never called.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|z05u0w:",9223372036854775807,,,,,,,,,,,,,,,,,,,"20/Aug/19 12:35;mickael.istria;This is blocking https://bugs.eclipse.org/bugs/show_bug.cgi?id=490886.
Tycho hacked this for feature.xml by assuming there is always a build.properties file with it, but it's a hack and cannot be relied upon for some other types.
I suggest we just fix it in Maven by refining the condition.;;;","20/Aug/19 13:07;mickael.istria;Shouldn't it be reported to https://github.com/takari/polyglot-maven/issues instead?;;;","20/Aug/19 13:57;rfscholte;As mentioned by [~mickael.istria], this is a polyglot-maven issue, which is not maintained by the Apache Maven project.;;;","20/Aug/19 14:14;laeubi;okay, sorry for confusion, I opened https://github.com/takari/polyglot-maven/issues/192;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven Central returns 200 status for Nexus vulnerability page,MNG-6683,13240051,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Invalid,,sgleske-ias,sgleske-ias,17/Jun/19 20:18,17/Jun/19 23:04,03/Jan/22 13:13,17/Jun/19 20:21,,,,,,,,,,,,,,0,,,,"My on-site Nexus instance is caching artifacts with a SHA1 checksum 304aee16ce585ea362af56fe4044e9aa3ad0a84d.

Contents of the page is

 
{noformat}
Forbidden

Access to the Central Repository has been temporarily blocked

You've been identified as running a version of Nexus Repository Manager that is vulnerable to botnet exploitation [1]

It is strongly advised that you upgrade Nexus Repository Manager to the latest version, currently 3.16.2. Please visit the Sonatype NXRM download page [2]

For further information on the vulnerability, affected versions, and remediation paths, please our official announcement at [3]{noformat}
Links
 # [https://community.sonatype.com/t/botnet-exploitation-of-nxrm-up-to-3-14-0/1993]
 # [https://help.sonatype.com/repomanager3/download]
 # [https://community.sonatype.com/t/botnet-exploitation-of-nxrm-up-to-3-14-0/1993]

h2. Issue

Because Maven Central returns a 200 status for the vulnerability ""Forbidden"" page our Nexus instance is caching a lot of junk artifacts.  We've since upgraded to a non-vulnerable Nexus but it seems Central is still returning the ""Forbidden"" error page.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|z03u6o:",9223372036854775807,,,,,,,,,,,,,,,,,,,"17/Jun/19 20:21;michael-o;Please go here: https://issues.sonatype.org/projects/MVNCENTRAL/issues/MVNCENTRAL-4841?filter=allopenissues;;;","17/Jun/19 20:24;sgleske-ias;Currently proxying https://repo1.maven.org/maven2/;;;","17/Jun/19 20:24;sgleske-ias;Thanks will do.;;;","17/Jun/19 23:04;sgleske-ias;FYI moved to https://issues.sonatype.org/browse/MVNCENTRAL-4949;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven 3.6.0 - throws exception of configuration while trying to build,MNG-6625,13226083,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Invalid,rfscholte,Vpmenon,Vpmenon,04/Apr/19 09:41,04/Apr/19 15:34,03/Jan/22 13:13,04/Apr/19 15:34,3.6.0,,,,,,,,Bootstrap & Build,Deployment,,,,0,,,,"reactor: Unable to parse configuration of mojo org.codehaus.mojo:findbugs-maven-plugin:3.0.0:findbugs for parameter pluginArtifacts: Cannot assign configuration entry 'pluginArtifacts' with value '$æplugin.artifactså' of type java.util.Collections.UnmodifiableRandomAccessList to property of type java.util.ArrayList

 

The project builds successfully with lower version of mavens",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|z01ga8:",9223372036854775807,,,,,,,,,,,,,,,,,,,"04/Apr/19 15:34;rfscholte;This is not a Maven issue, but an issue with org.codehaus.mojo:findbugs-maven-plugin:3.0.0
For some reason it contains an invalid mojo descriptor ( {{/META-INF/maven/plugin.xml}} ).
You need to figure out if it is only a problem in your local repository, or if the jar in Maven central has the same issue. For the latter you need to contact the mojohaus team.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Mirror matching ignores closest/nearest definition,MNG-6613,13222180,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,michael-o,michael-o,michael-o,17/Mar/19 22:09,09/Jun/20 21:47,03/Jan/22 13:13,03/Apr/20 21:32,3.5.4,3.6.1,,,,,,,Artifacts and Repositories,Integration Tests,,,,0,,,,"Ran our IT suite in a locked down environment at work, w/o direct internet access. IT {{mng3461MirrorMatching(itNonGreedyWildcard)}} blocks forever because the mirror exclude does not work: {{*,!maven-core-it}}.

It still tries to download via mirror instead of ignoring it. See attached log file. Even switching {{!maven-core-it,*}} makes no difference.","Java 8u202, Java11u2","josephw commented on pull request #57: [MNG-6613] Avoid a connection to apache.org when this test runs.
URL: https://github.com/apache/maven-integration-testing/pull/57
 
 
   This test runs with two repositories configured (maven-core-its and
   central). Make sure that both are excluded from this mirror's
   configuration, so it isn't used.
   
   As a fallback, in case it is used, at least make it a secure connection.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Apr/20 13:57;githubbot;600","michael-o commented on pull request #57: [MNG-6613] Avoid a connection to apache.org when this test runs.
URL: https://github.com/apache/maven-integration-testing/pull/57
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Apr/20 21:34;githubbot;600",,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,MNG-3461,,,,,,,,,,,,,,,,,,,,,,,"17/Mar/19 22:12;michael-o;log.txt;https://issues.apache.org/jira/secure/attachment/12962748/log.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|z00slk:",9223372036854775807,,,,,,,,,,,,,,,,,,,"23/Mar/19 12:37;hudson;Build succeeded in Jenkins: Maven TLP » maven » master #183

See https://builds.apache.org/job/maven-box/job/maven/job/master/183/;;;","24/Mar/19 08:45;hudson;Build succeeded in Jenkins: Maven TLP » maven » runITsWithJavaEA #24

See https://builds.apache.org/job/maven-box/job/maven/job/runITsWithJavaEA/24/;;;","29/Mar/19 13:39;hudson;Build failed in Jenkins: Maven TLP » maven » MNG-6071 #13

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6071/13/;;;","01/Apr/19 06:08;hudson;Build unstable in Jenkins: Maven TLP » maven » MNG-6512-build-11 #17

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6512-build-11/17/;;;","01/Apr/19 06:42;hudson;Build succeeded in Jenkins: Maven TLP » maven » MNG-5868 #26

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-5868/26/;;;","04/Apr/19 23:13;hudson;Build unstable in Jenkins: Maven TLP » maven » MNG-6169/MNG-6556 #12

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6169%252FMNG-6556/12/;;;","04/Apr/19 23:53;hudson;Build unstable in Jenkins: Maven TLP » maven » MNG-6169/MNG-6551 #13

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6169%252FMNG-6551/13/;;;","10/Apr/19 05:19;hudson;Build unstable in Jenkins: Maven TLP » maven » MNG-6169/MNG-6550 #12

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6169%252FMNG-6550/12/;;;","10/Apr/19 05:25;hudson;Build unstable in Jenkins: Maven TLP » maven » MNG-6294 #14

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6294/14/;;;","10/Apr/19 05:40;hudson;Build unstable in Jenkins: Maven TLP » maven » MPOM-215 #7

See https://builds.apache.org/job/maven-box/job/maven/job/MPOM-215/7/;;;","10/Apr/19 06:10;hudson;Build unstable in Jenkins: Maven TLP » maven » MNG-6169/MNG-6555 #15

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6169%252FMNG-6555/15/;;;","10/Apr/19 06:17;hudson;Build unstable in Jenkins: Maven TLP » maven » MNG-5567 #27

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-5567/27/;;;","10/Apr/19 06:26;hudson;Build unstable in Jenkins: Maven TLP » maven » MNG-6169/MNG-6554 #8

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6169%252FMNG-6554/8/;;;","10/Apr/19 06:35;hudson;Build unstable in Jenkins: Maven TLP » maven » MNG-6169/MNG-6552 #8

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6169%252FMNG-6552/8/;;;","10/Apr/19 06:35;hudson;Build unstable in Jenkins: Maven TLP » maven » MNG-6169/MNG-6553 #8

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6169%252FMNG-6553/8/;;;","10/Apr/19 06:45;hudson;Build unstable in Jenkins: Maven TLP » maven » MNG-6405 #9

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6405/9/;;;","10/Apr/19 07:05;hudson;Build unstable in Jenkins: Maven TLP » maven » MAVEN-3.6/MNG-6399 #25

See https://builds.apache.org/job/maven-box/job/maven/job/MAVEN-3.6%252FMNG-6399/25/;;;","10/Apr/19 07:07;hudson;Build unstable in Jenkins: Maven TLP » maven » MNG-5666 #18

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-5666/18/;;;","03/Apr/20 13:58;joe@kafsemo.org;This looks like it could be a bug with the test, rather than Maven itself. The existing {{DefaultMirrorSelectorTest}} covers (almost) that case, and passes.

That integration test runs with a user {{settings.xml}} that includes:
{code:java}
        <repository>
          <id>maven-core-it</id>
          ...
        </repository>
...
    <mirror>
      <id>central</id>
      <url>http://maven.apache.org/null</url>
...
      <mirrorOf>*,!maven-core-it</mirrorOf>
    </mirror>
{code}
So that mirror shouldn't be used as a mirror of {{maven-core-its}}. However, the test also includes {{--global-settings}} that include:
{code:java}
        <repository>
          <id>central</id>
          <name>Apache Maven Integration Testing Repository</name>
          <url>file:target/null</url>
...
        </repository>
{code}
That means that there are two repositories ({{central}} and {{maven-core-its}}), and the that mirror *also* with an id of {{central}} is used as a mirror of the {{central}} repository.

As a possible fix, also exclude {{central}} in {{<mirrorOf/>}}:
{code:java}
diff --git a/core-it-suite/src/test/resources/mng-3461/test-3/settings-template.xml b/core-it-suite/src/test/resources/mng-3461/test-3/settings-template.xml
index da05129f..346f9fc1 100644
--- a/core-it-suite/src/test/resources/mng-3461/test-3/settings-template.xml
+++ b/core-it-suite/src/test/resources/mng-3461/test-3/settings-template.xml
@@ -49,7 +49,7 @@ under the License.
       The explicit mismatch with maven-core-it should be dominant over the wildcard, even if the wildcard
       is given first.
       -->
-      <mirrorOf>*,!maven-core-it</mirrorOf>
+      <mirrorOf>*,!maven-core-it,!central</mirrorOf>
     </mirror>
   </mirrors>
 </settings>
{code}
I believe that leaves it as a valid test; [PR opened|https://github.com/apache/maven-integration-testing/pull/57].

As an aside, anyone who has run this test with Internet access will have made repeated requests over a non-secure connection for:
{code:java}
 http://maven.apache.org/null/org/apache/maven/its/mng3461/a/0.1/a-0.1.pom{code}
It would be nice to confirm that these logs aren't retained.

 ;;;","03/Apr/20 14:08;michael-o;Thanks, I will try this at work.;;;","03/Apr/20 15:32;michael-o;Thinking more about this, should there be a circuit breaker? You cannot (should) not have a mirror of a mirror? Does this make sense at all? Is a mirror considered as a repo too?

[~rfscholte], WDYT?;;;","03/Apr/20 17:40;rfscholte;Based on https://maven.apache.org/guides/mini/guide-mirror-settings.html I'd say a mirror can only be applied on a repository.;;;","03/Apr/20 17:54;michael-o;I am currently going through a few test cases and will report shortly.;;;","03/Apr/20 18:46;michael-o;So here it is:

No mirrors:
{noformat}
[DEBUG] Repositories (dependencies): [central (file:target/null, default, releases), maven-core-it (file:///D:/Entwicklung/Projekte/maven-integration-testing/core-it-suite/target/test-classes/mng-3461/test-3/repo, default, releases)]
[DEBUG] Repositories (plugins)     : [central (file:target/null, default, releases+snapshots)]
{noformat}

Mirror: central
{noformat}
[DEBUG] Using mirror central (http://maven.apache.org/null) for central (file:target/null).
...
[DEBUG] Repositories (dependencies): [central (http://maven.apache.org/null, default, releases), maven-core-it (file:///D:/Entwicklung/Projekte/maven-integration-testing/core-it-suite/target/test-classes/mng-3461/test-3/repo, default, releases)]
[DEBUG] Repositories (plugins)     : [central (http://maven.apache.org/null, default, releases+snapshots)]
{noformat}

Mirror: centraal
{noformat}
[DEBUG] Using mirror centraal (http://maven.apache.org/null) for central (file:target/null).
...
Exceptions that files are not found
{noformat}

Why the failure? The problem is actually not the the test per-se and not the outbound access. Reviewing MNG-3461 and as mentioned by Robert in the mini guide, {{*}} matches all repos, even local ones as you can see for both {{central}} and {{centraal}} (the Dutch version). 
Now the problems:
* Test should not rely on outbound access to mute a non-existing local repo with another repo non-existing repo. This could be simply done by another local non-existing local repo.
* The mirror is called {{central}} which is not a problem. Why does not {{centraal}} fail? {{central}} implicitly relies on the fact that {{_remote.properties}} will contain {{${filename}>central=}} and central has been used previously to download all artifacts. We modify with {{maven.it.central}} and Bootstrap for that.

Now what I need to figure out what artifacts from pulled from non-existing mirror and why they are not pulled from {{maven-core-it}}.;;;","03/Apr/20 20:05;michael-o;My initial description is wrong because I have analyzed the issue now properly. While our network has changed and surprisingly now works w/o a proxy, you can still setp an IP address which does not exist, e.g,, {{192.168.0.1}} and it will block. On Windows, the block is released quickly, on my corporate server with FreeBSD it takes as long as the Wagon read timeout of 180 s. Will work on a better test.;;;","03/Apr/20 21:32;michael-o;Fixed with 76c80f1dfeaca8d14a09e80193e1c45bfb42f777 in integration tests.;;;","04/Apr/20 22:35;hudson;Build unstable in Jenkins: Maven TLP » maven » MODELTESTS_IMPROVEMENT #22

See https://builds.apache.org/job/maven-box/job/maven/job/MODELTESTS_IMPROVEMENT/22/;;;","04/Apr/20 22:58;hudson;Build succeeded in Jenkins: Maven TLP » maven » master #390

See https://builds.apache.org/job/maven-box/job/maven/job/master/390/;;;","05/Apr/20 20:48;hudson;Build succeeded in Jenkins: Maven TLP » maven-studies » maven-metrics #10

See https://builds.apache.org/job/maven-box/job/maven-studies/job/maven-metrics/10/;;;","06/Apr/20 20:02;hudson;Build failed in Jenkins: Maven TLP » maven » runITsWithJavaEA #61

See https://builds.apache.org/job/maven-box/job/maven/job/runITsWithJavaEA/61/;;;","06/Apr/20 20:14;hudson;Build failed in Jenkins: Maven TLP » maven » MNG-5868 #53

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-5868/53/;;;","06/Apr/20 20:15;hudson;Build failed in Jenkins: Maven TLP » maven » MNG-5222 #12

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-5222/12/;;;","06/Apr/20 20:15;hudson;Build failed in Jenkins: Maven TLP » maven » MNG-6828 #12

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6828/12/;;;","06/Apr/20 20:26;hudson;Build failed in Jenkins: Maven TLP » maven » MNG-6878 #5

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6878/5/;;;","06/Apr/20 20:36;hudson;Build failed in Jenkins: Maven TLP » maven » MNG-6819 #9

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6819/9/;;;","06/Apr/20 20:38;hudson;Build failed in Jenkins: Maven TLP » maven » MNG-5669 #6

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-5669/6/;;;","06/Apr/20 20:42;hudson;Build failed in Jenkins: Maven TLP » maven » MNG-6012-Missing-Profile-At-End #55

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6012-Missing-Profile-At-End/55/;;;","06/Apr/20 20:43;hudson;Build failed in Jenkins: Maven TLP » maven » MNG-5567 #53

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-5567/53/;;;","06/Apr/20 20:43;hudson;Build failed in Jenkins: Maven TLP » maven » MNG-6845 #12

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6845/12/;;;","06/Apr/20 20:49;hudson;Build succeeded in Jenkins: Maven TLP » maven » MNG-6512-build-11 #12

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6512-build-11/12/;;;","06/Apr/20 20:50;hudson;Build failed in Jenkins: Maven TLP » maven » testFor363 #14

See https://builds.apache.org/job/maven-box/job/maven/job/testFor363/14/;;;","06/Apr/20 20:56;hudson;Build failed in Jenkins: Maven TLP » maven » mng-5668-poc #22

See https://builds.apache.org/job/maven-box/job/maven/job/mng-5668-poc/22/;;;","06/Apr/20 20:58;hudson;Build failed in Jenkins: Maven TLP » maven » MNG-6829 #21

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6829/21/;;;","06/Apr/20 21:03;hudson;Build failed in Jenkins: Maven TLP » maven » fix/use_https #7

See https://builds.apache.org/job/maven-box/job/maven/job/fix%252Fuse_https/7/;;;","06/Apr/20 21:07;hudson;Build failed in Jenkins: Maven TLP » maven » MNG-6169/MNG-6556 #40

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6169%252FMNG-6556/40/;;;","06/Apr/20 21:10;hudson;Build failed in Jenkins: Maven TLP » maven » MNG-6169/MNG-6555 #42

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6169%252FMNG-6555/42/;;;","06/Apr/20 21:11;hudson;Build failed in Jenkins: Maven TLP » maven » MNG-6169/MNG-6552 #35

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6169%252FMNG-6552/35/;;;","06/Apr/20 21:13;hudson;Build failed in Jenkins: Maven TLP » maven » MNG-6169/MNG-6550 #38

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6169%252FMNG-6550/38/;;;","06/Apr/20 21:14;hudson;Build failed in Jenkins: Maven TLP » maven » MNG-6169/MNG-6556_MJAR-3.0.0 #25

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6169%252FMNG-6556_MJAR-3.0.0/25/;;;","06/Apr/20 21:16;hudson;Build failed in Jenkins: Maven TLP » maven » MNG-6856 #9

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6856/9/;;;","06/Apr/20 21:23;hudson;Build failed in Jenkins: Maven TLP » maven » REMOVE_DEPRECATED #14

See https://builds.apache.org/job/maven-box/job/maven/job/REMOVE_DEPRECATED/14/;;;","06/Apr/20 21:26;hudson;Build failed in Jenkins: Maven TLP » maven » MRESOLVER-93 #15

See https://builds.apache.org/job/maven-box/job/maven/job/MRESOLVER-93/15/;;;","06/Apr/20 21:29;hudson;Build failed in Jenkins: Maven TLP » maven » MPOM-215 #31

See https://builds.apache.org/job/maven-box/job/maven/job/MPOM-215/31/;;;","06/Apr/20 21:33;hudson;Build failed in Jenkins: Maven TLP » maven » MNG-6169/MNG-6551 #41

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6169%252FMNG-6551/41/;;;","06/Apr/20 21:36;hudson;Build failed in Jenkins: Maven TLP » maven » MNG-5666 #42

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-5666/42/;;;","06/Apr/20 21:38;hudson;Build failed in Jenkins: Maven TLP » maven » MNG-6169/MNG-6553 #35

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6169%252FMNG-6553/35/;;;","06/Apr/20 21:39;hudson;Build failed in Jenkins: Maven TLP » maven » MNG-6169/MNG-6554 #34

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6169%252FMNG-6554/34/;;;","06/Apr/20 21:52;hudson;Build failed in Jenkins: Maven TLP » maven » MNG-6548 #19

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6548/19/;;;","06/Apr/20 22:10;hudson;Build failed in Jenkins: Maven TLP » maven » slf4j-1.8-modules #32

See https://builds.apache.org/job/maven-box/job/maven/job/slf4j-1.8-modules/32/;;;","31/May/20 13:34;hudson;Build unstable in Jenkins: Maven TLP » maven » MNG-6656 #57

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6656/57/;;;","09/Jun/20 21:47;hudson;Build unstable in Jenkins: Maven TLP » maven » MNG-6828 #15

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6828/15/;;;"
apache-maven-3.6.0 Using multi-threaded parameters causes the process to get stuck,MNG-6595,13216523,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Invalid,,726575153@qq.com,726575153@qq.com,19/Feb/19 07:01,31/Mar/19 19:52,03/Jan/22 13:13,31/Mar/19 19:52,3.6.0,,,,,,,,Core,,,,,0,,,,"in spark lastest version project, i use build/mvn -DskipTests -T * clean package.

Always use multi-threaded parameters to cause process stuck ,But using a single thread does not",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|yi145s:",9223372036854775807,,,,,,,,,,,,,,,,,,,"19/Feb/19 13:15;michael-o;This information is almost to nothing. I would expect at least debug log and a thread dump of the locked state.;;;","31/Mar/19 19:52;michael-o;No further information given.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Regression in ProjectBuilder when file change between invocations (introduced by MNG-6311),MNG-6530,13201026,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,michael-o,mickael.istria,mickael.istria,28/Nov/18 08:02,17/Aug/21 22:17,03/Jan/22 13:13,08/Jan/19 20:29,3.6.0,,,,,3.6.1,,,Core,,,,,2,,,,"The patch for MNG-6311 introduces a regression in ProjectBuilder due to missing cache invalidation when content change.

It was identified as a potential issue by [~fbricon] on Oct 10, yet no further investigation happened and Maven 3.6.0 was released with this regression.
This regression prevents Eclipse m2e (and probably most APIs using the ProjectBuilder for a longer session which allows pom.xml files to be modified) from adopting 3.6.0.",,"asfgit commented on pull request #194: MNG-6530 - Test + System property to disable global model cache
URL: https://github.com/apache/maven/pull/194
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Jan/19 20:29;githubbot;600",,,0,600,,,0,600,,,,,,,,,,,,,,,,MNG-6311,,MNG-6616,,,MNG-6030,MNG-7027,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|s00xv4:",9223372036854775807,,,,,,,,,,,,,,,,,,,"28/Nov/18 15:57;mickael.istria;I had a look at how feasible it would be to make the cache understand when pom files change. It seems impossible to do it in the cache itself as the cache doesn't have any understanding of the object it caches and where they come from. So it seems to only be achievable in DefaultModelBuilder that should ignore artifacts from the cache if they are outdated.
The places that need to have a change are basically all consumers of DefaultModelBuilder.getCache().

For the readParent part, it seems achievable although not trivial: we'd need a way to have the ModelData store a creationTimestamp when created and to propagate it to clones. With this creationTimestamp, we can compare it to the lastModificationTimestamp of the underlying pom file and decide to ignore cache when lastModificationTimestamp > ModelData.creationTimestamp.
For the dependency part, it's much harder since the DependencyManagement item that's stored in the cache doesn't contain any information regarding the actual pom.xml that generated it, so we cannot deduce a creationTimestamp nor the last modificationTimestamp of the supporting file.

Note that the test I contributed only covers the parent part, not the depedency one. A test for dependencies should be added to ensure a fix is valid.

At the moment, there is still no clear solution, and I think it'd still be best to consider reverting the changes from MNG-6311.;;;","28/Nov/18 19:41;rfscholte;Reverting MNG-6311 would imply reverting MNG-6030 too, and maybe even more. This has become an Eclipse intregration issue, but for all others these changes are improvements, so reverting just for Eclipse doesn't sound good to me. Instead we (Maven team + Eclipse team) should cooperate and keep improving Maven.

Worst case we're going to introduce a system property to disable caching, but I would expect that caching would be interesting for Eclipse too, as long as it recognizes changes to the pomfile.;;;","28/Nov/18 20:13;mickael.istria;{quote}Reverting
MNG-6311
would imply reverting 
MNG-6030
too, and maybe even more. {quote}
I don't get why. MNG-6030 was fixed almost 2 years ago and no-one complained about it. The change for MNG-6311 are downstream of this one,so they could be reverted without affecting older patches.

{quote}This has become an Eclipse intregration issue, {quote}
Not only, it's an API regression. M2e noticed it, but there are chances that any user of ProjectBuilder API could be affected.
I see you're trying to diminosh the criticity of the issue and try to put responsibility of the regression on the users. I also do it too from time to time, but deep inside me., I know I'm very wrong when I do that and that the tolerated technical debt will come back to me even stronger in the future.

{quote} for all others these changes are improvements, so reverting just for Eclipse doesn't sound good to me{quote}
Do you have an exhaustuve listing of «all others»? There are strong chances that any tool providing Maven integration (read about all IDEs) do use this API to generate info and assistance to edit the pom file.

{quote}Instead we (Maven team + Eclipse team) should cooperate and keep improving Maven.{quote}
Sure, and that's what I'm doing with my former comment, I.just reached my.technical limit in term of what I can develop here because of my lack of knowledge in Maven. The ball is now on the side of Maven contributors.

{quote}Worst case we're going to introduce a system property to disable caching{quote}
That'd be pretty good to me. If I submit a.patch with that,would it be accepted?

{quote}I would expect that caching would be interesting for Eclipse too,{quote}
Of course.

{quote}as long as it recognizes changes to the pomfile.{quote}
Basically,is there any chance it happens soon? My look at the code today made me pissimistic, as explained in the previous comment.if you can send optimisitic perspectives of this being fixed.soon, it may make me feel better about.m2e and Maven.;;;","28/Nov/18 20:31;rfscholte;I've marked the Fix Version for 3.6.1, so once the release manager starts preparing that release he will notice this issue. However, that implies that the issue should be active or close to being fixed, otherwise he might decide to push it to a next release.;;;","29/Nov/18 02:32;dchr;Why not do what [~fbricon] suggested in MNG-6311 and make the cache implementation injectable, then you could substitute a cache that evicts a POM file from the cache when the workspace knows it has been modified? ;;;","29/Nov/18 07:45;mickael.istria;{quote}for all others these changes are improvements{quote}
Search for ""maven ProjectBuilder"" on GitHub, you'll see many entries. This contains many plugins, all 3 main Java IDEs and a lot of other code that can very easily suffer from this bug. As the steps to reproduce are not trivial and it's in latest Maven, it can take some time before all those project 1. Adopt a version of Maven containing this bug and 2. notice the impact of the bug.

{quote}Why not do what Fred Bricon suggested in MNG-6311 and make the cache implementation injectable, then you could substitute a cache that evicts a POM file from the cache when the workspace knows it has been modified? {quote}
This wouldn't fix what's bug in ProjectBuilder IMO, and it would still require a big adoption effort for downstream components.
I'll let [~fbricon] comment more on that, but I think it would not fit m2e. The cache itself seems to cache objects (like DependencyManagement) which seem to have no link to the related pom file so there would be impossible for m2e to sort out what to invalidate and when (especially since m2e doesn't necessarily monitor the whole filesystem for changes in any pom file). The cache also comes with a cost in term of RAM; and in IDEs where users can import a project a delete it, it's totally possile that the cache contains thousands of elements (Apache Camel is ~800 modules for instance) and that we don't need them because related project are closed or removed from the IDE; so we can end up in consuming a lot of heap for data that's not interesting any more.
I think the system property or a simple setting to control that cache ""scope"" (is it a temporary cache for one invocation of ProjectBuilder.build(...) as it used to or is it a static cache for the lifecycle of the application as currently implemented?) is a better solution. At this point, the bug is so critical for m2e and family that we don't really care about the potential value of the new cache lifecycle in term of performance.;;;","29/Nov/18 10:10;mickael.istria;I've added to my PR https://github.com/apache/maven/pull/194 a system property that can be used to disable the global model cache and restore previous behavior, honoring file changes.;;;","30/Nov/18 00:04;mickael.istria;Is it possible to add a comment about this issue in the release notes for 3.6.0 ? If yes, what's the procedure to contribute to this document?;;;","30/Nov/18 08:58;rfscholte;Is the System property the preferred solution? I called it the ""in worst case""-scenario. I would like to investigate for a better solution with an explicit method call.

Regarding release notes, they are written at the end. I suggest to add a paragraph in the description of this issue which could be added to the release notes.;;;","30/Nov/18 09:42;mickael.istria;We could introduce ProjectBuildingRequest.useGlobalModelCache() method?;;;","30/Nov/18 09:54;rfscholte;We could do that, I guess {{useModelCache()}} should be good enough, can't think of any other model cache.;;;","30/Nov/18 10:09;mickael.istria;Before MNG-6311 , there was already a cache, which just happens to be attached to the current operation; MNG-6311 made it static and global for the application. I think it's worth being explicit there.;;;","04/Dec/18 10:39;mickael.istria;{quote}Regarding release notes, they are written at the end. I suggest to add a paragraph in the description of this issue which could be added to the release notes.{quote}
I was more talking about the 3.6.0 release note to have a note about this bug, so people who upgrade from a Maven version to another (who should read the release notes of all versions before doing so) would receive a warning and not adopt 3.6.x if they are using ProjectBuilder in a context where files can change.

Also, I'd like some confirmation here: If I add a field in ProjectBuildingRequest instead of the system property, would this be merged? I can spend time to work on those things, but I need some guidance to not waste time in undesired changes.;;;","04/Dec/18 18:51;rfscholte;bq. If I add a field in ProjectBuildingRequest instead of the system property, would this be merged?

I would appreciate it when this can be solved with a field instead of a System property. However, I'm still not convinced by its name. This means there are multiple Model caches. The Javadoc should clearly explain the different types of model caches and the effect of enabling/disabling this cache.;;;","06/Dec/18 08:47;mickael.istria;I've given another round of thought about it, and I believe that in the general case, a system property is better. Indeed, with m2e (and others) we can have the ProjectBuilder used by some mojos invoked in the same JVM (so using this cache) and relying on ProjectBuilder.build(...) to get some MavenProject. Those mojos would return erroneous results if some parent pom change because those change would be ignored.
I think in the context of m2e or any application where lifetime of ProjectBuilder can see pom changing, we really need a way to fully disable the cache in any case, and not only for a given ProjectBuildRequest (as Maven plugin providers shouldn't care about whether they're in mvn CLI or in m2e or whatever to decide whether to change their ProjectBuilderRequest or not).
So the system property seems to be a better solution than an explicit API to invoke for each consumer, basically because consumers cannot know whether to change the default behavior or not, it's up to the Plexus container ""owner"" (mvn CLI or m2e or ...) to decide that.;;;","06/Dec/18 11:49;githubbot;mickaelistria commented on issue #194: MNG-6530 - Test + System property to disable global model cache
URL: https://github.com/apache/maven/pull/194#issuecomment-444845898
 
 
   See last comment on https://issues.apache.org/jira/browse/MNG-6530 . This cannot be a per-request setting, it has to be a global setting that is configured before first call to ProjectBuilder, and having a global effect. An API doesn't seem to allow that and the system property seems best. I'll apply the comment from @michael-o and @kwin and squash the 2 commits (test + system property) in a single one.

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;;;","06/Dec/18 12:31;githubbot;mickaelistria commented on a change in pull request #194: MNG-6530 - Test + System property to disable global model cache
URL: https://github.com/apache/maven/pull/194#discussion_r239435286
 
 

 ##########
 File path: maven-core/src/main/java/org/apache/maven/project/DefaultProjectBuilder.java
 ##########
 @@ -355,7 +365,8 @@ private ModelSource createStubModelSource( Artifact artifact )
 
         ReactorModelPool modelPool = new ReactorModelPool();
 
-        InternalConfig config = new InternalConfig( request, modelPool );
+        InternalConfig config = new InternalConfig( request, modelPool,
+                useGlobalModelCache() ? getModelCache() : new ReactorModelCache() );
 
 Review comment:
   I think the change is right. See https://github.com/apache/maven/commit/8bc3c207d0aa7cef72171af23d9c4667b2d46c5d (which is the behavior I'd like to avoid when property is set). On lines 294 & 358, it was first `null` then `modelCache`; so I'm really restoring these values when cache is disabled.
   I'm not sure it's what's best, but at this point, I'd rather keep focus on fixing the issue rather than investigating more possible improvements.

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;;;","06/Dec/18 12:33;githubbot;mickaelistria commented on issue #194: MNG-6530 - Test + System property to disable global model cache
URL: https://github.com/apache/maven/pull/194#issuecomment-444856338
 
 
   PR updated.

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;;;","10/Dec/18 12:36;githubbot;michael-o commented on issue #194: MNG-6530 - Test + System property to disable global model cache
URL: https://github.com/apache/maven/pull/194#issuecomment-445800889
 
 
   This change looks OK to me now.

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;;;","08/Jan/19 20:29;michael-o;Fixed with [d9facde3bc6093d9f8bad2b315e6a619f191cc0e|https://gitbox.apache.org/repos/asf?p=maven.git;a=commit;h=d9facde3bc6093d9f8bad2b315e6a619f191cc0e].;;;","17/Aug/21 07:46;mickael.istria;I can see the related system property that was introduced to remove cache strategies (and allow pom files to mutate in the lifecycle of the ProjectBuilde) was removed in master/Maven 4, or maybe was it never added? What is the recommendation to disable any form of caching that expects file content is immutable? Or was Maven 4 cache fixed to properly invalidate content (but this wasn't reflected in MNG-7027).--

Note that without a way to disable or invalidate cache, Maven API becomes unusable for m2e and lemminx-maven Language Servers.;;;","17/Aug/21 08:08;rfscholte;IIRC [~gnodet] proposed to remove it. He works on the MavenDaemon, so should see where to cache and where not to cache.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"ProjectBuilder.build(List<File> projects, boolean, ProjectBuildingRequest) doesn't honor ProjectBuildingRequest.isResolveDependencies()",MNG-6529,13200874,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,rfscholte,mickael.istria,mickael.istria,27/Nov/18 14:52,28/Mar/20 15:03,03/Jan/22 13:13,26/Dec/18 10:51,3.5.3,,,,,3.6.1,,,Core,,,,,4,,,,"I'm willing to update Eclipse m2e to take advantage of the {{ProjectBuilder.build(List<File> project, boolean, ProjectBuildingRequest)}} to avoid duplication of MavenProject in the IDE caused by {{ProjectBuilder.build(File singleFile, ProjectBuildingRequest)}}.

It's already measured to have drastically good impact on the IDE, as explained in [https://bugs.eclipse.org/bugs/show_bug.cgi?id=515668#c20] and [https://bugs.eclipse.org/bugs/show_bug.cgi?id=515668#c38].

However, using this cause regressions because the multi-projects entry-point method seems to totally ignore the {{ProjectBuildRequest.isResolveDependencies()}} flag and never returns a valid list of {{MavenProject.getArtifacts()}}.",,"asfgit commented on pull request #193: MNG-6529 - ProjectBuild.build(projectsList, ...) ignores request.isResolveDependencies()
URL: https://github.com/apache/maven/pull/193
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Dec/18 10:48;githubbot;600",,,0,600,,,0,600,,,,,,,,,,,,,,,,,,MNG-6533,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|s00wxk:",9223372036854775807,,,,,,,,,,,,,,,,,,,"27/Nov/18 14:58;githubbot;mickaelistria opened a new pull request #193: MNG-6529 - JUnit Test showcasing the bug
URL: https://github.com/apache/maven/pull/193
 
 
   This adds a (failing) unit test showcasing that
   ProjectBuilder.build(List<File> projects, boolean, ProjectBuildingRequest)
   doesn't honor ProjectBuildingRequest.isResolveDependencies()
   
   Following this checklist to help us incorporate your 
   contribution quickly and easily:
   
    - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed 
          for the change (usually before you start working on it).  Trivial changes like typos do not 
          require a JIRA issue.  Your pull request should address just this issue, without 
          pulling in other changes.
    - [x] Each commit in the pull request should have a meaningful subject line and body.
    - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,
          where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice
          is to use the JIRA issue title in the pull request title and in the first line of the 
          commit message.
    - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.
    - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will 
          be performed on your pull request automatically.
    - [x] You have run the [Core IT][core-its] successfully.
   
   If your pull request is about ~20 lines of code you don't need to sign an
   [Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure
   please ask on the developers list.
   
   To make clear that you license your contribution under 
   the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)
   you have to acknowledge this by using the following check-box.
   
    - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)
   
    - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).
   
   [core-its]: https://maven.apache.org/core-its/core-it-suite/
   

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;;;","27/Nov/18 15:00;mickael.istria;https://github.com/apache/maven/pull/193 showcases the bug in a JUnit Test;;;","27/Nov/18 22:37;mickael.istria;Pull request https://github.com/apache/maven/pull/193 now contains something that looks like a fix.;;;","28/Nov/18 01:27;githubbot;slachiewicz commented on issue #193: MNG-6529 - ProjectBuild.build(projectsList, ...) ignores request.isResolveDependency()
URL: https://github.com/apache/maven/pull/193#issuecomment-442283024
 
 
   Build ok https://builds.apache.org/view/M-R/view/Maven/job/maven-box/job/maven/job/MNG-6529/

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;;;","29/Nov/18 10:11;githubbot;mickaelistria commented on issue #193: MNG-6529 - ProjectBuild.build(projectsList, ...) ignores request.isResolveDependency()
URL: https://github.com/apache/maven/pull/193#issuecomment-442778532
 
 
   @slachiewicz Is there anything else I should do to influence this to get in 3.6.1 (and even a 3.5.4 if possible)?

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;;;","09/Dec/18 16:48;githubbot;eolivelli commented on a change in pull request #193: MNG-6529 - ProjectBuild.build(projectsList, ...) ignores request.isResolveDependency()
URL: https://github.com/apache/maven/pull/193#discussion_r240044205
 
 

 ##########
 File path: maven-core/src/test/java/org/apache/maven/project/ProjectBuilderTest.java
 ##########
 @@ -84,4 +87,22 @@ public void testVersionlessManagedDependency()
             // this is expected
         }
     }
+
+    public void testResolveDependencies() throws Exception {
+        File pomFile = new File( ""src/test/resources/projects/basic-resolveDependencies.xml"" );
+        MavenSession mavenSession = createMavenSession( null );
+        ProjectBuildingRequest configuration = new DefaultProjectBuildingRequest();
+        configuration.setRepositorySession( mavenSession.getRepositorySession() );
+        configuration.setResolveDependencies(true);
 
 Review comment:
   Can we add a test in which this is false and assert that resolution actually does not happen ?

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;;;","09/Dec/18 16:48;githubbot;eolivelli commented on a change in pull request #193: MNG-6529 - ProjectBuild.build(projectsList, ...) ignores request.isResolveDependency()
URL: https://github.com/apache/maven/pull/193#discussion_r240044168
 
 

 ##########
 File path: maven-core/src/test/java/org/apache/maven/project/ProjectBuilderTest.java
 ##########
 @@ -30,7 +32,8 @@
 public class ProjectBuilderTest
     extends AbstractCoreMavenComponentTestCase
 {
-    protected String getProjectsDirectory()
+    @Override
+	protected String getProjectsDirectory()
 
 Review comment:
   Nit: remove spaces

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;;;","09/Dec/18 17:06;githubbot;mickaelistria commented on issue #193: MNG-6529 - ProjectBuild.build(projectsList, ...) ignores request.isResolveDependency()
URL: https://github.com/apache/maven/pull/193#issuecomment-445554138
 
 
   Do you prefer an extra commit or should I squash them all in a single one?

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;;;","09/Dec/18 17:15;githubbot;rfscholte commented on issue #193: MNG-6529 - ProjectBuild.build(projectsList, ...) ignores request.isResolveDependency()
URL: https://github.com/apache/maven/pull/193#issuecomment-445554821
 
 
   squash please

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;;;","09/Dec/18 17:18;githubbot;hboutemy commented on issue #193: MNG-6529 - ProjectBuild.build(projectsList, ...) ignores request.isResolveDependency()
URL: https://github.com/apache/maven/pull/193#issuecomment-445555063
 
 
   notice I updated the code in the branch
   and I liked the 2 commits: one for failing test then the fix...

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;;;","09/Dec/18 18:06;githubbot;mickaelistria commented on issue #193: MNG-6529 - ProjectBuild.build(projectsList, ...) ignores request.isResolveDependency()
URL: https://github.com/apache/maven/pull/193#issuecomment-445558505
 
 
   Squashed, whitespace issue fixed, extra test added for `request.isResolveDependency() == false`.

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;;;","26/Dec/18 10:51;hboutemy;PR merged: https://gitbox.apache.org/repos/asf?p=maven.git&a=commit&h=732e7de8938afdc0b0c6bfa7aa78f5595aa6721b
thank you;;;","26/Dec/18 11:21;hudson;Build succeeded in Jenkins: Maven TLP » maven » master #115

See https://builds.apache.org/job/maven-box/job/maven/job/master/115/;;;","03/Jan/19 23:18;hudson;Build failed in Jenkins: Maven TLP » maven » MNG-6522 #8

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6522/8/;;;","05/Jan/19 20:36;hudson;Build succeeded in Jenkins: Maven TLP » maven » MNG-5693 #7

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-5693/7/;;;","07/Jan/19 22:29;hudson;Build succeeded in Jenkins: Maven TLP » maven » MNG-6069v2 #5

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6069v2/5/;;;","09/Jan/19 23:31;hudson;Build failed in Jenkins: Maven TLP » maven » MNG-6069 #23

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6069/23/;;;","27/Jan/19 18:44;hudson;Build failed in Jenkins: Maven TLP » maven » MNG-6512-build-11 #9

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6512-build-11/9/;;;","03/Mar/19 12:22;hudson;Build succeeded in Jenkins: Maven TLP » maven » MNG-6294 #12

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6294/12/;;;","28/Mar/20 15:03;hudson;Build failed in Jenkins: Maven TLP » maven-studies » maven-metrics #4

See https://builds.apache.org/job/maven-box/job/maven-studies/job/maven-metrics/4/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
maven profile overwrites test resources,MNG-6508,13196939,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Not A Problem,,WeDin,WeDin,07/Nov/18 21:57,04/Feb/19 19:44,03/Jan/22 13:13,04/Feb/19 19:44,3.3.9,3.6.0,,,,,,,Profiles,,,,,0,,,,"I'm trying to make maven profiles which would use two difference DBMS. DBMS configs are stored in maven profiles. Web App gets settings from file connection.properties in src/main/resources. There is also a similar file with same title connection.properties in src/test/resources and this file should be uploaded only during test lyfecycle maven. Then spring core uses the DBMS connection settings specified in connection.properties.

I have problem with maven profile which overwrites resources such as src/test/resources/connection.properties on src/main/resources/connection.properties from test directory when test lifecycle maven is running.

{code:xml}
<profiles>
        <profile>
            <id>profile-postgres</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <database.driver_class_name>org.postgresql.Driver</database.driver_class_name>
                <database.url>jdbc:postgresql://127.0.0.1:5432/bulls_and_cows</database.url>
                <database.username>postgres</database.username>
                <database.password>postgres</database.password>

                <jpa.show_sql>true</jpa.show_sql>
                <jpa.generate_ddl>true</jpa.generate_ddl>
                <jpa.database>POSTGRESQL</jpa.database>
                <jpa.database_platform>org.hibernate.dialect.PostgreSQL95Dialect</jpa.database_platform>
                <jpa.hibernate.hbm2ddl.auto>validate</jpa.hibernate.hbm2ddl.auto>
                <jpa.hibernate.format_sql>false</jpa.hibernate.format_sql>

                <h2.scope>test</h2.scope>
            </properties>

            <dependencies>
                <!-- https://mvnrepository.com/artifact/org.postgresql/postgresql -->
                <dependency>
                    <groupId>org.postgresql</groupId>
                    <artifactId>postgresql</artifactId>
                    <version>42.2.1</version>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>profile-h2</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <database.driver_class_name>org.h2.Driver</database.driver_class_name>
                <database.url>jdbc:h2:mem:h2db;DB_CLOSE_DELAY=-1</database.url>
                <database.username>sa</database.username>
                <database.password>sa</database.password>

                <jpa.show_sql>true</jpa.show_sql>
                <jpa.generate_ddl>true</jpa.generate_ddl>
                <jpa.database>H2</jpa.database>
                <jpa.database_platform>org.hibernate.dialect.H2Dialect</jpa.database_platform>
                <jpa.hibernate.hbm2ddl.auto>create-drop</jpa.hibernate.hbm2ddl.auto>
                <jpa.hibernate.format_sql>false</jpa.hibernate.format_sql>

                <h2.scope>compile</h2.scope>
            </properties>
        </profile>
    </profiles>
{code}
This profile overwrites my connection.properties from src/test/resources on src/main/resources.

connection.properties from src/test/resources

{noformat}
database.driver_class_name=org.h2.Driver
database.url=jdbc:h2:mem:h2db;DB_CLOSE_DELAY=-1
database.username=sa
database.password=sa
{noformat}

connection.properties from src/main/resources


{noformat}
database.driver_class_name=${database.driver_class_name}
database.url=${database.url}
database.username=${database.username}
database.password=${database.password}
{noformat}

I wrote testResources tag in build tag of root pom file and in build tag of profile tag such as


{code:xml}
<testResources>
    <testResource>
        <directory>${project.basedir}/src/test/resources</directory>
        <filtering>true</filtering>
    </testResource>
</testResources>
{code}

But instead connection.properties from src/main/resources was always used in test lifecycle of maven.

My old failed build where I used profiles from https://travis-ci.org/WeDism/BullsAndCows/builds/449051809.

My repo with master branch https://github.com/WeDism/BullsAndCows/blob/master/pom.xml.

My repo with with_profiles_h2_postgres branch https://github.com/WeDism/BullsAndCows/blob/with_profiles_h2_postgres/pom.xml

Profile profile-postgres should be main such as activeByDefault = true

","Windows 8.1, Ubuntu 14.04, jdk1.8.0_191",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,https://stackoverflow.com/questions/53191980/maven-profile-overwrites-test-resources,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|s008so:",9223372036854775807,,,,,,,,,,,,,,,,,,,"04/Feb/19 19:43;khmarbaise;Based on the log and your configuration the build in Travis simply failed cause it's trying to use the postrgres driver which is working as expected cause the activeByDefault:true is set for the postgres profile. 
And the {{connection.properties}} is use from {{src/main/resources}} in cases where there is no other file like this on the classpath which is usually the case except someone places an other one on the classpath during the tests phase. But in this case the activeByDefault controls which driver is being used. Apart from the above this is not a bug it's intended behavour. Furthermore such question should be done on the users mailing list first. Apart from that I strongly recommend never to change/having dependencies controlled by profiles. If you need different things it would be better to create separated modules which have different dependencies.

So I will close this. If you have further details what the expected behaviour is etc. please reopen this issue or ask on the users mailing list. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
child.(x.y).inherit.append.path value should be inherited,MNG-6505,13196106,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,hboutemy,hboutemy,hboutemy,04/Nov/18 12:29,28/Mar/20 15:03,03/Jan/22 13:13,11/Nov/18 19:21,3.6.0,,,,,3.6.1,,,Inheritance and Interpolation,,,,,0,,,,"in Maven 3.6.0, values of child.inherit.append.path are not inherited: they have to be explicitely defined in every child pom of they switch to default ""true"" value

these values should be inherited: once defined in a parent pom, every child should inherit from the value (and of course be able to override)

Note: this seems to have been part of the MNG-6059 implementation that was done for Maven dropped 3.4.0 version but was forgotten during Maven 3.6.0 merge...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-5951,MNG-6059,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|s003o8:",9223372036854775807,,,,,,,,,,,,,,,,,,,"04/Nov/18 13:03;hudson;Build succeeded in Jenkins: Maven TLP » maven » MNG-6059 #2

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6059/2/;;;","11/Nov/18 19:03;hudson;Build succeeded in Jenkins: Maven TLP » maven » master #110

See https://builds.apache.org/job/maven-box/job/maven/job/master/110/;;;","11/Nov/18 19:21;hboutemy;done in https://gitbox.apache.org/repos/asf?p=maven.git&a=commit&h=f97316ceeca8d7e79c81f16e2de7447e81471304 and https://gitbox.apache.org/repos/asf?p=maven.git&a=commit&h=07bd5507ae88006b95565244d421aef652afd74e;;;","18/Nov/18 15:20;hudson;Build succeeded in Jenkins: Maven TLP » maven » MNG-5995 #3

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-5995/3/;;;","05/Jan/19 20:36;hudson;Build succeeded in Jenkins: Maven TLP » maven » MNG-5693 #7

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-5693/7/;;;","09/Jan/19 23:31;hudson;Build failed in Jenkins: Maven TLP » maven » MNG-6069 #23

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6069/23/;;;","28/Mar/20 15:03;hudson;Build failed in Jenkins: Maven TLP » maven-studies » maven-metrics #4

See https://builds.apache.org/job/maven-box/job/maven-studies/job/maven-metrics/4/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
parent pom relative path regression after 3.3.9,MNG-6503,13195697,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Duplicate,rfscholte,schor,schor,01/Nov/18 17:17,26/Nov/18 19:44,03/Jan/22 13:13,26/Nov/18 19:44,3.5.4,3.6.0,,,,,,,,,,,,0,,,,"Used to work in 3.3.9.  Failure to resolve parent-pom via relative-path in some cases.
  
 A trivial example, with the folder structure and the poms. You
 can see the failure by typing mvn help:effective-pom after cd'ing to the top
 project's folder.

Here's the folder structure:

{noformat}
 mvntst <- top folder
    parent  <- subfolder having parent pom
    subproj <- subfolder having a sub project

{noformat}

The 3 folders have a pom.xml:

in mvntst folder (the top level folder)
{code:xml}
<?xml version=""1.0"" encoding=""UTF-8""?>
 <project xmlns=""http://maven.apache.org/POM/4.0.0""
     xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
     xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0
 [http://maven.apache.org/xsd/maven-4.0.0.xsd]"">
     <modelVersion>4.0.0</modelVersion>
     <groupId>mvntst</groupId>
     <artifactId>top</artifactId>
     <packaging>pom</packaging>
     <parent>
         <groupId>mvntst</groupId>
         <artifactId>parent</artifactId>
         <version>1.0.0</version>
         <relativePath>parent/pom.xml</relativePath>   <!-- works, finds the
 parent -->
     </parent>
     <modules>
       <module>subproj</module>
     </modules>
 </project>
{code}
in parent subfolder:
{code:xml}
<?xml version=""1.0"" encoding=""UTF-8""?>
 <project xmlns=""http://maven.apache.org/POM/4.0.0""
     xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
     xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0
 [http://maven.apache.org/xsd/maven-4.0.0.xsd]"">
     <modelVersion>4.0.0</modelVersion>
     <groupId>mvntst</groupId>
     <artifactId>parent</artifactId>
     <version>1.0.0</version>
     <packaging>pom</packaging>
 </project>
{code}
in subproj subfolder:
{code:xml}
<?xml version=""1.0"" encoding=""UTF-8""?>
 <project xmlns=""http://maven.apache.org/POM/4.0.0""
     xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
     xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0
 [http://maven.apache.org/xsd/maven-4.0.0.xsd]"">
     <modelVersion>4.0.0</modelVersion>
     <groupId>mvntst</groupId>
     <artifactId>subproj</artifactId>
     <parent>
         <groupId>mvntst</groupId>
         <artifactId>parent</artifactId>
         <version>1.0.0</version>
         <relativePath>../parent/pom.xml</relativePath>  <!-- fails -->  
     </parent>
 </project>
{code}
In doing various tests: if the top pom is missing its relative-path, you get an
 expected
{noformat}Non-resolvable parent POM for mvntst:top:[unknown-version]: Failure to find
 mvntst:parent:pom:1.0.0 ...{noformat}

putting in the relative-path into the top fixes this, and results in finding the
 parent for the top level.
 If you don't have a <modules> section in the top level, the mvn
 {{help:effective-pom}} works OK.

Putting in the <modules> section gives the error:
 {noformat}Non-resolvable parent POM for mvntst:subproj:[unknown-version]: Failure to find
 mvntst:parent:pom:1.0.0{noformat}

Adding the <version> to the artifact IDs for the top and subproj doesn't help,
 except to change the error message to include the version instead of
 [unknown-version]","Windows 10, Java 8, fails with maven 3.5.4 and 3.6.0, works with 3.3.9",,,,,,,,,,,,,,,,,,,,,,,MNG-6261,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Nov/18 18:19;schor;mvntst.zip;https://issues.apache.org/jira/secure/attachment/12946586/mvntst.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|s0015k:",9223372036854775807,,,,,,,,,,,,,,,,,,,"01/Nov/18 17:30;rfscholte;Duplicate of MNG-6261?;;;","01/Nov/18 17:30;khmarbaise;Can you please create an example project and attach it to this issue or create one on github/gitlab etc. ;;;","01/Nov/18 18:20;schor;attached a zip file with the test setup;;;","26/Nov/18 19:35;schor;hit this again today.  would be nice if it were fixed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Order plugin execution changes depending on profile activation method,MNG-6498,13193935,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Not A Problem,,lucabotti,lucabotti,24/Oct/18 17:40,25/Oct/18 12:18,03/Jan/22 13:13,25/Oct/18 12:18,3.3.9,3.5.2,,,,,,,Profiles,,,,,0,,,,"In a project with parent child relationship (and spring boot maven plugin) I can observe that the order of execution of same phase plugins (boot maven plugin and spotify docker plugin, both of which activate in the package phase) is not preserved if profile is activated with the file exists.

 

As an example, the spring boot maven plugin left in the default build / pluginManagement section will not be activated if I add a profile like the following:

 
{noformat}
<profiles>
    <profile>
      <id>local-docker-image</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <file>
          <exists>${basedir}/src/main/docker/Dockerfile</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
           <groupId>com.spotify</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>${docker.maven.plugin.version}</version>
            <executions>
              <execution>
                <id>build-image</id>
                <phase>package</phase>
                <goals>
                  <goal>build</goal>
{noformat}
 The docker plugin will file trying to find the artifact jar (which gets renamed from the boot maven plugin, because the execution order is 

 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i3zljz:",9223372036854775807,,,,,,,,,,,,,,,,,,,"25/Oct/18 08:18;michael-o;As always: minimal sample project, please!;;;","25/Oct/18 08:43;lucabotti;Closing, since I understand the behaviour is different - all plugins are subsituted in a profile based activation.;;;","25/Oct/18 12:18;michael-o;Closing per request.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven shall not fail reporting circular dependency when the dependency is a classified secondary artifact,MNG-6490,13191084,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Done,slachiewicz,jfcanny,jfcanny,11/Oct/18 23:54,28/Mar/20 15:02,03/Jan/22 13:13,24/Oct/18 15:21,3.5.2,3.5.3,3.5.4,,,3.6.0,,,Dependencies,,,,,0,,,,"As of maven 3.5.2, 3.5.3, 3.5.4, the following pom fails with the error

""dependencies.dependency. Main:MainJar:1' for Main:MainJar:1 is referencing itself""

But the dependency is not circular, it references a classified jar (in our use cases its an architecture-dependent native code container jar). The pom below allows the main jar to be built without building the dependency every time (other lines conditionally build the dependency), and ensures the appropriate pre-built dependency is loaded. Behavior in maven 3.5.0 and earlier was correct (i.e. no error). This breaks several of the usage scenarios for classified artifacts...

 

{code:xml}<project xmlns=""http://maven.apache.org/POM/4.0.0""
         xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
         xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/xsd/maven-4.0.0.xsd"">
  <modelVersion>4.0.0</modelVersion>
  <groupId>Main</groupId>
  <artifactId>MainJar</artifactId>
  <packaging>jar</packaging>
  <version>1</version>
  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>${project.artifactId}</artifactId>
      <version>${project.version}</version>
      <classifier>linux</classifier>
    </dependency>
  </dependencies>
</project>{code}","Ubuntu 16.0.4 LTS, Ubuntu 18.0.4 LTS, Mac OS High Sierra, Oracle and OpenJDK 8, Oracle Java 11, ",,,,,,,,,,,,,,,,MNG-6541,,,,,,,,,MNG-6123,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i3z41z:",9223372036854775807,,,,,,,,,,,,,,,,,,,"18/Oct/18 23:43;githubbot;slachiewicz opened a new pull request #188: [MNG-6490] Maven fails reporting circular dependency when the depende…
URL: https://github.com/apache/maven/pull/188
 
 
   

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;;;","19/Oct/18 07:57;githubbot;michael-o commented on issue #188: [MNG-6490] Maven fails reporting circular dependency when the depende…
URL: https://github.com/apache/maven/pull/188#issuecomment-431278065
 
 
   The change looks good to me, but the issue title is misleading and does not reflect the issue. Shouldn't it be ""Maven shall not fail...""?

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;;;","19/Oct/18 07:57;michael-o;I'd even add this fix to 3.6.0.;;;","21/Oct/18 15:01;hudson;Build succeeded in Jenkins: Maven TLP » maven » MNG-6490 #3

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6490/3/;;;","21/Oct/18 22:57;hudson;Build succeeded in Jenkins: Maven TLP » maven » slach-pre-merge-master #4

See https://builds.apache.org/job/maven-box/job/maven/job/slach-pre-merge-master/4/;;;","24/Oct/18 15:21;githubbot;asfgit closed pull request #188: [MNG-6490] Maven fails reporting circular dependency when the depende…
URL: https://github.com/apache/maven/pull/188
 
 
   

This is a PR merged from a forked repository.
As GitHub hides the original diff on merge, it is displayed below for
the sake of provenance:

As this is a foreign pull request (from a fork), the diff is supplied
below (as it won't show otherwise due to GitHub magic):

diff --git a/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java b/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java
index 4018618f9b..1c84776784 100644
--- a/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java
+++ b/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java
@@ -546,21 +546,21 @@ private void validate20RawDependenciesSelfReferencing( ModelProblemCollector pro
                                                            List<Dependency> dependencies, String prefix,
                                                            ModelBuildingRequest request )
     {
-        // We only check for groupId/artifactId cause if there is another
-        // module with the same groupId/artifactId this will fail the build
+        // We only check for groupId/artifactId/version/classifier cause if there is another
+        // module with the same groupId/artifactId/version/classifier this will fail the build
         // earlier like ""Project '...' is duplicated in the reactor.
-        // So it is sufficient to check only groupId/artifactId and not the
+        // So it is sufficient to check only groupId/artifactId/version/classifier and not the
         // packaging type.
         for ( Dependency dependency : dependencies )
         {
-            String key = dependency.getGroupId() + "":"" + dependency.getArtifactId() + "":"" + dependency.getVersion();
+            String key = dependency.getGroupId() + "":"" + dependency.getArtifactId() + "":"" + dependency.getVersion()
+                    + ( dependency.getClassifier() != null ? "":"" + dependency.getClassifier() : """"  );
             String mKey = m.getGroupId() + "":"" + m.getArtifactId() + "":"" + m.getVersion();
             if ( key.equals( mKey ) )
             {
                 // This means a module which is build has a dependency which has the same
-                // groupId, artifactId and version coordinates. This is in consequence
-                // a self reference or in other words a circular reference which can not
-                // being resolved.
+                // groupId, artifactId, version and classifier coordinates. This is in consequence
+                // a self reference or in other words a circular reference which can not being resolved.
                 addViolation( problems, Severity.FATAL, Version.V31, prefix + "" "" + key, key, ""is referencing itself."",
                               dependency );
 
@@ -605,14 +605,14 @@ private void validateEffectiveDependencies( ModelProblemCollector problems, Mode
     private void validateEffectiveModelAgainstDependency( String prefix, ModelProblemCollector problems, Model m,
                                                           Dependency d, ModelBuildingRequest request )
     {
-        String key = d.getGroupId() + "":"" + d.getArtifactId() + "":"" + d.getVersion();
+        String key = d.getGroupId() + "":"" + d.getArtifactId() + "":"" + d.getVersion()
+                + ( d.getClassifier() != null ? "":"" + d.getClassifier() : """"  );
         String mKey = m.getGroupId() + "":"" + m.getArtifactId() + "":"" + m.getVersion();
         if ( key.equals( mKey ) )
         {
             // This means a module which is build has a dependency which has the same
-            // groupId, artifactId and version coordinates. This is in consequence
-            // a self reference or in other words a circular reference which can not
-            // being resolved.
+            // groupId, artifactId, version and classifier coordinates. This is in consequence
+            // a self reference or in other words a circular reference which can not being resolved.
             addViolation( problems, Severity.FATAL, Version.V31, prefix + "" "" + key, key, ""is referencing itself."", d );
 
         }
diff --git a/maven-model-builder/src/test/java/org/apache/maven/model/validation/DefaultModelValidatorTest.java b/maven-model-builder/src/test/java/org/apache/maven/model/validation/DefaultModelValidatorTest.java
index b02e0d90b3..3f31526e8f 100644
--- a/maven-model-builder/src/test/java/org/apache/maven/model/validation/DefaultModelValidatorTest.java
+++ b/maven-model-builder/src/test/java/org/apache/maven/model/validation/DefaultModelValidatorTest.java
@@ -729,6 +729,13 @@ public void testSelfReferencingDependencyInRawModel()
 
     }
 
+    public void testSelfReferencingDependencyWithClassifierInRawModel() throws Exception
+    {
+        SimpleProblemCollector result = validateRaw( ""raw-model/self-referencing-classifier.xml"" );
+
+        assertViolations( result, 0, 0, 0 );
+    }
+
     public void testCiFriendlySha1()
         throws Exception
     {
diff --git a/maven-model-builder/src/test/resources/poms/validation/raw-model/self-referencing-classifier.xml b/maven-model-builder/src/test/resources/poms/validation/raw-model/self-referencing-classifier.xml
new file mode 100644
index 0000000000..099e501a2c
--- /dev/null
+++ b/maven-model-builder/src/test/resources/poms/validation/raw-model/self-referencing-classifier.xml
@@ -0,0 +1,39 @@
+<!--
+Licensed to the Apache Software Foundation (ASF) under one
+or more contributor license agreements.  See the NOTICE file
+distributed with this work for additional information
+regarding copyright ownership.  The ASF licenses this file
+to you under the Apache License, Version 2.0 (the
+""License""); you may not use this file except in compliance
+with the License.  You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing,
+software distributed under the License is distributed on an
+""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+KIND, either express or implied.  See the License for the
+specific language governing permissions and limitations
+under the License.
+-->
+
+<project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
+         xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"">
+  <modelVersion>4.0.0</modelVersion>
+  <groupId>com.example.group</groupId>
+  <artifactId>testvalidpom</artifactId>
+  <version>0.0.1-SNAPSHOT</version>
+
+  <description>
+    This will test if the module validator recognized that this dependency with classifier
+    is not the same as the module itself.
+  </description>
+  <dependencies>
+    <dependency>
+      <groupId>com.example.group</groupId>
+      <artifactId>testvalidpom</artifactId>
+      <version>0.0.1-SNAPSHOT</version>
+      <classifier>linux</classifier>
+    </dependency>
+  </dependencies>
+</project>
\ No newline at end of file


 

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;;;","24/Oct/18 15:21;khmarbaise;Done in [e4b53d3f2c00e00d78129e20e177399a12d27847|https://gitbox.apache.org/repos/asf?p=maven.git;a=commitdiff;h=e4b53d3f2c00e00d78129e20e177399a12d27847];;;","24/Oct/18 15:54;hudson;Build succeeded in Jenkins: Maven TLP » maven » master #99

See https://builds.apache.org/job/maven-box/job/maven/job/master/99/;;;","08/Nov/18 19:33;hudson;Build failed in Jenkins: Maven TLP » maven » MNG-6012-Missing-Profile-At-End #16

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6012-Missing-Profile-At-End/16/;;;","05/Jan/19 20:36;hudson;Build succeeded in Jenkins: Maven TLP » maven » MNG-5693 #7

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-5693/7/;;;","09/Jan/19 23:31;hudson;Build failed in Jenkins: Maven TLP » maven » MNG-6069 #23

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-6069/23/;;;","28/Mar/20 15:02;hudson;Build failed in Jenkins: Maven TLP » maven-studies » maven-metrics #4

See https://builds.apache.org/job/maven-box/job/maven-studies/job/maven-metrics/4/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Exception in thread ""main"" java.lang.Error: java.lang.TypeNotPresentException: Type com.amazonaws.services.lambda.runtime.events.SQSEvent not present",MNG-6485,13188079,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Invalid,,akanksha.ak07@gmail.com,akanksha.ak07@gmail.com,28/Sep/18 06:34,28/Sep/18 08:40,03/Jan/22 13:13,28/Sep/18 08:40,,,,,,,,,,,,,,0,,,,"I have imported the following package in my project:

*import* com.amazonaws.services.lambda.runtime.events.SQSEvent; 
and included all the required dependencies in my pom.xml file. 

1) mvn clean - SUCCESSFUL
2) mvn package - BUILD SUCCESSFUL

Its is making the .jar file in my /\{project}/target/ folder. 

When I am uploading this .jar file on a aws lambda function and running it on lambda, it gives the following error:

*Exception in thread ""main"" java.lang.Error: java.lang.TypeNotPresentException: Type com.amazonaws.services.lambda.runtime.events.SQSEvent not present*


NOTE: Attaching my pom.xml file",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Sep/18 06:33;akanksha.ak07@gmail.com;pom.xml;https://issues.apache.org/jira/secure/attachment/12941644/pom.xml",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i3ylnb:",9223372036854775807,,,,,,,,,,,,,,,,,,,"28/Sep/18 08:40;michael-o;* This is not a support forum, use users@
* You did not copy all dependencies to satisfy the classpath;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven's default plugin download differs with OS ,MNG-6470,13182122,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Invalid,,HARIHARAN,HARIHARAN,30/Aug/18 13:06,30/Aug/18 22:51,03/Jan/22 13:13,30/Aug/18 22:51,,,,,,,,,Dependencies,,,,,0,maven,,,"we are working in a multi-module maven project in both Linux machine and Mac machine with the same pom.xml, and we ran the below command in offline mode on both the machines,

Command used: mvn *install* antrun:run *-o,*

when comparing the maven local repository we found that the plugins that are not mentioned in the pom.xml differ from Linux to Mac. we made a temporary fix by adding and specifying the version of plugins in the pom.xml, but these plugins are not required for our project.

The problem is we need a common repository for both the machines as our internal server architecture demands that. The machine details are in the note section.

is there any way to make could you explain why maven behaves like this?

Note:

+*Mac machine details:*+

*Maven version:*

_Apache Maven 3.5.0_

*Machine version:*

OS name: ""mac os x"", version: ""10.12.6"", arch: ""x86_64"", family: ""mac""

*java version:*

java version ""1.8.0_77""

 

+*Linux machine details:*+

*Maven version:*

Apache Maven 3.3.9

*Machine version:*

OS name: ""linux"" version: ""4.4.0-47-generic"", arch: ""amd64"" family: ""unix""

*java version*

java version ""1.8.0_171

 ","Linux,Mac",,,2462400,2462400,,0%,2462400,2462400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,https://stackoverflow.com/questions/52043627/linux-maven-vs-mac-maven?noredirect=1#comment91040347_52043627,,Important,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i3xl87:",9223372036854775807,,,,,,,,,,,,,,,,,,,"30/Aug/18 22:51;michael-o;This issue is invalid because your are testing two different JVM versions and two different + outdated Maven versions.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven not downloading jars behind proxy,MNG-6431,13167333,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Not A Problem,rfscholte,faizanmubasher,faizanmubasher,21/Jun/18 07:41,21/Jun/18 19:55,03/Jan/22 13:13,21/Jun/18 19:55,3.5.3,,,,,,,,Dependencies,POM,Settings,,,0,build,maven,,"Maven (3.5.3) is unable to download *jars* behind corporate proxy. 
h4. settings.xml
{code:java}
<settings xmlns=""http://maven.apache.org/SETTINGS/1.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd"">
 <proxies>
  <proxy>
 <id>skm--http-proxy</id>
 <active>true</active>
  <protocol>http</protocol>
 <host>my.proxy.ip.here</host>
  <port>8080</port>
 <username>faizanmubasher</username>
  <password>*****</password>
 </proxy>
 <proxy>
<id>skm--https-proxy</id>
 <active>true</active>
 <protocol>https</protocol>
 <host>my.proxy.ip.here</host>
 <port>8080</port>
 {<username>faizanmubasher</username>
 <password>*****</password>
 </proxy>
 </proxies>
 </settings>
{code}
{{Also tried this command:}}
{code:java}
set MAVEN_OPTS=""-DhttpProxyHost=xxx.xx.xx.xx -DsocksProxyPort=8080""{code}
{{After that, running }}
{code:java}
mvn clean install -U{code}
{{ results *Not authorized by proxy , ReasonPhrase:Proxy Authorization Required*. However, it does download other files (like javadocs etc) except jars, an actual library.}}

{{The other Stackoverflow links:}}

{{[https://stackoverflow.com/questions/50943317/maven-not-downloading-jars-behind-proxy|http://example.com/]}}

[https://stackoverflow.com/questions/10033286/maven-proxy-settings-not-working] 

 
{quote}Failure to transfer org.apache.maven:maven-archiver:pom:3.1.1 from https://repo.maven.apache.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced. Original error: Could not transfer artifact org.apache.maven:maven-archiver:pom:3.1.1 from/to central (https://repo.maven.apache.org/maven2): Malformed reply from SOCKS server
{quote}",Windows 10 (Behind Corporate Proxy),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i3v2wn:",9223372036854775807,,,,,,,,,,,,,,,,,,,"21/Jun/18 17:52;rfscholte;What happens if you set active to false for skm--http-proxy (so only the https is active?);;;","21/Jun/18 19:27;michael-o;debug log please;;;","21/Jun/18 19:33;faizanmubasher;Issue has been fixed as my IT guy added me to white list in proxy and everything started working. Please close the issue. Thanks;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Integration Test site publishing requires Java 7 (or javadoc errors ignored),MNG-6429,13166618,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,slachiewicz,stephenc,stephenc,17/Jun/18 23:18,03/Jan/19 23:54,03/Jan/22 13:13,03/Jan/19 23:53,3.5.4,,,,,3.6.1,,,,,,,,0,,,,"{code:java}
[INFO] 
7 errors
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO] 
[INFO] Maven Core ITs 2.1-SNAPSHOT ........................ SUCCESS [ 38.586 s]
[INFO] Maven IT Support ................................... SUCCESS [ 2.726 s]
[INFO] Maven IT :: Plugins ................................ SUCCESS [ 2.693 s]
[INFO] Maven IT Plugin :: Active Collection ............... FAILURE [ 15.162 s]
[INFO] Maven IT Plugin :: Ant-Based ....................... SKIPPED
[INFO] Maven IT Plugin :: Artifact ........................ SKIPPED
[INFO] Maven IT Plugin :: Class Loader :: Dependency A .... SKIPPED
[INFO] Maven IT Plugin :: Class Loader :: Dependency B .... SKIPPED
[INFO] Maven IT Plugin :: Class Loader :: Dependency C .... SKIPPED
[INFO] Maven IT Plugin :: Class Loader .................... SKIPPED
[INFO] Maven IT Plugin :: Class Loader :: Aggregator ...... SKIPPED
[INFO] Maven IT Plugin :: Configuration ................... SKIPPED
[INFO] Maven IT Plugin :: Context Passing ................. SKIPPED
[INFO] Maven ITs :: Core Plugin Stubs ..................... SKIPPED
[INFO] Maven IT Clean Plugin Stub 0.1-stub-SNAPSHOT ....... SKIPPED
[INFO] Maven IT Compiler Plugin Stub 0.1-stub-SNAPSHOT .... SKIPPED
[INFO] Maven IT Deploy Plugin Stub 0.1-stub-SNAPSHOT ...... SKIPPED
[INFO] Maven IT EAR Plugin Stub 0.1-stub-SNAPSHOT ......... SKIPPED
[INFO] Maven IT EJB Plugin Stub 0.1-stub-SNAPSHOT ......... SKIPPED
[INFO] Maven IT Install Plugin Stub 0.1-stub-SNAPSHOT ..... SKIPPED
[INFO] Maven IT JAR Plugin Stub 0.1-stub-SNAPSHOT ......... SKIPPED
[INFO] Maven IT Javadoc Plugin Stub 0.1-stub-SNAPSHOT ..... SKIPPED
[INFO] Maven IT Plugin Plugin Stub 0.1-stub-SNAPSHOT ...... SKIPPED
[INFO] Maven IT RAR Plugin Stub 0.1-stub-SNAPSHOT ......... SKIPPED
[INFO] Maven IT Resources Plugin Stub 0.1-stub-SNAPSHOT ... SKIPPED
[INFO] Maven IT Site Plugin Stub 0.1-stub-SNAPSHOT ........ SKIPPED
[INFO] Maven IT Source Plugin Stub 0.1-stub-SNAPSHOT ...... SKIPPED
[INFO] Maven IT Surefire Plugin Stub 0.1-stub-SNAPSHOT .... SKIPPED
[INFO] Maven IT WAR Plugin Stub 0.1-stub-SNAPSHOT ......... SKIPPED
[INFO] Maven IT Plugin :: Dependency Collection ........... SKIPPED
[INFO] Maven IT Plugin :: Dependency Resolution ........... SKIPPED
[INFO] Maven IT Plugin :: Expression ...................... SKIPPED
[INFO] Maven IT Plugin :: Error Mojos ..................... SKIPPED
[INFO] Maven IT Component ................................. SKIPPED
[INFO] Maven IT Plugin :: Extension Consumer .............. SKIPPED
[INFO] Maven IT Plugin :: Extension Provider .............. SKIPPED
[INFO] Maven IT Plugin :: Fork ............................ SKIPPED
[INFO] Maven IT Plugin :: Invalid Descriptor .............. SKIPPED
[INFO] Maven IT Plugin :: Log File ........................ SKIPPED
[INFO] Maven IT Helper Library ............................ SKIPPED
[INFO] Maven IT Plugin :: Model Interpolation ............. SKIPPED
[INFO] Maven IT Plugin :: No Default Component ............ SKIPPED
[INFO] Maven IT Plugin :: No Project ...................... SKIPPED
[INFO] Maven IT Plugin :: Online .......................... SKIPPED
[INFO] Maven IT Plugin :: Optional Mojos .................. SKIPPED
[INFO] Maven IT Plugin :: Packaging ....................... SKIPPED
[INFO] Maven IT Plugin :: Parameter Implementation ........ SKIPPED
[INFO] Maven IT Plugin :: Plugin Dependency ............... SKIPPED
[INFO] Maven IT Plugin :: Project ......................... SKIPPED
[INFO] Maven IT Plugin :: Project Interpolation ........... SKIPPED
[INFO] Maven IT Plugin :: Setter .......................... SKIPPED
[INFO] Maven IT Plugin :: Singleton Component ............. SKIPPED
[INFO] Maven IT Plugin :: Site ............................ SKIPPED
[INFO] Maven IT Plugin :: Toolchain ....................... SKIPPED
[INFO] Maven IT Plugin :: Touch ........................... SKIPPED
[INFO] Maven IT Plugin :: Uses Properties Plugin .......... SKIPPED
[INFO] Maven IT Plugin :: Uses Wagon Plugin ............... SKIPPED
[INFO] Maven IT Plugin :: This plugin should contain the mojos needed by all tests. SKIPPED
[INFO] Maven IT Plugin :: Plexus Utils 1.1 ................ SKIPPED
[INFO] Maven IT Plugin :: Plexus Utils New ................ SKIPPED
[INFO] Maven IT Plugin :: Plexus Component API ............ SKIPPED
[INFO] Maven IT Plugin :: Log4J Client .................... SKIPPED
[INFO] Maven IT Plugin :: Extension 1 ..................... SKIPPED
[INFO] Maven IT Plugin :: Extension 2 ..................... SKIPPED
[INFO] Maven IT Plugin :: Plexus Lifecycle ................ SKIPPED
[INFO] Maven IT Plugin :: Settings ........................ SKIPPED
[INFO] Maven IT Plugin :: mng-5805 extension .............. SKIPPED
[INFO] Maven IT Plugin :: mng-5805 extension mk2 .......... SKIPPED
[INFO] Maven IT Plugin :: mng-5805 plugin ................. SKIPPED
[INFO] Maven IT Plugin :: mng-5805 plugin-dep ............. SKIPPED
[INFO] Maven IT Plugin :: mng-5958 extension .............. SKIPPED
[INFO] Maven IT Toolchain ................................. SKIPPED
[INFO] Maven IT Wagon ..................................... SKIPPED
[INFO] Maven IT Support Artifacts ......................... SKIPPED
[INFO] Maven IT Extension ................................. SKIPPED
[INFO] Maven ITs 2.1-SNAPSHOT ............................. SKIPPED
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 01:00 min
[INFO] Finished at: 2018-06-18T00:15:10+01:00
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-site-plugin:3.7:site (default-site) on project maven-it-plugin-active-collection: Error generating maven-javadoc-plugin:3.0.0:javadoc report: 
[ERROR] Exit code: 1 - /Users/stephenc/apache/maven-integration-testing/core-it-support/core-it-plugins/maven-it-plugin-active-collection/src/main/java/org/apache/maven/plugin/coreit/CheckMojo.java:38: error: unknown tag: goal
[ERROR] * @goal check
[ERROR] ^
[ERROR] /Users/stephenc/apache/maven-integration-testing/core-it-support/core-it-plugins/maven-it-plugin-active-collection/src/main/java/org/apache/maven/plugin/coreit/CheckMojo.java:39: error: unknown tag: phase
[ERROR] * @phase validate
[ERROR] ^
[ERROR] /Users/stephenc/apache/maven-integration-testing/core-it-support/core-it-plugins/maven-it-plugin-active-collection/src/main/java/org/apache/maven/plugin/coreit/CheckThreadSafetyMojo.java:77: error: reference not found
[ERROR] * @throws MojoFailureException If the output file could not be created.
[ERROR] ^
[ERROR] /Users/stephenc/apache/maven-integration-testing/core-it-support/core-it-plugins/maven-it-plugin-active-collection/src/main/java/org/apache/maven/plugin/coreit/CheckThreadSafetyMojo.java:38: error: unknown tag: goal
[ERROR] * @goal check-thread-safety
[ERROR] ^
[ERROR] /Users/stephenc/apache/maven-integration-testing/core-it-support/core-it-plugins/maven-it-plugin-active-collection/src/main/java/org/apache/maven/plugin/coreit/CheckThreadSafetyMojo.java:39: error: unknown tag: phase
[ERROR] * @phase validate
[ERROR] ^
[ERROR] /Users/stephenc/apache/maven-integration-testing/core-it-support/core-it-plugins/maven-it-plugin-active-collection/src/main/java/org/apache/maven/plugin/coreit/DumpRepoLayoutsMojo.java:38: error: unknown tag: goal
[ERROR] * @goal dump-repo-layouts
[ERROR] ^
[ERROR] /Users/stephenc/apache/maven-integration-testing/core-it-support/core-it-plugins/maven-it-plugin-active-collection/src/main/java/org/apache/maven/plugin/coreit/DumpRepoLayoutsMojo.java:39: error: unknown tag: phase
[ERROR] * @phase validate
[ERROR] ^
[ERROR] 
[ERROR] Command line was: /Library/Java/JavaVirtualMachines/jdk1.8.0_152.jdk/Contents/Home/jre/../bin/javadoc @options @packages
[ERROR] 
[ERROR] Refer to the generated Javadoc files in '/Users/stephenc/apache/maven-integration-testing/core-it-support/core-it-plugins/maven-it-plugin-active-collection/target/site/apidocs' dir.
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
[ERROR] 
[ERROR] After correcting the problems, you can resume the build with the command
[ERROR] mvn <goals> -rf :maven-it-plugin-active-collection
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-6513,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i3uyhr:",9223372036854775807,,,,,,,,,,,,,,,,,,,"19/Jun/18 12:32;michael-o;This issue persists across the entire codebase.;;;","19/Jun/18 19:08;rfscholte;Would be nice if we could improve the {{.JenkinsFile}} to run site once too;;;","23/Jun/18 17:58;rfscholte;Now seeing this is on the integration tests only. Do we really want to publish this? What's the real benefit of it? Why not drop it?;;;","20/Oct/18 19:35;slachiewicz;This will require changes in ITs to remove Plexus Javadoc tags. Can we move this issue to next fix version 3.6.x? ;;;","12/Nov/18 19:07;slachiewicz;With the fix for MNG-6513 I can run locally site generation with Java 11;;;","03/Jan/19 23:54;slachiewicz;ITs site generation with Java 11 should work now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Parallel builds with empty local repository hang,MNG-6418,13162821,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Duplicate,rfscholte,stefan.mueller@zkb.ch,stefan.mueller@zkb.ch,30/May/18 07:55,30/May/18 17:18,03/Jan/22 13:13,30/May/18 17:18,3.5.2,,,,,,,,,,,,,0,,,,"Parallel builds of multi-module Projects using multiple threads (like mvn -T 5 clean install) usually run fine if most or all dependencies already exist in the local Maven repository.

If the local Maven repository is *empty*, such builds will sporadically hang. The hang seems at random points but always related to downloading or uploading artifacts from/to a central repo (in our case a company-wide Nexus Repository Manager).

Using Maven *3.2.5* there are no such issues!

Parallel builds with an empty repository are especially important for the CI builds on Jenkins, as Jenkins uses a fresh new job-local repository for each build. This leads to most Jenkins build hang after upgrading from Maven 3.2.5 to 3.5.2.

See the attached thread-dump while hanging (seems to be related to org.eclipse.aether.connector.basic.PartialFile$LockFile)

 ","Build on Windows or Linux (happens on both environments)
Java 1.8.0_161
Company central Maven repo is Nexus Repository Manager",,,,,,,,,,,,,,,,,,,,,,,MNG-6323,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/May/18 07:55;stefan.mueller@zkb.ch;maven-3.5.2-hang-dump.txt;https://issues.apache.org/jira/secure/attachment/12925697/maven-3.5.2-hang-dump.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i3uatb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exceeding project discovery time when using CI friendly versions,MNG-6412,13159771,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,slachiewicz,chamshoff,chamshoff,16/May/18 16:08,10/Jun/19 18:35,03/Jan/22 13:13,29/Oct/18 07:05,3.5.3,,,,,3.6.0,,,,,,,,2,,,,"We are switching a larger project to CI friendly versions ([https://maven.apache.org/maven-ci-friendly.html]), using properties _${revision}_ (fix) and _${changelist}_ (maps to the CI build number) to create the actual version. However, doing so, the project discovery time (right after Maven says “Scanning for projects...”) increases dramatically from few seconds to more than 3 minutes, and we had to double the maximum heap in order to avoid “GC overhead limit exceeded” exception.

The project root POM looks like this:
{noformat}
  <groupId>test</groupId>
  <artifactId>parent</artifactId>
  <version>${revision}-${changelist}</version>
  <packaging>pom</packaging>
  ...
  <properties>
    <revision>1.0.0</revision>
    <changelist>UNDEFINED</changelist>
  </properties> {noformat}
and is built by passing “-Dchangelist=123” to the Maven process for CI build 123, for instance.

In debug output, we can see that for each POM of the reactor there are messages like these, repeatedly for every single parent POM up the complete hierarchy:
{noformat}
[DEBUG] Extension realms for project test:grandchild1-1:jar:1.0.0-123: (none)
[DEBUG] Looking up lifecycle mappings for packaging jar from ClassRealm[plexus.core, parent: null]
[DEBUG] Extension realms for project test:child1:pom:1.0.0-123: (none)
[DEBUG] Looking up lifecycle mappings for packaging pom from ClassRealm[plexus.core, parent: null]
[DEBUG] Extension realms for project test:parent:pom:1.0.0-123: (none)
[DEBUG] Looking up lifecycle mappings for packaging pom from ClassRealm[plexus.core, parent: null]
{noformat}
When using fix version string (release or SNAPSHOT), these messages are only present for the reactor POMs, but not their parents, grand-parents, etc. up to the root POM.

Looking up the lifecycle mapping for the same parent POMs over and over again seems wrong to me, and is probably the cause of high memory consumption. Altogether, there are more than 2,800 messages ""Looking up lifecycle mappings..."" in the logs for about 350 subprojects built in the reactor!

See attached test projects and logs for fix version vs. CI friendly versions. The test project structure is like this:
{noformat}
parent
  child1
    grandchild1-1
    grandchild1-2
  child2
    grandchild2-1
    grandchild2-2{noformat}
If you compare both log files, you'll see the difference in project resolving.",,,,,,,,,,,,,,,,,,,,,,,,,,MNG-6311,,,,,MNG-6383,,,,,,,,,,,,,,,,,,,,,,,"16/May/18 16:12;chamshoff;ci-version-validate.log;https://issues.apache.org/jira/secure/attachment/12923721/ci-version-validate.log","16/May/18 16:12;chamshoff;fix-version-validate.log;https://issues.apache.org/jira/secure/attachment/12923722/fix-version-validate.log","16/May/18 16:08;chamshoff;test-ci-project-scanning.zip;https://issues.apache.org/jira/secure/attachment/12923717/test-ci-project-scanning.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i3tsfr:",9223372036854775807,,,,,,,,,,,,,,,,,,,"03/Jun/18 14:01;khmarbaise;Do those projects have many dependencies or dependencyManagement blocks or dependencies between modules?;;;","04/Jun/18 15:51;chamshoff;Yes, it's a complex project with 350+ POM files and lots of dependencies, also between modules (no cycles, though). We're using both managed and unmanaged dependencies. Still, this was never a problem regarding project discovery time, until switching to versions using those properties.;;;","31/Jul/18 20:20;khmarbaise;Hi [~chamshoff] do you have a chance to test a SNAPSHOT build of Maven 3.6.0 ?;;;","14/Sep/18 17:58;slachiewicz;Thanks for the sample projects. They helped a lot.
I think we've fixed the caching problem in MNG-6311, these sample designs build in a few seconds. I have not noticed any problems with memory so far, but if you can check build based on the 3.6.0-SNAPSHOT version from master I will be grateful.
;;;","28/Oct/18 20:55;dantran;oh mine!! this is fixed on my 300+ maven modules project using maven 3.6.  Thank you!!!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
can not work with a system dependency on a unix / mac / windows project,MNG-6400,13154878,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Incomplete,,sekaijin,sekaijin,24/Apr/18 17:44,30/Sep/18 14:46,03/Jan/22 13:13,30/Sep/18 14:46,3.5.3,,,,,,,,Dependencies,,,,,0,,,,"the sapjco3.jar and sapIdoc3.jar jars can not be renamed.
to work with you have to use an addiction system

however, a unix / windows project can not have an identical absolute path on both systems.

in previous versions of maven you can set properties in .m2 / settings.xml <sapidoc3> and <spajco3> and use <scope> system </ scope>
<SystemPath> $ \{sapidoc3} </ systemPath>

a warnning will be displayed.
on version 3.5.3 it is an error.

But that's not all because even putting the system dependency with an absolute path the jar is not found with the correct name

<dependency>
 <groupId>de.sap</groupId>
 <artifactId>sapjco3</artifactId>
 <version>3.0.0</version>
 <scope>system</scope>
 <systemPath>D:/project-ati/libs/libsap/sapjco3.jar</systemPath>
 </dependency>

JCO3 code


 protected boolean registerNativeMethods(Class<?> clazz){
 if(!initializedDLL){
 try{
 JCoRuntime.nativeLibraryPath = loadLibrary(""sapjco3"");
 initializedDLL = true;
 }catch(UnsatisfiedLinkError arg2){
 JCoRuntime.nativeLibraryPath = ""not loaded, caused by "" + arg2.toString();
 arg2.printStackTrace();
 throw arg2;
 }
 }

return true;
 }

java.lang.UnsatisfiedLinkError: no sapjco3 in java.library.path
 at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1865)
 at java.lang.Runtime.loadLibrary0(Runtime.java:870)
 at java.lang.System.loadLibrary(System.java:1122)
 at com.sap.conn.jco.rt.DefaultJCoRuntime.loadLibrary(DefaultJCoRuntime.java:444)

 

The first sap-schema-plugin is a project with sap dependencies defined by an absolute path or property. it compiles well.

the second project use this plugin. 
if the plugin project is compiled whith properties
=> error absolute pah is ${sapjco3}
if the plugin project is compiled with absolute path
=> java.lang.UnsatisfiedLinkError: no sapjco3 in java.library.path

 

the same project without change with maven 3.3.9 works perfectly

 

 ",Windows 07,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i3sytb:",9223372036854775807,,,,,,,,,,,,,,,,,,,"30/Apr/18 14:16;michael-o;There are two issues here, please don't mix them. The first issue is that some idiot at SAP decided to go against the entire ecosystem. It takes a serious amount of work to comply with the JAR name. We suffer from the same. I'd fire that idiot. For the second issue: the native library is not properly registered, but this something we cannot fix. You need to populate java.library.path. Also consider that the native lib is loaded from inside the JCo JAR and not from your client code. Thus entire SAP crap is not portable. 

The entire system scope will be removed because it is not portable;;;","20/Jun/18 21:20;nhoj.patrick;Could you setup a unix and also a windows profile within either the settings.xml or pom.xml, that activate upon that os.

Then within that os specific profile they define properties for the systemPath value.

Then in the systemPath section it uses the variable defined from the profile.

 

I had to do something similar when trying to get jitwatch working on java 7, 8, 9 and 10, because javafx and specifically due to jfxrt.jar

For reference see the pom https://github.com/AdoptOpenJDK/jitwatch/blob/master/pom.xml;;;","23/Jun/18 12:25;sekaijin;No this is the problem :
with profile in .m2/settings.xml I've properties defined for each JCO jar with the value of systemPath depending on OS.

In some project that use JCO, I've a dépencencie with <SystemPath>${sapidoc3}</systemPath>

<SystemPath>${sapijco3}</systemPath>

In this configuration it work with maven 3.3.9 but not with maven 3.5.3
=> error absolute path is ${sapjco3}

 ;;;","28/Jun/18 20:23;michael-o;[~sekaijin], the DLL loading is not related to the system path. Please exactly define your issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[regression] Parents relativePath not verified anymore,MNG-6330,13127223,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,rfscholte,rfscholte,rfscholte,26/Dec/17 15:39,28/Mar/20 15:01,03/Jan/22 13:13,29/Dec/17 09:50,3.5.0,3.5.2,,,,3.5.3,,,Bootstrap & Build,Inheritance and Interpolation,Reactor and Workspace,,,0,,,,"Since Maven 3.0 the relative path of a parent was always verified, an invalid value or missing caches parent made the project fail.
This stopped after 3.5.0, and after a bisect I discovered the behavior changed with:

{noformat}
cfb075ac706b25df630f3671f61f8d8313e0f138 is the first bad commit
commit cfb075ac706b25df630f3671f61f8d8313e0f138
Author: Karl Heinz Marbaise <khmarbaise@apache.org>
Date:   Tue May 31 21:39:31 2016 +0200

[MNG-6030] ReactorModelCache do not used effectively after maven version 3.0.5 which cause a large memory footprint
o Reintroduced ReactorModelCache reduces the memory footprint.
{noformat}

It looks like the caching introduced an unwanted behavior of Maven. We must decide if we want the relative path to be strict again.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-6030,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i3oaif:",9223372036854775807,,,,,,,,,,,,,,,,,,,"29/Dec/17 09:50;rfscholte;Fixed in [df5169bdf9fead590d48e23fb182d7f73f1deb3d|http://git-wip-us.apache.org/repos/asf/maven/commit/df5169bd]
Corresponding IT in [1797b9ec156cffbb1bd17e731afea5850bbde1a6|http://git-wip-us.apache.org/repos/asf/maven-integration-testing/commit/1797b9ec];;;","29/Dec/17 10:00;hudson;Build succeeded in Jenkins: Maven TLP (wip) » maven » master #21

See https://builds.apache.org/job/maven-wip/job/maven/job/master/21/;;;","29/Dec/17 10:10;hudson;Build succeeded in Jenkins: maven-3.x-jenkinsfile » master #150

See https://builds.apache.org/job/maven-3.x-jenkinsfile/job/master/150/;;;","30/Dec/17 14:34;hudson;Build unstable in Jenkins: Maven TLP (wip) » maven » MNG-6305-validation-of-ci-friendly #3

See https://builds.apache.org/job/maven-wip/job/maven/job/MNG-6305-validation-of-ci-friendly/3/;;;","30/Dec/17 14:43;hudson;Build unstable in Jenkins: maven-3.x-jenkinsfile » MNG-6305-validation-of-ci-friendly #3

See https://builds.apache.org/job/maven-3.x-jenkinsfile/job/MNG-6305-validation-of-ci-friendly/3/;;;","30/Dec/17 15:04;hudson;Build succeeded in Jenkins: Maven TLP (wip) » maven » MNG-6305-validation-of-ci-friendly #4

See https://builds.apache.org/job/maven-wip/job/maven/job/MNG-6305-validation-of-ci-friendly/4/;;;","30/Dec/17 15:08;hudson;Build unstable in Jenkins: Maven TLP (wip) » maven » MNG-6308_display_packaging #13

See https://builds.apache.org/job/maven-wip/job/maven/job/MNG-6308_display_packaging/13/;;;","30/Dec/17 15:13;hudson;Build succeeded in Jenkins: maven-3.x-jenkinsfile » MNG-6305-validation-of-ci-friendly #4

See https://builds.apache.org/job/maven-3.x-jenkinsfile/job/MNG-6305-validation-of-ci-friendly/4/;;;","06/Jan/18 21:34;hudson;Build succeeded in Jenkins: maven-3.x-jenkinsfile » MNG-6308_display_packaging #11

See https://builds.apache.org/job/maven-3.x-jenkinsfile/job/MNG-6308_display_packaging/11/;;;","06/Jan/18 21:39;hudson;Build succeeded in Jenkins: Maven TLP (wip) » maven » MNG-6308_display_packaging #14

See https://builds.apache.org/job/maven-wip/job/maven/job/MNG-6308_display_packaging/14/;;;","17/Feb/18 20:54;hudson;Build succeeded in Jenkins: Maven TLP (wip) » maven » MNG-5868 #3

See https://builds.apache.org/job/maven-wip/job/maven/job/MNG-5868/3/;;;","28/Mar/20 15:01;hudson;Build failed in Jenkins: Maven TLP » maven-studies » maven-metrics #4

See https://builds.apache.org/job/maven-box/job/maven-studies/job/maven-metrics/4/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Multi module release creates empty directories in war file instead of jars,MNG-6300,13116132,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,rfscholte,akurth,akurth,04/Nov/17 08:50,28/Mar/20 15:01,03/Jan/22 13:13,22/Dec/17 13:29,3.5.2,,,,,3.5.3,,,,,,,,0,,,,"After updating to maven 3.5.2 we encounter the following reproducible bug with multi module builds.

If one of the modules is a war module and depends on another module, the dependency module will not be included as a jar file in WEB-INF/lib of the war file, but as an empty directory instead. Non module dependencies will be included correctly.

This bug does occur when the following conditions are met:

- running release:prepare/release:perform
- <distributionManagement><site> element is present, so that release goals are ""deploy site-deploy""
- <reporting> element contains javadoc-maven-plugin

Please note that when running ""mvn install"" or ""mvn deploy"" the resulting war file is ok, while ""mvn release:perform"" creates corrupt files as described. Also, if javadoc-maven-plugin is not present in <reporting> block, the war file is fine, too.

I have no idea whether this bug is maven core or rather release-plugin or even javadoc-plugin related, so I file it here. I prepared a minimal self contained example and attach it as mm.zip. To run the example, the following steps are needed:

{code}
cd /tmp
unzip /path/to/mm.zip
cd mm
git init
git add pom.xml mm-lib mm-war .gitignore
git commit
mvn release:prepare
mvn release:perform
{code}

After building the resulting corrupt war file can be found here:
repo/com/example/mm/mm-war/1.0.0/mm-war-1.0.0.war","Linux, Oracle java 1.8.0_152",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-6025,,,,,,,,,,,,,,,,,,,,,,,"04/Nov/17 08:47;akurth;build.log;https://issues.apache.org/jira/secure/attachment/12896043/build.log","07/Dec/17 10:04;akurth;mm.zip;https://issues.apache.org/jira/secure/attachment/12901035/mm.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i3medb:",9223372036854775807,,,,,,,,,,,,,,,,,,,"07/Dec/17 10:06;akurth;maven-javadoc-plugin:3.0.0

Problem still exists.;;;","07/Dec/17 20:03;rfscholte;Confirmed. It is enough to run {{mvn verify site}} to reproduce and to have a look at {{mm-war/target/mm-war-1.0.0-SNAPSHOT/WEB-INF/lib}}
;;;","08/Dec/17 21:46;rfscholte;It was kind of tricky to discover the issue, because it looks like any plugin interaction might already change the result.

But this seems to be the root cause:
{noformat}
be223808939d75152d7157db33d45f230114555e is the first bad commit
commit be223808939d75152d7157db33d45f230114555e
Author: Anton Tanasenko <atg.sleepless@gmail.com>
Date:   Wed May 18 18:40:28 2016 +0300

Add a ProjectArtifactsCache similar to PluginArtifactsCache

Signed-off-by: Jason van Zyl <jason@vanzyl.ca>
{noformat}

Must be fixed with the next release.;;;","21/Dec/17 22:59;rfscholte;https://github.com/apache/maven/compare/MNG-6300_ProjectArtifactsCache-bug contains my fix. Can you give confirm the fix? (Clone, build Maven yourself and use that SNAPSHOT to run your project);;;","22/Dec/17 09:47;akurth;Thanks Robert,

fix confirmed. I released one of our large company projects successfully.

Happily awaiting maven-3.5.3 now.;;;","22/Dec/17 13:29;rfscholte;Fixed in [98af937bc6298e82e489b5f0cd3fb0a1c3d37109|http://git-wip-us.apache.org/repos/asf/maven/commit/98af937b];;;","22/Dec/17 13:35;hudson;SUCCESS: Integrated in Jenkins build maven-3.x #1683 (See [https://builds.apache.org/job/maven-3.x/1683/])
[MNG-6300] Multi module release creates empty directories in war file (rfscholte: [http://git-wip-us.apache.org/repos/asf/?p=maven.git&a=commit&h=98af937bc6298e82e489b5f0cd3fb0a1c3d37109])
* (edit) maven-core/src/main/java/org/apache/maven/plugin/CacheUtils.java
* (add) maven-core/src/test/java/org/apache/maven/lifecycle/internal/LifecycleDependencyResolverTest.java
* (edit) maven-core/src/test/java/org/apache/maven/AbstractCoreMavenComponentTestCase.java
* (add) maven-core/src/main/java/org/apache/maven/project/artifact/DefaultProjectArtifactsCache.java
* (edit) maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginDescriptorCache.java
* (add) maven-core/src/test/projects/lifecycle-dependency-resolver/war/pom.xml
* (edit) maven-core/src/main/java/org/apache/maven/RepositoryUtils.java
* (edit) maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginArtifactsCache.java
* (delete) maven-core/src/main/java/org/apache/maven/plugin/ProjectArtifactsCache.java
* (add) maven-core/src/main/java/org/apache/maven/project/artifact/ProjectArtifactsCache.java
* (add) maven-core/src/test/projects/lifecycle-dependency-resolver/pom.xml
* (edit) maven-core/src/main/java/org/apache/maven/lifecycle/internal/LifecycleDependencyResolver.java
* (delete) maven-core/src/main/java/org/apache/maven/plugin/DefaultProjectArtifactsCache.java
* (edit) maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginRealmCache.java
* (add) maven-core/src/test/projects/lifecycle-dependency-resolver/lib/pom.xml
;;;","22/Dec/17 13:48;hudson;Build unstable in Jenkins: maven-3.x-jenkinsfile » master #149

See https://builds.apache.org/job/maven-3.x-jenkinsfile/job/master/149/;;;","22/Dec/17 14:06;hudson;Build unstable in Jenkins: Maven TLP (wip) » maven » master #19

See https://builds.apache.org/job/maven-wip/job/maven/job/master/19/;;;","06/Jan/18 21:39;hudson;Build succeeded in Jenkins: Maven TLP (wip) » maven » MNG-6308_display_packaging #14

See https://builds.apache.org/job/maven-wip/job/maven/job/MNG-6308_display_packaging/14/;;;","28/Mar/20 15:01;hudson;Build failed in Jenkins: Maven TLP » maven-studies » maven-metrics #4

See https://builds.apache.org/job/maven-box/job/maven-studies/job/maven-metrics/4/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
3.5.2: ClassNotFoundException: javax.annotation.security.RolesAllowed,MNG-6298,13115470,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,khmarbaise,stoicflame,stoicflame,01/Nov/17 20:58,28/Mar/20 15:01,03/Jan/22 13:13,19/Jan/18 22:25,3.5.2,,,,,3.5.3,,,Class Loading,,,,,4,,,,"Maven 3.5.2 appears to have introduces some kind of a class loading error, manifesting itself like this:

{noformat}
Caused by: java.lang.ClassNotFoundException: javax.annotation.security.RolesAllowed
	at org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy.loadClass(SelfFirstStrategy.java:50)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.unsynchronizedLoadClass(ClassRealm.java:271)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:247)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:239)
	... 184 more
{noformat}

Previous versions of Maven do not manifest this.

To reproduce this:

* Clone [the Enunciate sample project|https://github.com/stoicflame/enunciate-sample].
* Build the project (mvn clean package) with 3.5.0 and note the success.
* Build the project with 3.5.2 and note the failure.","Mac OS X 10.12.6, Ubuntu 15.10 64 bit, and Windows is presumed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-6084,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i3maaf:",9223372036854775807,,,,,,,,,,,,,,,,,,,"03/Nov/17 09:41;rfscholte;Confirmed. And the weird thing is that we decided to remove classloader related changes done for 3.5.1 and have a better look at it. Not sure where this one is comming from.;;;","05/Nov/17 14:25;rfscholte;bisect result

{noformat}
a7dddcb87626fec256f1b8ccbe957f94cdf401e4 is the first bad commit
commit a7dddcb87626fec256f1b8ccbe957f94cdf401e4
Author: Dan Tran <dantran@apache.org>
Date:   Sun Sep 11 21:07:39 2016 -0700

[MNG-6084] Support JSR 250 annotations

:040000 040000 edca56f4652fa10dc0881cf9f8220ca08db6b9a0 6dbca280754abd9cc5a3240fc7d8770ce5037fd3 M	maven-core
:040000 040000 581a1beedef2ce71beaa87729e370c7404c0d2fa 258f3592fd311031c5371ca029cde30fe31c35e8 M	maven-embedder
:100644 100644 5e12e36201f2afe4a84f52018adb113fa6543ecd d6f165cd3ff3475c7f8fd5fa42fdeb4fff7f00f4 M	pom.xml
{noformat};;;","27/Nov/17 18:28;githubbot;GitHub user bengtsod opened a pull request:

    https://github.com/apache/maven/pull/139

    [MNG-6298] 3.5.2: ClassNotFoundException

    Adding exportedPackage to find class:
    javax.annotation.security.RolesAllowed
    
    First maven commit :) Works but might be deeper issue

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/bengtsod/maven master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/maven/pull/139.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #139
    
----
commit 45b75ad29074823850c3eda3017cf73fe19b1e8c
Author: Bengt Söderberg <bengt.soderberg@purplescout.se>
Date:   2017-11-27T18:19:48Z

    [MNG-6298] 3.5.2: ClassNotFoundException
    
    Adding exportedPackage to find class:
    javax.annotation.security.RolesAllowed
    
    First maven commit :) Works but might be deeper issue

----
;;;","27/Nov/17 22:32;rfscholte;I think this change makes sense. Let's also minimize the sample project and add it to https://github.com/apache/maven-integration-testing ;;;","04/Dec/17 19:32;githubbot;GitHub user bengtsod opened a pull request:

    https://github.com/apache/maven-integration-testing/pull/26

    [MNG-6298] 3.5.2: ClassNotFoundException

    Test for https://github.com/apache/maven/pull/139

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/bengtsod/maven-integration-testing master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/maven-integration-testing/pull/26.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #26
    
----
commit 01be66f166b2fe61cf9935cc1e5b1fc65e5e729e
Author: Bengt Söderberg <bengt.soderberg@purplescout.se>
Date:   2017-12-04T18:49:17Z

    [MNG-6298] 3.5.2: ClassNotFoundException
    
    Test for https://github.com/apache/maven/pull/139

----
;;;","11/Dec/17 18:26;Bengt1982;Done. Added minimal regression test that fails without the fix. Unsure about versioning so set it to 3.5.3 and onwards for now, range of test might need adjusting depending on version it ends up in.;;;","30/Dec/17 21:04;khmarbaise;Hi, can you please squash your commits on the pull request....;;;","30/Dec/17 22:28;Bengt1982;[~khmarbaise] Not sure what you mean, only one commit per pull request. One for maven and one for maven-integration-testing?;;;","31/Dec/17 10:06;khmarbaise;Hi [~Bengt1982]..Yes that is exactly what I have in mind, cause that in results means we have only a single commit which contains the fix and can in worst cases simply being reverted and makes the history of Maven easier to read...Thanks in advance..
 ;;;","31/Dec/17 11:44;Bengt1982;Hi [~khmarbaise], With you so far, however I only have one commit per repo already or am I misunderstanding something?;;;","31/Dec/17 12:13;khmarbaise;Sorry have mistaken that. I have created a branch for it applied the patch and now lets see what the [CI says|https://builds.apache.org/view/M-R/view/Maven/job/maven-wip/job/maven/job/MNG-6298/]..;;;","06/Jan/18 20:00;khmarbaise;So branches have been created for [Maven Core|https://git-wip-us.apache.org/repos/asf?p=maven.git;a=commitdiff;h=ddd63d9bffdf996c44909b6b0c5f58aa55b16fe0] and [Integration Testing|https://git-wip-us.apache.org/repos/asf?p=maven-integration-testing.git;a=commitdiff;h=55db62ff59715248edf37b636821461d0f1081c4]. So lets see if we haven another dev who will second this.;;;","06/Jan/18 20:15;khmarbaise;Hi [~Bengt1982] can you please take a look at the comment of Robet Scholte on the dev list https://www.mail-archive.com/dev@maven.apache.org/msg115802.html ;;;","06/Jan/18 20:56;Bengt1982;Hi [~khmarbaise], updated the commit with the requested changes. My first commit to maven, thanks for your patience :);;;","06/Jan/18 21:19;khmarbaise;Tack [~Bengt1982]. I appreciate you support for the Maven project. I have updated the branch accordingly. Lets wait for CI result. BTW. Small hint. Usually you should mention the issue in the commit message like:
{code}
[MXXX-XX] Subject
 o more details
{code}
That makes it easier to associate the pr/commit with the appropriate issue entry...
Kind regards
Karl Heinz Marbaise;;;","18/Jan/18 20:48;hudson;Build succeeded in Jenkins: Maven TLP (wip) » maven » MNG-6298 #4

See https://builds.apache.org/job/maven-wip/job/maven/job/MNG-6298/4/;;;","18/Jan/18 20:49;hudson;Build succeeded in Jenkins: maven-3.x-jenkinsfile » MNG-6298 #3

See https://builds.apache.org/job/maven-3.x-jenkinsfile/job/MNG-6298/3/;;;","19/Jan/18 22:21;hudson;Build succeeded in Jenkins: Maven TLP (wip) » maven » master #30

See https://builds.apache.org/job/maven-wip/job/maven/job/master/30/;;;","19/Jan/18 22:24;hudson;Build succeeded in Jenkins: maven-3.x-jenkinsfile » master #159

See https://builds.apache.org/job/maven-3.x-jenkinsfile/job/master/159/;;;","19/Jan/18 22:25;khmarbaise;Done in [6285bb96c5104a9eabd4e35131aec917b4f9e048|https://git-wip-us.apache.org/repos/asf?p=maven.git;a=commitdiff;h=6285bb96c5104a9eabd4e35131aec917b4f9e048];;;","13/Feb/18 21:03;githubbot;Github user bengtsod closed the pull request at:

    https://github.com/apache/maven-integration-testing/pull/26
;;;","13/Feb/18 21:04;githubbot;Github user bengtsod closed the pull request at:

    https://github.com/apache/maven/pull/139
;;;","28/Mar/20 15:01;hudson;Build failed in Jenkins: Maven TLP » maven-studies » maven-metrics #4

See https://builds.apache.org/job/maven-box/job/maven-studies/job/maven-metrics/4/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
property inside @Parameter-Annotation is being ignored if it is also set inside the configuration of the Plugin,MNG-6278,13098690,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Not A Problem,rfscholte,TheSnoozer,TheSnoozer,30/Aug/17 23:36,01/Sep/17 11:42,03/Jan/22 13:13,01/Sep/17 11:42,3.2.5,3.3.9,3.5.0,,,,,,,,,,,0,,,,"Hi I have a strange problem with a property definition inside an @Parameter-Annotation. 
Pretty much the configuration inside the plugin is as the following:
{code:java}
@Parameter(property = ""maven.buildHelperMojo.skip"", defaultValue = ""false"")
private boolean skip;
{code}
The original reference for this can be found here:
https://maven.apache.org/guides/plugin/guide-java-plugin-development.html#Parameters

Regardless whenever I define a value of this property inside the configuration-tag of the plugin and also provide an option via the commandline e.g. {{-Dmaven.buildHelperMojo.skip=true}} the value provided by commandline is getting ignored.

I have attached a sample project where the issue can be reproduced with the following:
{{mvn clean install && mvn clean initialize -PdemoConfigSet -Dmaven.buildHelperMojo.skip=true}}
- doesn't work since it has the configuration-tag set

{{mvn clean install && mvn clean initialize -PdemoConfigUnSet -Dmaven.buildHelperMojo.skip=true}}
- works as expected since it has the configuration-tag NOT set",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Aug/17 23:37;TheSnoozer;SampleProject.zip;https://issues.apache.org/jira/secure/attachment/12884569/SampleProject.zip","01/Sep/17 00:40;TheSnoozer;SampleProject_v2.zip;https://issues.apache.org/jira/secure/attachment/12884841/SampleProject_v2.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i3jh2v:",9223372036854775807,,,,,,,,,,,,,,,,,,,"01/Sep/17 00:39;TheSnoozer;Just as a side-node:
The maven-surefire-plugin would be affected by this as well when using the configuration in [Skipping Tests](https://maven.apache.org/surefire/maven-surefire-plugin/examples/skipping-tests.html#Skipping_Tests).
However when defining an additional property and providing this property as argument for the plugin configuration like outlined in [Skipping by Default](https://maven.apache.org/surefire/maven-surefire-plugin/examples/skipping-tests.html#Skipping_by_Default) everything starts working again as expected.

Attached is another sample project where one can reproduce with the maven-surefire-plugin itself:
> mvn clean package -PdemoConfigUnSet -DskipTests=true
Tests are skipped as expected since configuration is NOT set

> mvn clean package -PdemoConfigSet -DskipTests=true
Test will be executed and fail since the Test available has an `Assert.fail`


Also note that this issue has a limited impact on the surefire-plugin.
The reason for this is that it uses as a configuration the value <skipTests> and via command line maven.test.skip and if you check closely the source code it actually ends up in two distinct parameters:
* via configuration <skipTests> see https://github.com/apache/maven-surefire/blob/master/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java#L160
* via command line maven.test.skip see https://github.com/apache/maven-surefire/blob/master/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java#L178

In the end they check all possible ways to skip the plugin:
https://github.com/apache/maven-surefire/blob/master/maven-surefire-plugin/src/main/java/org/apache/maven/plugin/surefire/SurefirePlugin.java#L360;;;","01/Sep/17 11:42;rfscholte;This works as designed.

If you put a explicit value inside the configuration, then it is not possible to overwrite it with the commandline anymore.
If you want to be able to overwrite it and don't like the default value, you should add it as a property in your {{pom.xml}}.

{code:xml}
<properties>
  <maven.buildHelperMojo.skip>true</maven.buildHelperMojo.skip>
</properties>
{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Uploading of any artifact hangs forever,MNG-6231,13071126,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Invalid,,vmayorov,vmayorov,11/May/17 10:36,23/Sep/17 15:44,03/Jan/22 13:13,12/May/17 17:44,3.5.0,,,,,,,,Artifacts and Repositories,Deployment,,,,0,,,,"Last log lines:

{noformat}
Uploading: http://artifactory.com/repo/libs-snapshot-local/test/test/1.0.0-SNAPSHOT/test-1.0.0-20170511.102118-2.pom
Progress (1): 4.2 kB  
{noformat}
... hangs here

Issue can be reproduced on ANY pom (i.e. it is not project specific) - just type {{mvn deploy}})

maven 3.3.9 works just fine. ","$ uname -a
Linux 4.10.11-1-ARCH #1 SMP PREEMPT Tue Apr 18 08:39:42 CEST 2017 x86_64 GNU/Linux

$ java -version
java version ""1.8.0_121""
Java(TM) SE Runtime Environment (build 1.8.0_121-b13)
Java HotSpot(TM) 64-Bit Server VM (build 25.121-b13, mixed mode)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/May/17 17:19;vmayorov;mvn-3.5.0-deploy-debug-log.zip;https://issues.apache.org/jira/secure/attachment/12867806/mvn-3.5.0-deploy-debug-log.zip","12/May/17 11:49;vmayorov;mvn-deploy-tcpdumps-full.zip;https://issues.apache.org/jira/secure/attachment/12867762/mvn-deploy-tcpdumps-full.zip","11/May/17 10:36;vmayorov;test.zip;https://issues.apache.org/jira/secure/attachment/12867544/test.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i3etu7:",9223372036854775807,,,,,,,,,,,,,,,,,,,"11/May/17 16:41;michael-o;Provide a tcpdump of the communication. I'd like to see the TCP socket interaction.;;;","12/May/17 09:30;vmayorov;tcpdumps of deployment for 3.3.9 and 3.5.0 attached.
10.1.0.176 is artifactory repo (no ssl);;;","12/May/17 10:51;michael-o;Something is wrong with the pcaps. All I see is the communication from the client the server but never the response.;;;","12/May/17 10:53;vmayorov;Oops... forgot about src host filter. Sorry, i've upload full dumps;;;","12/May/17 11:49;vmayorov;Full TCP logs with -A in {{mvn-deploy-tcpdump-full.zip}}
{{tcpdump -vvv -i enp3s0 -A dst host 10.1.0.176 or src host 10.1.0.176}};;;","12/May/17 12:00;michael-o;Checked, the pcap for 3.5.0 looks weird. I see the connection on port 35232, the JAR is uploaded and the server is requesting to close the connection: {{FIN}}, {{ACK}}. Client responds with {{ACK}}. There is no further communication. Is this really complete?

Please rerun with Maven 3.5.0 with {{-X}} and pass the following:
{noformat}
-Dorg.slf4j.simpleLogger.log.org.apache.maven.wagon.providers.http.httpclient=DEBUG
-Dorg.slf4j.simpleLogger.log.org.apache.maven.wagon.providers.http.httpclient.wire=ERROR
-Dorg.slf4j.simpleLogger.log.org.apache.maven.wagon.providers.http.httpclient.impl.conn=DEBUG
-Dorg.slf4j.simpleLogger.log.org.apache.maven.wagon.providers.http.httpclient.impl.client=DEBUG
-Dorg.slf4j.simpleLogger.log.org.apache.maven.wagon.providers.http.httpclient.client=DEBUG
{noformat};;;","12/May/17 17:19;vmayorov;Debug log attached;;;","12/May/17 17:27;vmayorov;Umm... Comparing to 3.3.9 - 3.3.9 start sending JAR data immediately without receiving any HTTP/1.1 100 Continue responses... 

3.5.0 sends HTTP headers
PUT /repo/libs-release-local/test/test/1.0.0/test-1.0.0.jar HTTP/1.1
Cache-control: no-cache
Cache-store: no-store
Pragma: no-cache
Expires: 0
Accept-Encoding: gzip
User-Agent: Apache-Maven/3.5.0 (Java 1.8.0_121; Linux 4.10.11-1-ARCH)
Content-Length: 1960
Host: 10.1.0.176
Proxy-Connection: Keep-Alive
Expect: 100-continue
Authorization: Basic YWRtaW46cGFzc3dvcmQ=
Connection: keep-alive

...and.. hangs.

And yes tcpdump and logs now is complete.;;;","12/May/17 17:30;michael-o;I see this:

{noformat}
[DEBUG] Re-using cached 'basic' auth scheme for http://10.1.0.176:80
[DEBUG] Connection request: [route: {}->http://127.0.0.1:3128->http://10.1.0.176:80][total kept alive: 0; route allocated: 0 of 20; total allocated: 0 of 40]
[DEBUG] Connection leased: [id: 0][route: {}->http://127.0.0.1:3128->http://10.1.0.176:80][total kept alive: 0; route allocated: 1 of 20; total allocated: 1 of 40]
[DEBUG] Opening connection {}->http://127.0.0.1:3128->http://10.1.0.176:80
{noformat}

It looks like you are using a [proxy|https://www.speedguide.net/port.php?port=3128] locally and it does not properly handle status 100. Can you retry w/o your proxy? I have the feeling that it simply breaks the HTTP connection. Wagon 2.12 by default performs {{Expect: 100-continue}} with {{PUT}} which is the right thing to do. See WAGON-469.;;;","12/May/17 17:43;vmayorov;....mmm, yes it was him, http://cntlm.sourceforge.net/

However 10.*.*.* is configured to 
NoProxy		10.*
and still it modifies something, looks like its not a maven issue

Fast Fucking Proxy, Im sorry for that...

Thanks for help.;;;","12/May/17 17:48;michael-o;Fiddler won't be better because Microsoft's {{Expect: 100-continue}} implementation is broken in .NET.;;;","23/Sep/17 15:36;githubbot;GitHub user MichaelWarnecke opened a pull request:

    https://github.com/apache/maven/pull/130

    [MNG-6231] Validate scope in dependencyManagement

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/MichaelWarnecke/maven MNG-6213

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/maven/pull/130.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #130
    
----
commit 4588d92bcde08f90e6246c94a1a76ba80d82d14a
Author: Michael Warnecke <13361@nordakademie.de>
Date:   2017-09-23T15:34:14Z

    [MNG-6231] Validate scope in dependencyManagement

----
;;;","23/Sep/17 15:44;githubbot;Github user MichaelWarnecke closed the pull request at:

    https://github.com/apache/maven/pull/130
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"mvn dependency:get error - Premature end of Content-Length delimited message body (expected: 56473600; received: 6843",MNG-6226,13069405,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Incomplete,,sahilamar,sahilamar,05/May/17 10:09,29/Oct/17 20:53,03/Jan/22 13:13,29/Oct/17 20:53,3.5.0,,,,,,,,Plugin API,,,,,0,maven,,,"Hi Team,

I am trying to use the maven dependency get plugin to get the artifact which is a tar file from our central repo.

Here is the command:
{code:xml}
mvn dependency:get -DgroupId=com.sample -DartifactId=sample-project -Dversion=1.0.1-SNAPSHOT -Dtransitive=false -Dpackaging=tar 
{code}

It gives me the below error:
{code:xml}
[ERROR] : Premature end of Content-Length delimited message body (expected: 56473600; received: 6843
[ERROR] -> [Help 1]
{code}

And also when I try it with the debug(-X) mode, this is the error I get:
{code:xml}
Caused by: org.apache.maven.wagon.providers.http.httpclient.ConnectionClosedException: Premature end of Content-Length delimited message body (expected: 56473600; received: 6835
        at org.apache.maven.wagon.providers.http.httpclient.impl.io.ContentLengthInputStream.read(ContentLengthInputStream.java:180)
        at org.apache.maven.wagon.providers.http.httpclient.conn.EofSensorInputStream.read(EofSensorInputStream.java:137)
        at org.apache.maven.wagon.AbstractWagon.transfer(AbstractWagon.java:572)
        at org.apache.maven.wagon.AbstractWagon.getTransfer(AbstractWagon.java:372)
        ... 43 more
{code}


The above command when I try on windows it works. But issue is when I run it on UNIX.


But when I try to get the jar using the below command(with -Dpackaging=jar) on both Linux and windows, it works:
{code:xml}
mvn dependency:get -DgroupId=com.sample -DartifactId=sample-project -Dversion=1.0.1-SNAPSHOT -Dtransitive=false -Dpackaging=jar
{code}

Also the same works for a war.


Please help. 

Thanks and Regards,
Sahil Amar",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i3ej8n:",9223372036854775807,,,,,,,,,,,,,,,,,,,"12/Jul/17 17:47;michael-o;Provide a full dump with {{curl --verbose $URL}} of the target in question. This seems to be an issue with your internal setup.;;;","29/Oct/17 20:53;michael-o;No further information provided.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven cannot build with Java 1.8.0_131,MNG-6221,13066612,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Invalid,,esteiger,esteiger,25/Apr/17 08:35,12/Jul/17 17:46,03/Jan/22 13:13,12/Jul/17 17:46,3.3.9,3.5.0,,,,,,,Bootstrap & Build,,,,,0,,,,"After upgrading from Oracle Java 1.8.0_102 to Oracle Java 1.8.0_131, it is not possible to build anymore with maven. Tested with maven 3.3.9 and 3.5.0.

[INFO] Scanning for projects...
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Building com.example 0.0.1-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[WARNING] Error injecting: org.apache.maven.wagon.providers.http.HttpWagon
java.lang.NoClassDefFoundError: Could not initialize class sun.security.ssl.SSLContextImpl$DefaultSSLContext
        at java.lang.Class.forName0(Native Method)
        at java.lang.Class.forName(Class.java:264)
        at java.security.Provider$Service.getImplClass(Provider.java:1634)
        at java.security.Provider$Service.newInstance(Provider.java:1592)
        at sun.security.jca.GetInstance.getInstance(GetInstance.java:236)
        at sun.security.jca.GetInstance.getInstance(GetInstance.java:164)
        at javax.net.ssl.SSLContext.getInstance(SSLContext.java:156)
        at javax.net.ssl.SSLContext.getDefault(SSLContext.java:96)
...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i3e207:",9223372036854775807,,,,,,,,,,,,,,,,,,,"25/Apr/17 20:23;stephenc;Could you provide a minimum sample pom that reproduces the issue? (I am able to build with Java 1.8.0_131 and Maven 3.5.0 so I wonder if this is an issue with custom extensions);;;","09/May/17 19:04;michael-o;Looking forward to an example, I'd take a look.;;;","12/Jul/17 17:46;michael-o;Two months w/o a sample project.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HttpClient produces a lot of noise at debug loglevel,MNG-6181,13048112,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,rfscholte,rfscholte,rfscholte,03/Mar/17 17:03,28/Mar/20 15:00,03/Jan/22 13:13,05/Mar/17 16:35,3.5.0-alpha-1,,,,,3.5.0,3.5.0-beta-1,,Dependencies,Logging,,,,0,,,,"Empty your repository and run {{mvn compile -X}} on any project.
You'll see all headers and the content (either as text or bytes) and more for every downloaded file by Wagon, making the loggin useless.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i3axe7:",9223372036854775807,,,,,,,,,,,,,,,,,,,"04/Mar/17 21:17;michael-o;This is not a bug, but rather a result of several previous issues. Apache HttpComponents unfortunately still uses Commons Logging (HTTPCLIENT-1664). As you might now, Wagon HTTP Provider is added as a shaded JAR to Maven distribution.  Up until WAGON-471 Commons Logging was shaded, but had no effect because it could not log anywhere. Now JCL over SLF4J is used and HttpComponents can log just like every other dependency. Since {{-X}} enables debug on all loggers, you see the entire HTTP comm as well. So the issue existed eversince, but simply was not visible. In short-term you can explicitly [disable logging on HttpComponents|https://hc.apache.org/httpcomponents-client-ga/logging.html] in {{org.apache.maven.cli.logging.impl.*}}, in the long-term you'd require every single logging component to register its logger name. Consider that the former option likely takes away the possibility to enable debug logging with HttpComponents to trace errors.;;;","05/Mar/17 11:23;rfscholte;The bug is more about the huge amount af logging produced, which simply makes debug logging useless. We should provide a better logging configuration.

I'd hoped we could define this by default, like
{noformat:title=/conf/logging/}
org.slf4j.simpleLogger.log.org.apache.http=error
org.slf4j.simpleLogger.log.org.apache.http.wire=error
{noformat}
but somehow this isn't picked up, don't understand why yet.;;;","05/Mar/17 12:01;michael-o;You forgot that HttpComponents are shaded into HTTP provider. Use this:

{noformat}
org.slf4j.simpleLogger.log.org.apache.maven.wagon.providers.http.httpclient=warn
{noformat}

Shading rule:
{code:xml}
<relocation>
  <pattern>org.apache.http</pattern>
  <shadedPattern>org.apache.maven.wagon.providers.http.httpclient</shadedPattern>
</relocation>
{code};;;","05/Mar/17 14:33;rfscholte;I've added a couple of lines to the simplelogger.properties to restore logging behavior. All these properties can be adjusted via commandline: {{-Dorg.slf4j.simpleLogger.log.org.apache.maven.wagon.providers.http.httpclient=debug}} will make it log at debug level again.;;;","05/Mar/17 14:39;michael-o;You completely disabled it now. Why not warn/info at least?;;;","05/Mar/17 14:50;rfscholte;IIUC it has never worked, so this will restore the original behavior. I also expect that the logging by Wagon is good enough if there are issues. I just want to prevent an overload of logging. Logging == IO == slow and in case  of analyses we have the option to adjust the levels.;;;","05/Mar/17 14:53;michael-o;OK, makes sense. Can we document this somewhere for people?;;;","05/Mar/17 15:24;rfscholte;http://maven.apache.org/maven-logging.html;;;","05/Mar/17 15:38;michael-o;This is indeed sufficient.;;;","05/Mar/17 16:35;rfscholte;Fixed in [e0da20a1f801aeda0cd74495834c637c3a207478|http://git-wip-us.apache.org/repos/asf/maven/commit/e0da20a1];;;","05/Mar/17 16:45;hudson;SUCCESS: Integrated in Jenkins build maven-3.x #1558 (See [https://builds.apache.org/job/maven-3.x/1558/])
[MNG-6181] HttpClient produces a lot of noise at debug loglevel (rfscholte: [http://git-wip-us.apache.org/repos/asf/?p=maven.git&a=commit&h=e0da20a1f801aeda0cd74495834c637c3a207478])
* (edit) apache-maven/src/conf/logging/simplelogger.properties
;;;","28/Mar/20 15:00;hudson;Build failed in Jenkins: Maven TLP » maven-studies » maven-metrics #4

See https://builds.apache.org/job/maven-box/job/maven-studies/job/maven-metrics/4/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"The --file command line option of the Windows and Unix launchers does not work for directory names like ""Spaces & Special Char""",MNG-6177,13045836,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,schulte77,schulte77,schulte77,23/Feb/17 23:55,28/Mar/20 15:00,03/Jan/22 13:13,23/Feb/17 23:57,3.5.0-alpha-1,,,,,3.5.0,3.5.0-beta-1,,,,,,,0,,,,,,,,,,,,,,,,,,,,,MNG-6178,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i3ajrb:",9223372036854775807,,,,,,,,,,,,,,,,,,,"24/Feb/17 00:15;hudson;SUCCESS: Integrated in Jenkins build maven-3.x #1555 (See [https://builds.apache.org/job/maven-3.x/1555/])
[MNG-6177] The --file command line option of the Windows and Unix (schulte: [http://git-wip-us.apache.org/repos/asf/?p=maven.git&a=commit&h=0b9a30f350f159a190e87c78e520ba7a7ae0642b])
* (edit) apache-maven/src/bin/mvn.cmd
* (edit) apache-maven/src/bin/mvn
;;;","28/Mar/20 15:00;hudson;Build failed in Jenkins: Maven TLP » maven-studies » maven-metrics #4

See https://builds.apache.org/job/maven-box/job/maven-studies/job/maven-metrics/4/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Precedence of command-line system property options has changed,MNG-6172,13042536,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,stephenc,mcculls,mcculls,13/Feb/17 10:29,25/Mar/17 12:10,03/Jan/22 13:13,23/Feb/17 14:37,,,,,,3.5.0,3.5.0-alpha-1,,Command Line,,,,,1,,,,"The current state of master (what will eventually become 3.5.0) has reversed the precedence of command-line system property options compared to previous releases of Maven.

For example, running this command with a basic project:
{code}
mvn -Dmaven.repo.local=/tmp/aaa -Dmaven.repo.local=/tmp/zzz validate
{code}
using current master will cause {{/tmp/aaa}} to be created (first-one-wins), whereas for all previous releases of Maven {{/tmp/zzz}} would have been created (last-one-wins)

This has the potential to break CI builds which relied on the previous last-one-wins behaviour.

This was introduced by the fix for MNG-6078  https://github.com/apache/maven/commit/ca4303031357a7decaee8de770b71fb2c2fedd28 - by reversing the whole array the precedence between options on the same command line has been reversed, not just the relationship between .mvn/maven.config options and command line options.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i39zn3:",9223372036854775807,,,,,,,,,,,,,,,,,,,"13/Feb/17 10:59;michael-o;Do we need to drop this commit or rework?;;;","13/Feb/17 15:34;stephenc;I think we need to fix this. This would catch me out;;;","23/Feb/17 14:37;stephenc;Fixed with dc9c4db4494b62e2231bb67b39678decf6329852 in maven-core;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.codehaus.plexus.component.repository.exception.ComponentLookupException: java.util.NoSuchElementException,MNG-6157,13034661,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Not A Problem,rfscholte,vorburger,vorburger,13/Jan/17 14:15,25/May/18 08:43,03/Jan/22 13:13,13/Jan/17 17:20,3.3.9,,,,,,,,,,,,,1,,,,"https://bugs.eclipse.org/bugs/show_bug.cgi?id=496944 (and https://bugs.eclipse.org/bugs/show_bug.cgi?id=510439) report an issue encountered in M2E which shows a org.codehaus.plexus.component.repository.exception.ComponentLookupException: java.util.NoSuchElementException as the root caused by, so the underlying problem may be here in Maven core?

May be a concurrency issue - could it be made more multi thread safe?

{code}org.apache.maven.plugin.PluginExecutionException: Execution default-testResources of goal org.apache.maven.plugins:maven-resources-plugin:3.0.1:testResources failed: Unable to load the mojo 'testResources' (or one of its required components) from the plugin 'org.apache.maven.plugins:maven-resources-plugin:3.0.1'
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:153)
	at org.eclipse.m2e.core.internal.embedder.MavenImpl.execute(MavenImpl.java:331)
	at org.eclipse.m2e.core.internal.embedder.MavenImpl$11.call(MavenImpl.java:1362)
	at org.eclipse.m2e.core.internal.embedder.MavenImpl$11.call(MavenImpl.java:1)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.executeBare(MavenExecutionContext.java:176)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.execute(MavenExecutionContext.java:112)
	at org.eclipse.m2e.core.internal.embedder.MavenImpl.execute(MavenImpl.java:1360)
	at org.eclipse.m2e.core.project.configurator.MojoExecutionBuildParticipant.build(MojoExecutionBuildParticipant.java:52)
	at org.eclipse.m2e.core.internal.builder.MavenBuilderImpl.build(MavenBuilderImpl.java:137)
	at org.eclipse.m2e.core.internal.builder.MavenBuilder$1.method(MavenBuilder.java:172)
	at org.eclipse.m2e.core.internal.builder.MavenBuilder$1.method(MavenBuilder.java:1)
	at org.eclipse.m2e.core.internal.builder.MavenBuilder$BuildMethod$1$1.call(MavenBuilder.java:115)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.executeBare(MavenExecutionContext.java:176)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.execute(MavenExecutionContext.java:112)
	at org.eclipse.m2e.core.internal.builder.MavenBuilder$BuildMethod$1.call(MavenBuilder.java:105)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.executeBare(MavenExecutionContext.java:176)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.execute(MavenExecutionContext.java:151)
	at org.eclipse.m2e.core.internal.embedder.MavenExecutionContext.execute(MavenExecutionContext.java:99)
	at org.eclipse.m2e.core.internal.builder.MavenBuilder$BuildMethod.execute(MavenBuilder.java:86)
	at org.eclipse.m2e.core.internal.builder.MavenBuilder.build(MavenBuilder.java:200)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:735)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:206)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:246)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:301)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:304)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:360)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:383)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:142)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:232)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)
Caused by: org.apache.maven.plugin.PluginContainerException: Unable to load the mojo 'testResources' (or one of its required components) from the plugin 'org.apache.maven.plugins:maven-resources-plugin:3.0.1'
	at org.apache.maven.plugin.internal.DefaultMavenPluginManager.getConfiguredMojo(DefaultMavenPluginManager.java:551)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:121)
	... 31 more
Caused by: org.codehaus.plexus.component.repository.exception.ComponentLookupException: java.util.NoSuchElementException
      role: org.apache.maven.plugin.Mojo
  roleHint: org.apache.maven.plugins:maven-resources-plugin:3.0.1:testResources
	at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:267)
	at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:255)
	at org.apache.maven.plugin.internal.DefaultMavenPluginManager.getConfiguredMojo(DefaultMavenPluginManager.java:517)
	... 32 more
Caused by: java.util.NoSuchElementException
	at org.eclipse.sisu.plexus.RealmFilteredBeans$FilteredItr.next(RealmFilteredBeans.java:118)
	at org.eclipse.sisu.plexus.RealmFilteredBeans$FilteredItr.next(RealmFilteredBeans.java:1)
	at org.eclipse.sisu.plexus.DefaultPlexusBeans$Itr.next(DefaultPlexusBeans.java:76)
	at org.eclipse.sisu.plexus.DefaultPlexusBeans$Itr.next(DefaultPlexusBeans.java:1)
	at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:263)
	... 34 more
	pom.xml	/org.opendaylight.netvirt.elanmanager-impl	line 11	Maven Build Problem{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/May/18 08:35;sdyapa;IncludeProjectDependenciesComponentConfigurator.java;https://issues.apache.org/jira/secure/attachment/12925120/IncludeProjectDependenciesComponentConfigurator.java","25/May/18 05:35;sdyapa;image-2018-05-25-11-05-24-862.png;https://issues.apache.org/jira/secure/attachment/12925098/image-2018-05-25-11-05-24-862.png","25/May/18 08:33;sdyapa;image-2018-05-25-14-03-01-554.png;https://issues.apache.org/jira/secure/attachment/12925117/image-2018-05-25-14-03-01-554.png","25/May/18 08:33;sdyapa;image-2018-05-25-14-03-45-626.png;https://issues.apache.org/jira/secure/attachment/12925118/image-2018-05-25-14-03-45-626.png",,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i38o13:",9223372036854775807,,,,,,,,,,,,,,,,,,,"13/Jan/17 14:16;vorburger;Setting Affects Version to 3.3.9 because that's the one embedded in M2E 1.7.0 (Preferences > Maven > Installations).;;;","13/Jan/17 14:18;vorburger;
Sorry for now having opened multiple bugs, but I'm hitting this almost daily since half a year, so perhaps this will help get it some attention and traction..;;;","13/Jan/17 15:23;rfscholte;Can you reproduce it when using Maven from commandline?;;;","13/Jan/17 16:02;vorburger;> Can you reproduce it when using Maven from commandline?

Nope, never; only in M2E. FYI: https://bugs.eclipse.org/bugs/show_bug.cgi?id=496944 just updated with a possible interesting analysis. Feel free to close of course if you're sure that this is certainly not a problem in Maven core.;;;","13/Jan/17 17:20;rfscholte;Root cause is not inside Maven.;;;","25/May/18 05:40;sdyapa;[~rfscholte], I'm able to reproduce this issue from command line.

!image-2018-05-25-11-05-24-862.png!

Here is the complete stack trace:

{noformat}

[ERROR] Failed to execute goal com.portware:portware-maven-plugin:1.6:genIniFile (generate-ini) on project pw-configdescriptors: Unable to retrieve component configurator include-project-dependencies for configuration of mojo com.portware:portware-maven-plugin:1.6:genIniFile: java.util.NoSuchElementException
 [ERROR]       role: org.codehaus.plexus.component.configurator.ComponentConfigurator
 [ERROR]   roleHint: include-project-dependencies
 [ERROR] -> [Help 1]
 org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal com.portware:portware-maven-plugin:1.6:genIniFile (generate-ini) on project pw-configdescriptors: Unable to retrieve component configurator include-project-dependencies for configuration of mojo com.portware:portware-maven-plugin:1.6:genIniFile
     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:213)
     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:154)
     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:146)
     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)
     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)
     at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:51)
     at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)
     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:309)
     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:194)
     at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:107)
     at org.apache.maven.cli.MavenCli.execute (MavenCli.java:955)
     at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:290)
     at org.apache.maven.cli.MavenCli.main (MavenCli.java:194)
     at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)
     at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)
     at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)
     at java.lang.reflect.Method.invoke (Method.java:498)
     at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:289)
     at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:229)
     at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:415)
     at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:356)
 Caused by: org.apache.maven.plugin.PluginConfigurationException: Unable to retrieve component configurator include-project-dependencies for configuration of mojo com.portware:portwaremaven-plugin:1.6:genIniFile
     at org.apache.maven.plugin.internal.DefaultMavenPluginManager.populatePluginFields (DefaultMavenPluginManager.java:670)
     at org.apache.maven.plugin.internal.DefaultMavenPluginManager.getConfiguredMojo (DefaultMavenPluginManager.java:596)
     at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:121)
     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:208)
     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:154)
     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:146)
     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)
     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)
     at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:51)
     at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)
     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:309)
     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:194)
     at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:107)
     at org.apache.maven.cli.MavenCli.execute (MavenCli.java:955)
     at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:290)
     at org.apache.maven.cli.MavenCli.main (MavenCli.java:194)
     at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)
     at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)
     at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)
     at java.lang.reflect.Method.invoke (Method.java:498)
     at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:289)
     at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:229)
     at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:415)
     at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:356)
 Caused by: org.codehaus.plexus.component.repository.exception.ComponentLookupException: java.util.NoSuchElementException
       role: org.codehaus.plexus.component.configurator.ComponentConfigurator
   roleHint: include-project-dependencies
     at org.codehaus.plexus.DefaultPlexusContainer.lookup (DefaultPlexusContainer.java:267)
     at org.codehaus.plexus.DefaultPlexusContainer.lookup (DefaultPlexusContainer.java:255)
     at org.apache.maven.plugin.internal.DefaultMavenPluginManager.populatePluginFields (DefaultMavenPluginManager.java:624)
     at org.apache.maven.plugin.internal.DefaultMavenPluginManager.getConfiguredMojo (DefaultMavenPluginManager.java:596)
     at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:121)
     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:208)
     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:154)
     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:146)
     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)
     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)
     at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:51)
     at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)
     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:309)
     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:194)
     at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:107)
     at org.apache.maven.cli.MavenCli.execute (MavenCli.java:955)
     at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:290)
     at org.apache.maven.cli.MavenCli.main (MavenCli.java:194)
     at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)
     at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)
     at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)
     at java.lang.reflect.Method.invoke (Method.java:498)
     at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:289)
     at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:229)
     at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:415)
     at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:356)
 Caused by: java.util.NoSuchElementException
     at org.eclipse.sisu.plexus.RealmFilteredBeans$FilteredItr.next (RealmFilteredBeans.java:118)
     at org.eclipse.sisu.plexus.RealmFilteredBeans$FilteredItr.next (RealmFilteredBeans.java:1)
     at org.eclipse.sisu.plexus.DefaultPlexusBeans$Itr.next (DefaultPlexusBeans.java:76)
     at org.eclipse.sisu.plexus.DefaultPlexusBeans$Itr.next (DefaultPlexusBeans.java:1)
     at org.codehaus.plexus.DefaultPlexusContainer.lookup (DefaultPlexusContainer.java:263)
     at org.codehaus.plexus.DefaultPlexusContainer.lookup (DefaultPlexusContainer.java:255)
     at org.apache.maven.plugin.internal.DefaultMavenPluginManager.populatePluginFields (DefaultMavenPluginManager.java:624)
     at org.apache.maven.plugin.internal.DefaultMavenPluginManager.getConfiguredMojo (DefaultMavenPluginManager.java:596)
     at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:121)
     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:208)
     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:154)
     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:146)
     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)
     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)
     at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:51)
     at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)
     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:309)
     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:194)
     at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:107)
     at org.apache.maven.cli.MavenCli.execute (MavenCli.java:955)
     at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:290)
     at org.apache.maven.cli.MavenCli.main (MavenCli.java:194)
     at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)
     at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)
     at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)
     at java.lang.reflect.Method.invoke (Method.java:498)
     at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:289)
     at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:229)
     at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:415)
     at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:356)
 [ERROR]
 [ERROR]
 [ERROR] For more information about the errors and possible solutions, please read the following articles:
 [ERROR] [Help 1] [http://cwiki.apache.org/confluence/display/MAVEN/PluginConfigurationException]

 {noformat}

Could you please help me with this.

Thanks in advance

 ;;;","25/May/18 07:18;rfscholte;[~sdyapa] key issue is this:

{noformat}
 [ERROR]       role: org.codehaus.plexus.component.configurator.ComponentConfigurator
 [ERROR]   roleHint: include-project-dependencies
{noformat}
This might be a component that existed in Maven 2, but I'm not aware of its existience in Maven 3. You should ask the maintainers of portware-maven-plugin to update their code, this is not a Maven bug.;;;","25/May/18 08:38;sdyapa;[~rfscholte],

That is the new configurator which I had written so as to use that in my Mojo. Please find the screenshots below.

!image-2018-05-25-14-03-01-554.png!

!image-2018-05-25-14-03-45-626.png!

If there is any thing wrong with the code, Could you please help me in fixing that issue.

Here is the source file for the configurator:

[^IncludeProjectDependenciesComponentConfigurator.java]

*^+Usage :+^* 

^@Mojo(name = ""generateIniFile"", threadSafe = true,^ *^configurator = ""include-project-dependencies""^*^, requiresDependencyResolution = ResolutionScope.COMPILE_PLUS_RUNTIME)^
^public class ConfigDescriptionGenerateIni extends AbstractMojo {^

  ^public void execute() throws MojoExecutionException, MojoFailureException {^

  ^............^

  ^.............^

  ^}^

^}^

Thanks.;;;","25/May/18 08:43;rfscholte;Be sure to add {{<extension>true</extension>}} to the port-maven-plugin, see [https://maven.apache.org/guides/mini/guide-using-extensions.html]
 If this doesn't help, please switch to the [user mailinglist|https://maven.apache.org/mail-lists.html], because this topic has nothing to do with the original issue anymore.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to run Maven test. Getting org.apache.maven.surefire.util.SurefireReflectionException: ,MNG-6098,13009152,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Invalid,gboue,V Ravi Sankar,V Ravi Sankar,03/Oct/16 02:45,01/Sep/17 10:25,03/Jan/22 13:13,04/Oct/16 17:36,3.3.9,,,,,,,,Dependencies,POM,,,,0,,,,"[INFO] Scanning for projects...
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building MavenSelenium3 0.0.1-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[WARNING] The POM for org.testng:testng:jar:5.14.3 is invalid, transitive dependencies (if any) will not be available, enable debug logging for more details
[WARNING] The POM for org.testng:testng:jar:5.14.4 is invalid, transitive dependencies (if any) will not be available, enable debug logging for more details
[WARNING] The POM for org.testng:testng:jar:5.14.5 is invalid, transitive dependencies (if any) will not be available, enable debug logging for more details
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ MavenSelenium3 ---
[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] Copying 0 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ MavenSelenium3 ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ MavenSelenium3 ---
[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ MavenSelenium3 ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ MavenSelenium3 ---
[INFO] Surefire report directory: C:\Users\RaviVinnakota\workspace\MavenSelenium3\target\surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running TestSuite
org.apache.maven.surefire.util.SurefireReflectionException: java.lang.reflect.InvocationTargetException; nested exception is java.lang.reflect.InvocationTargetException: null
java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: org.apache.maven.surefire.testset.TestSetFailedException: Unknown TestNG version 6.9.13.6
	at org.apache.maven.surefire.testng.TestNGExecutor.getConfigurator(TestNGExecutor.java:207)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:174)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	... 9 more

Results :

Tests run: 0, Failures: 0, Errors: 0, Skipped: 0

[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 3.218 s
[INFO] Finished at: 2016-10-03T08:11:07+05:30
[INFO] Final Memory: 13M/225M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.12.4:test (default-test) on project MavenSelenium3: Execution default-test of goal org.apache.maven.plugins:maven-surefire-plugin:2.12.4:test failed: The forked VM terminated without saying properly goodbye. VM crash or System.exit called ? -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/PluginExecutionException
",Windows 10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i34ckv:",9223372036854775807,,,,,,,,,,,,,,,,,,,"03/Oct/16 18:09;gboue;There are a couple of issue with your POM. First, you're using an old version of Surefire (2.12.4), and the version 6.9.13.6 (with 4 digits) isn't correctly recognized, which explains the failure. Upgrade to version 2.19.1 instead of 2.12.4, that will solve your immediate issue.

Second, it seems you have multiple conflicting versions of TestNG in the classpath, as shown by:
{noformat}
[WARNING] The POM for org.testng:testng:jar:5.14.3 is invalid, transitive dependencies (if any) will not be available, enable debug logging for more details
[WARNING] The POM for org.testng:testng:jar:5.14.4 is invalid, transitive dependencies (if any) will not be available, enable debug logging for more details
[WARNING] The POM for org.testng:testng:jar:5.14.5 is invalid, transitive dependencies (if any) will not be available, enable debug logging for more details
{noformat}

You should use a single version of TestNG with a {{<scope>test</scope>}}. With regard to those warnings, the artifacts downloaded by Maven were most likely corrupted (partial transfer, proxy settings...), so you'll need to remove them from your local repository and have Maven redownload them. They should be located by default in {{~/.m2/repository/org/testng/testng}}.;;;","04/Oct/16 05:06;V Ravi Sankar;Thank you very much Guillaume Boué. Upgrading to 2.19.1 worked like magic.. Thanks again. I am trying to do the second one ...need some help here.. I navigated to .m2\repository\org\testng\testng and see tons of testng folders there. Among them 5.14.3, 5.14.4, 5.14.5 are the 3. Should I delete the 3 folders directly? and if so, after that what should I do?;;;","04/Oct/16 17:34;gboue;If you delete them, Maven will redownload the dependencies when you run the tests, so those folders will get recreated; this time with the right content inside. If you're behind a proxy, make sure to configure it correctly, you can refer to https://maven.apache.org/guides/mini/guide-proxies.html for that.

I'll close this issue as the initial problem was resolved.;;;","05/Oct/16 14:41;V Ravi Sankar;Yes, you can close the ticket as the main problem is resolved.
But, even though I deleted those 3 folders, the warning came back during execution.
[WARNING] The POM for org.testng:testng:jar:5.14.3 is invalid, transitive dependencies (if any) will not be available, enable debug logging for more details
[WARNING] The POM for org.testng:testng:jar:5.14.4 is invalid, transitive dependencies (if any) will not be available, enable debug logging for more details
[WARNING] The POM for org.testng:testng:jar:5.14.5 is invalid, transitive dependencies (if any) will not be available, enable debug logging for more details

Also, it is saying [TestNGContentHandler] [WARN] It is strongly recommended to add ""<!DOCTYPE suite SYSTEM ""http://testng.org/testng-1.0.dtd"" >"" at the top of your file, otherwise TestNG may fail or not work as expected.
Should I add that line in the testng suite.xml file? The below is the first line there -
<?xml version=""1.0"" encoding=""UTF-8""?>
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Default profile in settings.xml must not use an id possibly already in use. ,MNG-6070,12992044,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Not A Problem,,khmarbaise,khmarbaise,23/Jul/16 16:19,31/Dec/16 22:04,03/Jan/22 13:13,11/Nov/16 22:41,needing-scrub-3.4.0-fallout,,,,,,,,,,,,,0,,,,"I have created a simple example project with the following pom file:
{code:xml}
<project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.soebes.maven.example</groupId>
  <artifactId>example</artifactId>
  <packaging>jar</packaging>
  <version>1.0-SNAPSHOT</version>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>com.soebes.maven.plugins</groupId>
          <artifactId>echo-maven-plugin</artifactId>
          <version>0.3.0</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <activation>
        <property>
          <name>performRelease</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.soebes.maven.plugins</groupId>
            <artifactId>echo-maven-plugin</artifactId>
            <executions>
              <execution>
                <phase>initialize</phase>
                <goals>
                  <goal>echo</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <echos>
                <echo>Profile: performRelease property is activated '${performRelease}'.</echo>
              </echos>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
{code}

If I use Maven 3.3.9 (also 3.0.5, 3.1.1, 3.2.5) and run it like this:
{code}
~/ws-git-maven-bugs/profiles (master)$ mvn initialize
[INFO] Scanning for projects...
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Building example 1.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 0.401 s
[INFO] Finished at: 2016-07-23T18:11:47+02:00
[INFO] Final Memory: 7M/245M
[INFO] ------------------------------------------------------------------------
{code}
If I run the current master of Maven Core (sha: 90f26c279af9738735be8f84f60dcf21b6244e24) I got the following result:
{code}
~/ws-git-maven-bugs/profiles (master)$ ~/tools/maven-test/apache-maven-3.4.0-SNAPSHOT/bin/mvn initialize
[INFO] Scanning for projects...
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Building example 1.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO]
[INFO] --- echo-maven-plugin:0.3.0:echo (default) @ example ---
[INFO] Profile: performRelease property is activated '${performRelease}'.
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 0.478 s
[INFO] Finished at: 2016-07-23T18:12:54+02:00
[INFO] Final Memory: 9M/245M
[INFO] ------------------------------------------------------------------------
{code}

This means the profile will be erroneously activated but the property does not contain a value.

If I add an id to the profile like this:

{code:xml}
  <profiles>
    <profile>
      <id>an-other-profile</id>
      <activation>
        <property>
          <name>performRelease</name>
          <value>true</value>
        </property>
      </activation>
  ..
{code}
It will produce the following (correct) result:
{code}
~/ws-git-maven-bugs/profiles (master *)$ ~/tools/maven-test/apache-maven-3.4.0-SNAPSHOT/bin/mvn initialize
[INFO] Scanning for projects...
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Building example 1.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 0.279 s
[INFO] Finished at: 2016-07-23T18:18:23+02:00
[INFO] Final Memory: 8M/245M
[INFO] ------------------------------------------------------------------------
{code}

I have create a full working example here: https://github.com/khmarbaise/mng-6070","~/ws-git-maven-bugs/profiles (master)$ ~/tools/maven-test/apache-maven-3.4.0-SNAPSHOT/bin/mvn --version
Apache Maven 3.4.0-SNAPSHOT (90f26c279af9738735be8f84f60dcf21b6244e24; 2016-07-23T16:24:50+02:00)
Maven home: /Users/kama/tools/maven-test/apache-maven-3.4.0-SNAPSHOT
Java version: 1.7.0_79, vendor: Oracle Corporation
Java home: /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre
Default locale: en_US, platform encoding: UTF-8
OS name: ""Mac OS X"", version: ""10.8.5"", arch: ""x86_64"", family: ""Unix""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i31f3z:",9223372036854775807,,,,,,,,,,,,,,,,,,,"23/Jul/16 17:35;khmarbaise;For test purposes I have change the class {{PropertyProfileActivator.java}} by using the following content which just prints out some supplemental informations:
{code:java}
package org.apache.maven.model.profile.activation;

/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * ""License""); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import org.apache.maven.model.Activation;
import org.apache.maven.model.ActivationProperty;
import org.apache.maven.model.Profile;
import org.apache.maven.model.building.ModelProblem.Severity;
import org.apache.maven.model.building.ModelProblem.Version;
import org.apache.maven.model.building.ModelProblemCollector;
import org.apache.maven.model.building.ModelProblemCollectorRequest;
import org.apache.maven.model.profile.ProfileActivationContext;
import org.codehaus.plexus.component.annotations.Component;
import org.codehaus.plexus.util.StringUtils;

/**
 * Determines profile activation based on the existence or value of some execution property.
 *
 * @author Benjamin Bentmann
 * @see ActivationProperty
 */
@Component( role = ProfileActivator.class, hint = ""property"" )
public class PropertyProfileActivator
    implements ProfileActivator
{
    @Override
    public boolean isActive( Profile profile, ProfileActivationContext context, ModelProblemCollector problems )
    {
        System.out.println( ""PropertyProfileActivator"" );

        Activation activation = profile.getActivation();

        if ( activation == null )
        {
            return false;
        }

        ActivationProperty property = activation.getProperty();

        if ( property == null )
        {
            return false;
        }

        String name = property.getName();
        boolean reverseName = false;

        System.out.println( ""PropertyProfileActivator name: "" + name  );

        if ( name != null && name.startsWith( ""!"" ) )
        {
            reverseName = true;
            name = name.substring( 1 );
        }

        if ( name == null || name.length() <= 0 )
        {
            problems.add( new ModelProblemCollectorRequest( Severity.ERROR, Version.BASE )
                    .setMessage( ""The property name is required to activate the profile "" + profile.getId() )
                    .setLocation( property.getLocation( """" ) ) );
            return false;
        }

        System.out.println( ""PropertyProfileActivator name: "" + name  );

        String sysValue = context.getUserProperties().get( name );
        if ( sysValue == null )
        {
            sysValue = context.getSystemProperties().get( name );
        }

        String propValue = property.getValue();
        System.out.println( ""PropertyProfileActivator propValue: "" + propValue  );
        if ( StringUtils.isNotEmpty( propValue ) )
        {
            boolean reverseValue = false;
            if ( propValue.startsWith( ""!"" ) )
            {
                reverseValue = true;
                propValue = propValue.substring( 1 );
            }

            // we have a value, so it has to match the system value...
            boolean result = propValue.equals( sysValue );

            System.out.println( ""PropertyProfileActivator propValue:"" + propValue + ""="" + sysValue + "" result: "" + result );

            return reverseValue ? !result : result;
        }
        else
        {
            boolean result = StringUtils.isNotEmpty( sysValue );

            return reverseName ? !result : result;
        }
    }

    @Override
    public boolean presentInConfig( Profile profile, ProfileActivationContext context, ModelProblemCollector problems )
    {
        Activation activation = profile.getActivation();

        if ( activation == null )
        {
            return false;
        }

        ActivationProperty property = activation.getProperty();

        if ( property == null )
        {
            return false;
        }
        return true;
    }

}
{code}
And now the important things are coming:
If I use Maven 3.3.9 with the above modification I got this here:
{code}
~/ws-git-maven-bugs/profiles (master)$ ~/tools/maven-test/apache-maven-3.3.9/bin/mvn initialize
[INFO] Scanning for projects...
PropertyProfileActivator
PropertyProfileActivator name: performRelease
PropertyProfileActivator name: performRelease
PropertyProfileActivator propValue: true
PropertyProfileActivator propValue:true=null result: false
PropertyProfileActivator
PropertyProfileActivator name: performRelease
PropertyProfileActivator name: performRelease
PropertyProfileActivator propValue: true
PropertyProfileActivator propValue:true=null result: false
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Building example 1.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 0.270 s
[INFO] Finished at: 2016-07-23T19:31:45+02:00
[INFO] Final Memory: 7M/245M
[INFO] ------------------------------------------------------------------------
{code}
And now if we take a look into Maven 3.4.0-SNASHOT with the same modifications:
{code}
~/ws-git-maven-bugs/profiles (master)$ ~/tools/maven-test/apache-maven-3.4.0-SNAPSHOT/bin/mvn initialize
[INFO] Scanning for projects...
PropertyProfileActivator
PropertyProfileActivator name: performRelease
PropertyProfileActivator name: performRelease
PropertyProfileActivator propValue: true
PropertyProfileActivator propValue:true=null result: false
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Building example 1.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
PropertyProfileActivator
PropertyProfileActivator name: performRelease
PropertyProfileActivator name: performRelease
PropertyProfileActivator propValue: true
PropertyProfileActivator propValue:true=null result: false
PropertyProfileActivator
PropertyProfileActivator name: !env.TRAVIS
PropertyProfileActivator name: env.TRAVIS
PropertyProfileActivator propValue: null
PropertyProfileActivator
PropertyProfileActivator name: performRelease
PropertyProfileActivator name: performRelease
PropertyProfileActivator propValue: true
PropertyProfileActivator propValue:true=null result: false
[INFO]
[INFO] --- echo-maven-plugin:0.3.0:echo (default) @ example ---
PropertyProfileActivator
PropertyProfileActivator name: performRelease
PropertyProfileActivator name: performRelease
PropertyProfileActivator propValue: true
PropertyProfileActivator propValue:true=null result: false
PropertyProfileActivator
PropertyProfileActivator name: !env.TRAVIS
PropertyProfileActivator name: env.TRAVIS
PropertyProfileActivator propValue: null
PropertyProfileActivator
PropertyProfileActivator name: performRelease
PropertyProfileActivator name: performRelease
PropertyProfileActivator propValue: true
PropertyProfileActivator propValue:true=null result: false
PropertyProfileActivator
PropertyProfileActivator name: performRelease
PropertyProfileActivator name: performRelease
PropertyProfileActivator propValue: true
PropertyProfileActivator propValue:true=null result: false
[INFO] Profile: performRelease property is activated '${performRelease}'.
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 0.677 s
[INFO] Finished at: 2016-07-23T19:34:14+02:00
[INFO] Final Memory: 9M/245M
[INFO] ------------------------------------------------------------------------
{code}

The above gives me the hint that the profile from my Plugin (echo-maven-plugin) is somehow leaking into the current project which I can identify based on the variable: {{!env.TRAVIS}} which is defined in the pom file of the {{echo-maven-plugin}} or be more accurate in it's parent...;;;","23/Jul/16 18:18;schulte77;This is due to the addition of a profile with identifier {{default}} to the global {{settings.xml}} which is active by default. Updated that id to use a UUID instead. See commit [6d9ffe351814f5482def88066ce9dd2011567689|https://git-wip-us.apache.org/repos/asf?p=maven.git;a=commit;h=6d9ffe351814f5482def88066ce9dd2011567689].
;;;","11/Nov/16 22:41;schulte77;This was caused when the central repository was removed from the 4.0.0 super POM during development of Maven 3.4. The central repository has been restored in the 4.0.0 super POM recently so this is no longer an issue and should not appear in any release notes.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Problem with CI friendly usage of ${..} reactor order is changed,MNG-6057,12986465,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,khmarbaise,khmarbaise,khmarbaise,03/Jul/16 12:28,28/Mar/20 15:01,03/Jan/22 13:13,13/Mar/17 21:53,3.2.1,3.3.1,3.3.9,,,3.5.0,3.5.0-beta-1,,,,,,,0,,,,"If I use the feature to define the revision in a property like {{revision}}, {{changelist}} or {{sha1}} the order of the reactor during the build is changed. The parent is not executed first it is executed last.

https://github.com/khmarbaise/javaee (The mvn321 branch of it):
So tested with Maven 3.2.5, 3.3.1, 3.3.9
First run via {{mvn clean package}}
and than:
{code}
~/ws-git/javaee (mvn321 *)$ mvn --version
Apache Maven 3.3.1 (cab6659f9874fa96462afef40fcf6bc033d58c1c; 2015-03-13T21:10:27+01:00)
Maven home: /usr/share/maven
Java version: 1.7.0_79, vendor: Oracle Corporation
Java home: /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre
Default locale: en_US, platform encoding: UTF-8
OS name: ""mac os x"", version: ""10.8.5"", arch: ""x86_64"", family: ""mac""

$ mvn clean package -Drevision=2.9.87-SNAPSHOT | tee mvn.log
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Build Order:
[INFO]
[INFO] domain
[INFO] service-client
[INFO] webgui
[INFO] service
[INFO] app
[INFO] appasm
[INFO] shade
[INFO] assembly
[INFO] parent
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Building domain 2.9.87-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO]
[INFO] --- maven-clean-plugin:3.0.0:clean (default-clean) @ domain ---
[INFO] Deleting /Users/kama/ws-git/javaee/domain/target
[INFO]
[INFO] --- maven-resources-plugin:3.0.1:resources (default-resources) @ domain ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /Users/kama/ws-git/javaee/domain/src/main/resources
[INFO]
[INFO] --- maven-compiler-plugin:3.5.1:compile (default-compile) @ domain ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 1 source file to /Users/kama/ws-git/javaee/domain/target/classes
[INFO]
[INFO] --- maven-resources-plugin:3.0.1:testResources (default-testResources) @ domain ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /Users/kama/ws-git/javaee/domain/src/test/resources
[INFO]
[INFO] --- maven-compiler-plugin:3.5.1:testCompile (default-testCompile) @ domain ---
[INFO] No sources to compile
[INFO]
[INFO] --- maven-surefire-plugin:2.19.1:test (default-test) @ domain ---
[INFO] No tests to run.
[INFO]
[INFO] --- maven-jar-plugin:3.0.2:jar (default-jar) @ domain ---
[INFO] Building jar: /Users/kama/ws-git/javaee/domain/target/domain-2.9.87-SNAPSHOT.jar
[INFO]
[INFO] --- maven-site-plugin:3.5.1:attach-descriptor (attach-descriptor) @ domain ---
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Building service-client 2.9.87-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO]
[INFO] --- maven-clean-plugin:3.0.0:clean (default-clean) @ service-client ---
[INFO] Deleting /Users/kama/ws-git/javaee/service-client/target
[INFO]
[INFO] --- maven-resources-plugin:3.0.1:resources (default-resources) @ service-client ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /Users/kama/ws-git/javaee/service-client/src/main/resources
[INFO]
[INFO] --- maven-compiler-plugin:3.5.1:compile (default-compile) @ service-client ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 1 source file to /Users/kama/ws-git/javaee/service-client/target/classes
[INFO]
[INFO] --- maven-resources-plugin:3.0.1:testResources (default-testResources) @ service-client ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /Users/kama/ws-git/javaee/service-client/src/test/resources
[INFO]
[INFO] --- maven-compiler-plugin:3.5.1:testCompile (default-testCompile) @ service-client ---
[INFO] No sources to compile
[INFO]
[INFO] --- maven-surefire-plugin:2.19.1:test (default-test) @ service-client ---
[INFO] No tests to run.
[INFO]
[INFO] --- maven-jar-plugin:3.0.2:jar (default-jar) @ service-client ---
[INFO] Building jar: /Users/kama/ws-git/javaee/service-client/target/service-client-2.9.87-SNAPSHOT.jar
[INFO]
[INFO] --- maven-site-plugin:3.5.1:attach-descriptor (attach-descriptor) @ service-client ---
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Building webgui 2.9.87-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO]
[INFO] --- maven-clean-plugin:3.0.0:clean (default-clean) @ webgui ---
[INFO] Deleting /Users/kama/ws-git/javaee/webgui/target
[INFO]
[INFO] --- maven-resources-plugin:3.0.1:resources (default-resources) @ webgui ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 0 resource
[INFO]
[INFO] --- maven-compiler-plugin:3.5.1:compile (default-compile) @ webgui ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 1 source file to /Users/kama/ws-git/javaee/webgui/target/classes
[INFO]
[INFO] --- maven-resources-plugin:3.0.1:testResources (default-testResources) @ webgui ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /Users/kama/ws-git/javaee/webgui/src/test/resources
[INFO]
[INFO] --- maven-compiler-plugin:3.5.1:testCompile (default-testCompile) @ webgui ---
[INFO] No sources to compile
[INFO]
[INFO] --- maven-surefire-plugin:2.19.1:test (default-test) @ webgui ---
[INFO] No tests to run.
[INFO]
[INFO] --- maven-war-plugin:2.6:war (default-war) @ webgui ---
[INFO] Packaging webapp
[INFO] Assembling webapp [webgui] in [/Users/kama/ws-git/javaee/webgui/target/webgui-2.9.87-SNAPSHOT]
[INFO] Processing war project
[INFO] Copying webapp resources [/Users/kama/ws-git/javaee/webgui/src/main/webapp]
[INFO] Webapp assembled in [37 msecs]
[INFO] Building war: /Users/kama/ws-git/javaee/webgui/target/webgui-2.9.87-SNAPSHOT.war
[INFO]
[INFO] --- maven-site-plugin:3.5.1:attach-descriptor (attach-descriptor) @ webgui ---
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Building service 2.9.87-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO]
[INFO] --- maven-clean-plugin:3.0.0:clean (default-clean) @ service ---
[INFO] Deleting /Users/kama/ws-git/javaee/service/target
[INFO]
[INFO] --- maven-resources-plugin:3.0.1:resources (default-resources) @ service ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /Users/kama/ws-git/javaee/service/src/main/resources
[INFO]
[INFO] --- maven-compiler-plugin:3.5.1:compile (default-compile) @ service ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 1 source file to /Users/kama/ws-git/javaee/service/target/classes
[INFO]
[INFO] --- maven-resources-plugin:3.0.1:testResources (default-testResources) @ service ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /Users/kama/ws-git/javaee/service/src/test/resources
[INFO]
[INFO] --- maven-compiler-plugin:3.5.1:testCompile (default-testCompile) @ service ---
[INFO] No sources to compile
[INFO]
[INFO] --- maven-surefire-plugin:2.19.1:test (default-test) @ service ---
[INFO] No tests to run.
[INFO]
[INFO] --- maven-ejb-plugin:2.5.1:ejb (default-ejb) @ service ---
[INFO] Building EJB service-2.9.87-SNAPSHOT with EJB version 3.1
[INFO] Building jar: /Users/kama/ws-git/javaee/service/target/service-2.9.87-SNAPSHOT.jar
[INFO]
[INFO] --- maven-site-plugin:3.5.1:attach-descriptor (attach-descriptor) @ service ---
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Building app 2.9.87-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO]
[INFO] --- maven-clean-plugin:3.0.0:clean (default-clean) @ app ---
[INFO] Deleting /Users/kama/ws-git/javaee/app/target
[INFO]
[INFO] --- maven-ear-plugin:2.10.1:generate-application-xml (default-generate-application-xml) @ app ---
[INFO] Generating application.xml
[INFO]
[INFO] --- maven-resources-plugin:3.0.1:resources (default-resources) @ app ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /Users/kama/ws-git/javaee/app/src/main/resources
[INFO]
[INFO] --- maven-ear-plugin:2.10.1:ear (default-ear) @ app ---
[INFO] Copying artifact [war:com.soebes.examples.j2ee:webgui:2.9.87-SNAPSHOT] to [webgui-2.9.87-SNAPSHOT.war]
[INFO] Copying artifact [ejb:com.soebes.examples.j2ee:service:2.9.87-SNAPSHOT] to [service-2.9.87-SNAPSHOT.jar]
[INFO] Copying artifact [jar:com.soebes.examples.j2ee:service-client:2.9.87-SNAPSHOT] to [service-client-2.9.87-SNAPSHOT.jar]
[INFO] Copying artifact [jar:com.soebes.examples.j2ee:domain:2.9.87-SNAPSHOT] to [domain-2.9.87-SNAPSHOT.jar]
[INFO] Copying artifact [jar:log4j:log4j:1.2.16] to [log4j-1.2.16.jar]
[INFO] Could not find manifest file: /Users/kama/ws-git/javaee/app/target/app-2.9.87-SNAPSHOT/META-INF/MANIFEST.MF - Generating one
[INFO] Building jar: /Users/kama/ws-git/javaee/app/target/app-2.9.87-SNAPSHOT.ear
[INFO]
[INFO] --- maven-site-plugin:3.5.1:attach-descriptor (attach-descriptor) @ app ---
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Building appasm 2.9.87-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO]
[INFO] --- maven-clean-plugin:3.0.0:clean (default-clean) @ appasm ---
[INFO] Deleting /Users/kama/ws-git/javaee/appasm/target
[INFO]
[INFO] --- maven-site-plugin:3.5.1:attach-descriptor (attach-descriptor) @ appasm ---
[INFO]
[INFO] --- appassembler-maven-plugin:1.10:assemble (package) @ appasm ---
[INFO] Installing artifact /Users/kama/ws-git/javaee/webgui/target/webgui-2.9.87-SNAPSHOT.war to /Users/kama/ws-git/javaee/appasm/target/appassembler/repo/webgui-2.9.87-SNAPSHOT.war
[INFO] Installing artifact /Users/kama/ws-git/javaee/service/target/service-2.9.87-SNAPSHOT.jar to /Users/kama/ws-git/javaee/appasm/target/appassembler/repo/service-2.9.87-SNAPSHOT.jar
[INFO] Installing artifact /Users/kama/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar to /Users/kama/ws-git/javaee/appasm/target/appassembler/repo/log4j-1.2.16.jar
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Building shade 2.9.87-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO]
[INFO] --- maven-clean-plugin:3.0.0:clean (default-clean) @ shade ---
[INFO] Deleting /Users/kama/ws-git/javaee/shade/target
[INFO]
[INFO] --- maven-resources-plugin:3.0.1:resources (default-resources) @ shade ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /Users/kama/ws-git/javaee/shade/src/main/resources
[INFO]
[INFO] --- maven-compiler-plugin:3.5.1:compile (default-compile) @ shade ---
[INFO] No sources to compile
[INFO]
[INFO] --- maven-resources-plugin:3.0.1:testResources (default-testResources) @ shade ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /Users/kama/ws-git/javaee/shade/src/test/resources
[INFO]
[INFO] --- maven-compiler-plugin:3.5.1:testCompile (default-testCompile) @ shade ---
[INFO] No sources to compile
[INFO]
[INFO] --- maven-surefire-plugin:2.19.1:test (default-test) @ shade ---
[INFO] No tests to run.
[INFO]
[INFO] --- maven-jar-plugin:3.0.2:jar (default-jar) @ shade ---
[WARNING] JAR will be empty - no content was marked for inclusion!
[INFO] Building jar: /Users/kama/ws-git/javaee/shade/target/shade-2.9.87-SNAPSHOT.jar
[INFO]
[INFO] --- maven-site-plugin:3.5.1:attach-descriptor (attach-descriptor) @ shade ---
[INFO]
[INFO] --- maven-shade-plugin:2.4.2:shade (test) @ shade ---
[INFO] Including com.soebes.examples.j2ee:webgui:war:2.9.87-SNAPSHOT in the shaded jar.
[INFO] Including com.soebes.examples.j2ee:service:ejb:2.9.87-SNAPSHOT in the shaded jar.
[INFO] Including com.soebes.examples.j2ee:service-client:jar:2.9.87-SNAPSHOT in the shaded jar.
[INFO] Including com.soebes.examples.j2ee:domain:jar:2.9.87-SNAPSHOT in the shaded jar.
[INFO] Including log4j:log4j:jar:1.2.16 in the shaded jar.
[INFO] Attaching shaded artifact.
[INFO]
[INFO] --- maven-shade-plugin:2.4.2:shade (dev) @ shade ---
[INFO] Including com.soebes.examples.j2ee:webgui:war:2.9.87-SNAPSHOT in the shaded jar.
[INFO] Including com.soebes.examples.j2ee:service:ejb:2.9.87-SNAPSHOT in the shaded jar.
[INFO] Including com.soebes.examples.j2ee:service-client:jar:2.9.87-SNAPSHOT in the shaded jar.
[INFO] Including com.soebes.examples.j2ee:domain:jar:2.9.87-SNAPSHOT in the shaded jar.
[INFO] Including log4j:log4j:jar:1.2.16 in the shaded jar.
[INFO] Attaching shaded artifact.
[INFO]
[INFO] --- maven-shade-plugin:2.4.2:shade (prod) @ shade ---
[INFO] Including com.soebes.examples.j2ee:webgui:war:2.9.87-SNAPSHOT in the shaded jar.
[INFO] Including com.soebes.examples.j2ee:service:ejb:2.9.87-SNAPSHOT in the shaded jar.
[INFO] Including com.soebes.examples.j2ee:service-client:jar:2.9.87-SNAPSHOT in the shaded jar.
[INFO] Including com.soebes.examples.j2ee:domain:jar:2.9.87-SNAPSHOT in the shaded jar.
[INFO] Including log4j:log4j:jar:1.2.16 in the shaded jar.
[INFO] Attaching shaded artifact.
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Building assembly 2.9.87-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO]
[INFO] --- maven-clean-plugin:3.0.0:clean (default-clean) @ assembly ---
[INFO] Deleting /Users/kama/ws-git/javaee/assembly/target
[INFO]
[INFO] --- maven-site-plugin:3.5.1:attach-descriptor (attach-descriptor) @ assembly ---
[INFO]
[INFO] --- maven-assembly-plugin:2.6:single (assemblies) @ assembly ---
[INFO] Reading assembly descriptor: assembly.xml
[INFO] Reading assembly descriptor: jar-with-prod.xml
[INFO] Reading assembly descriptor: jar-with-dev.xml
[INFO] Building zip: /Users/kama/ws-git/javaee/assembly/target/assembly-2.9.87-SNAPSHOT-archive.zip
[INFO] Building jar: /Users/kama/ws-git/javaee/assembly/target/assembly-2.9.87-SNAPSHOT-prod.jar
[INFO] Building jar: /Users/kama/ws-git/javaee/assembly/target/assembly-2.9.87-SNAPSHOT-dev.jar
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Building parent 2.9.87-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO]
[INFO] --- maven-clean-plugin:3.0.0:clean (default-clean) @ parent ---
[INFO]
[INFO] --- maven-site-plugin:3.5.1:attach-descriptor (attach-descriptor) @ parent ---
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO]
[INFO] domain ............................................. SUCCESS [  1.741 s]
[INFO] service-client ..................................... SUCCESS [  0.069 s]
[INFO] webgui ............................................. SUCCESS [  0.469 s]
[INFO] service ............................................ SUCCESS [  0.349 s]
[INFO] app ................................................ SUCCESS [  0.236 s]
[INFO] appasm ............................................. SUCCESS [  0.192 s]
[INFO] shade .............................................. SUCCESS [  0.419 s]
[INFO] assembly ........................................... SUCCESS [  1.018 s]
[INFO] parent ............................................. SUCCESS [  0.003 s]
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 4.962 s
[INFO] Finished at: 2016-07-03T14:31:18+02:00
[INFO] Final Memory: 43M/708M
[INFO] ------------------------------------------------------------------------{code}
Which is very interesting to observe that the order in the reactor has been changed which means the {{parent}} is the last element instead of being the first...
",,,,,,,,,,,,,MNG-6090,,,,,,,,,,,,,,,MNG-5895,MNG-6438,MNG-6383,MNG-5576,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i30h7z:",9223372036854775807,,,,,,,,,,,,,,,,,,,"03/Jul/16 12:33;khmarbaise;The {{DefaultModelBuilder}} contains a private method:
{code:java}
private Model interpolateModel( Model model, ModelBuildingRequest request, ModelProblemCollector problems )
{
     // save profile activations before interpolation, since they are evaluated with limited scope
     Map<String, Activation> originalActivations = getProfileActivations( model, true );

     Model result = modelInterpolator.interpolateModel( model, model.getProjectDirectory(), 
                            request, problems );
   ..
}
{code}

which interpolates the usual part of the model but leaves the parent entry untouched. A short PoC hack showed me that If i do something like this (HACK for testing purposes only):
{code:java}
private Model interpolateModel( Model model, ModelBuildingRequest request, ModelProblemCollector problems )
{
    // save profile activations before interpolation, since they are evaluated with limited scope
    Map<String, Activation> originalActivations = getProfileActivations( model, true );

    Model result = modelInterpolator.interpolateModel( model, model.getProjectDirectory(), request, problems );
        if (result.getParent() != null) {
            
            String version = result.getParent().getVersion();
            if (version != null) {
                //FIXME: Hack First (WILL NOT WORK in all cases!!!!)
                if (version.contains( ""${revision}"" )) {
                    String property = request.getUserProperties().getProperty( ""revision"");
                    result.getParent().setVersion( property );
                }
                if (version.contains( ""${changelist}"" )) {
                    String property = request.getUserProperties().getProperty( ""changelist"");
                    result.getParent().setVersion( property );
                }
                if (version.contains( ""${sha1}"" )) {
                    String property = request.getUserProperties().getProperty( ""sha1"");
                    result.getParent().setVersion( property );
                }
            }
          
        }
        result.setPomFile( model.getPomFile() );

        // restore profiles with file activation to their value before full interpolation
        injectProfileActivations( model, originalActivations );

        return result;
    }
{code}
This shows that the ordering problem in the reactor is solved with this HACK (limited use case).
So now i need to find a more elegant way to do that same...
;;;","04/Jul/16 20:05;khmarbaise;So using the following code
{code:java}
        Model interpolatedModel = modelInterpolator.interpolateModel( model, model.getProjectDirectory(), request, problems );
        if ( interpolatedModel.getParent() != null )
        {
            StringSearchInterpolator ssi = new StringSearchInterpolator();
            ssi.addValueSource( new MapBasedValueSource( request.getUserProperties() ) );

            ssi.addValueSource( new MapBasedValueSource( model.getProperties() ) );

            ssi.addValueSource( new MapBasedValueSource( request.getSystemProperties() ) );

            try
            {
                String interpolated = ssi.interpolate( interpolatedModel.getParent().getVersion() );
                interpolatedModel.getParent().setVersion( interpolated );
            }
            catch ( Exception e )
            {
                ModelProblemCollectorRequest mpcr = new ModelProblemCollectorRequest( Severity.ERROR, Version.BASE )
                    .setMessage(
                                ""Failed to interpolate field: "" + interpolatedModel.getParent().getVersion() + "" on class: ""
                                    ).setException(e );
                problems.add( mpcr );
            }

        }
        interpolatedModel.setPomFile( model.getPomFile() );

{code}
produces correct results.;;;","05/Jul/16 20:32;khmarbaise;Fixed in [dca6a2cceca575d05c1c4bcdfea9edf7ef83a17e|https://git-wip-us.apache.org/repos/asf?p=maven.git;a=commitdiff;h=dca6a2cceca575d05c1c4bcdfea9edf7ef83a17e];;;","05/Jul/16 20:47;hudson;FAILURE: Integrated in maven-3.x #1332 (See [https://builds.apache.org/job/maven-3.x/1332/])
[MNG-6057] Problem with CI friendly usage of ${..} reactor order is (khmarbaise: rev dca6a2cceca575d05c1c4bcdfea9edf7ef83a17e)
* maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilder.java
;;;","09/Jan/17 09:56;stephenc;Maven 3.4.0 has been dropped. See [this thread|https://mail-archives.apache.org/mod_mbox/maven-dev/201701.mbox/%3CCA%2BnPnMx-e7kGYy3Hp87v8hLGdhp1q%3DtKLx_6QuZ4kGUqHEBGcw%40mail.gmail.com%3E] for more details.

This issue will need to be re-scheduled for a Maven release in the (hopefully near) future.;;;","01/Mar/17 19:23;khmarbaise;Working version in [82548dbc84bea2e0ab95316c809239dd22433055|https://git-wip-us.apache.org/repos/asf?p=maven.git;a=commitdiff;h=82548dbc84bea2e0ab95316c809239dd22433055];;;","13/Mar/17 22:00;hudson;SUCCESS: Integrated in Jenkins build maven-3.x #1568 (See [https://builds.apache.org/job/maven-3.x/1568/])
[MNG-6090] CI friendly properties break submodule builds [MNG-6057] (khmarbaise: [http://git-wip-us.apache.org/repos/asf/?p=maven.git&a=commit&h=51cc76c32625be2f807dcf2ffbeb085984729b57])
* (edit) maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilder.java
* (edit) maven-compat/src/main/java/org/apache/maven/artifact/resolver/DefaultArtifactResolver.java
* (edit) maven-model-builder/src/main/java/org/apache/maven/model/interpolation/AbstractStringBasedModelInterpolator.java
* (edit) maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java
;;;","28/Mar/20 15:01;hudson;Build failed in Jenkins: Maven TLP » maven-studies » maven-metrics #4

See https://builds.apache.org/job/maven-box/job/maven-studies/job/maven-metrics/4/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Moving from Maven 3.2.5 or older to Maven 3.3.1 or newer breaks maven-antrun-plugin,MNG-6031,12974269,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Duplicate,,andrei.serea,andrei.serea,31/May/16 16:09,17/Aug/16 20:20,03/Jan/22 13:13,17/Aug/16 20:10,3.3.3,3.3.9,,,,,,,Class Loading,Core,,,,1,,,,"Running with maven-antrun-plugin an ant target that requires SLF4J breaks with a NoClassDefFoundError.

The example attached calls the cobertura-merge ant task and the error is:
Exception in thread ""main"" java.lang.NoClassDefFoundError: org/slf4j/LoggerFactory

{code}
[INFO] Scanning for projects...
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building Cobertura Merge test 1.12-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ cobertura-report ---
[INFO] Deleting C:\IBXProjects\SUE\git\discovery\src\java\cobertura\target
[INFO] 
[INFO] --- maven-antrun-plugin:1.8:run (cobertura-merge-base) @ cobertura-report ---
[INFO] Executing tasks

main:
[cobertura-merge] Cobertura 2.1.1 - GNU GPL License (NO WARRANTY) - See COPYRIGHT file
[cobertura-merge] Exception in thread ""main"" java.lang.NoClassDefFoundError: org/slf4j/LoggerFactory
[cobertura-merge] 	at net.sourceforge.cobertura.util.CommandLineBuilder.<clinit>(CommandLineBuilder.java:73)
[cobertura-merge] 	at net.sourceforge.cobertura.merge.MergeMain.merge(MergeMain.java:66)
[cobertura-merge] 	at net.sourceforge.cobertura.merge.MergeMain.main(MergeMain.java:77)
[cobertura-merge] Caused by: java.lang.ClassNotFoundException: org.slf4j.LoggerFactory
[cobertura-merge] 	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
[cobertura-merge] 	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
[cobertura-merge] 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
[cobertura-merge] 	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
[cobertura-merge] 	... 3 more
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 2.265 s
[INFO] Finished at: 2016-05-31T18:59:31+03:00
[INFO] Final Memory: 9M/119M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-antrun-plugin:1.8:run (cobertura-merge-base) on project cobertura-report: An Ant BuildException has occured: Error running reports. See messages above.
[ERROR] around Ant part ...<cobertura-merge datafile=""C:\.......\cobertura\target/cobertura/cobertura.ser"">... @ 5:114 in C:\..........\cobertura\target\antrun\build-main.xml
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
{code}


The pom used:

{code}
<?xml version=""1.0"" encoding=""UTF-8""?>
<project
	xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd""
	xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<modelVersion>4.0.0</modelVersion>
	<properties>
		<cobertura.version>2.1.1</cobertura.version>
	</properties>

	<groupId>org.tests</groupId>
	<artifactId>cobertura-report</artifactId>
	<version>1.12-SNAPSHOT</version>
	<name>Cobertura Merge test</name>
	<packaging>pom</packaging>

	<build>
		<finalName>cobertura-report</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<dependencies>
					<dependency>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
						<version>1.7.5</version>
					</dependency>
					<dependency>
						<groupId>net.sourceforge.cobertura</groupId>
						<artifactId>cobertura</artifactId>
						<version>${cobertura.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<!-- restart the wildfly servers at the beginning-->
					<execution>
						<id>cobertura-merge-base</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<taskdef name=""cobertura-merge"" classname=""net.sourceforge.cobertura.ant.MergeTask"" classpathref=""maven.plugin.classpath""/>
								<cobertura-merge datafile=""${project.build.directory}/cobertura/cobertura.ser"">
									<fileset dir=""${project.basedir}/../"">
										<include name=""*.ser""/>
									</fileset>
								</cobertura-merge>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>

{code}","Windows 7, JDK 1.8.0_51",,,,,,,,,,,,,,,,,,,,,,,MNG-6024,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/May/16 16:10;andrei.serea;pom.xml;https://issues.apache.org/jira/secure/attachment/12807193/pom.xml",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i2yqvz:",9223372036854775807,,,,,,,,,,,,,,,,,,,"31/May/16 21:39;khmarbaise;Why are you using antrun instead of [cobertura-maven-plugin|http://www.mojohaus.org/cobertura-maven-plugin/] ?;;;","01/Jun/16 04:56;andrei.serea;Well, the class loading problem is valid for any ant task that uses the slf4j library.
For this case in particular, I cannot switch to cobertura-maven-plugin because, for some reason, it lacks the cobertura-merge goal which I need to implement an integration-tests scenario similar to the one described on [their page|http://www.mojohaus.org/cobertura-maven-plugin/cobertura-integration-test-mojo.html].;;;","01/Jun/16 17:50;schulte77;Can you please test the issue also exists in a recent [3.4-SNAPSHOT|https://builds.apache.org/view/All/job/maven-3.3-release-status-build/] build.;;;","02/Jun/16 20:51;michael-o;{noformat}
$ /d/apache-maven-3.4.0-SNAPSHOT/bin/mvn -V verify
Apache Maven 3.4.0-SNAPSHOT (c5fb05140fdc1163982b72182edbe258a4792809; 2016-05-27T23:26:26+02:00)
Maven home: D:\apache-maven-3.4.0-SNAPSHOT
Java version: 1.8.0_72, vendor: Oracle Corporation
Java home: C:\Program Files\Java\jdk1.8.0_72\jre
Default locale: de_DE, platform encoding: Cp1252
OS name: ""Windows 10"", version: ""10.0"", arch: ""amd64"", family: ""Windows""
[INFO] Scanning for projects...
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Building Cobertura Merge test 1.12-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO]
[INFO] --- maven-antrun-plugin:1.8:run (cobertura-merge-base) @ cobertura-report ---
[INFO] Executing tasks

main:
[cobertura-merge] Cobertura 2.1.1 - GNU GPL License (NO WARRANTY) - See COPYRIGHT file
[cobertura-merge] Exception in thread ""main"" java.lang.NoClassDefFoundError: org/slf4j/LoggerFactory
[cobertura-merge]       at net.sourceforge.cobertura.util.CommandLineBuilder.<clinit>(CommandLineBuilder.java:73)
[cobertura-merge]       at net.sourceforge.cobertura.merge.MergeMain.merge(MergeMain.java:66)
[cobertura-merge]       at net.sourceforge.cobertura.merge.MergeMain.main(MergeMain.java:77)
[cobertura-merge] Caused by: java.lang.ClassNotFoundException: org.slf4j.LoggerFactory
[cobertura-merge]       at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
[cobertura-merge]       at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
[cobertura-merge]       at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
[cobertura-merge]       at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
[cobertura-merge]       ... 3 more
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 0.804 s
[INFO] Finished at: 2016-06-02T22:50:36+02:00
[INFO] Final Memory: 7M/241M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-antrun-plugin:1.8:run (cobertura-merge-base) on project cobertura-report: An Ant BuildException has occured: Error running reports. See messages above.
[ERROR] around Ant part ...<cobertura-merge datafile=""D:\Entwicklung\Projekte\target/cobertura/cobertura.ser"">... @ 5:86 in D:\Entwicklung\Projekte\target\antrun\build-main.xml
[ERROR] -> [Help 1]
[ERROR]
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR]
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
{noformat};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade of slf4j-simple to a version later than 1.7.16 blocked by upstream issue.,MNG-6023,12969873,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Done,schulte77,michael-o,michael-o,16/May/16 00:11,02/Jan/17 21:31,03/Jan/22 13:13,21/Dec/16 15:02,,,,,,,,,Command Line,Logging,,,,0,,,,"In [ce580ea2fafd7638ee56e1d0574de95a37164322|https://git-wip-us.apache.org/repos/asf?p=maven.git;a=commit;h=ce580ea2fafd7638ee56e1d0574de95a37164322] SLF4J was updated from 1.7.16 to 1.7.21. Use a snapshot of that commit and run {{mvn -X}} and see that no debug output is printed. Something is either broken in our code now or in SLF4J Simple.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-5967,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i2xzsf:",9223372036854775807,,,,,,,,,,,,,,,,,,,"18/May/16 21:05;michael-o;Christian, I have targeted this issue to 3.4.0 not to be forgotten because I have IT failures. If this won't get resolved before 3.4.0, we should drop the commit and go on for now.;;;","10/Jun/16 20:35;michael-o;Since this is not going to be fixed anytime soon by Ceki, removing fix version.;;;","22/Oct/16 17:22;hboutemy;the slf4j-simple monkey-patch introduced in MNG-6093 could be a solution to this issue

notice: what's the benefit of upgrading slf4j?
is there a precise fix expected, or just general ""stay current"" logic?;;;","13/Dec/16 19:45;ceki@qos.ch;This issue was addressed in SLF4J version 1.7.22 released earlier today.;;;","21/Dec/16 06:45;hudson;SUCCESS: Integrated in Jenkins build maven-3.x #1469 (See [https://builds.apache.org/job/maven-3.x/1469/])
[MNG-6023] Upgrade of slf4j-simple to a version later than 1.7.16 (schulte: rev fe42dac2601ae26116b935e8c0916be6a79c1e67)
* (edit) pom.xml
;;;","21/Dec/16 15:02;schulte77;Closing this ""Done"" and removing the versions. We do not need this issue to appear in any release notes. It got created and fixed during development of the release. Issue will never appear to users. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Continuous download of maven-metadata.xml for version ranges.,MNG-5997,12957994,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Won't Do,,michaelhuettermann,michaelhuettermann,12/Apr/16 06:34,22/Dec/19 16:00,03/Jan/22 13:13,22/Dec/19 13:36,3.2.2,,,,,,,,Dependencies,,,,,0,,,,"With every first build of the day, Maven downloads *maven-metadata.xml* from remote repository. Generally, this is ok since the default update policy enforces an update. But: the daily synced dependency artifacts are release artifacts, in the declaration form of:
{code}
<dependency>
    <groupId>com.this</groupId>
    <artifactId>com.that</artifactId>
    <version>[1.0.0,1.0.1)</version>
    <type>jar</type>
</dependency>
{code}
So looks like the daily roundtrips are performed since there are version ranges defined?! Since there are hundreds of dependencies, this takes a pretty long time, and nothing did change, operationally, because I've already downloaded all required dependencies.

Please suppress these daily roundtrips of downloading  *maven-metadata.xml*, for that use case, in general a check for new updates should be applied of cause (thus just using the offline mode is not a solution).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Apr/16 07:41;rfscholte;MNG-5997.zip;https://issues.apache.org/jira/secure/attachment/12799689/MNG-5997.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i2vz7b:",9223372036854775807,,,,,,,,,,,,,,,,,,,"12/Apr/16 18:25;rfscholte;bq. So looks like the daily roundtrips are performed since there are version ranges defined?! 
Yes, that's the reason. I hope you are aware of the content of the {{maven-metadata.xml}}. It contains all versions of this G:A on which Maven can decide which version to choose *in case of a range*. In your case it will check if there's a better match of {{com.this:com.that}} compared to yesterday.
So there should always be a check, but I'm not sure if Aether (responsible for downloading) does a http HEAD before the http GET, probably not.
Be aware that version ranges are very tricky in case of reproducible builds, the result can very on a day to day base. For that reason the advice is to specify the preferred version with dependencyManagement.
If it is such an issue, have you considered using a repository manager, even locally?

;;;","14/Apr/16 07:52;michaelhuettermann;Hi [~rfscholte], hi team,

the situation is that 
- the maven-metadata.xml for all dependencies always only contains exactly one version
- a repository manager is in place already

I've changed the POMs of the dependencies that operate as the entry points (thus some transitive dependencies may still use version ranges). There, I do not have any version ranges in place any more, rather release versions are used now.

Neverthess, for all dependencies the repository manager is contacted to download the *maven-metadata.xml' to my local desk. This behavior seems to be wrong. Any idea?

Thanks !!;;;","14/Apr/16 18:56;khmarbaise;How is your update policy configured (settings.xml) ?  ;;;","14/Apr/16 20:40;michaelhuettermann;Hi [~khmarbaise],
no explicit definition at all, thus standard.
(""never"" would be suboptimal since I want to get updates, generally; ""always"" would be counterproductive in this regard as well);;;","15/Apr/16 06:14;michaelhuettermann;It really looks like that those *maven-metadata.xml* resolvements are caused by transitive dependencies which in turn define version ranges.
In any case, there is always exactly one version available only, and we are talking about Release artifacts. 
These roundtrips are very annoying, although they only take place onces a day (due to the default update policy).
How can I force to suppress the versions resolvement for that specific runtime scenario, i.e. Maven plugin/goal, respectively the underlying roundtrips with the maven-metadata.xml?
Any idea?
Thank you.;;;","16/Apr/16 13:16;rfscholte;Add those dependencies to the dependencyManagement of your project with the preferred version. Just be very aware when upgrading dependencies, in such case you might want to run the enforcer-plugin with https://maven.apache.org/enforcer/enforcer-rules/requireUpperBoundDeps.html as well.;;;","20/Apr/16 07:04;michaelhuettermann;Hi [~rfscholte],
thanks for the hint. After introducing a pretty big batch of entries for dependencyManagement, accordingly, the first daily use of the goal provokes even more roundtrips to local Maven repository manager to fetch even more and other *maven-metadata.xml* files than before. Does this ""work as designed""?;;;","20/Apr/16 07:41;rfscholte;I've attached a small project based on http://www.mojohaus.org/mrm/mrm-maven-plugin/examples/invoker-tests.html 
You only have to put pom files in {{src/it/mrm/repository}} and adjust the pom of {{src/it/projects/project1}}. Start adding dependencies, etc and run {{mvn clean verify}} until the project fails because it starts downloading a metadata file.
The theory is that it should only download metadata files in case of version ranges (and SNAPSHOT is a special kind of range);;;","31/May/16 06:04;michaelhuettermann;Thanks. Due to some basic conditions, I cannot add a dependencyManagement section to the underlying POM now. I call the Maven goal {{com.this:com.that:go}} from the command line (the executed Maven plugin has those dependencies defined as version ranges in its POM(s)). I've tried now to add the called plugin {{com.this:com.that}}, in the used version, to the ""build"" section of my POM and added ""dependency"" elements in its dependencies plugin section to nail down the exact versions to use. Unfortunately, again, all dependencies are checked again for updates and roundtrips to the binary repo occur. :-( Any idea how to get rid of these roundtrips? 
Thank you.;;;","22/Dec/19 13:36;elharo;This is only the smallest problem with version ranges: https://jlbp.dev/JLBP-14.html;;;","22/Dec/19 16:00;michaelhuettermann;This is an interesting comment and argument to close a ticket.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven itself cannot run without maven-compat,MNG-5995,12956261,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,slachiewicz,rfscholte,rfscholte,05/Apr/16 19:58,08/Jan/21 19:58,03/Jan/22 13:13,26/Jan/19 16:04,3.3.9,,,,,3.6.1,,,Bootstrap & Build,Core,,,,2,,,,"For all the 3.0 versions of the maven-plugins we require to not depend on maven-compat anymore. However, the Maven distribution still requires maven-compat. A simple proof: remove {{lib/maven-compat-3.x.y}} and execute {{mvn validate}}.
You'll get the following exception: 
{noformat}[WARNING] Error injecting: org.apache.maven.project.DefaultProjectBuildingHelper
com.google.inject.ProvisionException: Unable to provision, see the following errors:

1) No implementation for org.apache.maven.repository.RepositorySystem was bound.
  while locating org.apache.maven.project.DefaultProjectBuildingHelper{noformat}
Reason: there's only one implementation: o.a.m.r.l.LegacyRepositorySystem, which is part of maven-compat.",,"slachiewicz commented on pull request #185: [MNG-5995] Remove dependency to maven-compat
URL: https://github.com/apache/maven/pull/185
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jan/19 16:04;githubbot;600",,,0,600,,,0,600,,,,,,,,,,,,,,,,,,MNG-6642,MNG-6561,,MENFORCER-267,MRRESOURCES-92,MSITE-833,MNG-7071,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i2voj3:",9223372036854775807,,,,,,,,,,,,,,,,,,,"20/Jul/16 18:15;rajivpj;I am currently working on this ticket.

Should the maven-compat component be removed too?

Thanks.;;;","20/Jul/16 18:23;rfscholte;No, it should not, because maven-plugins may depend on it. Ideally maven-compat is not on the classpath of Maven-core. Only when a plugin depends on maven-compat, the version of the maven distribution should be added to the classpath of the plugin.;;;","20/Jul/16 18:26;rajivpj;Thanks for the quick reply. I am working on this issue.

Sent from my iPhone

;;;","20/Jul/16 20:07;githubbot;GitHub user rajivpjs opened a pull request:

    https://github.com/apache/maven/pull/89

    [MNG-5995] Removed maven-compat as it not required anymore for maven …

    Please review and let me know of any changes.
    
    Thanks.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/rajivpjs/maven MNG-5995

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/maven/pull/89.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #89
    
----
commit 998ed3160d00d6c6d1a1a8bf16db55f6dcf36f4c
Author: Rajiv Jain <rajivpjs@gmail.com>
Date:   2016-07-20T20:05:55Z

    [MNG-5995] Removed maven-compat as it not required anymore for maven 3.0 versions

----
;;;","20/Jul/16 20:27;rfscholte;Just removing the dependencies from the pom.xml is not enough. With only these changes Maven is broken, you can't build any Maven project anymore.;;;","20/Jul/16 20:27;githubbot;Github user khmarbaise commented on the issue:

    https://github.com/apache/maven/pull/89
  
    Ok If you remove them and compiled Maven you tried to build a simple project with that compiled Maven version?
;;;","20/Jul/16 21:21;githubbot;Github user rajivpjs commented on the issue:

    https://github.com/apache/maven/pull/89
  
    That's right. It worked.
    
    To build the project I ran mvn -Drat.skip=true clean package and mvn -Drat.skip=true validate. -Drat.skip=true was required so that I avoid the RATException. Have I missed anything?

;;;","20/Jul/16 21:22;rajivpj;Why do you say that? 

To build the project I ran mvn -Drat.skip=true clean package and mvn -Drat.skip=true validate. -Drat.skip=true was required so that I avoid the RATException. Have I missed anything?

What else am I missing?

Below is the build output:

[INFO] RAT will not execute since it is configured to be skipped via system property rat.skip.
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO] 
[INFO] Apache Maven ....................................... SUCCESS [ 0.991 s]
[INFO] Maven Model ........................................ SUCCESS [ 0.146 s]
[INFO] Maven Artifact ..................................... SUCCESS [ 0.047 s]
[INFO] Maven Plugin API ................................... SUCCESS [ 5.272 s]
[INFO] Maven Builder Support .............................. SUCCESS [ 0.021 s]
[INFO] Maven Model Builder ................................ SUCCESS [ 3.280 s]
[INFO] Maven Settings ..................................... SUCCESS [ 0.023 s]
[INFO] Maven Settings Builder ............................. SUCCESS [ 2.879 s]
[INFO] Maven Repository Metadata Model .................... SUCCESS [ 0.021 s]
[INFO] Maven Aether Provider .............................. SUCCESS [ 11.856 s]
[INFO] Maven Core ......................................... SUCCESS [ 13.564 s]
[INFO] Maven Embedder ..................................... SUCCESS [ 5.267 s]
[INFO] Apache Maven Distribution .......................... SUCCESS [ 2.977 s]
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 46.962 s
[INFO] Finished at: 2016-07-20T21:02:34+01:00
[INFO] Final Memory: 47M/328M
[INFO] ------------------------------------------------------------------------;;;","21/Jul/16 19:26;rajivpj;Could you please let me know what else I am missing? I think the clue is removing anything where the implemention involves the RepositorySystem?;;;","23/Jul/16 11:30;githubbot;Github user khmarbaise commented on the issue:

    https://github.com/apache/maven/pull/89
  
    I meant that you should try to compile an example project with the created Maven Core version?  I don't meant you should build Maven core itself...
;;;","25/Jul/16 19:52;githubbot;Github user rajivpjs commented on the issue:

    https://github.com/apache/maven/pull/89
  
    I realised that on Friday evening, after reading again. That's why I sent an e-mail to the mailing list to work out how to build with maven. I will check whether my changes work, by using your command that you sent. I will update you and make relevant changes.
;;;","26/Jul/16 19:27;githubbot;Github user rajivpjs commented on the issue:

    https://github.com/apache/maven/pull/89
  
    Hi Karl
    
    With my recent change, I compiled with an example project and I didn't have any issues. This is what I did as per the Jira task description:
    
    `mvn -DdistributionTargetFolder=/Users/rajivpjs/Desktop/Apache/Maven/rajivpjs/maven/mavenfixtarget clean package`
    
    From the mavenfixtarget directory I ran:
    
    `mvn -f /path/to/pom.xml clean package`
    
    This gave me a BUILD SUCCESS.
    
    I then removed the from the /lib/maven-compat-3.4.0-SNAPSHOT.jar and then ran:
    
    `mvn -f /patj/to/pom.xml validate`
    
    The output was BUILD SUCCESS.
    
    Have I missed anything?
;;;","27/Jul/16 19:27;githubbot;Github user rfscholte commented on the issue:

    https://github.com/apache/maven/pull/89
  
    Looks to me you're still testing with the installed version of Maven( e.g. 3.3.9), not your own fresh build. Instead try `/Users/rajivpjs/Desktop/Apache/Maven/rajivpjs/maven/mavenfixtarget/bin/mvn clean package -V` (the -V must confirm you're testing the right version).
    I should warn you that this issue is very hard to fix without in dept knowledge of Maven. There are probably other issues which are easier to fix.
;;;","27/Jul/16 20:39;githubbot;Github user rajivpjs commented on the issue:

    https://github.com/apache/maven/pull/89
  
    You are right. I tried `/Users/rajivpjs/Desktop/Apache/Maven/rajivpjs/maven/mavenfixtarget/bin/mvn -f /path/to/pom.xml clean package -V`
    
    It shows version 3.3.9.
    
    Maybe you are right, this issue might be hard for me to fix right now. So, I will close this pull request soon. By the way if you don't mind me asking did you guess me having 3.3.9 or you saw it in some output in my logs? I can't see where you find out that information. Having look at the output I have posted, I don't see anything with 3.3.9.
;;;","27/Jul/16 20:46;githubbot;Github user rfscholte commented on the issue:

    https://github.com/apache/maven/pull/89
  
    Based on the recent messages on the mailing thread I assumed you are an active Maven user who wants to use the most recent version of Maven. My guess was right :)
;;;","28/Jul/16 18:14;githubbot;Github user rajivpjs closed the pull request at:

    https://github.com/apache/maven/pull/89
;;;","13/Oct/18 02:35;githubbot;slachiewicz opened a new pull request #185: [MNG-5995] Remove dependency to maven-compat
URL: https://github.com/apache/maven/pull/185
 
 
   With this change, we can manually delete maven-compat.jar from dist and then test other plugins.
   
   mvn clean works fine, but mvn verify fails with maven-enforcer (even from snapshot)

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;;;","13/Oct/18 17:24;githubbot;hboutemy commented on a change in pull request #185: [MNG-5995] Remove dependency to maven-compat
URL: https://github.com/apache/maven/pull/185#discussion_r224966165
 
 

 ##########
 File path: pom.xml
 ##########
 @@ -545,6 +545,12 @@ under the License.
             </lifecycleMappingMetadata>
           </configuration>
         </plugin>
+        <!-- use 3.x version. Replace with final version -->
 
 Review comment:
   why upgrading this plugin? this is not related to avoiding core requiring maven-compat, isn't it?

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;;;","13/Oct/18 17:48;githubbot;slachiewicz commented on a change in pull request #185: [MNG-5995] Remove dependency to maven-compat
URL: https://github.com/apache/maven/pull/185#discussion_r224966963
 
 

 ##########
 File path: pom.xml
 ##########
 @@ -545,6 +545,12 @@ under the License.
             </lifecycleMappingMetadata>
           </configuration>
         </plugin>
+        <!-- use 3.x version. Replace with final version -->
 
 Review comment:
   yes an no ;-) we use old plugin not yet migrated to Maven 3.0+ so it will fail by default. 

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;;;","13/Oct/18 17:57;githubbot;khmarbaise commented on a change in pull request #185: [MNG-5995] Remove dependency to maven-compat
URL: https://github.com/apache/maven/pull/185#discussion_r224967259
 
 

 ##########
 File path: pom.xml
 ##########
 @@ -545,6 +545,12 @@ under the License.
             </lifecycleMappingMetadata>
           </configuration>
         </plugin>
+        <!-- use 3.x version. Replace with final version -->
 
 Review comment:
   Maybe I misunderstand your comment Sylwester, but why and when does it fail by default ? (Are we talking about maven-enforcer-plugin:3.0.0-M2 ?

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;;;","13/Oct/18 18:11;githubbot;slachiewicz commented on a change in pull request #185: [MNG-5995] Remove dependency to maven-compat
URL: https://github.com/apache/maven/pull/185#discussion_r224967675
 
 

 ##########
 File path: pom.xml
 ##########
 @@ -545,6 +545,12 @@ under the License.
             </lifecycleMappingMetadata>
           </configuration>
         </plugin>
+        <!-- use 3.x version. Replace with final version -->
 
 Review comment:
   while try to compile maven-core, with maven-enforcer-plugin 1.4.1
   ```
   Caused by: org.codehaus.plexus.component.repository.exception.ComponentLookupException: com.google.inject.ProvisionException: Unable to provision, see the following errors:
   
   1) No implementation for org.apache.maven.project.path.PathTranslator was bound.
     while locating org.apache.maven.plugins.enforcer.EnforceMojo
     at ClassRealm[plugin>org.apache.maven.plugins:maven-enforcer-plugin:1.4.1, parent: jdk.internal.loader.ClassLoaders$AppClassLoader@4b9af9a9] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
     while locating org.apache.maven.plugin.Mojo annotated with @com.google.inject.name.Named(value=""org.apache.maven.plugins:maven-enforcer-plugin:1.4.1:enforce"")
   
   1 error
         role: org.apache.maven.plugin.Mojo
     roleHint: org.apache.maven.plugins:maven-enforcer-plugin:1.4.1:enforce
   ```
   with 3.0.0-M2 other error
   ```
   Caused by: org.apache.maven.plugin.PluginContainerException: A required class was missing while executing org.apache.maven.plugins:maven-enforcer-plugin:3.0.0-M2:enforce: org/apache/maven/artifact/resolver/ArtifactResolver
   -----------------------------------------------------
   realm =    plugin>org.apache.maven.plugins:maven-enforcer-plugin:3.0.0-M2
   strategy = org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy
   urls[0] = file:/C:/Users/.m2/repository/org/apache/maven/plugins/maven-enforcer-plugin/3.0.0-M2/maven-enforcer-plugin-3.0.0-M2.jar
   urls[1] = file:/C:/Users/.m2/repository/org/codehaus/mojo/extra-enforcer-rules/1.0-beta-9/extra-enforcer-rules-1.0-beta-9.jar
   urls[2] = file:/C:/Users/.m2/repository/org/apache/maven/shared/maven-dependency-tree/2.2/maven-dependency-tree-2.2.jar
   urls[3] = file:/C:/Users/.m2/repository/org/eclipse/aether/aether-util/0.9.0.M2/aether-util-0.9.0.M2.jar
   urls[4] = file:/C:/Users/.m2/repository/junit/junit/4.11/junit-4.11.jar
   urls[5] = file:/C:/Users/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar
   urls[6] = file:/C:/Users/.m2/repository/commons-codec/commons-codec/1.6/commons-codec-1.6.jar
   urls[7] = file:/C:/Users/.m2/repository/org/apache/maven/shared/maven-common-artifact-filters/3.0.1/maven-common-artifact-filters-3.0.1.jar
   urls[8] = file:/C:/Users/.m2/repository/org/apache/maven/shared/maven-shared-utils/3.1.0/maven-shared-utils-3.1.0.jar
   urls[9] = file:/C:/Users/.m2/repository/commons-io/commons-io/2.5/commons-io-2.5.jar
   urls[10] = file:/C:/Users/.m2/repository/com/ibm/icu/icu4j/56.1/icu4j-56.1.jar
   urls[11] = file:/C:/Users/.m2/repository/org/sonatype/sisu/sisu-inject-bean/1.4.2/sisu-inject-bean-1.4.2.jar
   urls[12] = file:/C:/Users/.m2/repository/org/sonatype/sisu/sisu-guice/2.1.7/sisu-guice-2.1.7-noaop.jar
   urls[13] = file:/C:/Users/.m2/repository/org/sonatype/aether/aether-util/1.7/aether-util-1.7.jar
   urls[14] = file:/C:/Users/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.14/plexus-interpolation-1.14.jar
   urls[15] = file:/C:/Users/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.7.1/plexus-component-annotations-1.7.1.jar
   urls[16] = file:/C:/Users/.m2/repository/org/sonatype/plexus/plexus-sec-dispatcher/1.3/plexus-sec-dispatcher-1.3.jar
   urls[17] = file:/C:/Users/.m2/repository/org/sonatype/plexus/plexus-cipher/1.4/plexus-cipher-1.4.jar
   urls[18] = file:/C:/Users/.m2/repository/org/codehaus/plexus/plexus-utils/3.1.0/plexus-utils-3.1.0.jar
   urls[19] = file:/C:/Users/.m2/repository/org/apache/maven/enforcer/enforcer-api/3.0.0-M2/enforcer-api-3.0.0-M2.jar
   urls[20] = file:/C:/Users/.m2/repository/org/apache/maven/enforcer/enforcer-rules/3.0.0-M2/enforcer-rules-3.0.0-M2.jar
   urls[21] = file:/C:/Users/.m2/repository/org/apache/commons/commons-lang3/3.5/commons-lang3-3.5.jar
   urls[22] = file:/C:/Users/.m2/repository/org/beanshell/bsh/2.0b4/bsh-2.0b4.jar
   
   Caused by: java.lang.NoClassDefFoundError: org/apache/maven/artifact/resolver/ArtifactResolver
       at org.apache.maven.plugins.enforcer.AbstractResolveDependencies.execute (AbstractResolveDependencies.java:51)
       at org.apache.maven.plugins.enforcer.EnforceMojo.execute (EnforceMojo.java:194)
       at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)
   ```

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;;;","13/Oct/18 18:22;githubbot;khmarbaise commented on a change in pull request #185: [MNG-5995] Remove dependency to maven-compat
URL: https://github.com/apache/maven/pull/185#discussion_r224968070
 
 

 ##########
 File path: pom.xml
 ##########
 @@ -545,6 +545,12 @@ under the License.
             </lifecycleMappingMetadata>
           </configuration>
         </plugin>
+        <!-- use 3.x version. Replace with final version -->
 
 Review comment:
   Why does our [CI](https://builds.apache.org/view/M-R/view/Maven/job/maven-box/job/maven/job/MNG-5995/) build work?

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;;;","13/Oct/18 18:24;githubbot;khmarbaise commented on a change in pull request #185: [MNG-5995] Remove dependency to maven-compat
URL: https://github.com/apache/maven/pull/185#discussion_r224968070
 
 

 ##########
 File path: pom.xml
 ##########
 @@ -545,6 +545,12 @@ under the License.
             </lifecycleMappingMetadata>
           </configuration>
         </plugin>
+        <!-- use 3.x version. Replace with final version -->
 
 Review comment:
   Why does our [CI](https://builds.apache.org/view/M-R/view/Maven/job/maven-box/job/maven/job/MNG-5995/) build work? Apart from testing locally works..

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;;;","13/Oct/18 18:31;githubbot;slachiewicz commented on a change in pull request #185: [MNG-5995] Remove dependency to maven-compat
URL: https://github.com/apache/maven/pull/185#discussion_r224968335
 
 

 ##########
 File path: pom.xml
 ##########
 @@ -545,6 +545,12 @@ under the License.
             </lifecycleMappingMetadata>
           </configuration>
         </plugin>
+        <!-- use 3.x version. Replace with final version -->
 
 Review comment:
   propably we need to think about proper test cases. Our CI runs with full maven dist (including maven-compat.jar). For now manual tests with deleted maven-compat can highlight plases where we need more work.
   ok, so for merge I'll remove this plugin update.

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;;;","20/Oct/18 12:33;hudson;Build failed in Jenkins: Maven TLP » maven » slach-pre-merge-master #2

See https://builds.apache.org/job/maven-box/job/maven/job/slach-pre-merge-master/2/;;;","21/Oct/18 22:57;hudson;Build succeeded in Jenkins: Maven TLP » maven » slach-pre-merge-master #4

See https://builds.apache.org/job/maven-box/job/maven/job/slach-pre-merge-master/4/;;;","18/Nov/18 15:21;hudson;Build succeeded in Jenkins: Maven TLP » maven » MNG-5995 #3

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-5995/3/;;;","19/Nov/18 00:02;githubbot;slachiewicz commented on issue #185: [MNG-5995] Remove dependency to maven-compat
URL: https://github.com/apache/maven/pull/185#issuecomment-439738389
 
 
   ok found a problem - maven-enforcer still depends on maven-compat:
   org.apache.maven.artifact.resolver.ArtifactResolver;
   org.apache.maven.artifact.resolver.ArtifactCollector -> required by maven-dependency-tree:2,2;
   

----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;;;","29/Dec/18 22:29;michael-o;[~slachiewicz], as far as I understand your GH comments, this requires work in other components and cannot be fixed in 3.6.1? Can it? Maybe 3.7.0?;;;","04/Jan/19 21:00;slachiewicz;No, with my change You can just remove maven-compat.jat from dist and Maven should run fine for simple projects so it no longer depends on 2.0x classes. But.. we still have many old plugins and without compat this will not run. 
So I used this version to test what plugins are necessary to compile Maven Core (ie migrate all required plugins to 3.0+ api) and others dev can also test.

So in short - It would b good to include in 3.6.1;;;","04/Jan/19 22:58;rfscholte;Right, ideally maven-compat is not available on the classpath, unless a plugin explicitly requires it. Only in that case the maven-compat jar of the Maven Runtime should be added to the classpath (like now: the version of maven dependencies of the plugin doesn't have any effect, they are filtered out and the Maven Runtime dependencies are used).
This is probably too complex is doesn't gain enough.
However, we might hit similar issues with the next major version of Maven, but that's for later.;;;","26/Jan/19 16:02;slachiewicz;Fixed in [bb3ec5da71d26d105972392f0a20bc61bc5d8c53|https://gitbox.apache.org/repos/asf?p=maven.git;a=commit;h=bb3ec5da71d26d105972392f0a20bc61bc5d8c53];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Getting Component Lookup Exception when running MavenCli.doMain (Maven Embedder),MNG-5919,12909123,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Not A Problem,jvanzyl,tariq1890,tariq1890,30/Oct/15 06:42,30/Oct/15 09:49,03/Jan/22 13:13,30/Oct/15 07:39,,,,,,,,,Command Line,Embedding,Errors,,,0,,,,"Hi Team, 

I seem to get the following exception when I try out maven embedder

org.codehaus.plexus.component.repository.exception.ComponentLookupException: com.google.inject.ProvisionException: Unable to provision, see the following errors:
1) null returned by binding at org.eclipse.sisu.wire.LocatorWiring
 but parameter 5 of org.eclipse.aether.internal.impl.DefaultRepositorySystem.<init>() is not @Nullable
  while locating org.eclipse.aether.impl.DependencyCollector
    for parameter 5 at org.eclipse.aether.internal.impl.DefaultRepositorySystem.<init>(Unknown Source)
  while locating org.eclipse.aether.internal.impl.DefaultRepositorySystem
  while locating java.lang.Object annotated with *
  while locating org.apache.maven.artifact.resolver.DefaultArtifactResolver
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.artifact.resolver.ArtifactResolver
  while locating org.apache.maven.repository.legacy.LegacyRepositorySystem
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.repository.RepositorySystem
  while locating org.apache.maven.project.DefaultProjectBuildingHelper
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.project.ProjectBuildingHelper
  while locating org.apache.maven.project.DefaultProjectBuilder
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.project.ProjectBuilder
  while locating org.apache.maven.DefaultMaven
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.Maven

2) null returned by binding at org.eclipse.sisu.wire.LocatorWiring
 but parameter 0 of org.apache.maven.repository.internal.DefaultArtifactDescriptorReader.<init>() is not @Nullable
  while locating org.eclipse.aether.impl.RemoteRepositoryManager
    for parameter 0 at org.apache.maven.repository.internal.DefaultArtifactDescriptorReader.<init>(Unknown Source)
  while locating org.apache.maven.repository.internal.DefaultArtifactDescriptorReader
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.eclipse.aether.impl.ArtifactDescriptorReader
    for parameter 4 at org.eclipse.aether.internal.impl.DefaultRepositorySystem.<init>(Unknown Source)
  while locating org.eclipse.aether.internal.impl.DefaultRepositorySystem
  while locating java.lang.Object annotated with *
  while locating org.apache.maven.artifact.resolver.DefaultArtifactResolver
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.artifact.resolver.ArtifactResolver
  while locating org.apache.maven.repository.legacy.LegacyRepositorySystem
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.repository.RepositorySystem
  while locating org.apache.maven.project.DefaultProjectBuildingHelper
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.project.ProjectBuildingHelper
  while locating org.apache.maven.project.DefaultProjectBuilder
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.project.ProjectBuilder
  while locating org.apache.maven.DefaultMaven
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.Maven

3) null returned by binding at org.eclipse.sisu.wire.LocatorWiring
 but parameter 5 of org.eclipse.aether.internal.impl.DefaultArtifactResolver.<init>() is not @Nullable
  while locating org.eclipse.aether.impl.RemoteRepositoryManager
    for parameter 5 at org.eclipse.aether.internal.impl.DefaultArtifactResolver.<init>(Unknown Source)
  while locating org.eclipse.aether.internal.impl.DefaultArtifactResolver
  while locating java.lang.Object annotated with *
  at org.eclipse.sisu.wire.LocatorWiring
  while locating org.eclipse.aether.impl.ArtifactResolver
    for parameter 2 at org.eclipse.aether.internal.impl.DefaultRepositorySystem.<init>(Unknown Source)
  while locating org.eclipse.aether.internal.impl.DefaultRepositorySystem
  while locating java.lang.Object annotated with *
  while locating org.apache.maven.artifact.resolver.DefaultArtifactResolver
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.artifact.resolver.ArtifactResolver
  while locating org.apache.maven.repository.legacy.LegacyRepositorySystem
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.repository.RepositorySystem
  while locating org.apache.maven.project.DefaultProjectBuildingHelper
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.project.ProjectBuildingHelper
  while locating org.apache.maven.project.DefaultProjectBuilder
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.project.ProjectBuilder
  while locating org.apache.maven.DefaultMaven
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.Maven

4) null returned by binding at org.eclipse.sisu.wire.LocatorWiring
 but parameter 5 of org.eclipse.aether.internal.impl.DefaultArtifactResolver.<init>() is not @Nullable
  while locating org.eclipse.aether.impl.RemoteRepositoryManager
    for parameter 5 at org.eclipse.aether.internal.impl.DefaultArtifactResolver.<init>(Unknown Source)
  while locating org.eclipse.aether.internal.impl.DefaultArtifactResolver
  while locating java.lang.Object annotated with *
  at org.eclipse.sisu.wire.LocatorWiring
  while locating org.eclipse.aether.impl.ArtifactResolver
    for parameter 2 at org.apache.maven.repository.internal.DefaultArtifactDescriptorReader.<init>(Unknown Source)
  while locating org.apache.maven.repository.internal.DefaultArtifactDescriptorReader
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.eclipse.aether.impl.ArtifactDescriptorReader
    for parameter 4 at org.eclipse.aether.internal.impl.DefaultRepositorySystem.<init>(Unknown Source)
  while locating org.eclipse.aether.internal.impl.DefaultRepositorySystem
  while locating java.lang.Object annotated with *
  while locating org.apache.maven.artifact.resolver.DefaultArtifactResolver
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.artifact.resolver.ArtifactResolver
  while locating org.apache.maven.repository.legacy.LegacyRepositorySystem
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.repository.RepositorySystem
  while locating org.apache.maven.project.DefaultProjectBuildingHelper
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.project.ProjectBuildingHelper
  while locating org.apache.maven.project.DefaultProjectBuilder
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.project.ProjectBuilder
  while locating org.apache.maven.DefaultMaven
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.Maven

5) null returned by binding at org.eclipse.sisu.wire.LocatorWiring
 but parameter 3 of org.eclipse.aether.internal.impl.DefaultDeployer.<init>() is not @Nullable
  while locating org.eclipse.aether.impl.RemoteRepositoryManager
    for parameter 3 at org.eclipse.aether.internal.impl.DefaultDeployer.<init>(Unknown Source)
  while locating org.eclipse.aether.internal.impl.DefaultDeployer
  while locating java.lang.Object annotated with *
  at org.eclipse.sisu.wire.LocatorWiring
  while locating org.eclipse.aether.impl.Deployer
    for parameter 7 at org.eclipse.aether.internal.impl.DefaultRepositorySystem.<init>(Unknown Source)
  while locating org.eclipse.aether.internal.impl.DefaultRepositorySystem
  while locating java.lang.Object annotated with *
  while locating org.apache.maven.artifact.resolver.DefaultArtifactResolver
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.artifact.resolver.ArtifactResolver
  while locating org.apache.maven.repository.legacy.LegacyRepositorySystem
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.repository.RepositorySystem
  while locating org.apache.maven.project.DefaultProjectBuildingHelper
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.project.ProjectBuildingHelper
  while locating org.apache.maven.project.DefaultProjectBuilder
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.project.ProjectBuilder
  while locating org.apache.maven.DefaultMaven
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.Maven

6) null returned by binding at org.eclipse.sisu.wire.LocatorWiring
 but parameter 3 of org.eclipse.aether.internal.impl.DefaultMetadataResolver.<init>() is not @Nullable
  while locating org.eclipse.aether.impl.RemoteRepositoryManager
    for parameter 3 at org.eclipse.aether.internal.impl.DefaultMetadataResolver.<init>(Unknown Source)
  while locating org.eclipse.aether.internal.impl.DefaultMetadataResolver
  while locating java.lang.Object annotated with *
  at org.eclipse.sisu.wire.LocatorWiring
  while locating org.eclipse.aether.impl.MetadataResolver
    for parameter 0 at org.apache.maven.repository.internal.DefaultVersionResolver.<init>(Unknown Source)
  while locating org.apache.maven.repository.internal.DefaultVersionResolver
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.eclipse.aether.impl.VersionResolver
    for parameter 0 at org.eclipse.aether.internal.impl.DefaultRepositorySystem.<init>(Unknown Source)
  while locating org.eclipse.aether.internal.impl.DefaultRepositorySystem
  while locating java.lang.Object annotated with *
  while locating org.apache.maven.artifact.resolver.DefaultArtifactResolver
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.artifact.resolver.ArtifactResolver
  while locating org.apache.maven.repository.legacy.LegacyRepositorySystem
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.repository.RepositorySystem
  while locating org.apache.maven.project.DefaultProjectBuildingHelper
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.project.ProjectBuildingHelper
  while locating org.apache.maven.project.DefaultProjectBuilder
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.project.ProjectBuilder
  while locating org.apache.maven.DefaultMaven
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.Maven

7) null returned by binding at org.eclipse.sisu.wire.LocatorWiring
 but parameter 3 of org.eclipse.aether.internal.impl.DefaultMetadataResolver.<init>() is not @Nullable
  while locating org.eclipse.aether.impl.RemoteRepositoryManager
    for parameter 3 at org.eclipse.aether.internal.impl.DefaultMetadataResolver.<init>(Unknown Source)
  while locating org.eclipse.aether.internal.impl.DefaultMetadataResolver
  while locating java.lang.Object annotated with *
  at org.eclipse.sisu.wire.LocatorWiring
  while locating org.eclipse.aether.impl.MetadataResolver
    for parameter 0 at org.apache.maven.repository.internal.DefaultVersionRangeResolver.<init>(Unknown Source)
  while locating org.apache.maven.repository.internal.DefaultVersionRangeResolver
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.eclipse.aether.impl.VersionRangeResolver
    for parameter 1 at org.eclipse.aether.internal.impl.DefaultRepositorySystem.<init>(Unknown Source)
  while locating org.eclipse.aether.internal.impl.DefaultRepositorySystem
  while locating java.lang.Object annotated with *
  while locating org.apache.maven.artifact.resolver.DefaultArtifactResolver
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.artifact.resolver.ArtifactResolver
  while locating org.apache.maven.repository.legacy.LegacyRepositorySystem
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.repository.RepositorySystem
  while locating org.apache.maven.project.DefaultProjectBuildingHelper
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.project.ProjectBuildingHelper
  while locating org.apache.maven.project.DefaultProjectBuilder
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.project.ProjectBuilder
  while locating org.apache.maven.DefaultMaven
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.Maven

8) null returned by binding at org.eclipse.sisu.wire.LocatorWiring
 but parameter 3 of org.eclipse.aether.internal.impl.DefaultMetadataResolver.<init>() is not @Nullable
  while locating org.eclipse.aether.impl.RemoteRepositoryManager
    for parameter 3 at org.eclipse.aether.internal.impl.DefaultMetadataResolver.<init>(Unknown Source)
  while locating org.eclipse.aether.internal.impl.DefaultMetadataResolver
  while locating java.lang.Object annotated with *
  at org.eclipse.sisu.wire.LocatorWiring
  while locating org.eclipse.aether.impl.MetadataResolver
    for parameter 0 at org.apache.maven.repository.internal.DefaultVersionResolver.<init>(Unknown Source)
  while locating org.apache.maven.repository.internal.DefaultVersionResolver
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.eclipse.aether.impl.VersionResolver
    for parameter 2 at org.eclipse.aether.internal.impl.DefaultArtifactResolver.<init>(Unknown Source)
  while locating org.eclipse.aether.internal.impl.DefaultArtifactResolver
  while locating java.lang.Object annotated with *
  at org.eclipse.sisu.wire.LocatorWiring
  while locating org.eclipse.aether.impl.ArtifactResolver
    for parameter 2 at org.eclipse.aether.internal.impl.DefaultRepositorySystem.<init>(Unknown Source)
  while locating org.eclipse.aether.internal.impl.DefaultRepositorySystem
  while locating java.lang.Object annotated with *
  while locating org.apache.maven.artifact.resolver.DefaultArtifactResolver
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.artifact.resolver.ArtifactResolver
  while locating org.apache.maven.repository.legacy.LegacyRepositorySystem
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.repository.RepositorySystem
  while locating org.apache.maven.project.DefaultProjectBuildingHelper
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.project.ProjectBuildingHelper
  while locating org.apache.maven.project.DefaultProjectBuilder
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.project.ProjectBuilder
  while locating org.apache.maven.DefaultMaven
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.Maven

9) null returned by binding at org.eclipse.sisu.wire.LocatorWiring
 but parameter 3 of org.eclipse.aether.internal.impl.DefaultMetadataResolver.<init>() is not @Nullable
  while locating org.eclipse.aether.impl.RemoteRepositoryManager
    for parameter 3 at org.eclipse.aether.internal.impl.DefaultMetadataResolver.<init>(Unknown Source)
  while locating org.eclipse.aether.internal.impl.DefaultMetadataResolver
  while locating java.lang.Object annotated with *
  at org.eclipse.sisu.wire.LocatorWiring
  while locating org.eclipse.aether.impl.MetadataResolver
    for parameter 3 at org.eclipse.aether.internal.impl.DefaultRepositorySystem.<init>(Unknown Source)
  while locating org.eclipse.aether.internal.impl.DefaultRepositorySystem
  while locating java.lang.Object annotated with *
  while locating org.apache.maven.artifact.resolver.DefaultArtifactResolver
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.artifact.resolver.ArtifactResolver
  while locating org.apache.maven.repository.legacy.LegacyRepositorySystem
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.repository.RepositorySystem
  while locating org.apache.maven.project.DefaultProjectBuildingHelper
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.project.ProjectBuildingHelper
  while locating org.apache.maven.project.DefaultProjectBuilder
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.project.ProjectBuilder
  while locating org.apache.maven.DefaultMaven
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.Maven

10) null returned by binding at org.eclipse.sisu.wire.LocatorWiring
 but parameter 3 of org.eclipse.aether.internal.impl.DefaultMetadataResolver.<init>() is not @Nullable
  while locating org.eclipse.aether.impl.RemoteRepositoryManager
    for parameter 3 at org.eclipse.aether.internal.impl.DefaultMetadataResolver.<init>(Unknown Source)
  while locating org.eclipse.aether.internal.impl.DefaultMetadataResolver
  while locating java.lang.Object annotated with *
  at org.eclipse.sisu.wire.LocatorWiring
  while locating org.eclipse.aether.impl.MetadataResolver
    for parameter 0 at org.apache.maven.repository.internal.DefaultVersionResolver.<init>(Unknown Source)
  while locating org.apache.maven.repository.internal.DefaultVersionResolver
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.eclipse.aether.impl.VersionResolver
    for parameter 1 at org.apache.maven.repository.internal.DefaultArtifactDescriptorReader.<init>(Unknown Source)
  while locating org.apache.maven.repository.internal.DefaultArtifactDescriptorReader
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.eclipse.aether.impl.ArtifactDescriptorReader
    for parameter 4 at org.eclipse.aether.internal.impl.DefaultRepositorySystem.<init>(Unknown Source)
  while locating org.eclipse.aether.internal.impl.DefaultRepositorySystem
  while locating java.lang.Object annotated with *
  while locating org.apache.maven.artifact.resolver.DefaultArtifactResolver
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.artifact.resolver.ArtifactResolver
  while locating org.apache.maven.repository.legacy.LegacyRepositorySystem
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.repository.RepositorySystem
  while locating org.apache.maven.project.DefaultProjectBuildingHelper
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.project.ProjectBuildingHelper
  while locating org.apache.maven.project.DefaultProjectBuilder
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.project.ProjectBuilder
  while locating org.apache.maven.DefaultMaven
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.Maven

11) null returned by binding at org.eclipse.sisu.wire.LocatorWiring
 but parameter 3 of org.eclipse.aether.internal.impl.DefaultMetadataResolver.<init>() is not @Nullable
  while locating org.eclipse.aether.impl.RemoteRepositoryManager
    for parameter 3 at org.eclipse.aether.internal.impl.DefaultMetadataResolver.<init>(Unknown Source)
  while locating org.eclipse.aether.internal.impl.DefaultMetadataResolver
  while locating java.lang.Object annotated with *
  at org.eclipse.sisu.wire.LocatorWiring
  while locating org.eclipse.aether.impl.MetadataResolver
    for parameter 0 at org.apache.maven.repository.internal.DefaultVersionResolver.<init>(Unknown Source)
  while locating org.apache.maven.repository.internal.DefaultVersionResolver
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.eclipse.aether.impl.VersionResolver
    for parameter 2 at org.eclipse.aether.internal.impl.DefaultArtifactResolver.<init>(Unknown Source)
  while locating org.eclipse.aether.internal.impl.DefaultArtifactResolver
  while locating java.lang.Object annotated with *
  at org.eclipse.sisu.wire.LocatorWiring
  while locating org.eclipse.aether.impl.ArtifactResolver
    for parameter 2 at org.apache.maven.repository.internal.DefaultArtifactDescriptorReader.<init>(Unknown Source)
  while locating org.apache.maven.repository.internal.DefaultArtifactDescriptorReader
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.eclipse.aether.impl.ArtifactDescriptorReader
    for parameter 4 at org.eclipse.aether.internal.impl.DefaultRepositorySystem.<init>(Unknown Source)
  while locating org.eclipse.aether.internal.impl.DefaultRepositorySystem
  while locating java.lang.Object annotated with *
  while locating org.apache.maven.artifact.resolver.DefaultArtifactResolver
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.artifact.resolver.ArtifactResolver
  while locating org.apache.maven.repository.legacy.LegacyRepositorySystem
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.repository.RepositorySystem
  while locating org.apache.maven.project.DefaultProjectBuildingHelper
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.project.ProjectBuildingHelper
  while locating org.apache.maven.project.DefaultProjectBuilder
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.project.ProjectBuilder
  while locating org.apache.maven.DefaultMaven
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.Maven

12) null returned by binding at org.eclipse.sisu.wire.LocatorWiring
 but parameter 10 of org.eclipse.aether.internal.impl.DefaultRepositorySystem.<init>() is not @Nullable
  while locating org.eclipse.aether.impl.RemoteRepositoryManager
    for parameter 10 at org.eclipse.aether.internal.impl.DefaultRepositorySystem.<init>(Unknown Source)
  while locating org.eclipse.aether.internal.impl.DefaultRepositorySystem
  while locating java.lang.Object annotated with *
  while locating org.apache.maven.artifact.resolver.DefaultArtifactResolver
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.artifact.resolver.ArtifactResolver
  while locating org.apache.maven.repository.legacy.LegacyRepositorySystem
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.repository.RepositorySystem
  while locating org.apache.maven.project.DefaultProjectBuildingHelper
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.project.ProjectBuildingHelper
  while locating org.apache.maven.project.DefaultProjectBuilder
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.project.ProjectBuilder
  while locating org.apache.maven.DefaultMaven
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  at ClassRealm[plexus.core, parent: null] (via modules: org.eclipse.sisu.wire.WireModule -> org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.Maven
12 errors

*You can refer to my reproducer repo to get more details*
https://github.com/tariq1890/MavenEmbedTest",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i2nq8f:",9223372036854775807,,,,,,,,,,,,,,,,,,,"30/Oct/15 07:39;jvanzyl;MavenCli is not the embedder. If you want to execute Maven I can take a look at your project and see what's wrong with it but this technique works fine. I currently have 3 programs using it so I'll pull one out for you.;;;","30/Oct/15 07:51;jvanzyl;I added a pull request which demonstrates how to align the versions of all the dependencies you need to make it work. You had old versions of Aether with newer versions of Maven. We are using Aether 1.0+ now.;;;","30/Oct/15 09:49;tariq1890;[~jvanzyl] Thank you . It works now :);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Saved password with umlaut breaks deployment,MNG-5917,12908233,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Incomplete,,softmetz,softmetz,27/Oct/15 14:05,27/Jun/17 06:49,03/Jan/22 13:13,23/Dec/15 00:53,3.3.3,,,,,,,,Settings,,,,,0,close-pending,,,"My password to Artifactory contains a german umlaut (äöüÄÖÜß).  I saved it either encrypted and plain to settings.xml. 

When I run release:perform the deployment breaks because artifactory refuses the password. 

I had a look with wireshark and the credentials contain a '?' where the umlaut should be. 

Logging in to artifactory using the web interfaces works with the password.","Fedora GNU/Linux 22
Oracle Java 8.0.51",,,,,,,,,,,,,,,,,,,,,,,,,,,WAGON-487,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i2nksn:",9223372036854775807,,,,,,,,,,,,,,,,,,,"28/Oct/15 12:39;michael-o;You need to inspect several questions/points first:

1) Assuming that the bytes in the {{settings.xml}} correspond to the encoding given in the processing instruction
2) Have you debugged the process and inspected the {{Settings}} object containing your password?

There are now two options where is issue is rooted: there is no standard what character encoding is used for serialization from chars to bytes.

1) In HtttpClient, if not set, [ASCII|http://hc.apache.org/httpcomponents-client-ga/httpclient/xref/org/apache/http/impl/auth/RFC2617Scheme.html#100] is used. You have to tell the client to obtain UTF-8 bytes.
2) Artifactory does the base 64 decode but does not pass UTF-8 along with the byte array to the string constructor.

Please share the raw decoded bytes or the base64 string from the HTTP header.;;;","02/Jul/16 07:28;sidvi;For Artifactory authentication in a browser and in the maven-deploy-plugin works in different ways.
Authentication in the browser uses Form Authentication and therefore works correctly with umlauts.
Authentication maven-deploy-plugin works via Basic Authentication. (Maven-deploy-plugin -> Maven Wagon -> commons-http-client -> Basic Authentication)
Server with Basic Authentication supports according to standard only encoding ""ISO-8859-1"". Reaction to the other encodings is undefined.

http://stackoverflow.com/questions/702629/utf-8-characters-mangled-in-http-basic-auth-username
http://stackoverflow.com/questions/7242316/what-encoding-should-i-use-for-http-basic-authentication

So it's not a bug maven. Artifactory does not support UTF-8 encoding via Basic Authentication.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven Installation instructions not working on Mac,MNG-5854,12843255,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Cannot Reproduce,simpligility,NathanChristie,NathanChristie,07/Jul/15 18:08,01/Sep/17 10:25,03/Jan/22 13:13,07/Jul/15 23:46,3.3.3,,,,,,,,Documentation:  General,,,,,0,documentation,easyfix,maven,"The Installation instructions for Apache (https://maven.apache.org/install.html) do not work when attempting to install on my Mac. After following the installation instructions, the following error is observed when attempting to run a:

mvn -v
Error: Could not find or load main class org.codehaus.plexus.classworlds.launcher.Launcher

However, when I did an:
export $M2_HOME=/opt/apache-maven-3.3.3

It worked fine.",OS X Yosemite (10.10.4),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i2gy7j:",9223372036854775807,,,,,,,,,,,,,,,,,,,"07/Jul/15 18:35;simpligility;We no longer suggest to use th M2_HOME environment variable and it works fine on my machine.

Could you run 

echo $PATH

and 

which mvn

and comment the out here?;;;","07/Jul/15 18:36;simpligility;Also please show us how you are adding the bin folder of the maven install to the $PATH;;;","07/Jul/15 23:46;NathanChristie;I unset my M2_HOME variable and it's working fine. As I can't go back to a perfectly clean state and redo this, I'll assume I made a mistake somewhere in the process.

Thanks for the prompt response!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
maven can not be found when current directory is drive/root at least on windows 7 64bit,MNG-5849,12841591,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Duplicate,schulte77,Ali Reza,Ali Reza,30/Jun/15 07:14,25/Jan/17 15:48,03/Jan/22 13:13,25/Jan/17 15:48,3.3.3,,,,,,,,Bootstrap & Build,Command Line,,,,0,maven,,,"when your current directory is drive/root on windows , mvn -version does not work. but if you are at any directory inside of drive/root, it works.",Windwos 7 64 bit,,,,,,,,,,,,,,,,,,,,,,,MNG-5796,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,Important,Patch,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i2go3j:",9223372036854775807,,,,,,,,,,,,,,,,,,,"14/Jan/16 19:47;mimibar;Possible duplicate of MNG-5796;;;","18/Jan/16 18:04;schulte77;Can you please test the issue is solved in the latest snapshot avaiable from [https://builds.apache.org/view/All/job/maven-3.3-release-status-build/].;;;","24/Jan/16 21:41;schulte77;Please re-open, if the issue is not fixed.;;;","09/Jan/17 09:56;stephenc;Maven 3.4.0 has been dropped. See [this thread|https://mail-archives.apache.org/mod_mbox/maven-dev/201701.mbox/%3CCA%2BnPnMx-e7kGYy3Hp87v8hLGdhp1q%3DtKLx_6QuZ4kGUqHEBGcw%40mail.gmail.com%3E] for more details.

This issue will need to be re-scheduled for a Maven release in the (hopefully near) future.;;;","24/Jan/17 19:41;michael-o;[~schulte77], I think we can close this as duplicate of MNG-5796 because the apropriate fix was delivered:

{noformat}
commit f27c348bbaf51046029ce2853feeaf98700f1aca
Author: Andreas Gudian <agudian@apache.org>
Date:   2015-05-02 19:33:38 +0200

    MNG-5796 fix mvn.cmd execution when invoked at drive root
{noformat}

eight months before this issue was created.
;;;","25/Jan/17 15:48;michael-o;Closing as duplicate. Feel free to reopen if you think otherwise.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Malformed POM expected START_TAG or END_TAG not TEXT,MNG-5848,12840462,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Not A Problem,rfscholte,yhjhoo,yhjhoo,25/Jun/15 07:47,25/Jun/15 08:17,03/Jan/22 13:13,25/Jun/15 08:17,3.3.3,,,,,,,,,,,,,0,,,,"Whenever I added following dependency to my maven, I couldn't run ""mvn test"" for the project.

{code:xml}
<dependency>
		    <groupId>org.jasypt</groupId>
		    <artifactId>jasypt-spring31</artifactId>
		    <version>1.9.1</version>
		</dependency>
{code}

Exact error is:
{noformat}
[ERROR]   The project com.cimb.sample:MavenCoverageTest:0.0.1-SNAPSHOT (C:\Users\sgscyhjx\git\mavencoveragetest\pom.xml) has 1 error
[ERROR]     Malformed POM C:\Users\sgscyhjx\git\mavencoveragetest\pom.xml: expected START_TAG or END_TAG not TEXT (position: TEXT seen ...<dependency>\r\n\t\t\ua0\ua0\ua0\ua0<g... @42:9)  @ C:\Users\sgscyhjx\git\mavencoveragetest\pom.xml, line 42, column 9 -> [Help 2]
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i2gh8v:",9223372036854775807,,,,,,,,,,,,,,,,,,,"25/Jun/15 07:55;yhjhoo;I resolved this problem by replacing blank space to tab. 

Not sure why;;;","25/Jun/15 08:17;rfscholte;Based on the error-message the xml contains a [non-breaking space|https://en.wikipedia.org/wiki/Non-breaking_space] (that's the {{\ua0}}). Tabs, spaces, linebreaks and carriage returns are trimmed, but this character not. Hence the result is invalid xml.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failure with maven-site-plugin:stage,MNG-5819,12826801,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Cannot Reproduce,schulte77,khmarbaise,khmarbaise,03/May/15 15:43,13/Feb/16 12:36,03/Jan/22 13:13,25/Jan/16 02:25,3.0.5,,,,,,,,,,,,,0,,,,"If i try to stage the site of maven itself it fails with the following message:

{code}Karl-Heinzs-MacBook-Pro:maven kama$ mvn site:stage
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Build Order:
[INFO]
[INFO] Apache Maven
[INFO] Maven Model
[INFO] Maven Artifact
[INFO] Maven Plugin API
[INFO] Maven Builder Support
[INFO] Maven Model Builder
[INFO] Maven Settings
[INFO] Maven Settings Builder
[INFO] Maven Repository Metadata Model
[INFO] Maven Aether Provider
[INFO] Maven Core
[INFO] Maven Compat
[INFO] Maven Embedder
[INFO] Apache Maven Distribution
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Building Apache Maven 3.3.3
[INFO] ------------------------------------------------------------------------
[INFO]
[INFO] --- maven-site-plugin:3.4:stage (default-cli) @ maven ---
[INFO] Using this base directory for staging: /Users/kama/ws-git/apache/maven/target/staging
file:///Users/kama/ws-git/apache/maven/target/staging/ - Session: Opened
[INFO] Pushing /Users/kama/ws-git/apache/maven/target/site
[INFO]    >>> to file:///Users/kama/ws-git/apache/maven/target/staging/../../../components/ref/3-LATEST
file:///Users/kama/ws-git/apache/maven/target/staging/ - Session: Disconnecting
file:///Users/kama/ws-git/apache/maven/target/staging/ - Session: Disconnected
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO]
[INFO] Apache Maven ...................................... FAILURE [0.967s]
[INFO] Maven Model ....................................... SKIPPED
[INFO] Maven Artifact .................................... SKIPPED
[INFO] Maven Plugin API .................................. SKIPPED
[INFO] Maven Builder Support ............................. SKIPPED
[INFO] Maven Model Builder ............................... SKIPPED
[INFO] Maven Settings .................................... SKIPPED
[INFO] Maven Settings Builder ............................ SKIPPED
[INFO] Maven Repository Metadata Model ................... SKIPPED
[INFO] Maven Aether Provider ............................. SKIPPED
[INFO] Maven Core ........................................ SKIPPED
[INFO] Maven Compat ...................................... SKIPPED
[INFO] Maven Embedder .................................... SKIPPED
[INFO] Apache Maven Distribution ......................... SKIPPED
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 1.662s
[INFO] Finished at: Sun May 03 16:51:13 CEST 2015
[INFO] Final Memory: 14M/213M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-site-plugin:3.4:stage (default-cli) on project maven: Execution default-cli of goal org.apache.maven.plugins:maven-site-plugin:3.4:stage failed: A required class was missing while executing org.apache.maven.plugins:maven-site-plugin:3.4:stage: org/apache/commons/lang/StringUtils
[ERROR] -----------------------------------------------------
[ERROR] realm =    plugin>org.apache.maven.plugins:maven-site-plugin:3.4
[ERROR] strategy = org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy
[ERROR] urls[0] = file:/Users/kama/.m2/repository/org/apache/maven/plugins/maven-site-plugin/3.4/maven-site-plugin-3.4.jar
[ERROR] urls[1] = file:/Users/kama/.m2/repository/org/apache/maven/maven-archiver/2.5/maven-archiver-2.5.jar
[ERROR] urls[2] = file:/Users/kama/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.15/plexus-interpolation-1.15.jar
[ERROR] urls[3] = file:/Users/kama/.m2/repository/org/codehaus/plexus/plexus-archiver/2.4.4/plexus-archiver-2.4.4.jar
[ERROR] urls[4] = file:/Users/kama/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar
[ERROR] urls[5] = file:/Users/kama/.m2/repository/org/codehaus/plexus/plexus-io/2.0.10/plexus-io-2.0.10.jar
[ERROR] urls[6] = file:/Users/kama/.m2/repository/org/apache/commons/commons-compress/1.5/commons-compress-1.5.jar
[ERROR] urls[7] = file:/Users/kama/.m2/repository/org/tukaani/xz/1.2/xz-1.2.jar
[ERROR] urls[8] = file:/Users/kama/.m2/repository/org/apache/maven/reporting/maven-reporting-exec/1.2/maven-reporting-exec-1.2.jar
[ERROR] urls[9] = file:/Users/kama/.m2/repository/org/apache/maven/reporting/maven-reporting-api/3.0/maven-reporting-api-3.0.jar
[ERROR] urls[10] = file:/Users/kama/.m2/repository/org/apache/maven/shared/maven-shared-utils/0.3/maven-shared-utils-0.3.jar
[ERROR] urls[11] = file:/Users/kama/.m2/repository/com/google/code/findbugs/jsr305/2.0.1/jsr305-2.0.1.jar
[ERROR] urls[12] = file:/Users/kama/.m2/repository/org/sonatype/aether/aether-util/1.7/aether-util-1.7.jar
[ERROR] urls[13] = file:/Users/kama/.m2/repository/org/eclipse/aether/aether-util/0.9.0.M2/aether-util-0.9.0.M2.jar
[ERROR] urls[14] = file:/Users/kama/.m2/repository/org/sonatype/sisu/sisu-inject-bean/1.4.2/sisu-inject-bean-1.4.2.jar
[ERROR] urls[15] = file:/Users/kama/.m2/repository/org/sonatype/sisu/sisu-guice/2.1.7/sisu-guice-2.1.7-noaop.jar
[ERROR] urls[16] = file:/Users/kama/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar
[ERROR] urls[17] = file:/Users/kama/.m2/repository/org/sonatype/plexus/plexus-sec-dispatcher/1.3/plexus-sec-dispatcher-1.3.jar
[ERROR] urls[18] = file:/Users/kama/.m2/repository/org/sonatype/plexus/plexus-cipher/1.4/plexus-cipher-1.4.jar
[ERROR] urls[19] = file:/Users/kama/.m2/repository/org/apache/maven/doxia/doxia-sink-api/1.6/doxia-sink-api-1.6.jar
[ERROR] urls[20] = file:/Users/kama/.m2/repository/org/apache/maven/doxia/doxia-logging-api/1.6/doxia-logging-api-1.6.jar
[ERROR] urls[21] = file:/Users/kama/.m2/repository/org/apache/maven/doxia/doxia-core/1.6/doxia-core-1.6.jar
[ERROR] urls[22] = file:/Users/kama/.m2/repository/xerces/xercesImpl/2.9.1/xercesImpl-2.9.1.jar
[ERROR] urls[23] = file:/Users/kama/.m2/repository/xml-apis/xml-apis/1.3.04/xml-apis-1.3.04.jar
[ERROR] urls[24] = file:/Users/kama/.m2/repository/org/apache/httpcomponents/httpclient/4.0.2/httpclient-4.0.2.jar
[ERROR] urls[25] = file:/Users/kama/.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar
[ERROR] urls[26] = file:/Users/kama/.m2/repository/commons-codec/commons-codec/1.3/commons-codec-1.3.jar
[ERROR] urls[27] = file:/Users/kama/.m2/repository/org/apache/httpcomponents/httpcore/4.0.1/httpcore-4.0.1.jar
[ERROR] urls[28] = file:/Users/kama/.m2/repository/xmlunit/xmlunit/1.5/xmlunit-1.5.jar
[ERROR] urls[29] = file:/Users/kama/.m2/repository/org/apache/maven/doxia/doxia-module-xhtml/1.6/doxia-module-xhtml-1.6.jar
[ERROR] urls[30] = file:/Users/kama/.m2/repository/org/apache/maven/doxia/doxia-module-apt/1.6/doxia-module-apt-1.6.jar
[ERROR] urls[31] = file:/Users/kama/.m2/repository/org/apache/maven/doxia/doxia-module-xdoc/1.6/doxia-module-xdoc-1.6.jar
[ERROR] urls[32] = file:/Users/kama/.m2/repository/org/apache/maven/doxia/doxia-module-fml/1.6/doxia-module-fml-1.6.jar
[ERROR] urls[33] = file:/Users/kama/.m2/repository/org/apache/maven/doxia/doxia-module-markdown/1.6/doxia-module-markdown-1.6.jar
[ERROR] urls[34] = file:/Users/kama/.m2/repository/org/pegdown/pegdown/1.2.1/pegdown-1.2.1.jar
[ERROR] urls[35] = file:/Users/kama/.m2/repository/org/parboiled/parboiled-java/1.1.4/parboiled-java-1.1.4.jar
[ERROR] urls[36] = file:/Users/kama/.m2/repository/org/parboiled/parboiled-core/1.1.4/parboiled-core-1.1.4.jar
[ERROR] urls[37] = file:/Users/kama/.m2/repository/org/ow2/asm/asm/4.1/asm-4.1.jar
[ERROR] urls[38] = file:/Users/kama/.m2/repository/org/ow2/asm/asm-tree/4.1/asm-tree-4.1.jar
[ERROR] urls[39] = file:/Users/kama/.m2/repository/org/ow2/asm/asm-analysis/4.1/asm-analysis-4.1.jar
[ERROR] urls[40] = file:/Users/kama/.m2/repository/org/ow2/asm/asm-util/4.1/asm-util-4.1.jar
[ERROR] urls[41] = file:/Users/kama/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar
[ERROR] urls[42] = file:/Users/kama/.m2/repository/org/apache/maven/doxia/doxia-decoration-model/1.6/doxia-decoration-model-1.6.jar
[ERROR] urls[43] = file:/Users/kama/.m2/repository/org/apache/maven/doxia/doxia-site-renderer/1.6/doxia-site-renderer-1.6.jar
[ERROR] urls[44] = file:/Users/kama/.m2/repository/org/apache/velocity/velocity-tools/2.0/velocity-tools-2.0.jar
[ERROR] urls[45] = file:/Users/kama/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar
[ERROR] urls[46] = file:/Users/kama/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar
[ERROR] urls[47] = file:/Users/kama/.m2/repository/commons-chain/commons-chain/1.1/commons-chain-1.1.jar
[ERROR] urls[48] = file:/Users/kama/.m2/repository/commons-validator/commons-validator/1.3.1/commons-validator-1.3.1.jar
[ERROR] urls[49] = file:/Users/kama/.m2/repository/dom4j/dom4j/1.1/dom4j-1.1.jar
[ERROR] urls[50] = file:/Users/kama/.m2/repository/sslext/sslext/1.2-0/sslext-1.2-0.jar
[ERROR] urls[51] = file:/Users/kama/.m2/repository/org/apache/struts/struts-core/1.3.8/struts-core-1.3.8.jar
[ERROR] urls[52] = file:/Users/kama/.m2/repository/antlr/antlr/2.7.2/antlr-2.7.2.jar
[ERROR] urls[53] = file:/Users/kama/.m2/repository/org/apache/struts/struts-taglib/1.3.8/struts-taglib-1.3.8.jar
[ERROR] urls[54] = file:/Users/kama/.m2/repository/org/apache/struts/struts-tiles/1.3.8/struts-tiles-1.3.8.jar
[ERROR] urls[55] = file:/Users/kama/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar
[ERROR] urls[56] = file:/Users/kama/.m2/repository/org/apache/maven/doxia/doxia-integration-tools/1.6/doxia-integration-tools-1.6.jar
[ERROR] urls[57] = file:/Users/kama/.m2/repository/org/codehaus/plexus/plexus-i18n/1.0-beta-7/plexus-i18n-1.0-beta-7.jar
[ERROR] urls[58] = file:/Users/kama/.m2/repository/org/apache/velocity/velocity/1.5/velocity-1.5.jar
[ERROR] urls[59] = file:/Users/kama/.m2/repository/oro/oro/2.0.8/oro-2.0.8.jar
[ERROR] urls[60] = file:/Users/kama/.m2/repository/org/codehaus/plexus/plexus-velocity/1.1.8/plexus-velocity-1.1.8.jar
[ERROR] urls[61] = file:/Users/kama/.m2/repository/org/codehaus/plexus/plexus-utils/3.0.15/plexus-utils-3.0.15.jar
[ERROR] urls[62] = file:/Users/kama/.m2/repository/org/mortbay/jetty/jetty/6.1.25/jetty-6.1.25.jar
[ERROR] urls[63] = file:/Users/kama/.m2/repository/org/mortbay/jetty/servlet-api/2.5-20081211/servlet-api-2.5-20081211.jar
[ERROR] urls[64] = file:/Users/kama/.m2/repository/org/mortbay/jetty/jetty-util/6.1.25/jetty-util-6.1.25.jar
[ERROR] urls[65] = file:/Users/kama/.m2/repository/commons-lang/commons-lang/2.5/commons-lang-2.5.jar
[ERROR] urls[66] = file:/Users/kama/.m2/repository/commons-io/commons-io/1.4/commons-io-1.4.jar
[ERROR] Number of foreign imports: 1
[ERROR] import: Entry[import  from realm ClassRealm[maven.api, parent: null]]
[ERROR]
[ERROR] -----------------------------------------------------: org.apache.commons.lang.StringUtils
[ERROR] -> [Help 1]
[ERROR]
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR]
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/PluginContainerException
{code}

The interesting things here is that if i use Maven 3.1.1, or above the problems vanishes...","Apache Maven 3.0.5 (r01de14724cdef164cd33c7c8c2fe155faf9602da; 2013-02-19 14:51:28+0100)
Maven home: /usr/share/maven
Java version: 1.7.0_21, vendor: Oracle Corporation
Java home: /Library/Java/JavaVirtualMachines/jdk1.7.0_21.jdk/Contents/Home/jre
Default locale: en_US, platform encoding: UTF-8
OS name: ""mac os x"", version: ""10.8.5"", arch: ""x86_64"", family: ""mac""",,,,,,,,,,,MNG-5943,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i2e83z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JDK7 compatibility,MNG-5802,12821798,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Duplicate,rfscholte,hongwei.zhang,hongwei.zhang,17/Apr/15 07:53,27/Apr/15 13:02,03/Jan/22 13:13,27/Apr/15 13:02,3.3.1,,,,,,,,,,,,,0,,,,"Add the bin directory to system PATH,maven only works in c:/users/***,other disk not work.
But,I replace maven to 3.2.5,it works ok.","OS:Windows 7 x64 Enterprise;
JDK:1.7.55;",,,,,,,,,,,,,,,,,,,,,,,MNG-5804,MNG-5796,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Apr/15 03:03;hongwei.zhang;2015-04-27_104133.png;https://issues.apache.org/jira/secure/attachment/12728299/2015-04-27_104133.png","27/Apr/15 03:03;hongwei.zhang;2015-04-27_104352.png;https://issues.apache.org/jira/secure/attachment/12728298/2015-04-27_104352.png",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i2de3b:",9223372036854775807,,,,,,,,,,,,,,,,,,,"25/Apr/15 08:36;michael-o;What?;;;","26/Apr/15 19:36;tibordigana;I guess you are pointing to JRE version rather than local repo which can be configured in $MAVEN_HOME/conf/settings.xml

What is printed after 
$ mvn -version

Is the same Java version printed with JAVA_HOME?;;;","27/Apr/15 03:03;hongwei.zhang;The Maven 3.3.1 version:
              
 The Maven  3.2.5 version:
              


--best regards > Date: Sun, 26 Apr 2015 19:36:38 +0000> From: jira@apache.org
 		 	   		  
;;;","27/Apr/15 13:02;rfscholte;Based on the attachment the actual issue is MNG-5796
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Version 3.2.5 disappeared from the download page,MNG-5788,12796324,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,,stephan202,stephan202,18/Mar/15 15:57,24/Mar/15 17:25,03/Jan/22 13:13,24/Mar/15 17:25,3.2.5,,,,,,,,General,,,,,0,,,,"The [Maven download page|https://maven.apache.org/download.cgi] currently lists versions 3.3.1, 3.1.1 and 3.0.5. Version 3.2.5 is missing. I guess this happened y accident when 3.3.1 was made available.",Any,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28sqn:",9223372036854775807,,,,,,,,,,,,,,,,,,,"24/Mar/15 17:25;stephan202;This has been fixed by now, so I'll close the ticket. Some links on the download page are still incorrect, though. I opened [PR #2|https://github.com/apache/maven-site/pull/2] for that.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Moving from Maven 3.0.5 to 3.3.3 breaks plugins with some dependencies on the class path,MNG-5787,12796402,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,aheritier,christians,christians,18/Mar/15 14:05,28/Mar/20 14:59,03/Jan/22 13:13,04/Oct/15 12:28,3.3.1,3.3.3,,,,3.3.9,,,Class Loading,,,,,14,,,,"There is a regression when setting up the class path for a plugin in Maven 3.3.1. The following commands run fine when using Maven 3.2.5 or older:

{code}
$ mvn --version
Apache Maven 3.2.5 (12a6b3acb947671f09b81f49094c53f426d8cea1; 2014-12-14T18:29:23+01:00)
Maven home: /usr/local/Cellar/maven/3.2.5/libexec
Java version: 1.8.0_40, vendor: Oracle Corporation
Java home: /Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home/jre
Default locale: de_DE, platform encoding: UTF-8
OS name: ""mac os x"", version: ""10.10.2"", arch: ""x86_64"", family: ""mac""
$ mvn archetype:generate \
    -DarchetypeGroupId=net.java.truelicense \
    -DarchetypeArtifactId=truelicense-maven-archetype \
    -DarchetypeVersion=2.3.4 \
    -DgroupId=com.company.product \
    -DartifactId=product \
    -Dversion=0.1-SNAPSHOT \
    -Dpackage=com.company.product \
    -Dsubject=""Product 1""
[...]
$ cd project
$ mvn clean install
[...]
{code}

Note that I have shortened the output using bracketed ellipsis {{\[...\]}}.

However, when running the same commands using Maven 3.3.1, I get the following output:

{code}
$ mvn --version
Apache Maven 3.3.1 (cab6659f9874fa96462afef40fcf6bc033d58c1c; 2015-03-13T21:10:27+01:00)
Maven home: /Users/christian/Downloads/apache-maven-3.3.1
Java version: 1.8.0_40, vendor: Oracle Corporation
Java home: /Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home/jre
Default locale: de_DE, platform encoding: UTF-8
OS name: ""mac os x"", version: ""10.10.2"", arch: ""x86_64"", family: ""mac""
$ mvn archetype:generate \
    -DarchetypeGroupId=net.java.truelicense \
    -DarchetypeArtifactId=truelicense-maven-archetype \
    -DarchetypeVersion=2.3.4 \
    -DgroupId=com.company.product \
    -DartifactId=product \
    -Dversion=0.1-SNAPSHOT \
    -Dpackage=com.company.product \
    -Dsubject=""Product 1""
[...]
$ cd project
$ mvn clean install
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Build Order:
[INFO] 
[INFO] product
[INFO] keygen
[INFO] keymgr
[INFO] keysrv
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building product 0.1-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.6:clean (default-clean) @ product ---
[INFO] 
[INFO] --- maven-enforcer-plugin:1.3.1:enforce (enforce-maven) @ product ---
[INFO] 
[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ product ---
[INFO] Installing /Users/christian/sandbox/truelicense/product/pom.xml to /Users/christian/.m2/repository/com/company/product/product/0.1-SNAPSHOT/product-0.1-SNAPSHOT.pom
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building keygen 0.1-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.6:clean (default-clean) @ keygen ---
[INFO] Deleting /Users/christian/sandbox/truelicense/product/keygen/target
[INFO] 
[INFO] --- maven-enforcer-plugin:1.3.1:enforce (enforce-maven) @ keygen ---
[INFO] 
[INFO] --- maven-resources-plugin:2.7:resources (default-resources) @ keygen ---
[INFO] Using 'US-ASCII' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ keygen ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 2 source files to /Users/christian/sandbox/truelicense/product/keygen/target/classes
[INFO] 
[INFO] --- truelicense-maven-plugin:2.3.4:obfuscate (default) @ keygen ---
[INFO] Obfuscating annotated constant string values in /Users/christian/sandbox/truelicense/product/keygen/target/classes.
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO] 
[INFO] product ............................................ SUCCESS [  0.411 s]
[INFO] keygen ............................................. FAILURE [  1.022 s]
[INFO] keymgr ............................................. SKIPPED
[INFO] keysrv ............................................. SKIPPED
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 1.646 s
[INFO] Finished at: 2015-03-18T19:31:46+01:00
[INFO] Final Memory: 15M/245M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal net.java.truelicense:truelicense-maven-plugin:2.3.4:obfuscate (default) on project keygen: Execution default of goal net.java.truelicense:truelicense-maven-plugin:2.3.4:obfuscate failed: A required class was missing while executing net.java.truelicense:truelicense-maven-plugin:2.3.4:obfuscate: org/slf4j/helpers/MarkerIgnoringBase
[ERROR] -----------------------------------------------------
[ERROR] realm =    plugin>net.java.truelicense:truelicense-maven-plugin:2.3.4
[ERROR] strategy = org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy
[ERROR] urls[0] = file:/Users/christian/.m2/repository/net/java/truelicense/truelicense-maven-plugin/2.3.4/truelicense-maven-plugin-2.3.4.jar
[ERROR] urls[1] = file:/Users/christian/.m2/repository/net/java/truelicense/truelicense-obfuscate/2.3.4/truelicense-obfuscate-2.3.4.jar
[ERROR] urls[2] = file:/Users/christian/.m2/repository/de/schlichtherle/truezip/truezip-driver-zip/7.7.6/truezip-driver-zip-7.7.6.jar
[ERROR] urls[3] = file:/Users/christian/.m2/repository/de/schlichtherle/truezip/truezip-swing/7.7.6/truezip-swing-7.7.6.jar
[ERROR] urls[4] = file:/Users/christian/.m2/repository/org/apache/commons/commons-compress/1.9/commons-compress-1.9.jar
[ERROR] urls[5] = file:/Users/christian/.m2/repository/de/schlichtherle/truezip/truezip-kernel/7.7.6/truezip-kernel-7.7.6.jar
[ERROR] urls[6] = file:/Users/christian/.m2/repository/de/schlichtherle/truezip/truezip-file/7.7.6/truezip-file-7.7.6.jar
[ERROR] urls[7] = file:/Users/christian/.m2/repository/de/schlichtherle/truezip/truezip-driver-file/7.7.6/truezip-driver-file-7.7.6.jar
[ERROR] urls[8] = file:/Users/christian/.m2/repository/org/ow2/asm/asm-tree/5.0.3/asm-tree-5.0.3.jar
[ERROR] urls[9] = file:/Users/christian/.m2/repository/org/ow2/asm/asm/5.0.3/asm-5.0.3.jar
[ERROR] urls[10] = file:/Users/christian/.m2/repository/org/codehaus/plexus/plexus-utils/1.1/plexus-utils-1.1.jar
[ERROR] Number of foreign imports: 1
[ERROR] import: Entry[import  from realm ClassRealm[maven.api, parent: null]]
[ERROR] 
[ERROR] -----------------------------------------------------: org.slf4j.helpers.MarkerIgnoringBase
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/PluginContainerException
[ERROR] 
[ERROR] After correcting the problems, you can resume the build with the command
[ERROR]   mvn <goals> -rf :keygen
{code}

{{org.slf4j.helpers.MarkerIgnoringBase}} is a class in the SLF4J API. Version 1.7.7 is a compile dependency of the TrueLicense Maven Plugin, as can be seen at https://repo1.maven.org/maven2/net/java/truelicense/truelicense-maven-plugin/2.3.4/truelicense-maven-plugin-2.3.4.pom , however it is apparently missing on the class path when building the project with Maven 3.3.1.

Using a 1.7 JDK makes no difference, too.
","OS X 10.10.2, Oracle JDK 1.7.0_76 and Oracle JDK 1.8.0_40.
OS X 10.10.3, Oracle JDK 1.7.0_80 and Oracle JDK 1.8.0_45.",,,,,,,,,,,,,,,,MNG-5845,MNG-5842,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Mar/15 09:16;hello-maven-plugin.zip;https://issues.apache.org/jira/secure/attachment/12713243/hello-maven-plugin.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28p5j:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"20/Mar/15 14:55;velo;Got the same problem here, but with a different plugin:
{code}
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Scanning: /home/velo/.m2/repository/org/projectlombok/lombok/1.14.8:/home/velo/.m2/repository/javax/javaee-api/6.0-contaazul:/home/velo/.m2/repository/com/google/guava/guava/18.0
[INFO] Total time: 13.312 s (Wall Clock)
[INFO] Finished at: 2015-03-20T16:55:08-03:00
[INFO] Final Memory: 59M/1963M
[INFO] ------------------------------------------------------------------------
[INFO] Installing /home/velo/contaazul/contaazul-app-parent/pom.xml to /home/velo/.m2/repository/com/contaazul/contaazul-app-parent/1.0-SNAPSHOT/contaazul-app-parent-1.0-SNAPSHOT.pom
[ERROR] Failed to execute goal com.github.eirslett:frontend-maven-plugin:0.0.20:install-node-and-npm (install node and npm) on project contaazul-static: Execution install node and npm of goal com.github.eirslett:frontend-maven-plugin:0.0.20:install-node-and-npm failed: A required class was missing while executing com.github.eirslett:frontend-maven-plugin:0.0.20:install-node-and-npm: org/slf4j/helpers/MarkerIgnoringBase
[ERROR] -----------------------------------------------------
[ERROR] realm =    plugin>com.github.eirslett:frontend-maven-plugin:0.0.20
[ERROR] strategy = org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy
[ERROR] urls[0] = file:/home/velo/.m2/repository/com/github/eirslett/frontend-maven-plugin/0.0.20/frontend-maven-plugin-0.0.20.jar
[ERROR] urls[1] = file:/home/velo/.m2/repository/com/github/eirslett/frontend-plugin-core/0.0.20/frontend-plugin-core-0.0.20.jar
[ERROR] urls[2] = file:/home/velo/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar
[ERROR] urls[3] = file:/home/velo/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar
[ERROR] urls[4] = file:/home/velo/.m2/repository/org/apache/commons/commons-compress/1.5/commons-compress-1.5.jar
[ERROR] urls[5] = file:/home/velo/.m2/repository/org/tukaani/xz/1.2/xz-1.2.jar
[ERROR] urls[6] = file:/home/velo/.m2/repository/commons-io/commons-io/1.3.2/commons-io-1.3.2.jar
[ERROR] urls[7] = file:/home/velo/.m2/repository/org/apache/httpcomponents/httpclient/4.3.1/httpclient-4.3.1.jar
[ERROR] urls[8] = file:/home/velo/.m2/repository/org/apache/httpcomponents/httpcore/4.3/httpcore-4.3.jar
[ERROR] urls[9] = file:/home/velo/.m2/repository/commons-logging/commons-logging/1.1.3/commons-logging-1.1.3.jar
[ERROR] urls[10] = file:/home/velo/.m2/repository/commons-codec/commons-codec/1.6/commons-codec-1.6.jar
[ERROR] urls[11] = file:/home/velo/.m2/repository/javax/enterprise/cdi-api/1.0/cdi-api-1.0.jar
[ERROR] urls[12] = file:/home/velo/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar
[ERROR] urls[13] = file:/home/velo/.m2/repository/com/google/guava/guava/10.0.1/guava-10.0.1.jar
[ERROR] urls[14] = file:/home/velo/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar
[ERROR] urls[15] = file:/home/velo/.m2/repository/org/sonatype/sisu/sisu-guice/3.1.0/sisu-guice-3.1.0-no_aop.jar
[ERROR] urls[16] = file:/home/velo/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar
[ERROR] urls[17] = file:/home/velo/.m2/repository/org/eclipse/sisu/org.eclipse.sisu.inject/0.0.0.M2a/org.eclipse.sisu.inject-0.0.0.M2a.jar
[ERROR] urls[18] = file:/home/velo/.m2/repository/asm/asm/3.3.1/asm-3.3.1.jar
[ERROR] urls[19] = file:/home/velo/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar
[ERROR] urls[20] = file:/home/velo/.m2/repository/org/apache/maven/plugin-tools/maven-plugin-annotations/3.2/maven-plugin-annotations-3.2.jar
[ERROR] urls[21] = file:/home/velo/.m2/repository/com/googlecode/slf4j-maven-plugin-log/slf4j-maven-plugin-log/1.0.0/slf4j-maven-plugin-log-1.0.0.jar
[ERROR] urls[22] = file:/home/velo/.m2/repository/org/sonatype/plexus/plexus-build-api/0.0.7/plexus-build-api-0.0.7.jar
[ERROR] urls[23] = file:/home/velo/.m2/repository/org/codehaus/plexus/plexus-utils/1.5.8/plexus-utils-1.5.8.jar
[ERROR] Number of foreign imports: 1
[ERROR] import: Entry[import  from realm ClassRealm[maven.api, parent: null]]
[ERROR] 
[ERROR] -----------------------------------------------------: org.slf4j.helpers.MarkerIgnoringBase
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/PluginContainerException
[ERROR] 
[ERROR] After correcting the problems, you can resume the build with the command

{code};;;","26/Mar/15 00:44;referee;Got the same issue with Maven 3.3.1:
{noformat}
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 0.447 s
[INFO] Finished at: 2015-03-26T10:37:00+05:00
[INFO] Final Memory: 6M/15M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal com.github.eirslett:frontend-maven-plugin:0.0.22:gulp (default-cli) on project veb-spaimip: Execution default-cli of goal com.github.eirslett:frontend-maven-plugin:0.0.22:gulp failed: A required class was missing while executing com.github.eirslett:frontend-maven-plugin:0.0.22:gulp: org/slf4j/helpers/MarkerIgnoringBase
[ERROR] -----------------------------------------------------
[ERROR] realm =    plugin>com.github.eirslett:frontend-maven-plugin:0.0.22
[ERROR] strategy = org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy
[ERROR] urls[0] = file:/D:/java/.m2/repository/com/github/eirslett/frontend-maven-plugin/0.0.22/frontend-maven-plugin-0.0.22.jar
[ERROR] urls[1] = file:/D:/java/.m2/repository/com/github/eirslett/frontend-plugin-core/0.0.22/frontend-plugin-core-0.0.22.jar
[ERROR] urls[2] = file:/D:/java/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar
[ERROR] urls[3] = file:/D:/java/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar
[ERROR] urls[4] = file:/D:/java/.m2/repository/org/apache/commons/commons-compress/1.5/commons-compress-1.5.jar
[ERROR] urls[5] = file:/D:/java/.m2/repository/org/tukaani/xz/1.2/xz-1.2.jar
[ERROR] urls[6] = file:/D:/java/.m2/repository/commons-io/commons-io/1.3.2/commons-io-1.3.2.jar
[ERROR] urls[7] = file:/D:/java/.m2/repository/org/apache/httpcomponents/httpclient/4.3.1/httpclient-4.3.1.jar
[ERROR] urls[8] = file:/D:/java/.m2/repository/org/apache/httpcomponents/httpcore/4.3/httpcore-4.3.jar
[ERROR] urls[9] = file:/D:/java/.m2/repository/commons-logging/commons-logging/1.1.3/commons-logging-1.1.3.jar
[ERROR] urls[10] = file:/D:/java/.m2/repository/commons-codec/commons-codec/1.6/commons-codec-1.6.jar
[ERROR] urls[11] = file:/D:/java/.m2/repository/javax/enterprise/cdi-api/1.0/cdi-api-1.0.jar
[ERROR] urls[12] = file:/D:/java/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar
[ERROR] urls[13] = file:/D:/java/.m2/repository/com/google/guava/guava/10.0.1/guava-10.0.1.jar
[ERROR] urls[14] = file:/D:/java/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar
[ERROR] urls[15] = file:/D:/java/.m2/repository/org/sonatype/sisu/sisu-guice/3.1.0/sisu-guice-3.1.0-no_aop.jar
[ERROR] urls[16] = file:/D:/java/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar
[ERROR] urls[17] = file:/D:/java/.m2/repository/org/eclipse/sisu/org.eclipse.sisu.inject/0.0.0.M2a/org.eclipse.sisu.inject-0.0.0.M2a.jar
[ERROR] urls[18] = file:/D:/java/.m2/repository/asm/asm/3.3.1/asm-3.3.1.jar
[ERROR] urls[19] = file:/D:/java/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar
[ERROR] urls[20] = file:/D:/java/.m2/repository/org/apache/maven/plugin-tools/maven-plugin-annotations/3.2/maven-plugin-annotations-3.2.jar
[ERROR] urls[21] = file:/D:/java/.m2/repository/com/googlecode/slf4j-maven-plugin-log/slf4j-maven-plugin-log/1.0.0/slf4j-maven-plugin-log-1.0.0.jar
[ERROR] urls[22] = file:/D:/java/.m2/repository/org/sonatype/plexus/plexus-build-api/0.0.7/plexus-build-api-0.0.7.jar
[ERROR] urls[23] = file:/D:/java/.m2/repository/org/codehaus/plexus/plexus-utils/1.5.8/plexus-utils-1.5.8.jar
[ERROR] Number of foreign imports: 1
[ERROR] import: Entry[import  from realm ClassRealm[maven.api, parent: null]]
[ERROR] 
[ERROR] -----------------------------------------------------: org.slf4j.helpers.MarkerIgnoringBase
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/PluginContainerException
{noformat};;;","26/Mar/15 01:13;danttran;frontend-maven-plugin fixed this issue https://github.com/eirslett/frontend-maven-plugin/pull/178;;;","26/Mar/15 09:30;christians;@Dan Tran: Thanks for the hint. I have inspected the patch, but this isn't really a fix. At best, it's a workaround which I suspect to break on any other use of the SLF4J API in the plugin.

I have investigated the case and prepared a very simple test plugin (only 3 files) which runs fine with Maven 3.2.5, but breaks with Maven 3.3.1 - see attached ZIP file. The archive contains the following files:

* {{pom.xml}}: Copied from http://maven.apache.org/guides/plugin/guide-java-plugin-development.html and added a dependency on the SLF4J API version 1.7.5. This is the same version as the one that ships with Maven 3.3.1.
* {{src/main/java/sample/plugin.LoggerAdapter.java}}: Extends {{org.slf4j.helpers.MarkerIgnoringBase}} and adapts it to {{org.apache.maven.plugin.logging.Log}}. I need this class in my TrueLicense Maven Plugin.
* {{src/main/java/sample/plugin/GreetingMojo.java}}: Copied from the same page and edited it to use the {{LoggerAdapter}} class.

After building the plugin, I can run its MOJO using Maven 3.2.5 just fine:

{code}
$ M2_HOME=/usr/local/Cellar/maven/3.2.5/libexec mvn sample.plugin:hello-maven-plugin:1.0-SNAPSHOT:sayhi -e
[INFO] Error stacktraces are turned on.
[INFO] Scanning for projects...
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building Maven Stub Project (No POM) 1
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- hello-maven-plugin:1.0-SNAPSHOT:sayhi (default-cli) @ standalone-pom ---
[INFO] Hello, world.
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 0.134 s
[INFO] Finished at: 2015-03-26T15:27:04+01:00
[INFO] Final Memory: 8M/309M
[INFO] ------------------------------------------------------------------------
{code}

Now using Maven 3.3.1, I get the following error message:

{code}
$ M2_HOME=/usr/local/Cellar/maven/3.3.1/libexec mvn sample.plugin:hello-maven-plugin:1.0-SNAPSHOT:sayhi -e
[INFO] Error stacktraces are turned on.
[INFO] Scanning for projects...
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building Maven Stub Project (No POM) 1
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- hello-maven-plugin:1.0-SNAPSHOT:sayhi (default-cli) @ standalone-pom ---
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 0.126 s
[INFO] Finished at: 2015-03-26T15:27:48+01:00
[INFO] Final Memory: 8M/309M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal sample.plugin:hello-maven-plugin:1.0-SNAPSHOT:sayhi (default-cli) on project standalone-pom: Execution default-cli of goal sample.plugin:hello-maven-plugin:1.0-SNAPSHOT:sayhi failed: A required class was missing while executing sample.plugin:hello-maven-plugin:1.0-SNAPSHOT:sayhi: org/slf4j/helpers/MarkerIgnoringBase
[ERROR] -----------------------------------------------------
[ERROR] realm =    plugin>sample.plugin:hello-maven-plugin:1.0-SNAPSHOT
[ERROR] strategy = org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy
[ERROR] urls[0] = file:/Users/christian/.m2/repository/sample/plugin/hello-maven-plugin/1.0-SNAPSHOT/hello-maven-plugin-1.0-SNAPSHOT.jar
[ERROR] urls[1] = file:/Users/christian/.m2/repository/org/codehaus/plexus/plexus-utils/1.1/plexus-utils-1.1.jar
[ERROR] Number of foreign imports: 1
[ERROR] import: Entry[import  from realm ClassRealm[maven.api, parent: null]]
[ERROR] 
[ERROR] -----------------------------------------------------: org.slf4j.helpers.MarkerIgnoringBase
[ERROR] -> [Help 1]
org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal sample.plugin:hello-maven-plugin:1.0-SNAPSHOT:sayhi (default-cli) on project standalone-pom: Execution default-cli of goal sample.plugin:hello-maven-plugin:1.0-SNAPSHOT:sayhi failed: A required class was missing while executing sample.plugin:hello-maven-plugin:1.0-SNAPSHOT:sayhi: org/slf4j/helpers/MarkerIgnoringBase
-----------------------------------------------------
realm =    plugin>sample.plugin:hello-maven-plugin:1.0-SNAPSHOT
strategy = org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy
urls[0] = file:/Users/christian/.m2/repository/sample/plugin/hello-maven-plugin/1.0-SNAPSHOT/hello-maven-plugin-1.0-SNAPSHOT.jar
urls[1] = file:/Users/christian/.m2/repository/org/codehaus/plexus/plexus-utils/1.1/plexus-utils-1.1.jar
Number of foreign imports: 1
import: Entry[import  from realm ClassRealm[maven.api, parent: null]]

-----------------------------------------------------

	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:224)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:862)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:286)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: org.apache.maven.plugin.PluginExecutionException: Execution default-cli of goal sample.plugin:hello-maven-plugin:1.0-SNAPSHOT:sayhi failed: A required class was missing while executing sample.plugin:hello-maven-plugin:1.0-SNAPSHOT:sayhi: org/slf4j/helpers/MarkerIgnoringBase
-----------------------------------------------------
realm =    plugin>sample.plugin:hello-maven-plugin:1.0-SNAPSHOT
strategy = org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy
urls[0] = file:/Users/christian/.m2/repository/sample/plugin/hello-maven-plugin/1.0-SNAPSHOT/hello-maven-plugin-1.0-SNAPSHOT.jar
urls[1] = file:/Users/christian/.m2/repository/org/codehaus/plexus/plexus-utils/1.1/plexus-utils-1.1.jar
Number of foreign imports: 1
import: Entry[import  from realm ClassRealm[maven.api, parent: null]]

-----------------------------------------------------

	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:168)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
	... 20 more
Caused by: org.apache.maven.plugin.PluginContainerException: A required class was missing while executing sample.plugin:hello-maven-plugin:1.0-SNAPSHOT:sayhi: org/slf4j/helpers/MarkerIgnoringBase
-----------------------------------------------------
realm =    plugin>sample.plugin:hello-maven-plugin:1.0-SNAPSHOT
strategy = org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy
urls[0] = file:/Users/christian/.m2/repository/sample/plugin/hello-maven-plugin/1.0-SNAPSHOT/hello-maven-plugin-1.0-SNAPSHOT.jar
urls[1] = file:/Users/christian/.m2/repository/org/codehaus/plexus/plexus-utils/1.1/plexus-utils-1.1.jar
Number of foreign imports: 1
import: Entry[import  from realm ClassRealm[maven.api, parent: null]]

-----------------------------------------------------

	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:166)
	... 21 more
Caused by: java.lang.NoClassDefFoundError: org/slf4j/helpers/MarkerIgnoringBase
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:760)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:467)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:73)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:368)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:362)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:361)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClassFromSelf(ClassRealm.java:401)
	at org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy.loadClass(SelfFirstStrategy.java:42)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.unsynchronizedLoadClass(ClassRealm.java:271)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:247)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:239)
	at sample.plugin.GreetingMojo.execute(GreetingMojo.java:10)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	... 21 more
Caused by: java.lang.ClassNotFoundException: org.slf4j.helpers.MarkerIgnoringBase
	at org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy.loadClass(SelfFirstStrategy.java:50)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.unsynchronizedLoadClass(ClassRealm.java:271)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:247)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:239)
	... 37 more
[ERROR] 
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/PluginContainerException
{code}

This is becoming a critical issue for me. Any help is greatly appreciated.;;;","26/Mar/15 10:54;christians;Here is an effective work-around: Add the maven-shade-plugin to the plugin POM and make sure to declare the scope of the maven-plugin-annotations and the maven-plugin-api as provided. The maven-shade-plugin creates an Uber JAR for the plugin which includes the slf4j-api. This runs fine with both Maven 3.3.1 and Maven 3.2.5.;;;","28/Apr/15 16:03;christians;It happened to me today again. This time another class from another dependency could not be found on the class path, although it was definitely present. I presume something is not right with the Classworlds component when there are many dependencies.;;;","02/Jun/15 13:12;TheSnoozer;[~christians] Thanks for the Tip with jaring the slfj4 in the plugin (by using the maven-shade-plugin).
We ran into the sample Problem and since our Plugin somehow needs to have support for ``-Dorg.slf4j.simpleLogger.defaultLogLevel=warn`` we have to include the slfj4-implementation in our plugin.
The Workaround suggested from [~dantran] ignores this Environment-Settings.
However, I just filed this as an additional Bug (MNG-5835).;;;","15/Jul/15 15:57;andreas.horst;I just ran into this with 3.3.3 today. What I really don't understand is that slf4j-api is listed in the dependency collection stats for the affected plugin but later on in the populated class realm it's missing.;;;","07/Aug/15 13:39;FKuertenTN;This also affects the {{maven-antrun-plugin}} both with 3.3.1 and 3.3.3 when trying to use the cobertura ant task.
{{pluginArtifacts}} contains {{slf4j-api}} but the actual java call from ant to cobertura specifies a classpath without slf4j.;;;","04/Oct/15 12:34;hudson;SUCCESS: Integrated in maven-3.x #1125 (See [https://builds.apache.org/job/maven-3.x/1125/])
MNG-5787,MNG-5842,MNG-5845: Add missing org.slf4j.helpers.* export which (aheritier: rev dfed29cc664f0e8f2f06278ff70d3037caf147f0)
* maven-core/src/main/resources/META-INF/maven/extension.xml
;;;","28/Mar/20 14:59;hudson;Build failed in Jenkins: Maven TLP » maven-studies » maven-metrics #4

See https://builds.apache.org/job/maven-box/job/maven-studies/job/maven-metrics/4/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cobertura-maven-plugin:instrument failing NoClassDefFoundError: org/slf4j/LoggerFactory,MNG-5783,12797281,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,igorfie,hboutemy,hboutemy,09/Mar/15 19:34,28/Mar/20 14:58,03/Jan/22 13:13,10/Mar/15 09:53,3.3.0,,,,,3.3.1,,,,,,,,0,,,,"testing cobertura-maven-plugin from svn http://mojo.codehaus.org/cobertura-maven-plugin/
IT pass with Maven 3.2.5 but fail with 3.3.0-SNAPSHOT

(not the same issue as MNG-5779)

{noformat}[DEBUG] /bin/sh -c /opt/jdk1.7.0_71/jre/bin/java -Dlog4j.configuration=file:/tmp/log4j1560920244563737852config.properties -Xmx1024m net.sourceforge.cobertura.instrument.InstrumentMain --commandsfile /tmp/cobertura.4914644993417176752.cmdline
[DEBUG] exit code: 1
[DEBUG] --------------------
[DEBUG]  Standard error from the Cobertura task:
[DEBUG] --------------------
[ERROR] Exception in thread ""main"" java.lang.NoClassDefFoundError: org/slf4j/LoggerFactory
	at net.sourceforge.cobertura.instrument.InstrumentMain$LoggerWrapper.<init>(InstrumentMain.java:165)
	at net.sourceforge.cobertura.instrument.InstrumentMain$LoggerWrapper.<init>(InstrumentMain.java:164)
	at net.sourceforge.cobertura.instrument.InstrumentMain.<clinit>(InstrumentMain.java:66)
Caused by: java.lang.ClassNotFoundException: org.slf4j.LoggerFactory
	at java.net.URLClassLoader$1.run(URLClassLoader.java:366)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	... 3 more
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-6024,,,MNG-5817,,,,,,MNG-5779,,,,,,,,,,,,,,,,,"09/Mar/15 19:40;hboutemy;build-3.2.5.log;https://issues.apache.org/jira/secure/attachment/12713307/build-3.2.5.log","09/Mar/15 19:40;hboutemy;build-3.3.0-SNAPSHOT.log;https://issues.apache.org/jira/secure/attachment/12713432/build-3.3.0-SNAPSHOT.log",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28r9z:",9223372036854775807,,,,,,,,,,,,,,,,,,,"09/Mar/15 19:40;hboutemy;attached {{check-pass}} IT build.log for Maven 3.2.5 and 3.3.0-SNAPSHOT to see the difference

with Maven 3.2.5
{noformat}[DEBUG] Created new class realm plugin>org.codehaus.mojo:cobertura-maven-plugin:2.8-SNAPSHOT
[DEBUG] Importing foreign packages into class realm plugin>org.codehaus.mojo:cobertura-maven-plugin:2.8-SNAPSHOT
[DEBUG]   Imported:  < maven.api
[DEBUG] Populating class realm plugin>org.codehaus.mojo:cobertura-maven-plugin:2.8-SNAPSHOT
[DEBUG]   Included: org.codehaus.mojo:cobertura-maven-plugin:jar:2.8-SNAPSHOT
[DEBUG]   Included: net.sourceforge.cobertura:cobertura:jar:2.1.1
[DEBUG]   Included: org.ow2.asm:asm:jar:5.0.1
[DEBUG]   Included: org.ow2.asm:asm-tree:jar:5.0.1
[DEBUG]   Included: org.ow2.asm:asm-commons:jar:5.0.1
[DEBUG]   Included: org.ow2.asm:asm-util:jar:5.0.1
[DEBUG]   Included: org.ow2.asm:asm-analysis:jar:5.0.1
[DEBUG]   Included: oro:oro:jar:2.0.8
[DEBUG]   Included: org.apache.ant:ant:jar:1.8.3
[DEBUG]   Included: org.apache.ant:ant-launcher:jar:1.8.3
[DEBUG]   Included: org.apache.ant:ant-junit:jar:1.8.3
[DEBUG]   Included: org.mortbay.jetty:servlet-api-2.5:jar:6.1.14
[DEBUG]   Included: org.mortbay.jetty:jetty:jar:6.1.14
[DEBUG]   Included: org.mortbay.jetty:jetty-util:jar:6.1.14
[DEBUG]   Included: com.sun:tools:jar:0
[DEBUG]   Included: org.slf4j:slf4j-api:jar:1.7.5
[DEBUG]   Included: ch.qos.logback:logback-classic:jar:1.0.13
[DEBUG]   Included: ch.qos.logback:logback-core:jar:1.0.13
[DEBUG]   Included: org.apache.commons:commons-lang3:jar:3.3.2
[DEBUG]   Included: xerces:xercesImpl:jar:2.11.0
[DEBUG]   Included: xml-apis:xml-apis:jar:1.4.01
[DEBUG]   Included: jaxen:jaxen:jar:1.1.4
[DEBUG]   Included: org.jdom:jdom:jar:1.1.3
[DEBUG]   Included: net.sourceforge.cobertura:cobertura-runtime:pom:2.1.1
[DEBUG]   Included: urbanophile:java-getopt:jar:1.0.9
[DEBUG]   Included: commons-cli:commons-cli:jar:1.0
[DEBUG]   Included: org.codehaus.plexus:plexus-interactivity-api:jar:1.0-alpha-4
[DEBUG]   Included: org.apache.maven.reporting:maven-reporting-api:jar:2.0.8
[DEBUG]   Included: org.apache.maven.doxia:doxia-sink-api:jar:1.0-alpha-9
[DEBUG]   Included: org.apache.maven.reporting:maven-reporting-impl:jar:2.0.4.2
[DEBUG]   Included: commons-validator:commons-validator:jar:1.2.0
[DEBUG]   Included: commons-beanutils:commons-beanutils:jar:1.7.0
[DEBUG]   Included: commons-digester:commons-digester:jar:1.6
[DEBUG]   Included: commons-logging:commons-logging:jar:1.0.4
[DEBUG]   Included: org.apache.maven.doxia:doxia-core:jar:1.0
[DEBUG]   Included: org.apache.maven.doxia:doxia-site-renderer:jar:1.0
[DEBUG]   Included: org.codehaus.plexus:plexus-i18n:jar:1.0-beta-7
[DEBUG]   Included: org.codehaus.plexus:plexus-velocity:jar:1.1.7
[DEBUG]   Included: org.apache.velocity:velocity:jar:1.5
[DEBUG]   Included: org.apache.maven.doxia:doxia-decoration-model:jar:1.0
[DEBUG]   Included: commons-collections:commons-collections:jar:3.2
[DEBUG]   Included: org.apache.maven.doxia:doxia-module-apt:jar:1.0
[DEBUG]   Included: org.apache.maven.doxia:doxia-module-fml:jar:1.0
[DEBUG]   Included: org.apache.maven.doxia:doxia-module-xdoc:jar:1.0
[DEBUG]   Included: org.apache.maven.doxia:doxia-module-xhtml:jar:1.0
[DEBUG]   Included: commons-lang:commons-lang:jar:2.4
[DEBUG]   Included: org.codehaus.plexus:plexus-utils:jar:2.0.2
[DEBUG]   Included: org.apache.maven.shared:maven-invoker:jar:2.0.11
[DEBUG]   Excluded: junit:junit:jar:4.11
[DEBUG]   Excluded: org.hamcrest:hamcrest-core:jar:1.3
[DEBUG]   Excluded: org.apache.maven:maven-core:jar:2.0.8
[DEBUG]   Excluded: org.apache.maven:maven-settings:jar:2.0.8
[DEBUG]   Excluded: org.apache.maven:maven-plugin-parameter-documenter:jar:2.0.8
[DEBUG]   Excluded: org.apache.maven:maven-profile:jar:2.0.8
[DEBUG]   Excluded: org.apache.maven:maven-model:jar:2.0.8
[DEBUG]   Excluded: org.codehaus.plexus:plexus-container-default:jar:1.0-alpha-9-stable-1
[DEBUG]   Excluded: org.apache.maven:maven-repository-metadata:jar:2.0.8
[DEBUG]   Excluded: org.apache.maven:maven-error-diagnostics:jar:2.0.8
[DEBUG]   Excluded: org.apache.maven:maven-plugin-descriptor:jar:2.0.8
[DEBUG]   Excluded: org.apache.maven:maven-artifact-manager:jar:2.0.8
[DEBUG]   Excluded: org.apache.maven:maven-monitor:jar:2.0.8
[DEBUG]   Excluded: classworlds:classworlds:jar:1.1
[DEBUG]   Excluded: org.apache.maven:maven-artifact:jar:2.0.8
[DEBUG]   Excluded: org.apache.maven:maven-plugin-api:jar:2.0.8
[DEBUG]   Excluded: org.apache.maven:maven-project:jar:2.0.8
[DEBUG]   Excluded: org.apache.maven:maven-plugin-registry:jar:2.0.8
[DEBUG] Configuring mojo org.codehaus.mojo:cobertura-maven-plugin:2.8-SNAPSHOT:instrument from plugin realm ClassRealm[plugin>org.codehaus.mojo:cobertura-maven-plugin:2.8-SNAPSHOT, parent: sun.misc.Launcher$AppClassLoader@734d246]
{noformat} (see the {{Included: org.slf4j:slf4j-api:jar:1.7.5}} and Excluded parts)

Maven 3.3.0-SNAPSHOT
{noformat}[DEBUG] Created new class realm plugin>org.codehaus.mojo:cobertura-maven-plugin:2.8-SNAPSHOT
[DEBUG] Importing foreign packages into class realm plugin>org.codehaus.mojo:cobertura-maven-plugin:2.8-SNAPSHOT
[DEBUG]   Imported:  < maven.api
[DEBUG] Populating class realm plugin>org.codehaus.mojo:cobertura-maven-plugin:2.8-SNAPSHOT
[DEBUG]   Included: org.codehaus.mojo:cobertura-maven-plugin:jar:2.8-SNAPSHOT
[DEBUG]   Included: net.sourceforge.cobertura:cobertura:jar:2.1.1
[DEBUG]   Included: org.ow2.asm:asm:jar:5.0.1
[DEBUG]   Included: org.ow2.asm:asm-tree:jar:5.0.1
[DEBUG]   Included: org.ow2.asm:asm-commons:jar:5.0.1
[DEBUG]   Included: org.ow2.asm:asm-util:jar:5.0.1
[DEBUG]   Included: org.ow2.asm:asm-analysis:jar:5.0.1
[DEBUG]   Included: oro:oro:jar:2.0.8
[DEBUG]   Included: org.apache.ant:ant:jar:1.8.3
[DEBUG]   Included: org.apache.ant:ant-launcher:jar:1.8.3
[DEBUG]   Included: org.apache.ant:ant-junit:jar:1.8.3
[DEBUG]   Included: org.mortbay.jetty:servlet-api-2.5:jar:6.1.14
[DEBUG]   Included: org.mortbay.jetty:jetty:jar:6.1.14
[DEBUG]   Included: org.mortbay.jetty:jetty-util:jar:6.1.14
[DEBUG]   Included: com.sun:tools:jar:0
[DEBUG]   Included: ch.qos.logback:logback-classic:jar:1.0.13
[DEBUG]   Included: ch.qos.logback:logback-core:jar:1.0.13
[DEBUG]   Included: org.apache.commons:commons-lang3:jar:3.3.2
[DEBUG]   Included: xerces:xercesImpl:jar:2.11.0
[DEBUG]   Included: xml-apis:xml-apis:jar:1.4.01
[DEBUG]   Included: jaxen:jaxen:jar:1.1.4
[DEBUG]   Included: org.jdom:jdom:jar:1.1.3
[DEBUG]   Included: net.sourceforge.cobertura:cobertura-runtime:pom:2.1.1
[DEBUG]   Included: urbanophile:java-getopt:jar:1.0.9
[DEBUG]   Included: commons-cli:commons-cli:jar:1.0
[DEBUG]   Included: org.codehaus.plexus:plexus-interactivity-api:jar:1.0-alpha-4
[DEBUG]   Included: org.apache.maven.reporting:maven-reporting-api:jar:2.0.8
[DEBUG]   Included: org.apache.maven.doxia:doxia-sink-api:jar:1.0-alpha-9
[DEBUG]   Included: org.apache.maven.reporting:maven-reporting-impl:jar:2.0.4.2
[DEBUG]   Included: commons-validator:commons-validator:jar:1.2.0
[DEBUG]   Included: commons-beanutils:commons-beanutils:jar:1.7.0
[DEBUG]   Included: commons-digester:commons-digester:jar:1.6
[DEBUG]   Included: commons-logging:commons-logging:jar:1.0.4
[DEBUG]   Included: org.apache.maven.doxia:doxia-core:jar:1.0
[DEBUG]   Included: org.apache.maven.doxia:doxia-site-renderer:jar:1.0
[DEBUG]   Included: org.codehaus.plexus:plexus-i18n:jar:1.0-beta-7
[DEBUG]   Included: org.codehaus.plexus:plexus-velocity:jar:1.1.7
[DEBUG]   Included: org.apache.velocity:velocity:jar:1.5
[DEBUG]   Included: org.apache.maven.doxia:doxia-decoration-model:jar:1.0
[DEBUG]   Included: commons-collections:commons-collections:jar:3.2
[DEBUG]   Included: org.apache.maven.doxia:doxia-module-apt:jar:1.0
[DEBUG]   Included: org.apache.maven.doxia:doxia-module-fml:jar:1.0
[DEBUG]   Included: org.apache.maven.doxia:doxia-module-xdoc:jar:1.0
[DEBUG]   Included: org.apache.maven.doxia:doxia-module-xhtml:jar:1.0
[DEBUG]   Included: commons-lang:commons-lang:jar:2.4
[DEBUG]   Included: org.codehaus.plexus:plexus-utils:jar:2.0.2
[DEBUG]   Included: org.apache.maven.shared:maven-invoker:jar:2.0.11
[DEBUG] Configuring mojo org.codehaus.mojo:cobertura-maven-plugin:2.8-SNAPSHOT:instrument from plugin realm ClassRealm[plugin>org.codehaus.mojo:cobertura-maven-plugin:2.8-SNAPSHOT, parent: sun.misc.Launcher$AppClassLoader@1cd8f55c]
{noformat}
no slf4j included and no excludes;;;","10/Mar/15 09:53;igorf;Maven 3.2.5 and earlier did not filter slf4j and javax.inject from plugin and build extension realms, which resulted in the same classes available from multiple classloaders and caused in hard to debug build failures in some cases. 

To fix that I've added slf4j and javax.inject to the list of artifacts exported by Maven core, which broke cobertura and probably other plugins that use ${plugin.artifacts} to setup classpath of external jvm and need slf4j.

The solution is to move core artifact from plugin dependency resolver to class realm manager. This way ${plugin.artifacts} will include all plugin compile/runtime dependencies, but class realms will only include artifacts unique to the plugin.

As a result of the fix some plugins will resolve additional artifact jars from remote repositories. This should not cause problems in practice because corresponding artifact poms are already resolved during the build. If this does cause problems, unwanted dependencies can be blocked both from consuming projects pom.xml using plugin <dependencies> elements, or, more permanently, by plugin developers by using scope=provided.

Fix
https://git-wip-us.apache.org/repos/asf?p=maven.git&a=search&h=HEAD&st=commit&s=MNG-5783

IT
https://git1-us-west.apache.org/repos/asf?p=maven-integration-testing.git&a=search&h=HEAD&st=commit&s=MNG-5783;;;","04/Jun/15 05:03;hudson;SUCCESS: Integrated in maven-3.x #1081 (See [https://builds.apache.org/job/maven-3.x/1081/])
MNG-5783 fixed slf4j is missing from ${plugin.artifacts} (ifedorenko: rev b7088a34edd8cd34ab3b376d9baf90bdb6f8dc00)
* maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultPluginDependenciesResolver.java
* maven-core/src/main/java/org/apache/maven/classrealm/DefaultClassRealmManager.java
;;;","11/Dec/17 16:34;hudson;Build unstable in Jenkins: Maven TLP (wip) » maven » pre-reset-master #3

See https://builds.apache.org/job/maven-wip/job/maven/job/pre-reset-master/3/;;;","28/Mar/20 14:58;hudson;Build failed in Jenkins: Maven TLP » maven-studies » maven-metrics #4

See https://builds.apache.org/job/maven-box/job/maven-studies/job/maven-metrics/4/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NoClassDefFoundError: org/slf4j/spi/LocationAwareLogger when generating javadoc during site reporting,MNG-5779,12797272,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,jvanzyl,hboutemy,hboutemy,04/Mar/15 01:43,28/Mar/20 14:58,03/Jan/22 13:13,05/Mar/15 12:44,3.3.0,,,,,3.3.1,,,Class Loading,,,,,0,,,,"issue found while working on another topic: https://github.com/apache/maven/pull/32#issuecomment-76933957

when running m-site-p ITs, following issue happen with m-javadoc-p too (without failing the build): see full-reporting IT output log:
{noformat}[INFO] Generating ""JavaDocs"" report             --- maven-javadoc-plugin:2.9.1:javadoc
[DEBUG] Trying to add links for dependencies...
[WARNING] An issue has occurred with maven-javadoc-plugin:2.9.1:javadoc, skipping LinkageError org/slf4j/spi/LocationAwareLogger, please report an issue to Maven dev team.
java.lang.NoClassDefFoundError: org/slf4j/spi/LocationAwareLogger
	at org.apache.commons.logging.impl.SLF4JLogFactory.getInstance(SLF4JLogFactory.java:156)
	at org.apache.commons.logging.impl.SLF4JLogFactory.getInstance(SLF4JLogFactory.java:131)
	at org.apache.commons.logging.LogFactory.getLog(LogFactory.java:272)
	at org.apache.http.impl.conn.PoolingClientConnectionManager.<init>(PoolingClientConnectionManager.java:73)
	at org.apache.http.impl.conn.PoolingClientConnectionManager.<init>(PoolingClientConnectionManager.java:99)
	at org.apache.http.impl.conn.PoolingClientConnectionManager.<init>(PoolingClientConnectionManager.java:85)
	at org.apache.http.impl.conn.PoolingClientConnectionManager.<init>(PoolingClientConnectionManager.java:93)
	at org.apache.maven.plugin.javadoc.JavadocUtil.createHttpClient(JavadocUtil.java:1811)
	at org.apache.maven.plugin.javadoc.JavadocUtil.isValidPackageList(JavadocUtil.java:1704)
	at org.apache.maven.plugin.javadoc.AbstractJavadocMojo.isValidJavadocLink(AbstractJavadocMojo.java:5638)
	at org.apache.maven.plugin.javadoc.AbstractJavadocMojo.getDependenciesLinks(AbstractJavadocMojo.java:5480)
	at org.apache.maven.plugin.javadoc.AbstractJavadocMojo.collectLinks(AbstractJavadocMojo.java:2960)
	at org.apache.maven.plugin.javadoc.AbstractJavadocMojo.addLinkArguments(AbstractJavadocMojo.java:3921)
	at org.apache.maven.plugin.javadoc.AbstractJavadocMojo.addStandardDocletOptions(AbstractJavadocMojo.java:4676)
	at org.apache.maven.plugin.javadoc.AbstractJavadocMojo.executeReport(AbstractJavadocMojo.java:1954)
	at org.apache.maven.plugin.javadoc.JavadocReport.generate(JavadocReport.java:130)
	at org.apache.maven.plugins.site.render.ReportDocumentRenderer.renderDocument(ReportDocumentRenderer.java:236)
	at org.apache.maven.doxia.siterenderer.DefaultSiteRenderer.renderModule(DefaultSiteRenderer.java:311)
	at org.apache.maven.doxia.siterenderer.DefaultSiteRenderer.render(DefaultSiteRenderer.java:129)
	at org.apache.maven.plugins.site.render.SiteMojo.renderLocale(SiteMojo.java:182)
	at org.apache.maven.plugins.site.render.SiteMojo.execute(SiteMojo.java:141)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:851)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:275)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:186)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: java.lang.ClassNotFoundException: org.slf4j.spi.LocationAwareLogger
	at org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy.loadClass(SelfFirstStrategy.java:50)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.unsynchronizedLoadClass(ClassRealm.java:271)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:247)
	at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:239)
	... 43 more{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-5771,,,,,,MNG-5783,,,,,,,,,,,"05/Mar/15 02:18;hboutemy;core-build-failure.log;https://issues.apache.org/jira/secure/attachment/12713427/core-build-failure.log",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28xkv:",9223372036854775807,,,,,,,,,,,,,,,,,,,"05/Mar/15 01:35;hboutemy;this one is even worse than expected: I tried compiling core (yes, compiling, not generating the site) with 3.3.0-SNAPSHOT and got following failure:
{noformat}[ERROR] Failed to execute goal org.apache.maven.plugins:maven-checkstyle-plugin:2.14:check (checkstyle-check) on project maven: Execution checkstyle-check of goal org.apache.maven.plugins:maven-checkstyle-plugin:2.14:check failed: A required class was missing while executing org.apache.maven.plugins:maven-checkstyle-plugin:2.14:check: org/slf4j/spi/LocationAwareLogger{noformat};;;","05/Mar/15 01:48;jvanzyl;I've been building core with core and running the ITs for a couple weeks up until now and I don't see any issues compiling, or packaging, or running the tests.;;;","05/Mar/15 02:18;hboutemy;thanks for your feedback

Here is my output for {{mvn -V install}}: what do I do wrong (???);;;","05/Mar/15 02:29;jvanzyl;Just trying a fix here for the javadoc generation. Doesn't appear to work at all on Java8 as it looks broken with Maven 3.2.5 and 3.3.0. Just running the ITs and I'll push it.;;;","05/Mar/15 02:41;jvanzyl;Hervé, try master now (57a6196422873eaf2f00a282b33894a74dcfd19c) and see if that fixes the javadoc issue for you. I'll check in tomorrow.;;;","05/Mar/15 12:44;hboutemy;great: both javadoc and checkstyle:check (for Maven core build) work

link added to MNG-5771, since I now understand this was a missed package export declaration

Thank you Jason: we're avoiding here a failed release vote :);;;","28/Mar/20 14:58;hudson;Build failed in Jenkins: Maven TLP » maven-studies » maven-metrics #4

See https://builds.apache.org/job/maven-box/job/maven-studies/job/maven-metrics/4/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Massive memory usage regression,MNG-5751,12796272,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Not A Problem,krosenvold,krosenvold,krosenvold,10/Jan/15 15:07,10/Jan/15 16:27,03/Jan/22 13:13,10/Jan/15 16:27,3.2.3,3.2.5,,,,,,,General,,,,,0,,,,"Building maven-plugins reactor from trunk (clean install) halts after just a few modules with out of memory. This is even with *significantly* increased heap size from 3.2.2. (2.2gb)

I have tracked the breakage to commit 6cf9320942c34bc68205425ab696b1712ace9ba4",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-5661,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28pc7:",9223372036854775807,,,,,,,,,,,,,,,,,,,"10/Jan/15 15:09;krosenvold;It even fails to build with 3GB heap, which is about twice as much memory as 3.2.2;;;","10/Jan/15 16:27;krosenvold;Environmental problem on my machine;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UNable to login unix after configuring the env variable permanently,MNG-5744,12796980,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Not A Problem,,murugan23,murugan23,25/Dec/14 16:59,26/Dec/14 13:37,03/Jan/22 13:13,26/Dec/14 13:37,3.2.5,,,,,,,,General,,,,,0,,,,"I have set the M2_HOME, M2 and JAVA_HOME value in /etc/profile in Ubento  and after re-starting, I could not able to login to Ubento. I am getting the error message. Please assist me as soon as possble. This is completely blocking login to linux.

""Not enough physical memory is available to power on this virtual machine with its configured settings.

It is possible that native applications and/or services have locked down memory which could be preventing the virtual machine from launching. Shutting down unnecessary applications or services may free enough memory to launch this virtual machine.

If you were able to power on this virtual machine on this host computer in the past, try rebooting the host computer. Rebooting may allow you to use slightly more host memory to run virtual machines.""","Win 8.1, I use to connect Ubento using VMware
RAM : 8 GB
HDD : 1 TB

apache-maven-3.2.5-bin.tar.gz (Trying to create the project)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28s3j:",9223372036854775807,,,,,,,,,,,,,,,,,,,"26/Dec/14 13:37;michael-o;Seek help on the users mailing list.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Repositories from settings.xml are ignored for plugin dependencies,MNG-5733,12796988,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Not A Problem,michael-o,tsyd,tsyd,10/Dec/14 07:19,11/Dec/14 06:00,03/Jan/22 13:13,11/Dec/14 06:00,3.2.3,,,,,,,,Dependencies,,,,,0,,,,Maven ignores repositories declared in settings.xml when resolves dependencies for plugins,"Apache Maven 3.2.3 (33f8c3e1027c3ddde99d3cdebad2656a31e8fdf4; 2014-08-11T23:58:10+03:00)
Java version: 1.8.0_25, vendor: Oracle Corporation
Default locale: ru_RU, platform encoding: UTF-8
OS name: ""linux"", version: ""3.13.0-40-generic"", arch: ""amd64"", family: ""unix""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Dec/14 07:19;tsyd;out.log;https://issues.apache.org/jira/secure/attachment/12713198/out.log","10/Dec/14 07:19;tsyd;pom.xml;https://issues.apache.org/jira/secure/attachment/12713419/pom.xml","10/Dec/14 07:19;tsyd;settings.xml;https://issues.apache.org/jira/secure/attachment/12713425/settings.xml",,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28ozr:",9223372036854775807,,,,,,,,,,,,,,,,,,,"11/Dec/14 06:00;michael-o;Your {{settings.xml}} is incomplete. It has to look like this:

{code}
<settings xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
        xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0
                      http://maven.apache.org/xsd/settings-1.0.0.xsd"">

        <mirrors>
                <mirror>
                        <id>nexus</id>
                        <mirrorOf>*</mirrorOf>
                        <url>https://wwww.example.com/nexus</url>
                </mirror>
        </mirrors>
        <servers>
                <server>
                        <id>nexus</id>
                        <username>michael-o</username>
                        <password>secret</password>
                </server>
        </servers>
        <profiles>
                <profile>
                        <id>nexus-reroute</id>
                        <repositories>
                                <repository>
                                        <id>central</id>
                                        <url>http://central</url>
                                        <releases>
                                                <enabled>true</enabled>
                                        </releases>
                                        <snapshots>
                                                <enabled>true</enabled>
                                        </snapshots>
                                </repository>
                        </repositories>
                        <pluginRepositories>
                                <pluginRepository>
                                        <id>central</id>
                                        <url>http://central</url>
                                        <releases>
                                                <enabled>true</enabled>
                                        </releases>
                                        <snapshots>
                                                <enabled>true</enabled>
                                        </snapshots>
                                </pluginRepository>
                        </pluginRepositories>
                </profile>
        </profiles>
        <activeProfiles>
                <activeProfile>nexus-reroute</activeProfile>
        </activeProfiles>
</settings>
{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClosedChannelException from DefaultUpdateCheckManager.read on Linux,MNG-5703,12796382,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Won't Fix,,trex58,trex58,20/Oct/14 09:33,13/Feb/15 05:22,03/Jan/22 13:13,13/Feb/15 05:22,3.2.1,,,,,,,,,,,,,0,,,,"I already added a note in: http://jira.codehaus.org/browse/MNG-5629 .
But, since this JIRA deals with Windows, since my issues are on Linux, and since I'm blocked, I'm opening a new JIRA.

I was working on the port of Falcon on PPC64 when it appeared. I'm now blocked.
First, I was on RHEL7/PPC64BE: this Maven error was not there, and I've been able to compile and run tests, with IBM JVM v1.6 .
Then, I moved to Ubuntu/PPC64LE, with IBM JVM 1.7, and the issue appeared.
I then tried on Ubuntu/x86_64, with IBM JVM and then Oracle JVM, v1.7, and the issue was there too. Same with IBM JVM 1.6 .

Traces show the issue when using -X only.

Example of traces, on Ubuntu/x86_64 , with IBM JVM 1.6 :
{noformat}
export HADOOP_VERSION=2.4.1
export HADOOP_PROFILE=hadoop-2
export OOZIE_VERSION=4.0.1
mvn -X compile -P $HADOOP_PROFILE -Dhadoop.version=$HADOOP_VERSION -Doozie.version=$OOZIE_VERSION -Doozie.forcebuild=false -DskipTests

...
[DEBUG] Determining update check for artifact asm:asm (/home/reixt/.m2/repository/asm/asm/maven-metadata-central.xml) from central (http://repo1.maven.org/maven2)
[DEBUG] Searching for central.maven-metadata-central.xml.lastUpdated in resolution tracking file.
[DEBUG] Reading resolution-state from: /home/reixt/.m2/repository/asm/asm/resolver-status.properties
[DEBUG] Error releasing shared lock for resolution tracking file: /home/reixt/.m2/repository/asm/asm/resolver-status.properties
java.nio.channels.ClosedChannelException
at sun.nio.ch.FileLockImpl.release(FileLockImpl.java:47)
at org.apache.maven.repository.legacy.DefaultUpdateCheckManager.read(DefaultUpdateCheckManager.java:396)
at org.apache.maven.repository.legacy.DefaultUpdateCheckManager.readLastUpdated(DefaultUpdateCheckManager.java:323)
at org.apache.maven.repository.legacy.DefaultUpdateCheckManager.readLastUpdated(DefaultUpdateCheckManager.java:159)
at org.apache.maven.repository.legacy.DefaultUpdateCheckManager.isUpdateRequired(DefaultUpdateCheckManager.java:148)

...

[INFO] Apache Falcon Oozie EL Extension .................. FAILURE [ 26.935 s]
[INFO] Apache Falcon Embedded Hadoop - Test Cluster ...... SKIPPED
....
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 17:52 min
[INFO] Finished at: 2014-10-20T10:18:30-05:00
[INFO] Final Memory: 38M/181M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal on project falcon-oozie-el-extension: Could not resolve dependencies for project org.apache.falcon:falcon-oozie-el-extension:jar:0.5-incubating: Could not find artifact org.apache.oozie:oozie-core:jar:4.0.1-falcon in central (http://repo1.maven.org/maven2) -> [Help 1]
org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal on project falcon-oozie-el-extension: Could not resolve dependencies for project org.apache.falcon:falcon-oozie-el-extension:jar:0.5-incubating: Could not find artifact org.apache.oozie:oozie-core:jar:4.0.1-falcon in central 
{noformat}

Testcase:
- download Falcon v0.5
- use above mvn options","Ubuntu 14.10 / PPC64 LE - IBM JVM 1.7
Ubuntu 14.10 / x86_64 - IBM JVM 1.7 & 1.6 - Oracle JVM 1.7",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i296dj:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"20/Oct/14 11:42;trex58;On RHEL7/PPC64BE, I'm now using a Falcon patch that enables me to compile Falcon (and the modified version of Oozie that Falcon uses) with IBM Java 1.7 .
And I do not have the Maven issue in this environment. Is it related to Ubuntu ?

$ mvn --version
Apache Maven 3.2.1 (ea8b2b07643dbb1b84b6d16e1f08391b666bc1e9; 2014-02-14T18:37:52+01:00)
Maven home: /opt/apache-maven-3.2.1
Java version: 1.7.0, vendor: IBM Corporation
Java home: /usr/lib/jvm/ibm-java-ppc64-71/jre
Default locale: en_US, platform encoding: ISO-8859-1
OS name: ""linux"", version: ""3.10.0-123.6.3.el7.ppc64"", arch: ""ppc64"", family: ""unix""
;;;","21/Oct/14 03:51;trex58;On RHEL7/x86_64, I also have the issue when trying to compile FALCON (with a patch changing Oozie in order to not require Java 1.6).
- Maven 3.2.3
- IBM JVM 1.7

However, though I've got 347 java.nio.channels.ClosedChannelException exceptions when compiling Falcon, the compilation phase is: SUCCESS.
So, this exception may not be the blocker for my compilation on the other machines. More analyzis is required.

Apache Maven 3.2.3 (33f8c3e1027c3ddde99d3cdebad2656a31e8fdf4; 2014-08-11T22:58:10+02:00)
Maven home: /opt/apache-maven-3.2.3
Java version: 1.7.0, vendor: IBM Corporation
Java home: /usr/lib/jvm/ibm-java-x86_64-71/jre
Default locale: fr_FR, platform encoding: UTF-8
OS name: ""linux"", version: ""3.10.0-123.4.4.el7.x86_64"", arch: ""amd64"", family: ""unix"";;;","13/Feb/15 03:21;rfscholte;[~trex58], what's the status?;;;","13/Feb/15 04:47;trex58;A colleague is now working on this, but without the option  ""-Doozie.forcebuild=false"" , and he says he does not have the issue.
Trying again now, with and without.;;;","13/Feb/15 05:20;trex58;I cannot find the rationale about why using: -Doozie.forcebuild=false .
However, with: -Doozie.forcebuild=true , that's the same (same error message ""Error releasing shared lock for resolution tracking file"").
And, without -Doozie.forcebuild=.... , that's the same.

However, the compilation reaches the end and SUCCEEDs now.

And the error message (""Error releasing shared lock for resolution tracking file"") seems to be printed only if I use the  ""-X"" option (more trace).


OK. I think I have understood: I had another issue which made the compilation to fail AND I was using -X AND there was some issue in my Maven .m2 environment which produced an issue that was by-passed by Maven and which is NOT shown when NOT using -X .  So, seeing these error messages, I thought it was the root cause of the build failure, but it was not.
Damned Maven ! And I was not good at analyzing this issue...

So, there is an issue, but Maven can by-pass it ! So, I'm done. We can close this.;;;","13/Feb/15 05:22;trex58;It is an internal issue in Maven I think, due to some issue in my .m2 environment ; but Maven can by-pass it. So, I'm no more blocked. Closing.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
java.lang.UnsupportedOperationException on DefaultProjectBuilder.build,MNG-5680,12797260,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,schulte77,gastaldi,gastaldi,18/Aug/14 18:46,19/Dec/15 16:51,03/Jan/22 13:13,19/Dec/15 16:51,3.2.3,,,,,3.2.5,,,Bootstrap & Build,,,,,1,,,,"{code}
ProjectBuildingRequest request = ...
ProjectBuilder builder = plexus.lookup(ProjectBuilder.class);
builder.build(file, request);
{code}

When the build method is called, the following exception is thrown: 
{code}
java.lang.UnsupportedOperationException
	at java.util.AbstractMap.put(AbstractMap.java:209)
	at org.apache.maven.project.DefaultProjectBuilder.initProject(DefaultProjectBuilder.java:815)
	at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:174)
	at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:118)
{code}

The code should be reviewed. This is the offending code inside DefaultProjectBuilder: 
{code}
                    Artifact artifact = repositorySystem.createDependencyArtifact( d );

                    if ( artifact == null )
                    {
                        map = Collections.emptyMap();
                    }

                    map.put( d.getManagementKey(), artifact );

{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-5727,,,,,,,,,MNG-5368,,,,,,,,,,,,,,,,,"18/Aug/14 19:00;gastaldi;pom.xml;https://issues.apache.org/jira/secure/attachment/12713194/pom.xml",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29bv3:",9223372036854775807,,,,,,,,,,,,,,,,,,,"18/Aug/14 18:52;gastaldi;Raising the priority, since DefaultProjectBuilder is unusable without fixing this ;;;","18/Aug/14 19:00;gastaldi;pom.xml to reproduce problem attached;;;","18/Aug/14 19:56;gastaldi;To reproduce, run mvn clean install in the attached pom.xml;;;","18/Aug/14 20:16;gastaldi;This error doesn't happen in 3.2.2 and earlier versions;;;","04/Dec/14 20:20;selliott@paml.com;[~gastaldi] can you post your environment information, such as operating system, jdk, etc? You can get this with ""mvn --version"". Also, are you by chance using homebrew?;;;","04/Dec/14 20:21;selliott@paml.com;I'm linking this to MNG-5368, it looks like they could be related.;;;","04/Dec/14 22:54;gastaldi;I am using Fedora 20, running on Maven 3.2.3 on JDK 1.8.0_11. I am not using homebrew;;;","04/Dec/14 22:57;gastaldi;Yes, it looks like a duplicate of MNG-5368, it should be reopened and fixed;;;","05/Dec/14 00:32;selliott@paml.com;I had a colleague who was having this same issue, MNG-5368 was definitely the cause. It would be an improvement for maven to give some sensible error rather than it manifesting in this way. 

FWIW, it was not environmental issues, but here was his settings:
{noformat}
username-mbp112:bin username$ mvn --version
Apache Maven 3.2.3 (33f8c3e1027c3ddde99d3cdebad2656a31e8fdf4; 2014-08-11T13:58:10-07:00)
Maven home: /usr/share/java/apache-maven-3.2.3
Java version: 1.7.0_45, vendor: Oracle Corporation
Java home: /Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre
Default locale: en_US, platform encoding: UTF-8
OS name: ""mac os x"", version: ""10.10.1"", arch: ""x86_64"", family: ""mac""
{noformat};;;","07/Jun/15 13:13;joe@kafsemo.org;It looks like [this commit|https://github.com/apache/maven/commit/ce6f0bfdb527e20c3afbd76b9c742e07b13d25b2#diff-9037bac1b0c7ac509f2f375f84d60f8d] in 3.2.4 for MNG-5727 may fix this.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven should fetch jars using https,MNG-5679,12796215,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Won't Fix,,chengas123,chengas123,17/Aug/14 17:27,17/Aug/14 17:36,03/Jan/22 13:13,17/Aug/14 17:36,,,,,,,,,,,,,,0,,,,"See the article ""How to take over the computer of any Java (or Clojure or Scala) developer"": http://blog.ontoillogical.com/blog/2014/07/28/how-to-take-over-any-java-developer/

As a result of this article, Sonatype has moved their repository to https and Typesafe has as well. (Typesafe found their GoDaddy cert doesn't work with some version of Java and is aiming to fix this by Aug 24, 2014)

When I download jars from Maven central using Maven, I'm using http. We really should make https the default here",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i296w7:",9223372036854775807,,,,,,,,,,,,,,,,,,,"17/Aug/14 17:36;dantran;please use maven 3.2.3;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Connection - Time out,MNG-5674,12796310,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Cannot Reproduce,,code4fun,code4fun,07/Aug/14 06:28,11/Aug/14 19:19,03/Jan/22 13:13,11/Aug/14 19:19,3.2.1,3.2.2,,,,,,,Command Line,,,,,0,,,,"By run an mvn clean install or mvn compile on a project with dependencies defined on a local server, the connection hangs up and and don't gives feedback. 
If I try to put some error on the setting.xml (by setting username and password) and I will become back the correct error (auth failure). 
I tried with -X to have more information but nothing. Then I installed an older version (3.0.4) without changing anything and the download of the dependencies worked.  

I have the same behaviour in the current version 3.2.2",Ubuntu 12.04,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i2984n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Profile activation does not work if more than 1 type of activation is present,MNG-5673,12796235,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Won't Fix,,salandur,salandur,05/Aug/14 06:24,11/Aug/14 19:19,03/Jan/22 13:13,11/Aug/14 19:19,3.2.2,,,,,,,,Documentation: Guides,Profiles,,,,0,,,,"When a profile has more than 1 activation, according to the [documentation|http://maven.apache.org/pom.html#Activation] 1 match is enough to activate a profile:
{quote}Activation occurs when one or more of the specified criteria have been met. When the first positive result is encountered, processing stops and the profile is marked as active.{quote}

Since Maven 3.2.2 this does not work. For instance with the following activation code:
{code}
            <activation>
                <file>
                    <exists>${env.JBOSS_HOME}/server/development</exists>
                </file>
                <property>
                    <name>assembly</name>
                </property>
            </activation>
{code}
The profile only gets activated if both the directory is present and the propery is specified. If we remove the property from the configuration, the profile is activated based on the directory",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-4565,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28z3j:",9223372036854775807,,,,,,,,,,,,,,,,,,,"05/Aug/14 12:33;rfscholte;With the fix of MNG-4565 the documentation has become invalid. ;;;","05/Aug/14 15:09;salandur;I would argue that the change implemented with MNG-4565 brakes the current system and is implemented a bit to roughly.

* MNG-4565 mentions the documentation on Sonatype which states that activation is done AND-wise
* However, the documentation on the maven site states, as I provided in this issue, that it is done OR-wise.

I would say the documentation on the site should be leading. Also, the documentation on the site says that the activation of profiles in the settingsfile is AND-wise, but that usually are different type of profiles that are not related to projects.

Also, this 'bug' was introduced with maven 2.something (2.0.10/2.1 if i look at the mentioned MNG-3106 in MNG-4565) and implemented AND documented (on the site) for all 3 versions as an OR-wise matching. Changing it now will brake a lot of builds and conflicts with expected behaviour of this functionality for Maven 3 versions.
So I think it would be best to revert this change and reimplement it with some kind of swith on the activation-element (mode=""and"") that defaults to the OR-wise matching.

Also, since the documentation is not in sync and the end users will rely on the documention on the site, it is, IMHO, unwise to rate this as a 'minjor' bug;;;","11/Aug/14 19:19;jvanzyl;This change will not be reverted. There was conflicting documentation but I believe this is the right behaviour. Occassionally we make changes that break some things. There is only one way to specify profiles right now and it's not possible currently to implement custom activators. As such this mode where it is possible to AND and OR is preferred only only being able to to OR. When custom profile activators can be added I will make an implementation using MVEL which will be more flexible.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in org.apache.maven.DefaultMaven.execute(),MNG-5637,12797273,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Cannot Reproduce,,pekarna,pekarna,21/May/14 17:47,23/May/14 14:03,03/Jan/22 13:13,23/May/14 14:03,3.2.1,,,,,,,,Command Line,,,,,0,,,,"Steps to reproduce:

git clone git@github.com:windup/windup.git
cd windup
git checkout MavenNPE
mvn clean install

Result:

{code}
[ERROR] Internal error: java.lang.NullPointerException -> [Help 1]
org.apache.maven.InternalErrorException: Internal error: java.lang.NullPointerException
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:167)
        at org.apache.maven.cli.MavenCli.execute(MavenCli.java:584)
        at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:213)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:157)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:606)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
        at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
        at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: java.lang.NullPointerException
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:270)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:155)
        ... 11 more
{code}","$ mvn -v
Apache Maven 3.2.1 (ea8b2b07643dbb1b84b6d16e1f08391b666bc1e9; 2014-02-14T18:37:52+01:00)
Maven home: /home/ondra/sw/prog/maven/3.2.1
Java version: 1.7.0_55, vendor: Oracle Corporation
Java home: /usr/lib/jvm/java-7-openjdk-amd64/jre
Default locale: en_US, platform encoding: UTF-8
OS name: ""linux"", version: ""3.11.0-20-generic"", arch: ""amd64"", family: ""unix""
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-5633,MNG-5628,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28xp3:",9223372036854775807,,,,,,,,,,,,,,,,,,,"21/May/14 17:53;pekarna;Seems to be related, if not duplicate, MNG-5628 and MNG-5633;;;","21/May/14 18:48;pekarna;Maven 3.1.1 correctly reveals what's wrong:
Two or more projects in the reactor have the same identifier, please make sure that <groupId>:<artifactId>:<version> is unique for each project: {org.jboss.windup.test.apps.jboss:sample-jee-jboss-web:2.0.0-SNAPSHOT=[/home/ondra/work/Migration/WindUp/sample-apps/jee-example-jboss/jee-example-web/pom.xml, /home/ondra/work/Migration/WindUp/sample-apps/jee-example-weblogic/jee-example-web/pom.xml]} -> [Help 1];;;","23/May/14 14:02;jvanzyl;Project doesn't build:

[INFO] Scanning for projects...
[ERROR] The build could not read 1 project -> [Help 1]
[ERROR]   
[ERROR]   The project org.jboss.windup:JBossEapRecognition:2.0.0-SNAPSHOT (/private/tmp/windup/addons/server/JBossEapRecognition/pom.xml) has 1 error
[ERROR]     Non-resolvable parent POM: Could not find artifact org.jboss.windup:windup-parent:pom:2.0.0-SNAPSHOT and 'parent.relativePath' points at wrong local POM @ line 5, column 13 -> [Help 2]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/ProjectBuildingException
[ERROR] [Help 2] http://cwiki.apache.org/confluence/display/MAVEN/UnresolvableModelException;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
InternalServiceError,MNG-5618,12796317,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Cannot Reproduce,,alimaximus,alimaximus,14/Apr/14 18:22,10/Jun/14 22:10,03/Jan/22 13:13,10/Jun/14 22:10,3.2.1,,,,,,,,Errors,,,,,0,,,,"Honestly i have no idea what happened, i was setting up the google api system, it said i needed maven so i got maven, i followed the steps to get the api up to the point (https://developers.google.com/appengine/docs/java/gettingstarted/ui_and_code ) ""Building and testing the app"".",Windows 7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Apr/14 18:22;alimaximus;build.log;https://issues.apache.org/jira/secure/attachment/12713375/build.log",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i297uf:",9223372036854775807,,,,,,,,,,,,,,,,,,,"14/Apr/14 18:56;alimaximus;This is an error with maven.... But i have no idea why its doing it
;;;","10/Jun/14 22:10;jvanzyl;Tried the example and it works fine with 3.2.1.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
unreadable log in multi thread compilation,MNG-5617,12796342,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Duplicate,rfscholte,mchenouili,mchenouili,11/Apr/14 09:52,12/Jun/14 15:19,03/Jan/22 13:13,12/Jun/14 15:19,3.1.1,,,,,,,,Logging,,,,,0,,,,"when I try to compile multi-module project (-T 8), the log of each project is not printed sequentially, all logs of the compilation is being printed as soon as it is thrown by the compiler. 

This makes logs unreadble. 

 Am I the only one in this case ? 

I have seen that a solution was implemented but not used  in Maven source code (ThreadOutputMuxer.java). 

Is there a solution for this issue ?
I should not be the only one. ","Unix, RedHat",,,,,,,,,,,,,,,,,,,,,,,MNG-5302,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29467:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LinkageError org.apache.maven.surefire.shade.org.apache.maven.shared.utils.io.IOUtil,MNG-5711,12796297,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,krosenvold,julianpayne,julianpayne,27/Mar/14 07:18,14/Dec/14 11:56,03/Jan/22 13:13,30/Oct/14 12:08,3.2.3,,,,,3.2.5,,,Class Loading,,,,,1,,,,"Every so often when I am running the unit tests on a standard Maven project I get a linkage error:

[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ asf-maven-
plugin ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 3 resources
[INFO]
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ asf-maven-plugi
n ---
[INFO] Nothing to compile - all classes are up to date
[INFO]
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ as
f-maven-plugin ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory d:\rtc-workspace-asf-10\asf-build-sys
tem\maven-plugins\asf-maven-plugin\src\test-resources
[INFO]
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ asf-mav
en-plugin ---
[INFO] Nothing to compile - all classes are up to date
[INFO]
[INFO] --- maven-surefire-plugin:2.16:test (default-test) @ asf-maven-plugin ---

[INFO] Surefire report directory: d:\rtc-workspace-asf-10\asf-build-system\maven
-plugins\asf-maven-plugin\target\surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Exception in thread ""Thread-7"" java.lang.LinkageError: org.apache.maven.surefire
.shade.org.apache.maven.shared.utils.io.IOUtil
        at java.lang.ClassLoader.defineClassImpl(Native Method)
        at java.lang.ClassLoader.defineClass(ClassLoader.java:306)
        at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:14
3)
        at java.net.URLClassLoader.defineClass(URLClassLoader.java:700)
        at java.net.URLClassLoader.access$400(URLClassLoader.java:81)
        at java.net.URLClassLoader$ClassFinder.run(URLClassLoader.java:1148)
        at java.security.AccessController.doPrivileged(AccessController.java:366
)
        at java.net.URLClassLoader.findClass(URLClassLoader.java:583)
        at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClassFromSelf(Cl
assRealm.java:389)
        at org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy.loadClass(
SelfFirstStrategy.java:42)
        at org.codehaus.plexus.classworlds.realm.ClassRealm.unsynchronizedLoadCl
ass(ClassRealm.java:259)
        at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm
.java:235)
        at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm
.java:227)
        at org.apache.maven.surefire.shade.org.apache.maven.shared.utils.cli.Str
eamPumper.run(StreamPumper.java:95)
Terminate batch job (Y/N)? y

This error is not reproducible but I am getting it from time to time when running maven on the command line as well as in my Jenkins jobs that are running Maven jobs.

When this LinkageError occurs the maven run blocks.

This is what I have in the effective pom for the run above that blocked:

        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.16</version>
          <inherited>true</inherited>
          <configuration>
            <argLine>-Xms768m -Xmx768m</argLine>
            <trimStackTrace>true</trimStackTrace>
            <childDelegation>false</childDelegation>
            <classpathDependencyExcludes>
              <classpathDependencyExclude>org.dom4j:dom4j</classpathDependencyExclude>
            </classpathDependencyExcludes>
          </configuration>
        </plugin>

Thanks,

Julian Payne",Maven 3.1.1 and Maven 3.2.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29993:",9223372036854775807,,,,,,,,,,,,,,,,,,,"14/Apr/14 02:37;julianpayne;This seems to happen only with the IBM JDK (1.7).;;;","29/Aug/14 16:15;tibordigana;@Julian Payne 
Does this bug still happen with Surefire 2.17 ?
Only you have this problem ?
Did you come over with Oracle JDK ?;;;","03/Sep/14 02:59;julianpayne;This problem only occurs with the IBM JDK (which I have to use). I have also encountered this problem recently with other maven plugins (the compiler plugin) so I suspect that it is related to some of the utility methods that are being used by the plugins?;;;","03/Sep/14 02:59;julianpayne;I still have this problem with 2.17.;;;","03/Sep/14 03:26;tibordigana;Pls check it out with Oracle JDK.
Can you debug the maven and put break point to the classloader ?
Start in project in console: mvnDebug test
and surefire configuration with
<debugForkedProcess>-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000</debugForkedProcess>
Then in IDEA, Run/Debug Configurations > + > Remote > change to port 8000
Go to console. If you see halting maven process with something like Listening to port ..., then start remote debugging in IDEA, repeat again if wants to connect or if failed to connect.
You can discover whole class-path if the particular IOUtil class really exists.
Check the system properties for classpath in surefire reports folder, TEST-*.xml, find the library which has the class.
;;;","03/Sep/14 03:31;julianpayne;I do not have the problem with the Oracle JDK.

I will try to debug the problem and come back to you with more information. This may take some time as this seems to be some sort of race condition and only happens from time to time.;;;","03/Sep/14 03:52;tibordigana;These kinds of failures need having deeper look.

Definitely this class was modified with maven-shade-plugin. 
Download project from Github and check the configuration of every pom.xml having ""maven-shade-plugin"" if repackaging org.apache.maven.shared package.
Then Check Release Notes if some higher version of shade plugin has candidate bug fix.
You can check requirements for Java version in the bytecode.

Alternatively you may use some IBM bytecode verifier tool if exists, before/after bytecode manipulation.;;;","03/Sep/14 04:28;krosenvold;I would think this issue is related to the classloading lock bug that was recently found in the IBM JDK, see MNG-5676;;;","04/Sep/14 00:09;krosenvold;Plexus classworlds 2.5.2 which fixes the problem should be available for download ""soon"" should fix the problem: Donwload the jar file from http://repo1.maven.org/maven2/org/codehaus/plexus/plexus-classworlds/ and put it into lib/ext of your maven installation.

Please give some feedback if this solves your problem;;;","04/Sep/14 03:07;julianpayne;I will do that as soon as I get the new version - thanks for all your help.;;;","05/Sep/14 06:35;julianpayne;I have installed 2.5.2 and rerun my long unit tests and everything is fine. Given that this only occurs from time to time I would prefer to wait a few more days before closing this issue? Thanks again for all your help.;;;","05/Sep/14 13:39;tibordigana;@Kristian

Will be new classworld 2.5.2 released in the next Maven distribution?;;;","08/Sep/14 11:31;krosenvold;@Tibor Classworlds 2.5.2 was just commited in maven core.;;;","30/Oct/14 12:08;krosenvold;Originally from surefire, I moved this issue here. Fixed with clasworlds update;;;","01/Dec/14 10:29;julianpayne;> Plexus classworlds 2.5.2 which fixes the problem should be available for download ""soon"" should fix the 
> problem: Donwload the jar file from http://repo1.maven.org/maven2/org/codehaus/plexus/plexus-
> classworlds/ and put it into lib/ext of your maven installation.
> 
> Please give some feedback if this solves your problem

This does indeed fix the problem but *only* if we replace the jar that is in the ""boot"" directory, it does not work if the jar is put in the ""lib/ext"" directory.

Thanks for the help and solution of this problem.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ssh-wagon hangs,MNG-5605,12797125,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jvanzyl,fcorneli,fcorneli,21/Mar/14 12:57,28/Mar/20 14:58,03/Jan/22 13:13,21/Apr/15 01:14,3.2.1,,,,,3.3.3,,,Deployment,,,,,5,,,,"When releasing (using maven-release-plugin) via Maven 3.1.1 everything works as expected. When doing the same via Maven 3.2.1, ssh-wagon all of the sudden hangs on the second ssh upload.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,WAGON-429,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i298cn:",9223372036854775807,,,,,,,,,,,,,,,,,,,"25/Mar/14 12:51;as987;This happens consistently for me when deploying a file. 

OS: Windows 7 64 bit
JVM: Oracle JDK 6u45 64 bit
Debug console output:
{noformat}
...
[DEBUG] Configuring mojo org.apache.maven.plugins:maven-deploy-plugin:2.7:deploy from plugin realm ClassRealm[plugin>org.apache.maven.plugins:maven-deploy-plugin:2.7, parent: sun.misc.Launcher$AppClassLoader@546b97fd]
[DEBUG] Configuring mojo 'org.apache.maven.plugins:maven-deploy-plugin:2.7:deploy' with basic configurator -->
[DEBUG]   (f) artifact = my-group:my-project:jar:1.0-SNAPSHOT
[DEBUG]   (f) attachedArtifacts = [my-group:my-project:java-source:sources:1.0-SNAPSHOT, my-group:my-project:java-source:test-sources:1.0-SNAPSHOT]
[DEBUG]   (s) localRepository =        id: local
      url: file:///C:/Users/username/.m2/repository/
   layout: default
snapshots: [enabled => true, update => always]
 releases: [enabled => true, update => always]

[DEBUG]   (f) offline = false
[DEBUG]   (f) packaging = jar
[DEBUG]   (f) pomFile = C:\my-group\my-project\pom.xml
[DEBUG]   (f) project = MavenProject: my-group:my-project:1.0-SNAPSHOT @ C:\my-group\my-project\pom.xml
[DEBUG]   (f) retryFailedDeploymentCount = 1
[DEBUG]   (f) skip = false
[DEBUG]   (f) updateReleaseInfo = false
[DEBUG] -- end configuration --
[DEBUG] Using connector WagonRepositoryConnector with priority 0.0 for scp://repo.example.com/snapshot-repo/ with username=username, password=***
Downloading: scp://repo.example.com/snapshot-repo/com/example/my-group/my-project/1.0-SNAPSHOT/maven-metadata.xml
2/2 KB
{noformat}
Thread dump during hang:
{noformat}
2014-03-25 10:58:02
Full thread dump Java HotSpot(TM) 64-Bit Server VM (20.45-b01 mixed mode):

""Connect thread repo.example.com session"" prio=6 tid=0x000000000ae81000 nid=0x16a4 runnable [0x000000000cf4f000]
   java.lang.Thread.State: RUNNABLE
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.read(SocketInputStream.java:129)
	at com.jcraft.jsch.IO.getByte(IO.java:82)
	at com.jcraft.jsch.Session.read(Session.java:908)
	at com.jcraft.jsch.Session.run(Session.java:1378)
	at java.lang.Thread.run(Thread.java:662)

""pool-1-thread-1"" prio=6 tid=0x000000000ae06000 nid=0x187c in Object.wait() [0x000000000a7df000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <0x00000007af0ddb90> (a com.jcraft.jsch.Channel$MyPipedInputStream)
	at java.io.PipedInputStream.read(PipedInputStream.java:310)
	- locked <0x00000007af0ddb90> (a com.jcraft.jsch.Channel$MyPipedInputStream)
	at java.io.PipedInputStream.read(PipedInputStream.java:361)
	- locked <0x00000007af0ddb90> (a com.jcraft.jsch.Channel$MyPipedInputStream)
	at org.apache.maven.wagon.AbstractWagon.transfer(AbstractWagon.java:532)
	at org.apache.maven.wagon.AbstractWagon.getTransfer(AbstractWagon.java:354)
	at org.apache.maven.wagon.AbstractWagon.getTransfer(AbstractWagon.java:317)
	at org.apache.maven.wagon.AbstractWagon.getTransfer(AbstractWagon.java:286)
	at org.apache.maven.wagon.StreamWagon.getIfNewer(StreamWagon.java:97)
	at org.apache.maven.wagon.StreamWagon.get(StreamWagon.java:61)
	at org.eclipse.aether.connector.wagon.WagonRepositoryConnector$GetTask.run(WagonRepositoryConnector.java:660)
	at org.eclipse.aether.util.concurrency.RunnableErrorForwarder$1.run(RunnableErrorForwarder.java:67)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)
	at java.lang.Thread.run(Thread.java:662)

""Low Memory Detector"" daemon prio=6 tid=0x0000000007834000 nid=0x2d48 runnable [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

""C2 CompilerThread1"" daemon prio=10 tid=0x0000000007827000 nid=0x2a7c waiting on condition [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

""C2 CompilerThread0"" daemon prio=10 tid=0x0000000007820000 nid=0x1cb4 waiting on condition [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

""Attach Listener"" daemon prio=10 tid=0x000000000781e800 nid=0x28fc waiting on condition [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

""Signal Dispatcher"" daemon prio=10 tid=0x000000000781c000 nid=0x1f60 runnable [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

""Finalizer"" daemon prio=8 tid=0x00000000077c4000 nid=0x2bb8 in Object.wait() [0x000000000850f000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <0x0000000707123230> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:118)
	- locked <0x0000000707123230> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:134)
	at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:171)

""Reference Handler"" daemon prio=10 tid=0x00000000077c2800 nid=0x18c8 in Object.wait() [0x000000000840f000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <0x0000000707123260> (a java.lang.ref.Reference$Lock)
	at java.lang.Object.wait(Object.java:485)
	at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:116)
	- locked <0x0000000707123260> (a java.lang.ref.Reference$Lock)

""main"" prio=6 tid=0x000000000057c800 nid=0x2590 waiting on condition [0x0000000002fee000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:283)
	at org.eclipse.aether.util.concurrency.RunnableErrorForwarder.awaitTerminationOfAllRunnables(RunnableErrorForwarder.java:129)
	at org.eclipse.aether.util.concurrency.RunnableErrorForwarder.await(RunnableErrorForwarder.java:96)
	at org.eclipse.aether.connector.wagon.WagonRepositoryConnector.get(WagonRepositoryConnector.java:503)
	at org.eclipse.aether.internal.impl.DefaultDeployer.upload(DefaultDeployer.java:433)
	at org.eclipse.aether.internal.impl.DefaultDeployer.deploy(DefaultDeployer.java:313)
	at org.eclipse.aether.internal.impl.DefaultDeployer.deploy(DefaultDeployer.java:268)
	at org.eclipse.aether.internal.impl.DefaultRepositorySystem.deploy(DefaultRepositorySystem.java:413)
	at org.apache.maven.artifact.deployer.DefaultArtifactDeployer.deploy(DefaultArtifactDeployer.java:139)
	at org.apache.maven.plugin.deploy.AbstractDeployMojo.deploy(AbstractDeployMojo.java:167)
	at org.apache.maven.plugin.deploy.DeployMojo.execute(DeployMojo.java:157)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:133)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:108)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:76)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:116)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:361)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:155)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:584)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:213)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:157)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)

""VM Thread"" prio=10 tid=0x00000000077b9000 nid=0x2a20 runnable 

""GC task thread#0 (ParallelGC)"" prio=6 tid=0x00000000004a8000 nid=0x2f1c runnable 

""GC task thread#1 (ParallelGC)"" prio=6 tid=0x00000000004a9800 nid=0x1874 runnable 

""GC task thread#2 (ParallelGC)"" prio=6 tid=0x00000000004ab800 nid=0x23f8 runnable 

""GC task thread#3 (ParallelGC)"" prio=6 tid=0x00000000004ad800 nid=0x1b1c runnable 

""GC task thread#4 (ParallelGC)"" prio=6 tid=0x00000000004b1000 nid=0x236c runnable 

""GC task thread#5 (ParallelGC)"" prio=6 tid=0x00000000004b2000 nid=0x2834 runnable 

""GC task thread#6 (ParallelGC)"" prio=6 tid=0x00000000004b3800 nid=0x2d3c runnable 

""GC task thread#7 (ParallelGC)"" prio=6 tid=0x00000000004b5000 nid=0x2eec runnable 

""VM Periodic Task Thread"" prio=10 tid=0x0000000007846000 nid=0x2ac8 waiting on condition 

JNI global references: 1806
{noformat}

When using maven 3.1.1, it successfully completes.;;;","03/Apr/14 02:45;aparolini;Same here. I tried to upgrade to the latest wagon ssh (2.6), same bug using maven 3.2.1. Fine with maven 3.1.1, thus this looks a maven core issue.

Will be great if this is corrected in next maven release.;;;","08/Apr/14 11:49;graywatson;I'm having a similar problem with maven downloads that hang -- typically on very small files like poms.   If I log into the repo box I see the following process:

bq. {{maven    20954  0.0  0.0   2388   736 ?        Ss   16:45   0:00 scp -p -f /var/maven/org/moxieapps/gwt-highcharts/1.5.0/gwt-highcharts-1.5.0.pom}}

If I then kill the process on the server, the client continues without an error.

{quote}
{{Downloading: scp://dev.achievementnetwork.org/var/maven/org/moxieapps/gwt-highcharts/1.5.0/gwt-highcharts-1.5.0.pom}}
{{401/400 B}}
{quote}

It seems to me to be very small files that have the problem.  Possibly smaller than some sort of packet?  2k, 400B, etc..
;;;","08/Apr/14 12:44;graywatson;I seemed to have worked around this problem by switching to use sftp URLs as opposed to using scp.  In looking at the code, it sure seems to be that this is some incompatibility issue between jsch and wagon-ssh.;;;","09/Apr/14 04:44;zakmck;sftp worked for me too. Thank you so much! :-)
Does this mean I'm no longer using wagon-ssh and instead I'm using jsch? Sorry, I'm too unfamiliar with this part of Maven to know if I'm asking a silly thing ;-);;;","09/Apr/14 10:32;graywatson;No you are still using wagon-ssh _and_ jsch, just that is is using the jsch sftp protocol implementation instead of the scp protocol.  Not sure why sftp works.;;;","03/Jul/14 16:33;gronono;Using wagon-ssh 2.6 and maven 3.2.1, I have this issue.;;;","04/Jul/14 13:08;michael-o;I'll reopen until some one verifies this as fixed with Maven 3.2.2.;;;","05/Jul/14 03:28;fcorneli;The problem still occurs on Maven 3.2.2.;;;","05/Jul/14 04:20;michael-o;Has anyone tried to downgrade/upgrade Wagon SSH or another JSch version? I doubt that this is a Maven problem but solely a plugin problem. I could be wrong, though.;;;","05/Jul/14 15:35;jvanzyl;Anyone with the issue needs to try Maven 3.2.2 with Wagon 2.4 which is what 3.1.1 uses. None of the resolver code has changed as we are still at Aether 0.0.9.M2.

It can't be fixed in Maven 3.2.2 if it's a Wagon issue.;;;","14/Jul/14 14:47;as987;For me, at least, this does not seem to be a wagon-ssh issue. With the wagon-ssh version locked, I can recreate this issue 100% of the time simply by flipping between 3.2.1 (broken) and 3.1.1 (working). I have tried this with both wagon-ssh versions 2.4 and 2.6 with the same result.

Unfortunately, I can't seem to test Maven 3.2.2 - I'm running into the same problems that were discussed on the mailing list in [this thread|http://mail-archives.apache.org/mod_mbox/maven-dev/201407.mbox/%3C50066049-F6D1-4BF2-8C12-577658F311FA@takari.io%3E];;;","17/Jul/14 15:51;jvanzyl;Did how did you use the different versions? Did you also make sure you were using the different versions of jsch? Wagon 2.4 uses 0.1.44-1, while Wagon 2.6 uses 0.1.50.;;;","17/Jul/14 16:00;as987;I assumed that locking the version in the extension declaration would use the same version regardless of which version of maven I'm using.
{code:xml}
    <build>
    ...
        <extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh</artifactId>
                <version>2.6</version>
            </extension>
    </build>
{code}

Is that not the case?

Also, I didn't do anything else to control the jsch version.;;;","18/Jul/14 06:35;jvanzyl;That should, I didn't know if you used it as an extension or dropped the JARs in your installation. Nothing else around transport has changed, most notably the Aether code where the error is originating. Honestly this is not high on my priority list (which is not to say there aren't other committers for whom this is important)  as I don't use the SSH code path. Ideally if we can get a self-contained test that uses something like MINA SSHD and can demontrate the problem it will be easier to fix, and more importantly stays fixed.;;;","13/Aug/14 04:01;vpiyanov;I ran into the same problem while using the *download-single* goal and maven 3.2.2.

{noformat}
<build>
    <extensions>
        <extension>
            <groupId>org.apache.maven.wagon</groupId>
            <artifactId>wagon-ssh</artifactId>
            <version>2.6</version>
        </extension>
    </extensions>
</build>
...
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>wagon-maven-plugin</artifactId>
                        <version>1.0-beta-5</version>
                        <executions>
                            <execution>
                                <id>2-download-dump</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>download-single</goal>
                                </goals>
                                <configuration>
                                    <url>scp://${jdbc.ssh.username}:${jdbc.ssh.password}@${jdbc.ssh.host}:${jdbc.ssh.port}/</url>
                                    <fromFile>${jdbc.ssh.dump.dir.path}/${jdbc.ssh.dump.file.name}</fromFile>
                                    <toFile>${basedir}/${jdbc.ssh.dump.file.name}</toFile>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
{noformat}

Thread dump:
{noformat}

2014-08-13 12:58:05
Full thread dump Java HotSpot(TM) 64-Bit Server VM (20.45-b01 mixed mode):

""RMI TCP Connection(2)-10.99.66.53"" daemon prio=6 tid=0x00000000094e5800 nid=0xa98 runnable [0x000000000babf000]
   java.lang.Thread.State: RUNNABLE
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.read(SocketInputStream.java:129)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:218)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:237)
	- locked <0x00000000edaf0e30> (a java.io.BufferedInputStream)
	at java.io.FilterInputStream.read(FilterInputStream.java:66)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:517)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:790)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:649)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)
	at java.lang.Thread.run(Thread.java:662)

   Locked ownable synchronizers:
	- <0x00000000ed7234b0> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)

""JMX server connection timeout 15"" daemon prio=6 tid=0x0000000007b8b000 nid=0x1d68 in Object.wait() [0x000000000b9bf000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <0x00000000ed811580> (a [I)
	at com.sun.jmx.remote.internal.ServerCommunicatorAdmin$Timeout.run(ServerCommunicatorAdmin.java:150)
	- locked <0x00000000ed811580> (a [I)
	at java.lang.Thread.run(Thread.java:662)

   Locked ownable synchronizers:
	- None

""RMI Scheduler(0)"" daemon prio=6 tid=0x0000000008e60800 nid=0x2154 waiting on condition [0x000000000b8bf000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x00000000ed5e2710> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:196)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2025)
	at java.util.concurrent.DelayQueue.take(DelayQueue.java:164)
	at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:609)
	at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:602)
	at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:957)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:917)
	at java.lang.Thread.run(Thread.java:662)

   Locked ownable synchronizers:
	- None

""RMI TCP Connection(1)-10.99.66.53"" daemon prio=6 tid=0x0000000008885800 nid=0x21f0 runnable [0x000000000b7bf000]
   java.lang.Thread.State: RUNNABLE
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.read(SocketInputStream.java:129)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:218)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:237)
	- locked <0x00000000ed7bd9e0> (a java.io.BufferedInputStream)
	at java.io.FilterInputStream.read(FilterInputStream.java:66)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:517)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:790)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:649)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)
	at java.lang.Thread.run(Thread.java:662)

   Locked ownable synchronizers:
	- <0x00000000ed720ff0> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)

""RMI TCP Accept-0"" daemon prio=6 tid=0x0000000007e59000 nid=0x1c70 runnable [0x000000000b6bf000]
   java.lang.Thread.State: RUNNABLE
	at java.net.PlainSocketImpl.socketAccept(Native Method)
	at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:408)
	- locked <0x00000000ed5e9888> (a java.net.SocksSocketImpl)
	at java.net.ServerSocket.implAccept(ServerSocket.java:462)
	at java.net.ServerSocket.accept(ServerSocket.java:430)
	at sun.management.jmxremote.LocalRMIServerSocketFactory$1.accept(LocalRMIServerSocketFactory.java:34)
	at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(TCPTransport.java:369)
	at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(TCPTransport.java:341)
	at java.lang.Thread.run(Thread.java:662)

   Locked ownable synchronizers:
	- None

""Connect thread 192.168.56.217 session"" prio=6 tid=0x0000000008bf3800 nid=0x1660 runnable [0x000000000a3ef000]
   java.lang.Thread.State: RUNNABLE
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.read(SocketInputStream.java:129)
	at com.jcraft.jsch.IO.getByte(IO.java:82)
	at com.jcraft.jsch.Session.read(Session.java:821)
	at com.jcraft.jsch.Session.run(Session.java:1241)
	at java.lang.Thread.run(Thread.java:662)

   Locked ownable synchronizers:
	- None

""Low Memory Detector"" daemon prio=6 tid=0x0000000006901000 nid=0x1b30 runnable [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

   Locked ownable synchronizers:
	- None

""C2 CompilerThread1"" daemon prio=10 tid=0x00000000068ff800 nid=0x1fd4 waiting on condition [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

   Locked ownable synchronizers:
	- None

""C2 CompilerThread0"" daemon prio=10 tid=0x00000000068fa800 nid=0x1410 waiting on condition [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

   Locked ownable synchronizers:
	- None

""Attach Listener"" daemon prio=10 tid=0x00000000068f8800 nid=0x13c4 waiting on condition [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

   Locked ownable synchronizers:
	- None

""Signal Dispatcher"" daemon prio=10 tid=0x00000000068ef800 nid=0x764 runnable [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

   Locked ownable synchronizers:
	- None

""Finalizer"" daemon prio=8 tid=0x00000000002c6800 nid=0x984 in Object.wait() [0x000000000689f000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <0x00000000ef550348> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:118)
	- locked <0x00000000ef550348> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:134)
	at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:171)

   Locked ownable synchronizers:
	- None

""Reference Handler"" daemon prio=10 tid=0x00000000002c4800 nid=0x2094 in Object.wait() [0x000000000679f000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <0x00000000ef5503e8> (a java.lang.ref.Reference$Lock)
	at java.lang.Object.wait(Object.java:485)
	at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:116)
	- locked <0x00000000ef5503e8> (a java.lang.ref.Reference$Lock)

   Locked ownable synchronizers:
	- None

""main"" prio=6 tid=0x000000000035b800 nid=0xafc in Object.wait() [0x00000000025de000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <0x00000000eaefa960> (a com.jcraft.jsch.Channel$MyPipedInputStream)
	at java.io.PipedInputStream.read(PipedInputStream.java:310)
	- locked <0x00000000eaefa960> (a com.jcraft.jsch.Channel$MyPipedInputStream)
	at java.io.PipedInputStream.read(PipedInputStream.java:361)
	- locked <0x00000000eaefa960> (a com.jcraft.jsch.Channel$MyPipedInputStream)
	at org.apache.maven.wagon.AbstractWagon.transfer(AbstractWagon.java:532)
	at org.apache.maven.wagon.AbstractWagon.getTransfer(AbstractWagon.java:354)
	at org.apache.maven.wagon.AbstractWagon.getTransfer(AbstractWagon.java:317)
	at org.apache.maven.wagon.AbstractWagon.getTransfer(AbstractWagon.java:286)
	at org.apache.maven.wagon.StreamWagon.getIfNewer(StreamWagon.java:97)
	at org.apache.maven.wagon.StreamWagon.get(StreamWagon.java:61)
	at org.codehaus.mojo.wagon.shared.DefaultWagonDownload.download(DefaultWagonDownload.java:87)
	at org.codehaus.mojo.wagon.DownloadMojo.execute(DownloadMojo.java:51)
	at org.codehaus.mojo.wagon.AbstractSingleWagonMojo.execute(AbstractSingleWagonMojo.java:64)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:132)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:120)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:347)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:154)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:584)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:213)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:157)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)

   Locked ownable synchronizers:
	- None

""VM Thread"" prio=10 tid=0x00000000002bc800 nid=0x21fc runnable 

""GC task thread#0 (ParallelGC)"" prio=6 tid=0x0000000000217000 nid=0xe68 runnable 

""GC task thread#1 (ParallelGC)"" prio=6 tid=0x0000000000218800 nid=0x1084 runnable 

""GC task thread#2 (ParallelGC)"" prio=6 tid=0x000000000021a800 nid=0x960 runnable 

""GC task thread#3 (ParallelGC)"" prio=6 tid=0x000000000021e800 nid=0x181c runnable 

""VM Periodic Task Thread"" prio=10 tid=0x0000000006913800 nid=0x1ca0 waiting on condition 

JNI global references: 1088


{noformat};;;","09/Sep/14 08:08;mdaventini;Affects version 3.2.3;;;","24/Jan/15 10:51;rfscholte;[~danttran] can this be caused by WAGON-431?;;;","24/Jan/15 19:33;danttran;I am very convinced this is related to WAGON-429 where the scp download accidentally set the requested transfer size as Long.MAX_VALUE rather than the size of the remote file.

See my explaination at WAGON-429 for details;;;","13/Feb/15 03:25;rfscholte;You can download one of the latest SNAPSHOTs of the Maven distribution from https://repository.apache.org/content/repositories/snapshots/org/apache/maven/apache-maven/3.2.6-SNAPSHOT/ and give it a try. It relies on the latest SNAPSHOT of Wagon, which should contain the required fixes.;;;","04/Mar/15 01:09;hboutemy;can someone confirm that the SNAPSHOT wagon fixes the issue, please?
to be sure releaing Wagon (and waiting for it before releasing Maven core) is the way to go

thanks in advance to everybody interested in seeing this issue fixed;;;","15/Mar/15 05:03;fcorneli;I'm trying out 3.2.6-SNAPSHOT with the project at: https://github.com/e-Contract/mycarenet (check the pom.xml for the used release config).
However, during {{mvn release:perform}} I still get:
{code}
[INFO] [INFO] --- maven-deploy-plugin:2.8.2:deploy (default-deploy) @ mycarenet ---
[INFO] Uploading: scp://192.168.100.1/maven2/be/e_contract/mycarenet/1.2.1/mycarenet-1.2.1.pom
[INFO] 4/8 KB   
[INFO] 8/8 KB   
[INFO]          
[INFO] Uploaded: scp://192.168.100.1/maven2/be/e_contract/mycarenet/1.2.1/mycarenet-1.2.1.pom (8 KB at 4.2 KB/sec)
[INFO] Downloading: scp://192.168.100.1/maven2/be/e_contract/mycarenet/maven-metadata.xml
[INFO] 892/891 B
{code}
The reported downloading size is one off and simply hangs on that.;;;","15/Mar/15 05:42;rfscholte;I realized a bit too late that wagon-ssh isn't part of the Maven distribution, see http://maven.apache.org/ref/3.2.5/apache-maven/dependencies.html
However, it surprises me that this used to work with Maven-3.1.x and not in Maven-3.2.x anymore, like there's some kind of classloader issue. At least give wagon-ssh 2.9-SNAPSHOT a try, I assume you have specified wagon-ssh somewhere. ;;;","15/Mar/15 06:30;fcorneli;Of course the maven-release-plugin refuses to prepare for a release when depending on a wagon-ssh 2.9-SNAPSHOT version. So I guess I'll have to do a local ""release"" of wagon-ssh first.;;;","15/Mar/15 06:46;fcorneli;Doing a quick-and-dirty local ""release"" of wagon-ssh via:
{code}
git clone https://git-wip-us.apache.org/repos/asf/maven-wagon.git
cd maven-wagon
mvn versions:set -DnewVersion=2.9-econtract-1
mvn clean install -Dmaven.test.skip=true
{code}
and then referring to it via:
{code:xml}
<extensions>
    <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh</artifactId>
        <version>2.9-econtract-1</version>
    </extension>
</extensions>
{code}
indeed fixes the issue.;;;","15/Mar/15 06:49;rfscholte;When doing a {{mvn deploy}} you don't have that issue? If that's the case, the {{maven-release-plugin}} itself might add {{wagon-ssh}} to the classpath ( http://maven.apache.org/maven-release/maven-release-plugin/dependencies.html ) and that's wrong.;;;","20/Apr/15 14:06;jvanzyl;Anyone going to validate this is fixed? If not I'm just going to push it back into the general pile of issues.;;;","20/Apr/15 17:21;rfscholte;I think I know what's happening here: maven-release-plugin depends on maven2 dependencies. These pull in the ssh-wagen as transitive dependency. That would explain why it is only happening with the maven-release-plugin and not with a normal deploy. [~danttran] can confirm the fix, but since ssh is not part of the maven3 distribution, it shouldn't have any impact.;;;","20/Apr/15 17:24;dantran;

@Jason, I can confirm that maven 3.2.2 can download file via ssh as long as user uses wagon-2.9 as extension ( note maven does not have wagon-ssh under its lib);;;","20/Apr/15 17:27;dantran;@if user deploys artifact with ssh extension  wagon-2.8, it would hang at downloading metadata file;;;","21/Apr/15 00:04;jvanzyl;Ok, I will stage Wagon 2.9 and you can give it a whirl.;;;","21/Apr/15 01:14;jvanzyl;I consider this fixed with Wagon 2.9.;;;","28/Mar/20 14:58;hudson;Build failed in Jenkins: Maven TLP » maven-studies » maven-metrics #4

See https://builds.apache.org/job/maven-box/job/maven-studies/job/maven-metrics/4/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Installs non-existent file into local repository,MNG-5602,12797262,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Not A Problem,,mkarg,mkarg,18/Mar/14 09:22,17/Feb/16 11:09,03/Jan/22 13:13,17/Feb/16 11:09,3.0.4,,,,,,,,Plugins and Lifecycle,,,,,0,,,,"The Maven Install Plugin 2.3.1 confirms that it successfully installed a file which actually is not existing in neither the SOURCE nor the TARGET location... This is simply confusing people.

Steps to reproduce:
* Provide a non-existent SOURCE file to the build-helper-plugin and run mvn install.

<plugin>
  <groupId>org.codehaus.mojo</groupId>
  <artifactId>build-helper-maven-plugin</artifactId>
  <version>1.8</version>
  <executions>
    <execution>
      <id>attach-exe</id>
      <phase>package</phase>
      <goals>
        <goal>attach-artifact</goal>
      </goals>
      <configuration>
        <artifacts>
          <artifact>
            <file>FOO</file>
            <type>BAR</type>
          </artifact>
        </artifacts>
      </configuration>
    </execution>
  </executions>
</plugin>

The result is an info that the file got actually installed -- which is obviously NOT the case:

[INFO] Installing C:\Users\me\workspace\Bug\FOO to C:\Users\me\.m2\repository\my\group\the-artifact\version-SNAPSHOT\the-artifact-version-SNAPSHOT.BAR","Win7 Pro SP1 64 Bit, JDK 7u51, MVN-INSTALL-PLUGIN 2.3.1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28t47:",9223372036854775807,,,,,,,,,,,,,,,,,,,"17/Feb/16 11:09;schulte77;Please file an issue with the {{maven-install-plugin}} if this is still an issue for you.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Plugin Errors are not handled,MNG-5593,12796221,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Incomplete,,michas,michas,26/Feb/14 02:34,17/Feb/16 11:16,03/Jan/22 13:13,17/Feb/16 11:16,3.2.1,,,,,,,,Plugins and Lifecycle,,,,,0,,,,"The [DefaultBuildPluginManager|https://maven.apache.org/ref/3.2.1/maven-core/xref/org/apache/maven/plugin/DefaultBuildPluginManager.html#L133] executes the plugin mojo and catches all kind of exceptions.

However if the plugin throws some Error, it is not catched and maven continues like everything went fine.

Shouldn't maven handle Errors and stop the build in that case?

(see also IZPACK-1050)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29aaf:",9223372036854775807,,,,,,,,,,,,,,,,,,,"26/Mar/14 15:25;rfscholte;I've just had a false positive (exit code 0 which should have been 1) when testing the integration-tests of the enforcer project. However, a second run completed as expected. So I don't have a valid reproducible test yet.;;;","15/Jun/14 08:51;jvanzyl;Please add a self-contained example project please.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"ComparableVersion's breaks contract for Comparable, in some edgecases the comparisons are not transitive",MNG-5568,12797217,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,hboutemy,mkleint,mkleint,24/Jan/14 01:05,28/Mar/20 14:58,03/Jan/22 13:13,30/Nov/14 16:27,3.0.5,,,,,3.2.5,,,Artifacts and Repositories,,,,,1,,,,"if ComparableVersion A > B and B > C, then it's required that A > C. In the attached test patch, I'm demonstrating a case where it's failing. Please note that the situation is not that rare, please see issues https://netbeans.org/bugzilla/show_bug.cgi?id=226100 and https://netbeans.org/bugzilla/show_bug.cgi?id=240845 at netbeans.org and https://jira.codehaus.org/browse/MPIR-247",,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-6568,,,,,,,,,MNG-5730,,,,,,MNG-3010,,,,,,,,MPIR-247,,,"24/Jan/14 01:05;mkleint;ComparableVersion.patch;https://issues.apache.org/jira/secure/attachment/12713393/ComparableVersion.patch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29bqf:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"28/Nov/14 16:35;michael-o;Can you explain how can this issue be fixed by solely extending the testcases?;;;","28/Nov/14 16:41;mkleint;I'm not following the question. I have no idea how the issue is to be fixed. I've just created a testcase that demonstrates the problem. Once you fix it, the test case will pass.;;;","29/Nov/14 00:57;hboutemy;yes, thank you Milos for this testcase: I still didn't have time to work on it, but such test case is absolutely necessary to have a chance to fix the bug

the edge case is related to the added {{H}} in {{6.1H.5-beta}}, in the middle of the version string instead of appended to the end: that's the unusual part, and I know there is some tweak in the parsing algorithm for transforming {{1H}} into a canonical representation: IIRC, the canonical representation is {{1-H}}
and I suppose it's coupled with the fact that {{6.1.0}} is equivalent to {{6.1}}

I'll have a look at the test case this WE to narrow the problem (can't tell if it will be sufficient to have a fix...);;;","30/Nov/14 15:19;hboutemy;made maven-artifact.jar executable to test version parsing and comparison in MNG-5730
we can now analyze the bug more easily:
{code}$ java -jar maven-artifact-3.2.4-SNAPSHOT.jar 6.1.0 6.1.0rc3 6.1H.5-beta 6.1.0
Display parameters as parsed by Maven, and comparison result:
1. 6.1.0 == 6.1
   6.1.0 > 6.1.0rc3
2. 6.1.0rc3 == 6.1.0.rc.3
   6.1.0rc3 > 6.1H.5-beta
3. 6.1H.5-beta == 6.1.h.5.beta
   6.1H.5-beta > 6.1.0
4. 6.1.0 == 6.1{code}

the bug is that {{6.1.0rc3 > 6.1H.5-beta}}: should be the contrary;;;","30/Nov/14 16:27;hboutemy;fixed in [14e4885d|http://git-wip-us.apache.org/repos/asf/maven/commit/14e4885d]

now, {{6.1.0rc3 < 6.1H.5-beta}};;;","01/Dec/14 01:18;michael-o;Hervé, do you think it is wise to use a for loop with index instead of an iterator? The {{get(int)}} method might introduce an {{O(n²)}} execution time dependending on the list implementation. In genereal, it is not recommended to go it in this fashion, rather use an iterator with remove.;;;","01/Dec/14 16:33;hboutemy;1. {{extends ArrayList<Item>}} so no performance problem
2. we need to iterate in reverse order, from last

if you see another algorithm, please tell;;;","02/Dec/14 03:05;michael-o;1. You should not make assumptions about the implementation, only about the contract in the interface.
2. You can always use [{{ListIterator}}|http://docs.oracle.com/javase/6/docs/api/java/util/ListIterator.html] which gives you the ability to reverse iterate a list.

Does this sound better?;;;","02/Dec/14 16:10;hboutemy;seriously? what are you looking for?
I know my implementation, it's not intended to be extended by anybody: no need to be so overly complicated
(and AFAIK ListIterator doesn't give any method to start from the last item);;;","03/Dec/14 03:46;michael-o;Indeed, you are right. I have presumed the {{ListIterator}} does reverse. Nevermind, thank you for the enlightment.;;;","06/Dec/14 15:56;michael-o;[~hboutemy], does your change implicitly fix MPIR-247?;;;","06/Dec/14 16:39;hboutemy;yes: MPIR-247 is just a consequence of MNG-5568 bug, and I don't see how to create a workaround in MPIR;;;","07/Dec/14 03:43;michael-o;The only thing we could do is catch that exception and signal that a user should upgrade to Maven 3.2.4 when it is released. This bug is probably worth backporting to 3.0.6.;;;","07/Dec/14 04:36;hboutemy;good idea;;;","07/Dec/14 04:43;michael-o;Added comment to the depending issue.;;;","25/Sep/18 09:14;jhalliday;Maybe this one needs reopening?
{code:java}
java -jar ~/.m2/repository/org/apache/maven/maven-artifact/3.5.4/maven-artifact-3.5.4.jar ""2.9"" ""2.9-1"" ""2.9.0.rc-1"" ""2.9""
Display parameters as parsed by Maven (in canonical form) and comparison result:
1. 2.9 == 2.9
   2.9 < 2.9-1
2. 2.9-1 == 2.9-1
   2.9-1 < 2.9.0.rc-1
3. 2.9.0.rc-1 == 2.9.0.rc-1
   2.9.0.rc-1 < 2.9
4. 2.9 == 2.9
{code};;;","25/Sep/18 11:58;michael-o;What do you expect to see? How is maven supported to compare {{""2.9-1"" ""2.9.0.rc-1""}} properly?;;;","25/Sep/18 12:01;jhalliday;The interface contract is provided both in the description field of this Jira ticket and in the javadoc at e.g. https://docs.oracle.com/javase/8/docs/api/java/lang/Comparable.html;;;","28/Mar/20 14:58;hudson;Build failed in Jenkins: Maven TLP » maven-studies » maven-metrics #4

See https://builds.apache.org/job/maven-box/job/maven-studies/job/maven-metrics/4/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Artifact are not getting downloaded from repository,MNG-5541,12797457,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Not A Problem,,pgupta,pgupta,02/Dec/13 05:40,03/Dec/13 05:59,03/Jan/22 13:13,03/Dec/13 05:59,,,,,,,,,Artifacts and Repositories,,,,,0,,,,"I was using bamboo server and nexus on single server and it was working fine. Recently we shifted our bamboo server and nexus server to new machine. Now both reside on different machine. So I changed my pom.xml to put nexus server path and tried to run build.xml but everytime I am getting same error. I contacted with bamboo and nexus both and they debug and found issue with maven. 

I am attaching all files here for reference. This is a very urgent issue from past 12 days and it is holding our migration. Please look into this asap. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Dec/13 05:43;pgupta;REL35-LIB80-JOB1-145.log;https://issues.apache.org/jira/secure/attachment/12713405/REL35-LIB80-JOB1-145.log","02/Dec/13 05:43;pgupta;allStaging-build.xml;https://issues.apache.org/jira/secure/attachment/12713329/allStaging-build.xml","02/Dec/13 05:43;pgupta;pom.xml;https://issues.apache.org/jira/secure/attachment/12713232/pom.xml",,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28m93:",9223372036854775807,,,,,,,,,,,,,,,,,,,"02/Dec/13 05:43;pgupta;Settings.xml content 

<settings xmlns=""http://maven.apache.org/SETTINGS/1.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://maven.
apache.org/SETTINGS/1.0.0
                                                                                                                                        http://m
aven.apache.org/xsd/settings-1.0.0.xsd"">
       <localRepository>${user.home}/.m2/repository</localRepository>
       <interactiveMode>true</interactiveMode>
       <usePluginRegistry>false</usePluginRegistry>
       <offline>false</offline>
       <pluginGroups>
        <pluginGroup>org.codehaus.mojo</pluginGroup>
       </pluginGroups>
       <servers>
         <server>
           <id>deployment</id>
           <username>admin</username>
           <password>admin123</password>
           <!--<privateKey>${user.home}/.ssh/id_dsa</privateKey>
           <passphrase>some_passphrase</passphrase>-->
           <filePermissions>664</filePermissions>
           <directoryPermissions>775</directoryPermissions>
           <configuration></configuration>
         </server>
       </servers>
       <mirrors>
          <mirror>
              <id>nexus</id>
              <mirrorOf>*</mirrorOf>
              <url>http://server:8081/nexus/content/groups/public</url>
           </mirror>
       </mirrors>
       <!--  <mirrors/>-->
       <proxies/>
         <profiles>
           <profile>
               <id>nexus</id>
               <!--Enable snapshots for the built in central repo to direct -->
               <!--all requests to nexus via the mirror -->
               <repositories>
<!--all requests to nexus via the mirror -->
               <repositories>
                 <repository>
                    <id>Repo1 Maven</id>
                    <url>http://repo1.maven.org/maven2/</url>
                    <!--<url>http://central</url>-->
                    <releases>
                      <enabled>true</enabled>
                      <updatePolicy>always</updatePolicy>
                    </releases>
                    <snapshots>
                        <enabled>true</enabled>
                        <updatePolicy>never</updatePolicy>
                    </snapshots>
                 </repository>
               </repositories>
               <pluginRepositories>
                  <pluginRepository>
                    <id>thirdparty</id>
                    <url>http://thirdparty</url>
                    <releases>
                       <enabled>true</enabled>
                       <updatePolicy>always</updatePolicy>
                    </releases>
                   <snapshots>
                       <enabled>true</enabled>
                       <updatePolicy>never</updatePolicy>
                   </snapshots>
                  </pluginRepository>
               </pluginRepositories>
           </profile>
         </profiles>
         <activeProfiles>
             <!--make the profile active all the time -->
             <activeProfile>nexus</activeProfile>
         </activeProfiles>
         <!--   <profiles/>  <activeProfiles/>-->
 </settings>
;;;","02/Dec/13 12:16;rfscholte;{quote}I contacted with bamboo and nexus both and they debug and found issue with maven{quote}

Did they gave any more details or just ""it is not a problem of our product""?
Also add the output of {{mvn --version}};;;","02/Dec/13 13:38;pgupta;They tried to debug the things and provided different solutions but didn't work. I am giving their ticket reference. Also I tried build with maven 2 and maven 3 but maven2 gives wagon-ftp and plexus artifact not found error at first place and if I commented out that code, it start giving error related to maven-clean-plugin. 

lease check and give me some input to resolve this issue asap. 

https://support.sonatype.com/requests/3343

https://support.sonatype.com/requests/3274

mvn --version ouput .

[appserv@lou-devbb01 wagon]$ mvn --version
Maven version: 2.0.9
Java version: 1.5.0_15
OS name: ""linux"" version: ""2.6.32-358.18.1.el6.x86_64"" arch: ""amd64"" Family: ""unix""

;;;","02/Dec/13 14:17;rfscholte;Assuming the only changes are the servers (Maven, Bamboo, Nexus, Operaton system are still the same) would suggest that it doesn't have to be a Maven problem, but something caused during the migration. Can you connect to Nexus from another machine? If so, try to empty the local repository of Bamboo.;;;","03/Dec/13 05:34;pgupta;This issue got resolved. I made two changes. One in settings.xml as it was not taking ${user.home} value and unable to create .m2 directory at specified path.
Second I changed in nexus release configuration and enable redeploy. 
Thanks for your help.;;;","03/Dec/13 05:59;afloom;Changing resolution to ""Not A Bug"".;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong runtime classpath if inheriting dependencies specified by profile from parent,MNG-5536,12796982,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Not A Problem,,tibordigana,tibordigana,17/Nov/13 17:11,17/Apr/14 04:45,03/Jan/22 13:13,17/Apr/14 04:45,3.1.1,,,,,,,,Profiles,,,,,0,,,,"The module DAO-BOM(pom) defines dependency within a profile.
Other module webapp(war) which indirectly inherits from DAO-BOM does not see such dependency hibernate-core-4.2.6.Final.jar and dependency which was not excluded hibernate-commons-annotations-4.0.2.Final.jar

Since the failure results in dependency and war plugin, it looks like the bug is in Maven core and related to profiles.

I found this issue when I examied the workaround for
https://jira.codehaus.org/browse/MNG-2205

The problem is that the build result is different in Maven 2.2.1 and Maven 3.1.1 in webapp module.

The Maven 2.2.1 works as expected.

There are two issues with Maven 3.1.1 :
+ Maven 3 ignored two Hibernate runtime artifacts which I expect in WAR file;
+ classpath produced by maven-dependency-plugin:build-classpath does not have those two runtime artifacts if includeScope=runtime. See the webapp POM.

The Zip file contains the project and four text files.
",Win,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Nov/13 17:11;tibordigana;with profiles and with parents.zip;https://issues.apache.org/jira/secure/attachment/12713189/with+profiles+and+with+parents.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i290xj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
parent with 'RELEASE' version not resolved when only maven-metadata-local.xml (with a SNAPSHOT pom) file available in the local nexus repo,MNG-5526,12797611,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Won't Fix,,ndgroote,ndgroote,15/Oct/13 07:06,07/Jul/14 12:59,03/Jan/22 13:13,07/Jul/14 12:59,3.0.3,3.0.4,3.0.5,,,,,,Dependencies,,,,,0,,,,"We have a parent pom project containing all infrastructure + plugin version to be used by all our projects. 

We always point to the RELEASE of this parent pom for our projects. However when there is only a maven-metadata-local.xml in our local nexus repo, we get the following error.

  Non-resolvable parent POM: Failed to resolve version for be.company:parent:pom:RELEASE and 'parent.relativePath' points at wrong local POM @ line 3, column 11 -> [Help 2]
org.apache.maven.model.resolution.UnresolvableModelException: Failed to resolve version for be.company:parent:pom:RELEASE
	at org.apache.maven.project.ProjectModelResolver.resolveModel(ProjectModelResolver.java:159)
	at org.apache.maven.model.building.DefaultModelBuilder.readParentExternally(DefaultModelBuilder.java:819)
	at org.apache.maven.model.building.DefaultModelBuilder.readParent(DefaultModelBuilder.java:670)
	at org.apache.maven.model.building.DefaultModelBuilder.build(DefaultModelBuilder.java:308)
	at org.apache.maven.model.building.DefaultModelBuilder.build(DefaultModelBuilder.java:232)
	at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:386)
	at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:355)
	at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:319)
	at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:632)
	at org.apache.maven.DefaultMaven.getProjectsForMavenReactor(DefaultMaven.java:581)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:233)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
Caused by: org.sonatype.aether.resolution.ArtifactResolutionException: Failed to resolve version for be.company:parent:pom:RELEASE
	at org.sonatype.aether.impl.internal.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:541)
	at org.sonatype.aether.impl.internal.DefaultArtifactResolver.resolveArtifacts(DefaultArtifactResolver.java:220)
	at org.sonatype.aether.impl.internal.DefaultArtifactResolver.resolveArtifact(DefaultArtifactResolver.java:197)
	at org.sonatype.aether.impl.internal.DefaultRepositorySystem.resolveArtifact(DefaultRepositorySystem.java:323)
	at org.apache.maven.project.ProjectModelResolver.resolveModel(ProjectModelResolver.java:155)
	... 22 more
Caused by: org.sonatype.aether.resolution.VersionResolutionException: Failed to resolve version for be.company:parent:pom:RELEASE
	at org.apache.maven.repository.internal.DefaultVersionResolver.resolveVersion(DefaultVersionResolver.java:273)
	at org.sonatype.aether.impl.internal.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:276)
	... 26 more  

When we remove this meta-data-local.xml file, all works fine again. It also works fine if there are already som maven-metadata-nexus.xml files available 

I could reproduce this by using the following pom projects (see attachments), and following these steps:

1) deploy a version 1.0.0 for the parent pom to your repo;
2) remove the deployed parent from your local repo (suppose someone else did the deploy to the remote repository)
3) install/deploy a version 1.0.1-SNAPSHOT to your repo;
4) now try to install/deploy the artifact project, pointing to the RELEASE version of the parent pom.... you will get the given error 

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Oct/13 07:06;artifact_pom.xml;https://issues.apache.org/jira/secure/attachment/12713325/artifact_pom.xml","15/Oct/13 07:06;parent-pom.xml;https://issues.apache.org/jira/secure/attachment/12713277/parent-pom.xml",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29bfj:",9223372036854775807,,,,,,,,,,,,,,,,,,,"15/Oct/13 07:31;ndgroote;When I add the <repositories>
		<repository>
			<id>public-repo</id>
			<name>Public Repository</name>
			<url>http://my-repo-host/nexus/content/groups/public</url>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
				<checksumPolicy>warn</checksumPolicy>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
				<checksumPolicy>warn</checksumPolicy>
			</snapshots>
		</repository>
  </repositories>

to my artifact pom it does resolve, but this should be inherited from settings.xml file where i did define the Nexus mirrorOf *.
We do not want to define the repositories over and over again just because we want to use the RELEASE version value.

;;;","16/Oct/13 02:07;ndgroote;Workaround is to define the repos in a profile in the settings file and to activate this profile for the projects you want to resolve the RELEASE versioned parent.;;;","23/Jan/14 09:18;jvanzyl;Please read https://cwiki.apache.org/confluence/display/MAVEN/Submitting+Issue+for+Maven's+Core;;;","15/Jun/14 14:13;jvanzyl;Coming with Maven 3.2.2 you will be able to use ranges in parent elements. Will this work for your requirements to get the latest parent with all your definitions? While these cannot be unbounded you can do something like [1.0,2.0) where you can continually release the parent and have it be used.;;;","07/Jul/14 12:59;jvanzyl;You can now use ranges in the parent which is effectively the same thing.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
401: Unauthorized access to deploy artifacts when moving from 3.0.3 -> 3.0.4/3.0.5/3.1.0 or 3.1.1,MNG-5525,12796178,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Cannot Reproduce,,ndgroote,ndgroote,14/Oct/13 07:14,12/Jun/14 01:55,03/Jan/22 13:13,12/Jun/14 00:57,3.0.4,3.0.5,3.1.0,3.1.1,,,,,Artifacts and Repositories,,,,,0,,,,"401: Unauthorized access to deploy artifacts when moving from 3.0.3 -> 3.0.4, 3.0.5, 3.1.0 and 3.1.1 

settings file was kept the same...

Workaround:

define the following extension in your <build> node

<extensions>
  <extension>
    <groupId>org.apache.maven.wagon</groupId>
    <artifactId>wagon-http-lightweight</artifactId>
    <version>1.0</version> 
  </extension>			
</extensions>",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28vrr:",9223372036854775807,,,,,,,,,,,,,,,,,,,"12/Jun/14 01:55;ndgroote;Could it be that the problem only occurs with a Company Windows Proxy with the NTLM V2 protocol?

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.maven.repository.legacy.DefaultWagonManager should set User-Agent,MNG-5509,12797480,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,rfscholte,rfscholte,rfscholte,31/Aug/13 14:46,28/Mar/20 14:56,03/Jan/22 13:13,31/Aug/13 16:37,3.0.4,3.0.5,3.1.0,3.1.0-alpha-1,,3.1.1,,,Artifacts and Repositories,,,,,0,,,,"When Maven is directly using Wagon it is missing the User-Agent. Aether's {{org.eclipse.aether.connector.wagon.WagonRepositoryConnector}} has a trick to set the User Agent, the {{DefaultWagonManager}} should do the same thing.

This is causing recently access deny from Central repository:
{noformat}org.apache.maven.wagon.TransferFailedException: Authorization failed: Access denied to: http://repo.maven.apache.org/maven2/... , ReasonPhrase:Denied Access.{noformat}

see [discussion on dev ml|http://mail-archives.apache.org/mod_mbox/maven-dev/201308.mbox/%3CCAJZRQKy4-_kPSXg9eKaeReJWzJvTd%3DxP-MPqoa9qgaqEEcyj1g%40mail.gmail.com%3E] for more details",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-5175,,,,,,WAGON-401,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28z13:",9223372036854775807,,,,,,,,,,,,,,,,,,,"31/Aug/13 16:37;rfscholte;Fixed in [c9950d77|http://git-wip-us.apache.org/repos/asf/maven/commit/c9950d77]
Confirmed with maven-eclipse-plugin-test-project-13;;;","31/Aug/13 16:41;hboutemy;confirmed with maven-doap-plugin MDOAP-38, doapfile, basic and minimal ITs;;;","31/Aug/13 17:08;hboutemy;maven-doap-plugin ITs deactivated for affected maven versions in [r1519232|http://svn.apache.org/r1519232];;;","01/Sep/13 04:41;rfscholte;maven-eclipse-plugin ITs deactivated for affected Maven versions in [r1519255|http://svn.apache.org/r1519255];;;","28/Mar/20 14:56;hudson;Build failed in Jenkins: Maven TLP » maven-studies » maven-metrics #4

See https://builds.apache.org/job/maven-box/job/maven-studies/job/maven-metrics/4/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven 3.1.0 fails to resolve artifacts produced by reactor build,MNG-5503,12796239,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jvanzyl,jerboaa,jerboaa,12/Aug/13 06:55,28/Mar/20 14:56,03/Jan/22 13:13,05/Sep/13 12:01,3.1.0,,,,,3.1.1,,,Artifacts and Repositories,,,,,2,,,,"Maven 3.1.0 fails to resolve zip type dependencies produced via assemblies by modules higher up the reactor hierarchy. For example module A has a dep on module B of type zip. Module A produces a zip containing jars plus some other files which the build of module B should extract and copy to the output directory. However, dep solving of module B fails.

It works with Maven 3.0.5 but fails to build with Maven 3.1.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-5214,,,,,,MNG-5591,,,,,,,,,,,"12/Aug/13 06:55;jerboaa;reproducer-zip-type-deps.zip;https://issues.apache.org/jira/secure/attachment/12713327/reproducer-zip-type-deps.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28vh3:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"16/Aug/13 09:13;stephenc;This appears to me to be a blocking regression.

Your test case has some minor issues that make it harder to identify the root cause (would have been better if all the versions were -SNAPSHOT versions... but none-the-less it does identity a major regression IMHO.

Here is the build output:
{code}
$ mvn clean verify
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Build Order:
[INFO] 
[INFO] module-a
[INFO] module-b
[INFO] parent
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building module-a 1.0.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ module-a ---
[INFO] Deleting /Users/stephenc/tmp/mng5503/rep/module-a/target
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ module-a ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /Users/stephenc/tmp/mng5503/rep/module-a/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:2.5.1:compile (default-compile) @ module-a ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ module-a ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /Users/stephenc/tmp/mng5503/rep/module-a/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:2.5.1:testCompile (default-testCompile) @ module-a ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ module-a ---
[INFO] No tests to run.
[INFO] 
[INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ module-a ---
[WARNING] JAR will be empty - no content was marked for inclusion!
[INFO] Building jar: /Users/stephenc/tmp/mng5503/rep/module-a/target/module-a-1.0.0-SNAPSHOT.jar
[INFO] 
[INFO] --- maven-assembly-plugin:2.2-beta-5:single (assemble) @ module-a ---
[INFO] Reading assembly descriptor: zip.xml
[INFO] Building zip: /Users/stephenc/tmp/mng5503/rep/module-a/target/module-a-1.0.0-SNAPSHOT.zip
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building module-b 1.0.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO] 
[INFO] module-a .......................................... SUCCESS [1.852s]
[INFO] module-b .......................................... FAILURE [0.018s]
[INFO] parent ............................................ SKIPPED
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 2.034s
[INFO] Finished at: Fri Aug 16 15:08:26 IST 2013
[INFO] Final Memory: 11M/208M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal on project module-b: Could not resolve dependencies for project org.fedoraproject.rhbz991454:module-b:jar:1.0.0-SNAPSHOT: Could not find artifact org.fedoraproject.rhbz991454:module-a:zip:1.0.0-SNAPSHOT -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException
[ERROR] 
[ERROR] After correcting the problems, you can resume the build with the command
[ERROR]   mvn <goals> -rf :module-b
{code}

I have removed the debug output, but essentially what seems to be happening is that it is looking for the metadata for the artifact outside of the reactor in order to determine whether or not the artifact with that specific classifier is present. I suspect, but I have not proved, that if the metadata was present (e.g. from having run as far as the install phase) then the artifact would be resolved from the reactor... but I'd like confirmation of that before downgrading this issue from blocker.

Jason, assigning to you as you're running the 3.1.1 release;;;","16/Aug/13 11:32;mizdebsk;Original bug report at Red Hat Bugzilla: http://bugzilla.redhat.com/991454;;;","01/Sep/13 04:57;rfscholte;I can't reproduce this issue with the current 3.1.1-SNAPSHOT. Not sure which commit fixed this. Maybe [~jason] can enlighten this and close this issue.;;;","02/Sep/13 02:16;mizdebsk;This was fixed in commit 11f46bd.;;;","02/Sep/13 13:30;rfscholte;Ok, according to [https://git-wip-us.apache.org/repos/asf?p=maven.git;a=commit;h=11f46bd4c4dfe51514e60fbb9f807bcbb07a14a9] there's  an IT which still needs to be pushed before this issue can be closed.;;;","02/Sep/13 23:36;mizdebsk;Yes, I believe the IT is the one attached here or its original variant attached in Red Hat Bugzilla.;;;","28/Mar/20 14:56;hudson;Build failed in Jenkins: Maven TLP » maven-studies » maven-metrics #4

See https://builds.apache.org/job/maven-box/job/maven-studies/job/maven-metrics/4/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fixing NOTICE and LICENSE files,MNG-5496,12797237,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,,sebb,,18/Jul/13 16:19,07/Apr/15 18:54,03/Jan/22 13:13,15/Jun/14 14:27,3.1.0,,,,,,,,,,,,,0,,,,"The NOTICE and LICENSE files are an essential part of any release.

They need to relate to the contents of the bundle in which they are located and it is important that they don't contain anything superfluous [1]

Each distribution artifact potentially needs its own specific N&L files.

In particular, the source and binary artifacts will generally need different versions, as the binary often bundles additional items, for example 3rd party jars.

However the jar files which are created from the SCM source probably can use the same license as the source archive.

However, the existing N&L files in 3.1.0 fall short on several counts:

The source and binary NOTICE files both start as follows:

>>>>>
   =========================================================================
   ==  NOTICE file corresponding to the section 4 d of                    ==
   ==  the Apache License, Version 2.0,                                   ==
   ==  in this case for the Apache Maven distribution.                    ==
   =========================================================================

Apache Maven
Copyright 2001-2013 The Apache Software Foundation

This product includes software developed by
The Apache Software Foundation (http://www.apache.org/).
<<<<<<<<<<<

However, the file must start as follows:

>>>>
Apache Maven
Copyright 2001-2013 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).
<<<<

Note particularly that the phrase is ""developed at"" not ""developed by""

The source NOTICE file is the same as the binary NOTICE file, yet the binary archive contains lots of additional jars.

It looks to me as though the above 5 lines is all that are needed for the source archive. The existing source LICENSE.txt file looks OK.

However, the binary LICENSE file makes no mention at all of any licenses for the additional products. It should point to the licenses for each of the additional products that are included, for example: Aether, Sisu, Plexus etc. These licenses need to be obtained and stored in a suitable directory which is referenced in LICENSE.txt.

[1] http://www.apache.org/dev/licensing-howto.html",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28uif:",9223372036854775807,,,,,,,,,,,,,,,,,,,"18/Jul/13 16:22;sebb;Forgot to mention that it's possible the same NOTICE file can be used for the binary archive, see:

http://www.apache.org/dev/licensing-howto.html#mod-notice;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Direct mojo invocation attempts to download unrelated plugins from pluginManagement,MNG-5564,12796969,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Not A Problem,rfscholte,kwin,kwin,28/Jun/13 07:25,13/Feb/15 12:07,03/Jan/22 13:13,13/Feb/15 12:07,2.2.1,3.1.1,3.2.5,,,,,,,,,,,5,,,,"Attached is an example pom. Whenever you run mvn source:jar on it, it tries to download org.eclipse.m2e:lifecycle-mapping:1.0.0 although it is only listed in the pluginManagement. If using a regular goal, that dependency is never downloaded.

That dependency does not exist, as it is only a way to configure m2e, so there is nowhere such an artifact (mentioned by Igor Fedorenko in http://permalink.gmane.org/gmane.comp.ide.eclipse.plugins.m2eclipse.user/6218).

Why is the maven source plugin trying to download that artifact?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jun/13 07:25;kwin;pom.xml;https://issues.apache.org/jira/secure/attachment/12713324/pom.xml",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29c8n:",9223372036854775807,,,,,,,,,,,,,,,,,,,"22/Oct/13 07:51;kwin;Compare with https://bugs.eclipse.org/bugs/show_bug.cgi?id=367870. This rather seems to be a bug in Maven core as it happens whenever a Mojo goal is directly invoked. Please decide whether this is the desired behaviour. If that is the case, I would request a dummy artifact for org.eclipse.m2e:lifecycle-mapping:jar:1.0.0 being uploaded to Maven Central as this is currently the recommended way to influence the m2e lifecycle mapping (http://wiki.eclipse.org/M2E_plugin_execution_not_covered#ignore_plugin_goal).;;;","16/Jan/14 10:23;igorf;The issue is not specific to any particular maven plugin. For example, running ""mvn help:help"" on the example project results in the same warning.;;;","13/Feb/15 10:54;rfscholte;What might be interesting: this only happens when using the shortened plugin name. If you use the fully qualified name (i.e {{org.apache.maven.plugins:maven-source-plugin:jar}} ) you don't get the warning. It's like when Maven tries to find the matching plugin based on just ""source"", it'll do a bit too much when looping over the available plugins in the pom.xml. Still happened with 3.2.5.;;;","13/Feb/15 12:07;rfscholte;So here's what's happening: since you only specified prefix (in this case: source) for the plugin, Maven has to search for the fully qualified name. First it'll go through all the build-plugins, followed by the pluginManagement-plugins. For every plugin Maven needs to download the jar to discover its [prefix|http://maven.apache.org/plugin-tools/maven-plugin-plugin/examples/generate-descriptor.htm], which is configured when building/generating the plugin.
So you can't prevent Maven to download unless you use the fully qualified name. If you would have defined the maven-source-plugin before the lifecycle-mapping, you wouldn't have seen this message.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing NOTICE and LICENSE files at top level of SCM trees,MNG-5487,12796210,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,,sebb,,24/Jun/13 13:31,07/Apr/15 18:54,03/Jan/22 13:13,15/Jun/14 14:23,,,,,,,,,,,,,,0,,,,"There should be a NOTICE and LICENSE file in an obvious place in every published source release. Since the SVN / GIT repos are published, AIUI they should have N & L files.

I would expect to find N & L files alongside the pom.xml files.

The only such files I could find were under apache-maven:

https://git-wip-us.apache.org/repos/asf?p=maven.git;a=tree;f=apache-maven;h=b1f7f0b63f3617a55381ccaa2ee25b7050e218fc;hb=master

The NOTICE file there is also incorrect; the leading 5 lines should be removed; the NOTICE file MUST start with something like:

===
Apache Maven
Copyright 2001-2013 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).
====

Note also that the correct phrase is ""developed at"" - *not* ""developed by"" - the distinction is important.

See:

http://www.apache.org/legal/src-headers.html#notice-text",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28u1r:",9223372036854775807,,,,,,,,,,,,,,,,,,,"30/Jun/13 23:54;olamy;Perso I understand those files must be in produced sources/binaries so that's the case.;;;","01/Jul/13 03:44;sebb;The SCM urls are published beyond the developer community (and are in poms etc) so must contain the N&L files in an obvious location.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Non-resolvable import POM when building offline,MNG-5483,12797231,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Incomplete,,aheritier,aheritier,29/May/13 02:34,24/Feb/16 19:38,03/Jan/22 13:13,24/Feb/16 19:38,3.1.0-alpha-1,,,,,,,,Dependencies,,,,,1,,,,"In our projects we are massively using import of dependencies management to avoid to redefine the versions of all our components.
Example : https://github.com/exoplatform/platform-public-distributions/
This project is using right now some dependencies coming from a JBoss staging repository. To build it I activate a profile declared in my settings.

With Maven 3.0.5 due to MNG-5185 I need to declare the profile for every build to don't let maven reject dependencies in staging which are already in my local repository (that's a shame but this is another issue already discussed in the dev list).
But with Maven 3.0.5 if I put Maven in offline mode, there is no problem to build the project (it will use my local copy of artifacts in staging)

With Maven 3.1.0-alpha-1 I have the same behavior due to MNG-5185 BUT I cannot use anymore the offline mode too. Local artifacts coming from staging aren't used by Maven :( :

{code}
arnaud@imac-arnaud:~/Code/eXo/platform-public-distributions (git:master $%)$ mvn clean install -o
[INFO] Scanning for projects...
[ERROR] The build could not read 1 project -> [Help 1]
[ERROR]   
[ERROR]   The project org.exoplatform.platform.distributions:plf-public-distributions:4.0.x-SNAPSHOT (/Users/arnaud/Code/eXo/platform-public-distributions/pom.xml) has 143 errors
[ERROR]     Non-resolvable import POM: Cannot access exo-mirror (https://repository.exoplatform.org/public) in offline mode and the artifact org.exoplatform.jcr:jcr-parent:pom:1.15.4-GA has not been downloaded from it before. @ org.exoplatform.commons:commons:4.0.x-SNAPSHOT, /Users/arnaud/.m2/repository/org/exoplatform/commons/commons/4.0.x-SNAPSHOT/commons-4.0.x-SNAPSHOT.pom, line 263, column 19 -> [Help 2]
[ERROR]     Non-resolvable import POM: Cannot access exo-mirror (https://repository.exoplatform.org/public) in offline mode and the artifact org.exoplatform.ws:ws-parent:pom:2.3.4-GA has not been downloaded from it before. @ org.exoplatform.commons:commons:4.0.x-SNAPSHOT, /Users/arnaud/.m2/repository/org/exoplatform/commons/commons/4.0.x-SNAPSHOT/commons-4.0.x-SNAPSHOT.pom, line 271, column 19 -> [Help 2]
[ERROR]     Non-resolvable import POM: Cannot access exo-mirror (https://repository.exoplatform.org/public) in offline mode and the artifact org.exoplatform.core:core-parent:pom:2.5.4-GA has not been downloaded from it before. @ org.exoplatform.commons:commons:4.0.x-SNAPSHOT, /Users/arnaud/.m2/repository/org/exoplatform/commons/commons/4.0.x-SNAPSHOT/commons-4.0.x-SNAPSHOT.pom, line 279, column 19 -> [Help 2]
[ERROR]     Non-resolvable import POM: Cannot access exo-mirror (https://repository.exoplatform.org/public) in offline mode and the artifact org.exoplatform.kernel:kernel-parent:pom:2.4.4-GA has not been downloaded from it before. @ org.exoplatform.commons:commons:4.0.x-SNAPSHOT, /Users/arnaud/.m2/repository/org/exoplatform/commons/commons/4.0.x-SNAPSHOT/commons-4.0.x-SNAPSHOT.pom, line 287, column 19 -> [Help 2]
[ERROR]     Non-resolvable import POM: Cannot access exo-mirror (https://repository.exoplatform.org/public) in offline mode and the artifact org.exoplatform.jcr:jcr-parent:pom:1.15.4-GA has not been downloaded from it before. @ org.exoplatform.social:social:4.0.x-SNAPSHOT, /Users/arnaud/.m2/repository/org/exoplatform/social/social/4.0.x-SNAPSHOT/social-4.0.x-SNAPSHOT.pom, line 345, column 19 -> [Help 2]
[ERROR]     Non-resolvable import POM: Cannot access exo-mirror (https://repository.exoplatform.org/public) in offline mode and the artifact org.exoplatform.ws:ws-parent:pom:2.3.4-GA has not been downloaded from it before. @ org.exoplatform.social:social:4.0.x-SNAPSHOT, /Users/arnaud/.m2/repository/org/exoplatform/social/social/4.0.x-SNAPSHOT/social-4.0.x-SNAPSHOT.pom, line 353, column 19 -> [Help 2]
[ERROR]     Non-resolvable import POM: Cannot access exo-mirror (https://repository.exoplatform.org/public) in offline mode and the artifact org.exoplatform.core:core-parent:pom:2.5.4-GA has not been downloaded from it before. @ org.exoplatform.social:social:4.0.x-SNAPSHOT, /Users/arnaud/.m2/repository/org/exoplatform/social/social/4.0.x-SNAPSHOT/social-4.0.x-SNAPSHOT.pom, line 361, column 19 -> [Help 2]
[ERROR]     Non-resolvable import POM: Cannot access exo-mirror (https://repository.exoplatform.org/public) in offline mode and the artifact org.exoplatform.kernel:kernel-parent:pom:2.4.4-GA has not been downloaded from it before. @ org.exoplatform.social:social:4.0.x-SNAPSHOT, /Users/arnaud/.m2/repository/org/exoplatform/social/social/4.0.x-SNAPSHOT/social-4.0.x-SNAPSHOT.pom, line 369, column 19 -> [Help 2]
...
{code}




",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i296rz:",9223372036854775807,,,,,,,,,,,,,,,,,,,"23/Jan/14 12:08;jvanzyl;Please read https://cwiki.apache.org/confluence/display/MAVEN/Submitting+Issue+for+Maven%27s+Core;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[REGRESSION] repo and pluginRepo with different id's prevent resolution of common parent POM ,MNG-5475,12797234,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,,jdcasey,jdcasey,09/May/13 22:12,27/Jan/16 00:43,03/Jan/22 13:13,27/Jan/16 00:43,3.0.4,3.0.5,3.1.0-alpha-1,,,,,,Artifacts and Repositories,,,,,1,,,,"I have a settings.xml file with an activated profile that lists one repository and one pluginRepository, both pointing at the same repo (on disk) BUT using different repository id's.

In this repository, I have deployed a parent POM and a plugin. The plugin lists the parent POM as its parent.

I also have another jar project that uses the parent POM as its parent, and uses the plugin during its build.

NOW:

When building with Maven 3.0.3, the jar project build completes correctly. But, when I build with ANY VERSION AFTER 3.0.3 (3.0.4, 3.0.5, 3.1.0-alpha-1 from March 30th, io.tesla.maven.apache-maven 3.1.2...even though that's not part of Apache Maven at all) IT FAILS.

The specific failure is that it cannot find the common parent POM as it's trying to resolve the plugin. Looking closely at the build logs, you can see Maven resolve the parent POM using the non-plugin repository, and update _maven.repository (I've verified that this non-plugin repository's id is stored here). Then, Maven tries to resolve the plugin POM, sees that the parent POM is in the local repository and isn't set to be updated yet. So, it tries to verify that that parent POM is available via the plugin repositories it knows about...which is where _maven.repository seems to come in. It has the wrong value, and causes Maven to discard the locally cached parent POM.

So, Maven won't update this parent POM in the local repo, but refuses to use the one that's there because it came from the wrong place.

It seems like Aether is not smart enough to understand that the two repositories are the same, even though the repository-id is different. I suspect this could lead to VERY strange-seeming errors if two projects referenced the same parent POM and repository URL but with different repo-id's.

I'm attaching a test case. It contains the repository with the parent POM and the plugin, along with the source projects for each. It also contains the jar project (bar-child) which has a settings.xml file in it. Finally, in the bar-child/ directory you'll find build-*.log files corresponding to each attempt I made with different Maven versions. The root directory is: 

repo-id-squash/

NOTE: If you want to run the test case, you'll need to modify the paths in the bar-child/settings.xml since they're currently specific to my filesystem.","OS X (10.8.3), JDK 1.6",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/May/13 22:12;jdcasey;repo-id-squash.zip;https://issues.apache.org/jira/secure/attachment/12713117/repo-id-squash.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28ub3:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"27/Jan/16 00:43;schulte77;Issue is not reproducible using

{code}
Apache Maven 3.4.0-SNAPSHOT (5c98a4261f7e50ee0197902c5737ebfc0acac724; 2016-01-26T02:49:41+01:00)
{code}

Looking at MNG-5163, the plugin repositories have not been used in Maven < 3.0.4. There also is MNG-5149 correcting a repository id issue in 3.0.4.

I guess the issue has been solved in Aether. Maybe the Aether bugzilla contains a corresponding entry.

Please re-open, if the issue still exists.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"intermittent ""ProtocolException: The server failed to respond with a valid HTTP response""",MNG-5467,12796207,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,olamy,igorf,igorf,12/Apr/13 11:18,06/Apr/15 01:53,03/Jan/22 13:13,19/Jan/14 22:48,3.0.5,3.1.0,,,,3.2.1,,,,,,,,2,,,,"Building projects with maven 3.0.5 I regularly get ""ProtocolException: The server failed to respond with a valid HTTP response"" when resolving dependencies from repository.sonatype.org. From what I can tell this is caused by a bug in httpclient, which I reported as https://issues.apache.org/jira/browse/HTTPCLIENT-1340",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-5559,,,,,,,,,,,,,,,,WAGON-395,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28non:",9223372036854775807,,,,,,,,,,,,,,,,,,,"25/Apr/13 03:34;olamy;need a wagon upgrade.;;;","01/Aug/13 10:29;plynch;This applies to 3.1.0 as well.

This fails every other build for me, so I consider it critical to fix.

Can we start the wagon 2.5 release process at least so we can manually override the wagon in Maven?;;;","19/Jan/14 21:38;jvanzyl;@Olivier, Is this fixed with the latest wagon?;;;","19/Jan/14 22:48;olamy;yup see MNG-5559;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven repository broken after using a different maven version,MNG-5465,12796175,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Cannot Reproduce,,j.pfeifer.pe,j.pfeifer.pe,11/Apr/13 11:16,19/Jan/14 21:38,03/Jan/22 13:13,19/Jan/14 21:38,3.0.4,,,,,,,,,,,,,0,,,,"We use Jenkins to build our java products. Our builds broke the maven repositories today, when the maven version changed from one build to another. This was an unknown error of one change that was made to build server (and will never be made again).

In one build the maven version is 3.0.4 and in the next build the maven version 3.0-beta-2 was used. Since then our build maven repository seems to be broken, throwing the exception listed below.

How can we fix this?

We tried clearing the repository by:
1) Re-running the project with maven 3.0.4
2) Removing repository: rm -rfv ~jenkins/.m2/repository
3) Clearing the jenkins workspace: rm -rfv ./*
4) Clearing repository through mojo in pom.xml
...
<executions>
  <execution>
    <id>remove-old-artifacts</id>
    <phase>package</phase>
    <goals>
      <goal>remove-project-artifact</goal>
    </goals>
    <configuration>
      <removeAll>true</removeAll>
    </configuration>
  </execution>
</executions>
...

Unfortunatly this did not help and we are still getting this exception:

[ERROR] Internal error: com.google.inject.ProvisionException: Guice provision errors:

1) Error injecting: org.eclipse.tycho.core.maven.TychoMavenLifecycleParticipant
  at ClassRealm[extension>org.eclipse.tycho:tycho-maven-plugin:0.17.0, parent: ClassRealm[maven.api, parent: null]]
  at ClassRealm[extension>org.eclipse.tycho:tycho-maven-plugin:0.17.0, parent: ClassRealm[maven.api, parent: null]]
  while locating org.apache.maven.AbstractMavenLifecycleParticipant annotated with @com.google.inject.name.Named(value=TychoMavenLifecycleListener)

1 error: Guice provision errors:

1) Error injecting: org.eclipse.tycho.core.resolver.DefaultTychoDependencyResolver
  at ClassRealm[extension>org.eclipse.tycho:tycho-maven-plugin:0.17.0, parent: ClassRealm[maven.api, parent: null]]
  at ClassRealm[extension>org.eclipse.tycho:tycho-maven-plugin:0.17.0, parent: ClassRealm[maven.api, parent: null]]
  while locating org.eclipse.tycho.resolver.TychoDependencyResolver
  while locating org.eclipse.tycho.core.maven.TychoMavenLifecycleParticipant

1 error: Guice provision errors:

1) No implementation for org.codehaus.plexus.logging.Logger was bound.
  while locating org.eclipse.tycho.core.resolver.DefaultTychoDependencyResolver

1 error
-> [Help 1]
org.apache.maven.InternalErrorException: Internal error: com.google.inject.ProvisionException: Guice provision errors:

1) Error injecting: org.eclipse.tycho.core.maven.TychoMavenLifecycleParticipant
  at ClassRealm[extension>org.eclipse.tycho:tycho-maven-plugin:0.17.0, parent: ClassRealm[maven.api, parent: null]]
  at ClassRealm[extension>org.eclipse.tycho:tycho-maven-plugin:0.17.0, parent: ClassRealm[maven.api, parent: null]]
  while locating org.apache.maven.AbstractMavenLifecycleParticipant annotated with @com.google.inject.name.Named(value=TychoMavenLifecycleListener)

1 error
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:164)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:445)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:168)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:60)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)
	at java.lang.reflect.Method.invoke(Method.java:611)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
Caused by: com.google.inject.ProvisionException: Guice provision errors:

1) Error injecting: org.eclipse.tycho.core.maven.TychoMavenLifecycleParticipant
  at ClassRealm[extension>org.eclipse.tycho:tycho-maven-plugin:0.17.0, parent: ClassRealm[maven.api, parent: null]]
  at ClassRealm[extension>org.eclipse.tycho:tycho-maven-plugin:0.17.0, parent: ClassRealm[maven.api, parent: null]]
  while locating org.apache.maven.AbstractMavenLifecycleParticipant annotated with @com.google.inject.name.Named(value=TychoMavenLifecycleListener)

1 error
	at com.google.inject.internal.InjectorImpl$4.get(InjectorImpl.java:952)
	at org.sonatype.guice.bean.locators.QualifiedBean.getValue(QualifiedBean.java:85)
	at org.sonatype.guice.plexus.locators.LazyPlexusBean.getValue(LazyPlexusBean.java:55)
	at org.sonatype.guice.bean.locators.EntryListAdapter$ValueIterator.next(EntryListAdapter.java:129)
	at java.util.AbstractCollection.addAll(AbstractCollection.java:92)
	at org.apache.maven.DefaultMaven.getLifecycleParticipants(DefaultMaven.java:539)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:265)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:152)
	... 11 more
Caused by: com.google.inject.ProvisionException: Guice provision errors:

1) Error injecting: org.eclipse.tycho.core.resolver.DefaultTychoDependencyResolver
  at ClassRealm[extension>org.eclipse.tycho:tycho-maven-plugin:0.17.0, parent: ClassRealm[maven.api, parent: null]]
  at ClassRealm[extension>org.eclipse.tycho:tycho-maven-plugin:0.17.0, parent: ClassRealm[maven.api, parent: null]]
  while locating org.eclipse.tycho.resolver.TychoDependencyResolver
  while locating org.eclipse.tycho.core.maven.TychoMavenLifecycleParticipant

1 error
	at com.google.inject.internal.InjectorImpl$4.get(InjectorImpl.java:952)
	at com.google.inject.internal.InjectorImpl.getInstance(InjectorImpl.java:978)
	at org.sonatype.guice.bean.reflect.AbstractDeferredClass.get(AbstractDeferredClass.java:48)
	at com.google.inject.internal.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:40)
	at com.google.inject.internal.ProviderToInternalFactoryAdapter$1.call(ProviderToInternalFactoryAdapter.java:46)
	at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:996)
	at com.google.inject.internal.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
	at com.google.inject.Scopes$1$1.get(Scopes.java:63)
	at com.google.inject.internal.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:40)
	at com.google.inject.internal.InjectorImpl$4$1.call(InjectorImpl.java:943)
	at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:989)
	at com.google.inject.internal.InjectorImpl$4.get(InjectorImpl.java:939)
	... 18 more
Caused by: com.google.inject.ProvisionException: Guice provision errors:

1) No implementation for org.codehaus.plexus.logging.Logger was bound.
  while locating org.eclipse.tycho.core.resolver.DefaultTychoDependencyResolver

1 error
	at com.google.inject.internal.InjectorImpl$4.get(InjectorImpl.java:952)
	at com.google.inject.internal.InjectorImpl.getInstance(InjectorImpl.java:978)
	at org.sonatype.guice.bean.reflect.AbstractDeferredClass.get(AbstractDeferredClass.java:48)
	at com.google.inject.internal.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:40)
	at com.google.inject.internal.ProviderToInternalFactoryAdapter$1.call(ProviderToInternalFactoryAdapter.java:46)
	at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:996)
	at com.google.inject.internal.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
	at com.google.inject.Scopes$1$1.get(Scopes.java:63)
	at com.google.inject.internal.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:40)
	at com.google.inject.internal.InjectorImpl$4$1.call(InjectorImpl.java:943)
	at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:996)
	at com.google.inject.internal.InjectorImpl$4.get(InjectorImpl.java:939)
	at org.sonatype.guice.bean.locators.QualifiedBean.getValue(QualifiedBean.java:85)
	at org.sonatype.guice.plexus.locators.LazyPlexusBean.getValue(LazyPlexusBean.java:55)
	at org.sonatype.guice.plexus.binders.PlexusRequirements$RequirementProvider.get(PlexusRequirements.java:222)
	at org.sonatype.guice.plexus.binders.ProvidedPropertyBinding.injectProperty(ProvidedPropertyBinding.java:50)
	at org.sonatype.guice.bean.inject.BeanInjector.injectMembers(BeanInjector.java:53)
	at com.google.inject.internal.MembersInjectorImpl.injectMembers(MembersInjectorImpl.java:120)
	at com.google.inject.internal.ConstructorInjector.construct(ConstructorInjector.java:94)
	at com.google.inject.internal.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:253)
	at com.google.inject.internal.InjectorImpl$4$1.call(InjectorImpl.java:943)
	at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:996)
	at com.google.inject.internal.InjectorImpl$4.get(InjectorImpl.java:939)
	... 29 more","Cloudbees Jenkins
Tycho 0.17.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i297kv:",9223372036854775807,,,,,,,,,,,,,,,,,,,"11/Apr/13 13:41;afloom;The users mailing list is probably more appropriate for this question unless you're saying this is a bug that should be fixed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven skips modules and reports success if parallel build encounters java.lang.Error,MNG-5456,12796201,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,krosenvold,wfrag,wfrag,28/Mar/13 20:45,30/Mar/13 01:09,03/Jan/22 13:13,30/Mar/13 01:09,,,,,,3.1.0-alpha-1,,,Bootstrap & Build,,,,,0,,,,"If Mojo throws instance of java.lang.Error during the parallel build (for example, OutOfMemoryError), Maven marks module as ""SKIPPED"", skips the rest of the modules and reports ""BUILD SUCCESSFUL"". This is very confusing and dangerous behavior.

The root cause is that exception coming from executor service is swallowed at line 133 in the org.apache.maven.lifecycle.internal.LifecycleThreadedBuilder.

Note that this only happens if parallel build is enabled.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29adz:",9223372036854775807,,,,,,,,,,,,,,,,,,,"30/Mar/13 01:09;krosenvold;Fixed in 973673721b138e8dde68997fe198dff1417c2299, thanks for the excellent bug report!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"GeoServerSecurityProvider lookup logs SEVERE: Extension lookup occured, but ApplicationContext is unset.",MNG-5442,12796171,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Not A Problem,,ccancellieri,ccancellieri,28/Feb/13 05:53,17/Jun/14 14:38,03/Jan/22 13:13,28/Feb/13 05:55,,,,,,,,,,,,,,0,,,,"Seems that geoserver extension lookup process logs the following message:
SEVERE: Extension lookup occured, but ApplicationContext is unset.

trying to load
org.geoserver.security.GeoServerSecurityProvider

GeoServer starts normally.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28s1j:",9223372036854775807,,,,,,,,,,,,,,,,,,,"28/Feb/13 05:55;ccancellieri;wrong place;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"GeoServerSecurityProvider lookup logs SEVERE: Extension lookup occured, but ApplicationContext is unset.",MNG-5441,12796975,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Not A Problem,,ccancellieri,ccancellieri,28/Feb/13 05:52,17/Jun/14 14:38,03/Jan/22 13:13,28/Feb/13 05:55,,,,,,,,,,,,,,0,,,,"Seems that geoserver extension lookup process logs the following message:
SEVERE: Extension lookup occured, but ApplicationContext is unset.

trying to load
org.geoserver.security.GeoServerSecurityProvider

GeoServer starts normally.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29287:",9223372036854775807,,,,,,,,,,,,,,,,,,,"28/Feb/13 05:54;ccancellieri;sorry wrong issue
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Project which has shared dependency with a plugin fails to recognize artifact was downloaded and fails.,MNG-5435,12796186,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Auto Closed,,krasmussen,krasmussen,19/Feb/13 16:13,16/Mar/18 22:37,03/Jan/22 13:13,16/Mar/18 22:37,3.0.4,,,,,,,,Artifacts and Repositories,Dependencies,,,,1,,,,"
This is a twofer bug report :)

Issue #1:

I have included a stripped down version of an example using the maven antrun plugin to spawn the Antlr tool. For technical reasons we cannot use the native maven Antlr plugin.

If you look at the attached project you will see that Antlr is a dependency of both the antrun plugin:

{code}
...
<build>
  <plugins>		
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-antrun-plugin</artifactId>
        <dependencies>				
          <dependency>
          <groupId>org.antlr</groupId>
          <artifactId>antlr</artifactId>
          <version>${antlr.version}</version>
        </dependency>					
...
{code}

And the project itself:

{code}

...

<dependencies>
  <dependency>
    <groupId>org.antlr</groupId>
    <artifactId>antlr</artifactId>
   </dependency>
</dependencies>

...

{code}

Starting with a blank M2 local repo, and then running

$ mvn -e -X -U clean install -s settings.xml  > /tmp/maven.log

Results in failure:

Caused by: org.sonatype.aether.transfer.ArtifactNotFoundException: Could not find artifact org.antlr:antlr:jar:3.4

However this artifact was indeed downloaded (first as a project dependency). I stepped through some of the Maven code and it appears to fail during the second run through org.sonatype.aether.impl.internal.DefaultArtifactResolver#resolve as a plugin dependency.

I strongly suspect it has to do with how org.sonatype.aether.impl.internal.EnhancedLocalRepositoryManager#find is implemented. It sees the file but it is not being tracked correctly I believe so it ignores it.

If you run the build a second time it will then succeed because the Antlr artifacts will be available as they are in the local repo from the previous run.

$ mvn -e -X -U clean install -s settings.xml  > /tmp/maven2.log

I observed the exact same problem when using the Maven enforcer plugin along with TestNG as they both depend on beanshell and with the Maven GWT plugin and GWT project dependencies.

This was discovered as an issue once we started clearing out our local repo. Once the artifacts are populated locally the issue goes away. It takes a couple of runs to get past the bogus ""missing artifact"" errors but after that it is ok. It's difficult to predict when it will fail w/o being intimately familiar with all plugin/project dependencies per project.

I noticed that having Antlr 3.0.4 only as plugin dependency works fine. It also works fine if it's only a project dependency. It's the combination of having it both as a plugin AND a project dependency causes this problem.

#2

My first thought to get around issue #1 was to use dependency:resolve as a pre-build step after cleaning the local repo but that doesn't full solve the problem.

Using the Mavan dependency:resolve and dependency:resolve-plugins goals partially sidesteps issue #1 but it still gets confused about inter-module dependencies.

For example I have a simple multi-module project that includes: foo-module, bar-module, and baz-module (see simple.zip). 

Running:

$ mvn dependency:resolve dependency:resolve-plugins -s settings.xml


Results in a build failure on the baz-module:

[INFO] acme-pom .......................................... SUCCESS [6.835s]
[INFO] foo-module ........................................ SUCCESS [1.327s]
[INFO] bar-module ........................................ SUCCESS [0.090s]
[INFO] baz-module ........................................ FAILURE [0.012s]

This seems to avoid issue #1 as it doesn't complain about missing Antlr artifacts anymore but it gets stuck on the baz-module with the error:

[ERROR] Failed to execute goal on project baz-module: Could not resolve dependencies for project com.acme:baz-module:jar:4.0.0-SNAPSHOT: The following artifacts could not be resolved: com.acme:foo-module:jar:4.0.0-SNAPSHOT, com.acme:bar-module:jar:4.0.0-SNAPSHOT: Could not find artifact com.acme:foo-module:jar:4.0.0-SNAPSHOT -> [Help 1]

In our real projects there are many more modules which don't get resolved after this first failure so the local repo becomes only partially populated. 

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/May/13 09:03;mzav;a.3;https://issues.apache.org/jira/secure/attachment/12713385/a.3","19/Feb/13 16:13;krasmussen;maven.log;https://issues.apache.org/jira/secure/attachment/12712757/maven.log","19/Feb/13 16:13;krasmussen;maven2.log;https://issues.apache.org/jira/secure/attachment/12713274/maven2.log","19/Feb/13 16:13;krasmussen;pom.xml;https://issues.apache.org/jira/secure/attachment/12713182/pom.xml","19/Feb/13 16:13;krasmussen;settings.xml;https://issues.apache.org/jira/secure/attachment/12713321/settings.xml","19/Feb/13 16:13;krasmussen;simple.zip;https://issues.apache.org/jira/secure/attachment/12713302/simple.zip",,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29afj:",9223372036854775807,,,,,,,,,,,,,,,,,,,"19/Feb/13 18:23;krasmussen;Ugh it gets even worse. My next idea was to have a simple stand alone project which contained the problematic artifacts that we needed to be installed before running the real build.

Running the following project with a blank repo:

{code}
$ mvn -e dependency:resolve
{code}

results in

{code}
Caused by: org.sonatype.aether.transfer.ArtifactNotFoundException: Could not find artifact commons-cli:commons-cli:jar:1.0
        at org.sonatype.aether.impl.internal.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:528)
{code}

It doesn't get much simpler than this:

{code}
<project xmlns=""http://maven.apache.org/POM/4.0.0""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0
                      http://maven.apache.org/xsd/maven-4.0.0.xsd"">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.textura.cpms</groupId>
    <artifactId>continuous-integration</artifactId>
	<version>2.7.0-SNAPSHOT</version>
	
	<packaging>pom</packaging>
    <name>Continuous Integration Build Support</name>
	
	<dependencies>
		<dependency>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-enforcer-plugin</artifactId>
			<version>1.1.1</version>
		</dependency>	
	</dependencies>

</project>
{code}
;;;","19/Feb/13 18:24;krasmussen;And of course running it a second time it works fine.;;;","13/May/13 09:02;mzav;I have the same problem exactly with the same symptoms.
It is definetely not MNG-5315 - at least using single processor does not resolve the problem.
I'll attach log file where you can see that artifact commons-io is succesfully downloaded and just next can not be resolved.;;;","13/May/13 09:03;mzav;Log file with -X -e options.;;;","13/May/13 09:05;mzav;The issue is not reproduced in 3.0.3, but is done in 3.0.5 too.;;;","04/Mar/14 15:29;chriswesdorp;On my environment I encounter the same issue in combination with the maven-checkstyle-plugin. The work around seems to be to remove all the state files (lastUpdated) from the m2 repo folder that holds my JAR file. The workaround for now is to use the maven dependency plugin to extract the checkstyle.xml from the other JAR. 

I use Maven 3.0.3 but it also happens with 3.1.1.

Are the any clues to where the case of this issue can be found?
;;;","05/Mar/14 15:48;jvanzyl;If you want to test your resolver tracking file theory you can try the build with the -llr (--legacy-local-repository) and it will not look at the _remote.repositories tracking file. Try it and report back but sounds plausible this is the issue.;;;","06/Mar/14 04:32;mzav;I've tested -llr with Maven 3.1.1 on my project. This magic works. But it definately looks like a workaround. Do you know the root cause of the problem? The option description is not understandable for me :-)

I've tested also Maven 3.2.1 - the same result: works with -llr, fails without it.;;;","06/Mar/14 08:53;jvanzyl;I don't know what's happening yet but I can explain how the repository tracking works. The _remote.repositories file tracks the origin repository of the artifact so if you have retrieved artifact A from one run of Maven from repository X, and you run the build again after changing your settings.xml to point to another repository Y which does not contain A Maven, while using the enhanced local repository manager, considers this a failure because artifact A is not reachable in Y. The purpose of this feature is to make sure that a build that works for you locally works for everyone on your team with the configured repositories.

Either the repository ids are not matching up between the the repositories being used or there might be a concurrency issue. Not sure without trying out your test case. Most likely the repository ids not matching up.;;;","06/Mar/14 09:40;mzav;This should not be concurrency problem - I tested it with single core enabled on my computer for the process and it does not affect the result.;;;","06/Mar/14 10:26;jvanzyl;Can you try adding pluginRepositories to you settings.xml for your mirror as outlined here:

http://books.sonatype.com/nexus-book/reference/maven-sect-single-group.html

I think you're getting different repository ids being used.;;;","07/Mar/14 03:36;mzav;Well.
I've found a minor inconsistacy in my configuration files.
There are the following essential parameters for this issue:
1. Definition of mirroring - <mirrorOf>*</mirrorOf>
2. settings.xml - it contain a profile that defines repository and plugin repository.
3. Parent POM in the project that defines both repository and plugin repository explicitly.
Note - the same URL is used everywhere!

I've tested the following combinations of the options:
1. No mirror, plugin repository is NOT defined in settings.xml,  plugin repository is defined in parent POM - FAIL
2. Mirror is defined, plugin repository is NOT defined in settings.xml,  plugin repository is defined in parent POM - OK
3. No mirror, plugin repository is defined in settings.xml,  plugin repository is NOT defined in parent POM - OK !
4. No mirror, plugin repository is defined both in settings.xml and in parent POM - OK;;;","07/Mar/14 07:37;jvanzyl;I didn't quite look carefully enough at the snippet in the book. What matters is that all the repostiory ids match up. We should consider the URL only but we don't. This is the settings.xml template that I use:

https://gist.github.com/jvanzyl/9411574

Notice that everything uses id = ""central"";;;","07/Mar/14 08:21;mzav;Greate!
There was more essential inconsistency in my options, namely - parent pom defined both repositories as ""central"", but settings.xml defined the same repository by another name! After providing the same name it works, so it looks like settings.xml property has higher priority than project ones and different repository names were used for downloading plugin and ""usual"" artifacts.
IMHO such minor difference as different naming of the same repository should not have so big consequences :-);;;","07/Mar/14 08:27;mzav;I suspect also that in the case my pom does not define the repository explicitly and ""default"" ""central"" one is used and settings.xml redefines one of repositories only - the same/similar problem can occur.;;;","07/Mar/14 13:23;chriswesdorp;What exactly is the relation with -llr and repositories with id ""central""? My pom xmls don't override ""central"" and not repo proxy is used.;;;","07/Mar/14 14:47;jvanzyl;The ids for all repositories just have to be the same, the id does not have to be ""central"", that's just what I happen to have. The -llr option forces Maven to use the SimpleLocalRepositoryManager as opposed to the default EnhancedLocalRepositoryManager which employs the _remote.repositories tracking file. In this case I would say that using the enhanced implementation helped find a configuration error though it would be more helpful to show users where the misconfiguration is.;;;","11/Mar/14 02:42;mzav;But question, for my case - why the second build was successful? I would expect more stable result...;;;","16/Mar/18 22:37;michael-o;This issue has been auto closed because it has been inactive for a long period of time. If you think this issue still applies, retest your problem with the most recent version of Maven and the affected component, reopen and post your results.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Range [1.3, 1.4) cannot get resolved, but [1.3],[1.4] is working.",MNG-5432,12796173,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Cannot Reproduce,,mkarg,mkarg,08/Feb/13 02:04,19/Jan/14 21:22,03/Jan/22 13:13,19/Jan/14 21:22,3.0.4,,,,,,,,Dependencies,,,,,0,,,,"My project contains the following dependency:

<dependency>
  <groupId>xmlunit</groupId>
  <artifactId>xmlunit</artifactId>
  <version>[1.3, 1.4)</version>
  <scope>test</scope>
</dependency>

This worked well until today, as on Maven Central the latest artifact was 1.3.
Today in Maven Central a version 1.4 was published, and now my project does not build anymore!

""mvn compile"" says that it cannot find an xmlunit artifact in the range [1.3, 1.4). This is strange, as 1.3 is still found in my local repo, in my Nexus instance, and on Maven Central!

I was able to workaround it by using

<dependency>
  <groupId>xmlunit</groupId>
  <artifactId>xmlunit</artifactId>
  <version>[1.3]</version>
  <scope>test</scope>
</dependency>

instead, which is some kind of weird.

Seems like a bug in the range resolver?","Win 7 Pro 64 Bit, JDK 1.7.0_13, Nexus 1.9.2.4, MVN 3.0.4",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i295n3:",9223372036854775807,,,,,,,,,,,,,,,,,,,"23/Apr/13 02:42;rbalazsi;I tested this scenario on 3.0.5 and it works correctly, so I guess it has been fixed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
use wagon 2.4,MNG-5430,12796188,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,olamy,olamy,olamy,04/Feb/13 03:42,13/Dec/14 14:52,03/Jan/22 13:13,10/Feb/13 18:33,3.0.4,,,,,3.0.5,3.1.0-alpha-1,,Dependencies,,,,,0,,,,"Release Notes - Maven Wagon - Version 2.3

** Bug
    * [WAGON-367] - Very large number of temporary files ""http-wagon.*.tmp"" if wagon is used in a long time running JVM (like a CI server)
    * [WAGON-369] - wagon http doesn't follow HTTP 302 redirects for PUT
    * [WAGON-370] - Adding additional wagon provider as dependency does not work
    * [WAGON-371] - for security reason preemptive must be off by default for GET
    * [WAGON-379] - webdav site deployement fail with mvn 2.2.1

** Improvement
    * [WAGON-368] - Support NTLM authentication in webdav
    * [WAGON-380] - webdav wagon 1.6 requires


Release Notes - Maven Wagon - Version 2.4

** Bug
    * [WAGON-372] - SSL client-side certificates stopped working in maven 3.0.4
    * [WAGON-383] - Regression for SSLv3
    * [WAGON-385] - some securities check are disabled per default (change the off per default)
    * [WAGON-386] - build failure with jdk 1.7
    * [WAGON-387] - Remove default easy ssl mode

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-5559,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29at3:",9223372036854775807,,,,,,,,,,,,,,,,,,,"10/Feb/13 18:33;olamy;fixed.;;;","19/Feb/13 12:44;mcculls;In case anyone wonders what exactly was fixed in Wagon 2.4: http://jira.codehaus.org/secure/ReleaseNote.jspa?projectId=10335&version=18697;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Session overlayed by LegacyLocalRepositoryManager.overlay(...) returns different local repositories,MNG-5385,12796507,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Incomplete,,bernd,bernd,22/Nov/12 11:10,05/Apr/15 14:53,03/Jan/22 13:13,22/Jan/14 20:31,3.0.4,,,,,,,,,,,,,0,,,,"To use a custom local repository during the resolution of an artifact, you have to overlay the default repo session with the custom information. For that LegacyLocalRepositoryManager.overlay(...) is intended. But after overlaying the current session with a custom local repository the returend overlayed session knows two local repositories:

{noformat}
RepositorySystemSession overlayed = egacyLocalRepositoryManager.overlay(myLocalRepo, session, system);

overlayed.getLocalRepositoryManager().getRepository() // returns 'myLocalRepo'
overlayed.getLocalRepository() // should return 'myLocalRepo' but returns the default local repositoy
{noformat}

This is a problem, because both methods are used to get the local repo during artifact resolution, e.g.

{noformat}
class org.apache.maven.repository.internal.DefaultVersionResolver.Key
{
public Key( RepositorySystemSession session, VersionRequest request )
        {
            ...
            localRepo = session.getLocalRepository().getBasedir();
{noformat},

{noformat}
class org.sonatype.aether.impl.internal.DefaultMetadataResolver
{
    private List<MetadataResult> resolve( RepositorySystemSession session,
                                          Collection<? extends MetadataRequest> requests )
    {
       ...
       LocalRepository localRepo = session.getLocalRepositoryManager().getRepository();
{noformat}

(Critical because of our tooling to materialize artifacts to a specified folder is broken since we migrated from Maven 2 to 3...)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Nov/12 11:10;bernd;LegacyLocalRepositoryManager.java.patch;https://issues.apache.org/jira/secure/attachment/12713318/LegacyLocalRepositoryManager.java.patch","22/Nov/12 11:10;bernd;LegacyLocalRepositoryManagerTest.java;https://issues.apache.org/jira/secure/attachment/12713180/LegacyLocalRepositoryManagerTest.java",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,Patch,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i292yf:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"22/Jan/14 20:22;jvanzyl;Please refer to https://cwiki.apache.org/confluence/display/MAVEN/The+Great+JIRA+Cleanup+of+2014;;;","22/Jan/14 20:31;jvanzyl;Please refer to https://cwiki.apache.org/confluence/display/MAVEN/The+Great+JIRA+Cleanup+of+2014 if you're wondering why this issue was closed out.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Site plugin version 3.2 seems to modify a project's classpath.,MNG-5379,12796371,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Duplicate,,schulte77,schulte77,16/Nov/12 13:08,09/May/20 11:41,03/Jan/22 13:13,17/Nov/12 10:00,3.2.1,,,,,,,,General,,,,,0,,,,,"Apache Maven 3.0.4 (r1232337; 2012-01-17 09:44:56+0100)
Java version: 1.7.0_03, vendor: Oracle Corporation
",,,,,,,,,,,,,,,,MSITE-665,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28twf:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"16/Nov/12 13:10;schulte77;Accidentally reported against Maven itself. Issue belongs to Maven Site plugin.
;;;","09/May/20 11:41;hudson;Build unstable in Jenkins: Maven TLP » maven » MNG-5937 #14

See https://builds.apache.org/job/maven-box/job/maven/job/MNG-5937/14/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"sisu-guava is deprecated, use upstream library",MNG-5329,12796119,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,bentmann,mkleint,mkleint,15/Aug/12 06:18,02/Jun/13 08:18,03/Jan/22 13:13,02/Jun/13 08:18,3.0.4,,,,,3.1.0,,,Dependencies,General,,,,1,,,,"see https://github.com/sonatype/sisu-guava/tree/
the sisu guava lib has been deprecated, from what I could figure from the commit logs on original site and sisu-guava, the recently released 13.0 release should be ok to use.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28w5z:",9223372036854775807,,,,,,,,,,,,,,,,,,,"15/Aug/12 06:20;mkleint;sisu-guava is also used in aether.;;;","02/Jun/13 08:18;rfscholte;Fixed in https://git-wip-us.apache.org/repos/asf?p=maven.git;a=commit;h=82b345e0094813b34fcac85e64dde2d5e02b4cc9;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
unable to import the file specified from the specified directory,MNG-5292,12797441,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Not A Problem,rfscholte,kann.niranjan,kann.niranjan,05/Jun/12 06:24,02/Jun/13 06:37,03/Jan/22 13:13,02/Jun/13 06:37,3.0.4,,,,,,,,Deployment,,,,,0,,,,"while iam calling ANT build.xml file from my project which will inturn calls the ""ant-sca-package.xml"" file. The ""ant-sca-package.xml"" file internally imports ""ant-sca-compile.xml"", but iam getting error like this:

C:\Oracle\Middleware\jdeveloper\bin\ant-sca-package.xml:18: Cannot find C:\Test_Maven\build\ant-sca-compile.xml imported from C:\Oracle\Middleware\jdeveloper\bin\ant-sca-package.xml

my build.xml file is located here : C:\Test_Maven\build\build.xml",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28z5z:",9223372036854775807,,,,,,,,,,,,,,,,,,,"02/Jun/13 06:37;rfscholte;If you're calling {{ANT build.xml}}, you're not using Maven. So closing this one since it is not a Maven-issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error : Cannot override read-only parameter: classesDirectory in goal: war:manifest,MNG-5234,12797184,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Incomplete,,cutepiscean5,cutepiscean5,23/Jan/12 08:44,22/Jan/14 20:31,03/Jan/22 13:13,22/Jan/14 20:31,2.2.1,,,,,,,,Plugins and Lifecycle,,,,,0,,,,"Hi,

While executing maven with any of the code coverage reporting plugins (cobertura, jacoco, clover), I get the following error:

[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Error configuring: org.apache.maven.plugins:maven-war-plugin. Reason: ERROR: Cannot override read-only parameter: classesDirectory in goal: war:manifest

Though the classes directory is not read-only on the system, I am unable to figure out the issue.

The following maven goals were executed: 'clean install cobertura:cobertura -Pdev' or 'clean install jacoco:report -Pdev' oe 'clean install clover:clover -Pdev'. They build and pass the instrumentation steps, however, after the stages of war:manifest, war:war, the above error is thrown and the Build fails.

Could you please help fix the same so that Sonar can be configured to read the code coverage statistics and display them on the dashboard ?

The versions used are:
Maven: 2.2.1
Sonar: 2.12
Jenkins: 1.447
Sonar Plugin: 1.7.2
Jenkins Cobertura Plugin: 1.3

Please note: This issue was also reported as http://jira.codehaus.org/browse/MRM-636 and http://jira.codehaus.org/browse/SONAR-855

Thanks.",Redhat Linux,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/12 08:44;cutepiscean5;maven_error.jpg;https://issues.apache.org/jira/secure/attachment/12713352/maven_error.jpg",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i296zb:",9223372036854775807,,,,,,,,,,,,,,,,,,,"22/Jan/14 20:23;jvanzyl;Please refer to https://cwiki.apache.org/confluence/display/MAVEN/The+Great+JIRA+Cleanup+of+2014;;;","22/Jan/14 20:31;jvanzyl;Please refer to https://cwiki.apache.org/confluence/display/MAVEN/The+Great+JIRA+Cleanup+of+2014 if you're wondering why this issue was closed out.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UnsupportedClassVersionError when injecting org.sonatype.flexmojos.plugin.lifecyclemapping.SwfLifecycleMapping,MNG-5217,12797181,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Won't Fix,olamy,pisce,pisce,13/Dec/11 11:08,13/Dec/11 13:47,03/Jan/22 13:13,13/Dec/11 13:47,3.0.3,,,,,,,,Plugins and Lifecycle,,,,,0,,,,"Here is the sub-project POM which causes the error (trying to build a swf artifact):

<?xml version=""1.0"" encoding=""UTF-8""?>
<project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
	xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>mygroup</groupId>
		<artifactId>myartifact</artifactId>
		<version>0.1</version>
	</parent>

	<artifactId>myartifact</artifactId>
	<name>myartifact</name>
	<packaging>swf</packaging>

	<properties>
		<flex.sdk.version>3.5.a.12683</flex.sdk.version>
	</properties>
	<build>
		<finalName>${project.parent.artifactId}-${project.version}-${profile.id}</finalName>
		<sourceDirectory>${basedir}/src/main/flex</sourceDirectory>
		<plugins>
			<plugin>
				<groupId>org.sonatype.flexmojos</groupId>
				<artifactId>flexmojos-maven-plugin</artifactId>
				<version>4.1-beta</version>
				<extensions>true</extensions>
				<dependencies>
					<dependency>
						<!-- Due to some API incompatibilities Flex 3 projects must use a compatibility layer -->
						<groupId>org.sonatype.flexmojos</groupId>
						<artifactId>flexmojos-flex3-compatibility-layer</artifactId>
						<version>4.1-beta</version>
					</dependency>
					<dependency>
						<groupId>com.adobe.flex</groupId>
						<artifactId>compiler</artifactId>
						<version>${flex.sdk.version}</version>
						<type>pom</type>
					</dependency>
				</dependencies>
				<configuration>
					<!--
						set this to true to allow the plugin to find the special Flex Builder/Flash Builder string in the application
						descriptor which is normally in site the <content> tag. If you set this to false or omit it entirely, the plugin
						will expect there to be an ${output} token in that tag. Placing that token in the application descriptor will
						prevent the Export Release Build function in Flex Builder/Flash Builder for working
					-->
					<flexBuilderCompatibility>true</flexBuilderCompatibility>

					<sourceFile>myartifact.mxml</sourceFile>

					<incremental>true</incremental>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<dependency>
			<!-- Dependances SDK Flex -->
			<groupId>com.adobe.flex.framework</groupId>
			<artifactId>common-framework</artifactId>
			<version>${flex.sdk.version}</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>com.adobe.flex.framework</groupId>
			<artifactId>playerglobal</artifactId>
			<version>${flex.sdk.version}</version>
			<classifier>10</classifier>
			<type>swc</type>
		</dependency>
		<dependency>
			<groupId>org.swizframework</groupId>
			<artifactId>swiz</artifactId>
			<version>0.6.2</version>
			<type>swc</type>
		</dependency>
		<dependency>
			<groupId>fr.common.flex</groupId>
			<artifactId>greensock</artifactId>
			<version>0.1</version>
			<type>swc</type>
		</dependency>
	</dependencies>
</project>
","Maven 3.0.3, JDK 1.5, Flexmojos 4.1-beta",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Dec/11 11:08;pisce;maven.log;https://issues.apache.org/jira/secure/attachment/12713309/maven.log",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28vf3:",9223372036854775807,,,,,,,,,,,,,,,,,,,"13/Dec/11 13:46;olamy;are you sure 1.6 is not required with this mojo ?
BTW load this issue in bug tracker of the plugin maintainer.;;;","13/Dec/11 13:47;olamy;see comment;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
prevent ConcurrentModificationException in parallel mode -Tx when project have errors,MNG-5192,12796041,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,olamy,olamy,olamy,04/Nov/11 06:01,04/Nov/11 06:02,03/Jan/22 13:13,04/Nov/11 06:02,3.0.3,,,,,3.0.4,,,Errors,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i299d3:",9223372036854775807,,,,,,,,,,,,,,,,,,,"04/Nov/11 06:02;olamy;for the record as fixed in [rev 1162348|http://svn.apache.org/viewvc?view=revision&revision=1162348];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Plugin Configuration from Grandparent Not Executed on Grandchild,MNG-5174,12797175,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Cannot Reproduce,bentmann,lonbinder,lonbinder,14/Sep/11 17:11,15/Sep/11 08:42,03/Jan/22 13:13,15/Sep/11 08:10,3.0.2,,,,,,,,Inheritance and Interpolation,,,,,0,,,,"Summary: The configuration of a plugin in the grandparent of a project, whether in <plugins> or <pluginManagement> is not properly inherited to grandchild.

To reproduce:
Setup: 
POM C extends POM B; POM B extends POM A

POM A includes:
{code}
...

	<build>		
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.3</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/dependency-libs</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
			
	</build>
...
{code}

Then in the POM C folder execute {{mvn package}}.  The plugin does not work.

If the same configuration is moved or copied to POM B, then the execution in POM C's folder is repeated, it works fine.

The same holds true if the above is moved to POM A's {{<pluginManagement>}} node (and the appropriate {{<plugin>}} groupId and artifactId are added to POM C).  It even holds true if you do this and add additional to POM B.  Unless the full config is in POM B (or POM C) then it will not run from POM C.","ava version: 1.6.0_24, vendor: Apple Inc.
Default locale: en_US, platform encoding: MacRoman
OS name: ""mac os x"", version: ""10.6.7"", arch: ""x86_64"", family: ""mac""
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Sep/11 08:10;bentmann;MNG-5174.zip;https://issues.apache.org/jira/secure/attachment/12712625/MNG-5174.zip","14/Sep/11 17:11;lonbinder;build.log;https://issues.apache.org/jira/secure/attachment/12713344/build.log",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28lb3:",9223372036854775807,,,,,,,,,,,,,,,,,,,"15/Sep/11 08:10;bentmann;Running {{mvn package -V}} on the attached example project yields:
{noformat}
Apache Maven 3.0.2 (r1056850; 2011-01-09 01:58:10+0100)
Java version: 1.5.0_22, vendor: Sun Microsystems Inc.
Java home: D:\java\jdk-1.5\jre
Default locale: de_DE, platform encoding: Cp1252
OS name: ""windows 7"", version: ""6.1"", arch: ""amd64"", family: ""windows""
[INFO] Scanning for projects...
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Building test 0.1-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO]
[INFO] --- maven-dependency-plugin:2.3:copy-dependencies (copy-dependencies) @ test ---
[INFO] junit-3.8.2.jar already exists in destination.
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 1.565s
[INFO] Finished at: Thu Sep 15 15:08:16 CEST 2011
[INFO] Final Memory: 9M/157M
[INFO] ------------------------------------------------------------------------
{noformat}
i.e. the issue cannot be reproduced from the provided information.;;;","15/Sep/11 08:31;lonbinder;Just to confirm, Benjamin after seeing your example it immediately became clear I had a copy/paste error in the {{<relativePath/>}} in the parent POM.  Sorry to waste your time.  This is definitely user (me) error.;;;","15/Sep/11 08:42;bentmann;No need to apologize, but I would like to repeat my request to provide runnable example projects along with filled issues. They do not only provide as a solid basis for bug reproduction/analysis but they can also help users to spot typos/misconfiguration, usually before a committer has a chance to look at the bug report.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
settings.xml boolean values not be honored,MNG-5166,12797169,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Incomplete,,jpyeron,jpyeron,26/Aug/11 08:04,22/Jan/14 20:32,03/Jan/22 13:13,22/Jan/14 20:32,3.0.3,3.0.4,,,,,,,Settings,,,,,1,,,,"{noformat}$ svn co http://svn.apache.org/repos/asf/maven/maven-3/trunk

$ LOCAL_REPO=`mktemp -d`

$ # this should fail as the local repo is empty

$ mvn -o -Dmaven.repo.local=$LOCAL_REPO validate 

$ GLOBAL_SETTINGS=` \
   mvn -o -X -Dmaven.repo.local=$LOCAL_REPO validate |\
   sed -n 's/\[DEBUG\] Reading global settings from \(.*\)/\1/p'` &&\
  LOCAL_SETTINGS=` \
   mvn -o -X -Dmaven.repo.local=$LOCAL_REPO validate |\
   sed -n 's/\[DEBUG\] Reading user settings from \(.*\)/\1/p'` &&\
  rm -f ""$LOCAL_SETTINGS""

$ $EDITOR ""$GLOBAL_SETTINGS"" # set offline to true

$ # this will work but should fail since the repo is empty and the settings.xml says offline

$ rm -rf $LOCAL_REPO && mkdir -p $LOCAL_REPO && mvn -Dmaven.repo.local=$LOCAL_REPO validate 

$ mkdir -p ""`dirname ""$LOCAL_SETTINGS""`"" && echo cp ""$GLOBAL_SETTINGS"" ""$LOCAL_SETTINGS""

$ # now that the user's settings.xml is the same as the system, it should fail again as it is offline

$ rm -rf $LOCAL_REPO && mkdir -p $LOCAL_REPO && mvn -Dmaven.repo.local=$LOCAL_REPO validate 
{noformat}","windows xp 64 bit cygwin sun/oracle jdk 1.6 64 bit

java version ""1.6.0_26""
Java(TM) SE Runtime Environment (build 1.6.0_26-b03)
Java HotSpot(TM) 64-Bit Server VM (build 20.1-b02, mixed mode)
CYGWIN_NT-5.2-WOW64 black 1.7.9(0.237/5/3) 2011-03-29 10:10 i686 Cygwin
Microsoft Windows [Version 5.2.3790]

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-5380,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28xqn:",9223372036854775807,,,,,,,,,,,,,,,,,,,"12/Sep/11 13:19;jpyeron;Seems that the XML processor is not handling the xml in a preserving way. It is loosing tags with default values and leading / trailing whitespace of tag values;;;","22/Jan/14 20:23;jvanzyl;Please refer to https://cwiki.apache.org/confluence/display/MAVEN/The+Great+JIRA+Cleanup+of+2014;;;","22/Jan/14 20:32;jvanzyl;Please refer to https://cwiki.apache.org/confluence/display/MAVEN/The+Great+JIRA+Cleanup+of+2014 if you're wondering why this issue was closed out.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Optional compile dependencies being resolved by test dependencies,MNG-5145,12797191,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,rfscholte,robertdw,robertdw,01/Aug/11 00:05,21/Jan/15 13:26,03/Jan/22 13:13,21/Jan/15 13:26,3.0.3,,,,,3.1.0,,,Dependencies,,,,,2,,,,"Optional compile-time dependencies are being resolved (in WAR projects, at least) into the packaged artifact.

There has been a regression since Maven 2.2.1 in regards to resolving optional dependencies.

In the attached pom (which builds a WAR), there are two dependencies:
* org.springframework:spring-core:2.5.6 - at compile scope
* org.dbunit:dbunit:2.3.0 - at test scope.


The dependency tree looks like this:

{noformat}
net.twasink:webapp:war:1.0
+- org.springframework:spring-core:jar:2.5.6:compile
|  \- commons-logging:commons-logging:jar:1.1.1:compile
\- org.dbunit:dbunit:jar:2.3.0:test
   +- junit:junit:jar:3.8.2:test
   +- junit-addons:junit-addons:jar:1.4:test
   |  +- xerces:xercesImpl:jar:2.6.2:test
   |  \- xerces:xmlParserAPIs:jar:2.6.2:test
   +- org.apache.poi:poi:jar:3.1-FINAL:test
   |  \- log4j:log4j:jar:1.2.13:test
   +- commons-collections:commons-collections:jar:3.1:test
   +- commons-lang:commons-lang:jar:2.1:test
   +- org.slf4j:slf4j-api:jar:1.4.3:test
   \- org.slf4j:slf4j-nop:jar:1.4.3:test
{noformat}

Note that {{log4j:log4j:1.2.13}} is a {{test}} dependency. However, when you do {{'mvn package'}}, and inspect the resulting WAR file, it includes {{log4j}}!

The problem appears to be that {{commons-logging}} (a compile dependency brought in by {{spring-core}}) declares {{log4j}} as an _optional_ {{compile}} dependency. This is clashing with the test dependency brought in transitively by {{dbunit}}.

To make it worse, this is still brought in if you add an explicit exclusion of {{log4j}} to {{spring-core}}.

Maven 2.2.1 did not bring in the {{log4j}} JAR - this is a regression under Maven 3.0.3",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-5188,,,,,,,,,,,"01/Aug/11 00:05;robertdw;pom.xml;https://issues.apache.org/jira/secure/attachment/12713159/pom.xml",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29bnb:",9223372036854775807,,,,,,,,,,,,,,,,,,,"01/Aug/11 04:06;bentmann;Part of the issue is {{commons-logging:1.1}}, declaring {{commons-logging:1.1.1}} in {{<dependencyManagement>}} can be used to workaround the bug.;;;","01/Aug/11 05:13;robertdw;As shown in the dependency tree, this is already using commongs-logging:1.1.1

AFAIK, commons-logging:1.1.1 is doing the right thing by declaring the dependency on log4j optional. Certainly the attached pom worked correctly under Maven 2.2.;;;","01/Aug/11 06:34;robertdw;Ah - this appears to be related to http://jira.codehaus.org/browse/MNG-5056. Similar behaviour, anyway.;;;","21/Jan/15 13:26;rfscholte;I've tested it with 3.1.0 and newer. Now it is correct. I think this was fixed thanks to MNG-5354.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Not all dependency are included in WAR,MNG-5136,12795996,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Cannot Reproduce,rfscholte,luca.preziati,luca.preziati,25/Jul/11 10:04,02/Jun/13 06:33,03/Jan/22 13:13,02/Jun/13 06:33,3.0.3,,,,,,,,General,,,,,1,,,,"When I launch mvn dependency:tree i found logback-core, when I build War the lib isn't include.

","Windows Vista 32 Bit, apache maven 3.0.3, java version ""1.6.0_21""
Java(TM) SE Runtime Environment (build 1.6.0_21-b07)
Java HotSpot(TM) Client VM (build 17.0-b17, mixed mode, sharing)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jul/11 10:04;luca.preziati;Lib dir.txt;https://issues.apache.org/jira/secure/attachment/12713155/Lib+dir.txt","27/Jul/11 05:14;luca.preziati;build-MAVEN-3.0-SNAPSHOT;https://issues.apache.org/jira/secure/attachment/12713097/build-MAVEN-3.0-SNAPSHOT","27/Jul/11 05:08;luca.preziati;build-MAVEN-3.0.3.log;https://issues.apache.org/jira/secure/attachment/12712745/build-MAVEN-3.0.3.log","27/Jul/11 02:48;luca.preziati;list.txt;https://issues.apache.org/jira/secure/attachment/12712418/list.txt","27/Jul/11 02:49;luca.preziati;tree.TXT;https://issues.apache.org/jira/secure/attachment/12713267/tree.TXT",,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i298ef:",9223372036854775807,,,,,,,,,,,,,,,,,,,"25/Jul/11 10:07;luca.preziati;Also javassint miss, It's like all second level dependency are excluded.;;;","25/Jul/11 10:28;luca.preziati;Build from eclipse, with Embedded Maven 3.0-SNAPSHOT works well...

List of dependencies files:


25/07/2011  17.26    <DIR>          .
25/07/2011  17.26    <DIR>          ..
23/09/2010  11.56            69.409 activation-1.1.1.jar
15/10/2010  16.24           443.432 antlr-2.7.6.jar
23/09/2010  11.53             4.467 aopalliance-1.0.jar
19/11/2010  18.17           345.048 apache-mime4j-0.6.jar
08/01/2011  22.39           116.226 aspectjrt-1.6.10.jar
05/07/2011  15.17           610.790 c3p0-0.9.1.2.jar
23/09/2010  11.52            56.660 castor-core-1.3.1.jar
23/09/2010  11.52           800.767 castor-xml-1.3.1.jar
24/01/2011  16.27           232.019 commons-beanutils-1.8.3.jar
13/10/2010  11.20            58.160 commons-codec-1.4.jar
28/09/2010  17.05           575.389 commons-collections-3.2.1.jar
01/10/2010  09.48           160.519 commons-dbcp-1.4.jar
03/02/2011  12.57           159.509 commons-io-2.0.1.jar
03/02/2011  12.42           284.220 commons-lang-2.6.jar
23/09/2010  11.51            60.686 commons-logging-1.1.1.jar
20/12/2010  14.07            96.221 commons-pool-1.5.4.jar
23/09/2010  11.58           313.898 dom4j-1.6.1.jar
23/09/2010  11.52           205.734 dozer-5.2.2.jar
15/04/2011  16.07           650.466 ehcache-core-2.2.0.jar
15/04/2011  16.06           123.994 ehcache-spring-annotations-1.1.3.jar
11/11/2010  11.03           142.626 emc-bpm-services-remote-6.6.jar
11/11/2010  11.03            22.887 emc-ci-services-remote-6.6.jar
11/11/2010  11.03            29.464 emc-collaboration-services-remote-6.6.ja
11/11/2010  11.03           907.807 emc-dfs-rt-remote-6.6.jar
11/11/2010  11.03           171.206 emc-dfs-services-remote-6.6.jar
11/11/2010  11.04            28.552 emc-search-services-remote-6.6.jar
14/04/2011  11.57            83.423 envelope-client-1.2.1.jar
23/09/2010  11.56           291.834 FastInfoset-1.2.7.jar
07/07/2011  12.44            23.310 foundation-ext-pec-core-0.4.0-SNAPSHOT.j
21/07/2011  10.04             9.942 gedi-commons-context-2.2.0-SNAPSHOT.jar
21/07/2011  10.04            54.768 gedi-commons-model-2.2.0-SNAPSHOT.jar
21/07/2011  10.04            12.895 gedi-commons-utils-2.2.0-SNAPSHOT.jar
21/07/2011  17.12            55.192 gedi-foundation-api-1.1.0-SNAPSHOT.jar
21/07/2011  17.13           412.400 gedi-foundation-core-1.1.0-SNAPSHOT.jar
21/07/2011  10.02            95.847 gedi-platform-core-2.2.0-SNAPSHOT.jar
25/07/2011  16.54           161.607 gfs-adapters-3.1.0-SNAPSHOT.jar
25/07/2011  16.54            29.178 gfs-adapters-api-3.1.0-SNAPSHOT.jar
18/10/2010  12.54           283.436 hessian-3.2.0.jar
08/01/2011  20.12            71.283 hibernate-commons-annotations-3.2.0.Fina
r
04/05/2011  17.41         3.111.916 hibernate-core-3.6.3.Final.jar
08/01/2011  20.12           100.884 hibernate-jpa-2.0-api-1.0.0.Final.jar
19/11/2010  18.14           291.037 httpclient-4.0.1.jar
04/10/2010  14.42           172.888 httpcore-4.0.1.jar
19/11/2010  18.17            25.443 httpmime-4.0.1.jar
05/07/2011  16.22           228.835 int-core-0.4.0-SNAPSHOT.jar
03/02/2011  12.56           207.271 jackson-core-asl-1.7.1.jar
03/02/2011  12.57           622.174 jackson-mapper-asl-1.7.1.jar
17/12/2010  12.41           597.476 javassist-3.9.0.GA.jar
23/09/2010  11.56            89.967 jaxb-api-2.1.jar
23/09/2010  11.56           849.219 jaxb-impl-2.1.4.jar
23/09/2010  11.56           980.264 jaxb1-impl-2.2.jar
23/09/2010  11.56            33.428 jaxws-api-2.1.jar
23/09/2010  11.56         1.284.131 jaxws-rt-2.1.4.jar
23/09/2010  11.34            17.308 jcl-over-slf4j-1.6.1.jar
23/09/2010  11.52           153.115 jdom-1.1.jar
23/09/2010  11.56             7.989 jsr181-api-1.0-MR1.jar
23/09/2010  11.56             5.848 jsr250-api-1.0.jar
17/12/2010  12.41            15.071 jta-1.1.jar
23/09/2010  11.56           367.444 log4j-1.2.14.jar
03/02/2011  12.42           244.115 logback-classic-0.9.28.jar
03/02/2011  12.42           312.931 logback-core-0.9.28.jar
14/03/2011  11.38           447.676 mail-1.4.1.jar
23/09/2010  11.56            38.683 mimepull-1.3.jar
14/04/2011  10.51            11.382 nacon-commons-utils-1.1.0.jar
05/10/2010  16.53         1.352.918 ojdbc-14.jar
23/09/2010  11.56            68.177 resolver-20050927.jar
23/09/2010  11.56            18.817 saaj-api-1.3.jar
14/03/2011  11.59           274.208 saaj-impl-1.3.jar
11/11/2010  11.04           331.011 sjsxp-1.0-DCTM.jar
23/09/2010  11.34            25.496 slf4j-api-1.6.1.jar
18/10/2010  09.38           321.005 spring-aop-3.0.4.RELEASE.jar
14/10/2010  09.18            53.082 spring-asm-3.0.4.RELEASE.jar
18/10/2010  09.38           555.574 spring-beans-3.0.4.RELEASE.jar
18/10/2010  09.38           665.772 spring-context-3.0.4.RELEASE.jar
28/09/2010  16.13           100.860 spring-context-support-3.0.4.RELEASE.jar
18/10/2010  09.38           367.170 spring-core-3.0.4.RELEASE.jar
14/10/2010  09.18           166.848 spring-expression-3.0.4.RELEASE.jar
04/11/2010  11.49           379.786 spring-jdbc-3.0.4.RELEASE.jar
17/12/2010  12.41           334.219 spring-orm-3.0.4.RELEASE.jar
18/10/2010  09.38            60.821 spring-oxm-3.0.4.RELEASE.jar
04/11/2010  11.49           231.900 spring-tx-3.0.4.RELEASE.jar
06/10/2010  16.27           394.421 spring-web-3.0.4.RELEASE.jar
14/10/2010  09.18           416.967 spring-webmvc-3.0.4.RELEASE.jar
23/09/2010  11.57            21.155 spring-xml-1.2.1.jar
14/04/2011  10.29            32.042 springintegration-utils-1.3.0.jar
23/09/2010  11.56            11.074 stax-ex-1.2.jar
23/09/2010  11.56            57.984 streambuffer-0.7.jar
15/07/2011  09.36            22.341 typeregistry-api-1.1.1-SNAPSHOT.jar
18/07/2011  11.41            24.939 typeregistry-dao-1.1.1-SNAPSHOT.jar
20/07/2011  15.54            16.930 typeregistry-xml-1.1.1-SNAPSHOT.jar
23/09/2010  11.56         2.694.049 xmlbeans-2.4.0.jar;;;","26/Jul/11 16:43;bentmann;This needs more information to be analyzed, like an example project. As a mininum, the debug log with the real dependency tree is needed, the output from {{dependency:tree}} is not always accurate.;;;","26/Jul/11 19:36;brettporter;You might also check the scope assigned to logback-core - if it is test or provided, it won't be included.;;;","27/Jul/11 02:48;luca.preziati;Logback-core is dependency of logback-classic. And logback-classic is dependency of parent project.
Logback-classic have this pom:

...
  <dependencies>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
     <scope>compile</scope>
    </dependency>
....

I dependency:tree is what I need in my project. The dependency:list is whitout logback-core and javassist
;;;","27/Jul/11 02:48;luca.preziati;mvn dependency:list result;;;","27/Jul/11 02:49;luca.preziati;mvn dependency:tree result;;;","27/Jul/11 02:50;luca.preziati;How can I export a log debug?
Thanks in advance. I don't know if I can give you a copy of the project. Of the pom surely.;;;","27/Jul/11 04:59;bentmann;{{mvn goal -X > debug.log}}, I would also like to point out the [introduction page|http://jira.codehaus.org/browse/MNG] to this issue tracking project which provides this information.;;;","27/Jul/11 05:08;luca.preziati;This is the log file of the build outside eclipse, from Shell with maven 3.0.3. I have some collegues with Mac Os and same version of maven and they don't have this problem. Anotehr one with Windows Seven 64 bit have same problem.;;;","27/Jul/11 05:14;luca.preziati;build made from eclipse, Helios SR2, plugin maven 0.10.0.20100209-0800.
;;;","27/Jul/11 10:23;bentmann;Even with the debug log from Maven 3.0.3 I don't see any obvious hint to start troubleshooting. You can try replacing all {{aether-\*-1.11.jar}} in your {{<maven-home>/lib}} directory with their version 1.12 counterparts (as found in [central|http://repo1.maven.org/maven2/org/sonatype/aether/]) and see whether this solves the issue. That still failing, we would either need a standalone POM to reproduce the issue or find ways to improve the debug logging for the resolution process.;;;","27/Jul/11 10:37;luca.preziati;I have just tried. Seem work. I think is a problem related to the Windows OS because in MAC, with the same version 1.11 all works. Tomorrow all windows collagues path maven lib and I will retry all system, but in mine, where i fix the lib, currently work well.;;;","27/Jul/11 10:37;luca.preziati;Thanks!;;;","28/Jul/11 02:51;luca.preziati;Fixed with lib update for all windows system.;;;","07/Nov/11 07:02;vazul;Hi all,

This problem is only with maven 3.0.3. With maven 3.0.2 everything was ok.

After dropping aether-impl-1.13 and aether-util-1.13 into lib/ext in maven 3.0.3, the problem was solved.
Please release maven 3.0.4 with the new aether soon.
;;;","02/Jun/13 06:33;rfscholte;Maven-3.0.4 was released with aether-*-1.13.1, so this issue should be fixed.
I don't wan't to adjust the original release-notes for 3.0.4, so let's close this one as ""can't reproduce"".;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven struggles while resolving locked snapshots by two or more simultaneously used projects.,MNG-5129,12795995,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Incomplete,,cklewes,cklewes,07/Jul/11 09:02,05/Mar/18 20:36,03/Jan/22 13:13,22/Jan/14 20:31,3.0.3,,,,,,,,Dependencies,,,,,0,,,,"This has to be explained with an easy example. Given that we have three projects (A, B and C). Both projects B and C has a dependency to a locked snapshot of project A. 

{code:title=Project B requires build number #2}
<dependency>
  <groupId>org.codehaus</groupId>
  <artifactId>A</artifactId>
  <version>1.0.0-20110705.132520-2</version>
</dependency>
{code}

{code:title=Project C requires build number #1}
<dependency>
  <groupId>org.codehaus</groupId>
  <artifactId>A</artifactId>
  <version>1.0.0-20110705.132120-1</version>
</dependency>
{code}

We now call {{dependency:resolve}} on each projects to resolve their dependencies from the repositories. As we can see in our local repository both versions are fetched and downloaded from their respective repository server. Unfortunately a last one wins conflict occurs. The project on which {{dependency:resolve}} is called last wins the race. Maven typically copies the latest fetched snapshot version (even if it's locked!) to the default version. Let's have a look at the folder structure:

{code:title=Folder listing of the artifact dependency A (repository/org/codehaus/A/)}

    maven-metadata-local.xml
    maven-metadata-opensaga.xml
    maven-metadata-opensaga.xml.sha1

    A-1.0.0-20110705.132120-1.jar
    A-1.0.0-20110705.132120-1.pom

    A-1.0.0-20110705.132520-2.jar
    A-1.0.0-20110705.132520-2.pom
 
    A-1.0.0-SNAPSHOT.jar (the last fetched snapshot version)
    A-1.0.0-SNAPSHOT.pom
{code}

The last version will be copied to the file {{A-1.0.0-SNAPSHOT.jar}}. Maven references their dependencies to the file without the exactt timestamp/buildnumber. This fact make it impossible to develop the project B and C or even run them simultaneously, because only the last one wins.

It would be mandatory to exactly reference the file with the timestamp of each project!

What do you think on this issue? I submitted the project structure so you can easily reproduce this issue.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-4189,,,,,,,,,,,,MNG-5037,,,,,,,,,,,"07/Jul/11 09:02;cklewes;maven-dependency-issue.zip;https://issues.apache.org/jira/secure/attachment/12712743/maven-dependency-issue.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28lgv:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"25/Jul/11 09:58;bentmann;You can set the system property {{aether.artifactResolver.snapshotNormalization=false}} on the commandline or via MAVEN_OPTS, but whether all Maven plugins out there properly deal with this situation, is a different story. Good luck.;;;","22/Jan/14 20:23;jvanzyl;Please refer to https://cwiki.apache.org/confluence/display/MAVEN/The+Great+JIRA+Cleanup+of+2014;;;","22/Jan/14 20:31;jvanzyl;Please refer to https://cwiki.apache.org/confluence/display/MAVEN/The+Great+JIRA+Cleanup+of+2014 if you're wondering why this issue was closed out.;;;","05/Mar/18 20:36;jglick@netbeans.org;Sounds similar to MNG-4189.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Authentication credentials mismatch when accessing multiple repositories,MNG-5123,12797166,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Incomplete,,fcamblor,fcamblor,26/Jun/11 18:13,22/Jan/14 20:31,03/Jan/22 13:13,22/Jan/14 20:31,2.2.1,3.0.3,,,,,,,Artifacts and Repositories,,,,,0,,,,"When accessing multiple repositories, Maven seems to use & keep <server> credentials used for the first repository accessed, with the other repositories.

For example, if we have 2 <repository> sections in our pom, accessed respectively with foo & bar usernames, ""foo"" credential will be used against the second repository, making authentication fails if foo is not authorized to access bar repository.

I settled up a minimal nexus configuration demonstrating the problem.
Nexus is defining 2 repositories (foo & bar).
Only foo user can access foo repository. The same goes for the bar repository. A special ci user can access both repositories.
A foo artefact has been uploaded in foo repository. A bar artefact has been uploaded in bar repository.
A pom.xml project defines bar repository with dependencies on foo & bar artefacts. 
The foo repository is referenced as a mirror of central in settings.xml.
If, in settings.xml, we use foo user for foo server, and bar user for bar server, foo artefact cannot be retrieved in foo repository because bar user is not authorized to access foo repository (although it is not what is configured) : we can see this in nexus logs. The issue is here !

Note: If, in settings.xml, we use ci user for foo server, and bar user for bar server, foo artefact is retrieved (since ci user can both access foo & bar repositories).

Note 2 : I provided a zot repository, too, to distinguish the <repository> section from the settings.xml and the pom.xml sections. But the same problem is going on zot repository.

Problem seems to be really general : if we try to connect on N repositories using N <server> definitions, only the first <server> credentials are used (for the N repositories).",Windows 7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Jun/11 18:13;fcamblor;jira authentication error on multiple credentials.zip;https://issues.apache.org/jira/secure/attachment/12713098/jira+authentication+error+on+multiple+credentials.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i297rr:",9223372036854775807,,,,,,,,,,,,,,,,,,,"27/Jun/11 01:49;fcamblor;To be clearer, replace sentence ""If, in settings.xml, we use foo user for foo server, and bar user for bar server, foo artefact cannot be retrieved in foo repository because bar user is not authorized to access foo repository (although it is not what is configured) : we can see this in nexus logs. The issue is here !""

By :
""If, in settings.xml, we use foo user for foo server, and bar user for bar server, foo artefact cannot be retrieved in foo repository because bar user is _SELECTED FOR AUTHENTICATION AND_ not authorized to access foo repository (although it is not what is configured) : we can see this in nexus logs. The issue is here !""

I found the issue under maven 2.2.1.
Tried to reproduce it on Maven 3.0.3 ... it seems the problem is still there in aether (message is clearer but seems to remain related to the same authentication problems)
;;;","22/Jan/14 20:23;jvanzyl;Please refer to https://cwiki.apache.org/confluence/display/MAVEN/The+Great+JIRA+Cleanup+of+2014;;;","22/Jan/14 20:31;jvanzyl;Please refer to https://cwiki.apache.org/confluence/display/MAVEN/The+Great+JIRA+Cleanup+of+2014 if you're wondering why this issue was closed out.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
maven seems to lose transitive dependencies from the list of compilation dependencies,MNG-5121,12797164,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jvanzyl,hgschmie,hgschmie,21/Jun/11 15:04,07/Apr/15 12:25,03/Jan/22 13:13,13/Nov/12 19:57,3.0.1,3.0.2,3.0.3,,,3.0.4,,,Dependencies,,,,,2,,,,"See the attached build logs ""build_failed.log"" and ""build_succesful.log"". They were both created from using the attached POM. The only difference is that in the successful build the dependency

<dependency>                                                                                                                                                
  <groupId>com.google.inject</groupId>                                                                                                                    
  <artifactId>guice</artifactId>                                                                                                                          
  <version>3.0</version>                                                                                                                                  
</dependency>       

is moved to the very top of the dependency list.  When diffing the two build logs, the most important difference is that in the failed log maven picks up these dependencies:

[DEBUG]    com.google.inject:guice:jar:3.0:compile

while in the successful build, the same dependency looks like this:


[DEBUG]    com.google.inject:guice:jar:3.0:compile                                
[DEBUG]       javax.inject:javax.inject:jar:1:compile                             
[DEBUG]       aopalliance:aopalliance:jar:1.0:         

This translates for the successful build into:

[DEBUG] Classpath: [/Users/henning/private/source/services/thetargetproject/target/classes                                                                          
 /Users/henning/.m2/repository/com/google/inject/guice/3.0/guice-3.0.jar                                                                                            
 /Users/henning/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar      
[...]

and for the failed build:

[DEBUG] Classpath: [...]
 /Users/henning/.m2/repository/com/google/inject/guice/3.0/guice-3.0.jar                                                                                            
[...]

(note that even for the successful build, the aopalliance dependency still got dropped).

This behaviour started with maven 3.x, all permutations of the dependencies build fine with maven 2.2.1

This problem can be reproduced in all maven 3.0.x versions (.1, .2 and .3).

In both cases, the transitive dependencies of guice 3.0 (javax.inject:javax.inject and aopalliance:aopalliance) should always be present.

The same behaviour occurs in the exec-maven-plugin which uses the runtime dependency path to execute java code.","Fedora Linux, Sun JDK 1.6.0_24, MacOS X 10.6.7, AppleJDK 1.6.0_24",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Jun/11 15:04;hgschmie;build_failed.log;https://issues.apache.org/jira/secure/attachment/12713298/build_failed.log","21/Jun/11 15:04;hgschmie;build_successful.log;https://issues.apache.org/jira/secure/attachment/12712416/build_successful.log","21/Jun/11 15:04;hgschmie;maven-pom.xml;https://issues.apache.org/jira/secure/attachment/12712616/maven-pom.xml","19/Sep/11 18:08;stevenschlansker;mng-5121.tgz;https://issues.apache.org/jira/secure/attachment/12712623/mng-5121.tgz",,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i297wf:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"25/Jul/11 10:09;bentmann;This likely requires a runnable test project for proper analysis and fixing.;;;","19/Sep/11 18:08;stevenschlansker;After a rather annoying amount of work, here is an executable test case, attached.;;;","19/Sep/11 18:15;stevenschlansker;More specifics about the test case:

In the process of isolating it, I discovered that we inadvertently introduced a build cycle between different versions.  The project as bundled is a large multi module build, which maven 2 (probably correctly) rejects due to:

Project 'io.trumpet.components:tc-tracking' is duplicated in the reactor


If you remove one of them from the reactor, the error message changes to: 

The projects in the reactor contain a cyclic reference: Edge between 'Vertex{label='io.trumpet.components:tc-httpclient'}' and 'Vertex{label='io.trumpet.components:tc-tracking'}' introduces to cycle in the graph io.trumpet.components:tc-tracking --> io.trumpet.components:tc-httpclient --> io.trumpet.components:tc-tracking

Interestingly enough, this cycle was *not* detected in our (much larger, ""real life"") code base - Maven 2 somehow misses the error but completes the build successfully.  I assume that Maven 2 is now being phased out and further development is focused on 3, but if you would like a separate test case to show this issue I could try to isolate it.


Now, on to Maven 3 - the project as bundled is considered valid (even though it likely should not be, given that there is a dependency cycle that Maven 2 noticed).  It bravely forges ahead but loses some transitive dependencies along the way -- leading to an eventual 

[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:2.3.2:compile (default-compile) on project mng-5121: Compilation failure: Compilation failure:
[ERROR] /Volumes/Zoom/code/maven-bugs/mng-5121/badness/src/main/java/testing/Badness.java:[3,23] package org.slf4j.bridge does not exist
[ERROR] /Volumes/Zoom/code/maven-bugs/mng-5121/badness/src/main/java/testing/Badness.java:[7,8] cannot find symbol
[ERROR] symbol  : variable SLF4JBridgeHandler
[ERROR] location: class testing.Badness

The SLF4JBridgeHandler is from jul-to-slf4j, which is clearly in the dependencies:

[INFO] --- maven-dependency-plugin:2.1:tree (default-cli) @ mng-5121 ---
[INFO] io.trumpet.testing:mng-5121:jar:1.0-SNAPSHOT
[INFO] +- io.trumpet.components:tc-log:jar:5.0-BOGUS:compile
[INFO] |  \- org.slf4j:jul-to-slf4j:jar:1.6.1:compile
[INFO] |     \- org.slf4j:slf4j-api:jar:1.6.1:compile
[INFO] \- io.trumpet.testing:tc-message-storage:jar:1.0-SNAPSHOT:compile
[INFO]    \- io.trumpet.testing:tc-clients-base:jar:1.0-SNAPSHOT:compile
[INFO]       \- io.trumpet.components:tc-tracking:jar:7.0-BOGUS:compile
[INFO]          \- io.trumpet.components:tc-httpclient:jar:10.0-BOGUS:compile

But it does not make it to the runtime class path somehow.


Since this is arguably an invalid project setup, it is not clear to me whether Maven *should* handle it, but whether it does or does not it would be insanely useful to detect invalid projects like this and warn.  Maven 2 seems to have caught it in the ""smaller"" test case but did not notice it in our ""larger"" world -- and Maven 3 doesn't notice at all.


More than willing to provide more information as requested, hopefully this is detailed enough to work on.  Thank you much for your looking in to this bug!;;;","20/Sep/11 06:17;bentmann;Thanks for example project.

bq. Now, on to Maven 3 - the project as bundled is considered valid (even though it likely should not be, given that there is a dependency cycle that Maven 2 noticed)
First, artifacts and projects are versioned items and A:1 is different from A:2. As such, a dependency graph like A:2 -> B:1 -> A:1 does not contain a cycle, whether one likes such a project design is a different matter. So yes, your example project is technically valid.

bq. It bravely forges ahead but loses some transitive dependencies 
In fact, the dependency on {{jul-to-slf4j}} is not entirely lost but its scope gets miscalculated as seen in the dependency tree from the debug log. This is a bug that has already been reported before and can be fixed by replacing the {{aether-*}} JARs in your mvn distro with newer versions (1.12 or 1.13).

The debug log obtained from your example project further suggests that this is not the same issue that Henning originally reported where dependencies were completely missing from the dependency graph.;;;","20/Sep/11 12:12;stevenschlansker;Hrrrm.  I was trying to reproduce the same issue but was paring down the test case (we have probably hundreds of dependencies involved otherwise) and this is what I came up with.  I will try to work from Henning's example pom, rather than our code base, and see if I can come up with different reproduction steps.;;;","20/Sep/11 16:18;stevenschlansker;I downloaded Henning's POM file, and tested it locally.  With the versions that included the same dependency loop, the compile fails with 

Compilation failure: Compilation failure:
[ERROR] /Volumes/Zoom/code/maven-bugs/mng-5121-a/src/main/java/testing/Badness.java:[3,19] package javax.inject does not exist
[ERROR] /Volumes/Zoom/code/maven-bugs/mng-5121-a/src/main/java/testing/Badness.java:[7,27] cannot find symbol

which matches the problem as described.  When I remove the dependency loop, it prints out many ""[WARNING] The POM for io.trumpet.components:tc-config:jar:4.0 is missing, no dependency information available"" but compiles and runs successfully.

Additionally, downloading the new aether jars as you suggest fixed both the test case I had and Henning's test case.

So I am suspecting that it is actually the same problem, and that it is indeed fixed with a new version of aether - do you have any other reason to believe it is not?;;;","20/Sep/11 16:41;bentmann;A characteristic of the logs provided by Henning was the complete absence of {{javax.inject}} in the failing case whereas in your example the troublesome dependency was at least mentioned in the dependency graph albeit with a missing scope. Considering the way the dependency tree is constructed, those defects hint at different underlying issues. But anyways, if both projects get correct dependency trees using the recent JARs, there is probably not much gained from hunting this discrepancy down.;;;","20/Sep/11 17:32;stevenschlansker;That was always the behavior - even in the failing cases, it was always present in dependency:tree even if it did not appear in the class path in the appropriate place.  At least, that is my understanding.;;;","20/Sep/11 17:44;bentmann;I was referring to the trees in the debug log from Henning, not the output of {{mvn dependency:tree}} which does not necessarily reflect core behavior.;;;","13/Nov/12 19:57;hgschmie;This has been resolved with maven 3.0.4;;;","26/Mar/14 08:39;edgar;I just seem to run into this very same issue if I am not mistaken using Maven 3.2.1. Could it be that maybe MNG-2315 re-introduced this bug? Could someone maybe have a look? If not then something else is going on.

In any case with Maven 3.2.1 I had a very similar situation where it seems that all transitive dependencies were lost from my JAR file (starting with the javax.inject dependency). I then downgraded to Maven 3.1.1, rebuild my JAR and now all transitive dependencies are back again.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Resolver for plugins failing,MNG-5084,12797160,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,,rvowles,rvowles,30/Apr/11 20:10,13/Nov/12 17:46,03/Jan/22 13:13,13/Nov/12 17:46,3.0.3,,,,,,,,Dependencies,,,,,0,,,,"We are at a standstill with the easyb plugin for maven as we cannot get it to resolve artefacts when doing its integration tests. Installing it without them and then using it also fails with resolution problems. 

I downloaded the source and did a remote debug, the resolution seems to *require* that the artefact that is missing be deployed locally, even if these artefacts are in central and are listed in the _maven.repositories file as being from central. It seems to be looking for them as groovy-all-1.7.10.jar>= (for example) even when there is a groovy-all-1.7.10.jar>central= and it has previously just downloaded it from central.

I have created a trivial sample, that builds nothing but has an integration test (which also fails). To reproduce, you need to have *no* settings.xml and clear your repository out (rename it to something else) so you have what appears to be a bare repo. Then run a mvn clean verify (using 3.0.3) and it builds, installs the plugin, runs the integration test and fails. If you edit the integration test and specify the version and mvn clean verify again, it still fails (so it has nothing to do with the invoker plugin).","JDK 1.6.24, Mac OS X",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/May/11 05:43;rvowles;Screen shot 2011-05-12 at 10.43.05 PM.png;https://issues.apache.org/jira/secure/attachment/12712741/Screen+shot+2011-05-12+at+10.43.05+PM.png","30/Apr/11 20:10;rvowles;simple-plugin.tar;https://issues.apache.org/jira/secure/attachment/12712681/simple-plugin.tar",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28rxb:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"01/May/11 03:31;rvowles;It also appears that the behavior is such, that when you do the mvn clean verify the first time, the plugin compiles and the integration test does not. If you do a clean verify again, the plugin won't compile with the same error as the integration test.;;;","12/May/11 05:24;rvowles;I have now spent some hours debugging through aether-1.11 (which is used in maven 3.0.3) and what I have found is this.

After the first build, with an empty repository, maven downloads Groovy 1.7.10 and puts it in the local repository and creates a maven-metadata-local.xml file for it which includes only one version (1.7.10). It downloads the poms for all the other versions in the version range. This occurs because of the code in org.sonatype.aether.impl.internal.DefaultDependencyCollector on line 368. Any subsequent attempt to use the artefact (in an invoker plugin test or simply by running verify again on the artefact) causes it to be found locally. The rangeResult on line 481 of the same file returns 1.7.0 -> 1.7.10 with all but 1.7.10 coming from a remote repository. 

The if directly following 481 (on 482 to 493) checks to see if the repo NOT remote or if it is NOT null (i.e. it is local). If it is local, it throws it away on line 492. Thus the artefact is left with no repository to resolve from. 

This appears to be picked up later by the resolver, which checks for the key ""groovy-all-1.7.10.jar>="" in the _maven.repositories file in the groovy-1.7.10 local repository directory, and not finding it (because maven has set it to ""groovy-all-1.7.10.jar>central="") causes maven to not be able to find  the artefact. I will attempt to track this bit down again.;;;","12/May/11 05:42;rvowles;What is strange about the groovy artefact is this appears to relate to its version range. All of the other artefacts are non-ranged versions and all of them resolve with a remote repository. ONLY groovy (because of its version range) resolves to a local repository. 

Tracing it further, it appears in the org.sonatype.aether.impl.internal.DefaultArtifactResolver on line 314, because the version resolver (from line 276 of the same file) does not specify that the repository used is a LocalRepository, it never gets processed, so the artefact is null in the resulting resolved list.;;;","12/May/11 05:43;rvowles;demonstrating debug information showing unresolved artifact problem.;;;","06/Jul/11 05:58;mark@talios.com;Swapping our aether 1.11 for 1.12 in my maven/lib directory seems to solve this problem.  After removing settings.xml and clearing out .m2/repository maven would fail the IT tests with 1.11, 1.12 works as expected.

What would it take to propose a 3.0.4 release of maven with the newer aether included?
;;;","13/Nov/12 17:46;jvanzyl;Aether is now at 1.13.1. Seems this resolves your issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Regression: Could not resolve dependencies for project,MNG-5082,12796891,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Won't Fix,,puce,puce,28/Apr/11 10:06,05/Jun/15 10:13,03/Jan/22 13:13,05/Jun/15 10:13,3.0.3,,,,,,,,Dependencies,,,,,3,,,,"Sometimes, when you need a jar, which is not available from a repository, and for some reason you don't want to deploy it to the corporate repository (yet), you can do something like this:

{code:xml}
         <build>
		<plugins>
                        ...
			<plugin>
				<artifactId>maven-install-plugin</artifactId>
				<executions>
					<execution>
						<id>some-lib</id>
						<phase>validate</phase>
						<goals>
							<goal>install-file</goal>
						</goals>
						<configuration>
							<file>lib/some-lib-1.1.jar</file>
							<groupId>org.someorg.somelib</groupId>
							<artifactId>some-lib</artifactId>
							<version>1.1</version>
							<packaging>jar</packaging>
						</configuration>
					</execution>
				</executions>
			</plugin>
			...
		</plugins>
	</build>
{code}

And then you can declare a dependency on this lib like this:
{code:xml}
         <dependencies>
                ...
		<dependency>
			<groupId>org.someorg.somelib</groupId>
			<artifactId>some-lib</artifactId>
			<version>1.1</version>
		</dependency>
		...
	</dependencies>
{code}
This worked fine with {{Maven 2.2.1}} but not with {{Maven 3.0.3}} -> regression!

{noformat}
Error message:
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 0.951s
[INFO] Finished at: Thu Apr 28 15:53:15 BST 2011
[INFO] Final Memory: 4M/121M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal on project myproject: Could not resolve dependencies for project someGroupId:someArtifactId:jar:0.1-SNAPSHOT: Could not find artifact org.someorg.somelib:some-lib:jar:1.1 in nexus (<nexus url>) -> [Help 1]
[ERROR] 
{noformat}

There is a work-around, which at least works in some cases:
{noformat}
mvn clean validate
mvn install
{noformat}

Some notes on this work-around:
- install should call validate (which it does, but apparently with some side-effects). It should not be necessary to call validate explicitly.
- ""mvn clean validate install"" does not work! It shouldn't matter if you call ""mvn clean validate install"" or ""mvn clean validate"" and ""mvn install"". Both should have the same result.
- I currently don't see a way to specify in Jenkins/ Hudson to first execute ""clean validate"" and then ""install"" -> broken build on continuous integration server which has to be fixed manually
- This work-around breaks the Maven way, because you cannot simply go to a project anymore and just call ""mvn clean install"" to build it.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Apr/13 09:06;rbalazsi;MNG-5082-maven-core.patch;https://issues.apache.org/jira/secure/attachment/12713116/MNG-5082-maven-core.patch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28vg7:",9223372036854775807,,,,,,,,,,,,,,,,,,,"10/Oct/11 13:09;rhowlett;I concur this is a regression blocker.

I have the same scenario and have found that I must run the specified phase that the install-file goal is attached on its own, for example:

> mvn clean; mvn package

will work; the ""clean"" phases will install the file (as the execution is tied to the clean goal) - I can then run ""package"".

However, this will fail with Maven 3:

> mvn clean package

When running under Maven 2.2, no such error is encountered and the file is installed to my local repo.;;;","07/Dec/11 10:06;puce;I stumbled again over the same issue. Any updates?;;;","22/Apr/13 09:25;rbalazsi;I think I've managed to fix the problem, I attached a patch.

The method ""MojoExecutor.execute(MavenSession session, List<MojoExecution> mojoExecutions, ProjectIndex projectIndex)"" is called for every plugin to be executed. However, the method collected the dependencies for the entire lifecycle, not just the current phase. So before the ""compile"" phase, the library dependency (""some-lib"" in the issue description) would be satisfied by the ""maven-install-plugin"" in the ""validate"" phase. However, it is attempted to be resolved beforehand (at the beginning of the lifecycle).

I solved it by rewriting the execute method so that the ""newDependencyContext()"" method would be called for every MojoExecution object, instead of only once for the list of MojoExecution objects.
I'm not sure how to write unit/integration tests, though, as the scenario uses the ""maven-install-plugin"", I appreciate any suggestions. All of the current tests pass, of course.

This is my first contribution, I hope that it turns out to be useful. :-);;;","13/Feb/15 05:32;rfscholte;IMHO all dependencies which are not part of the reactor should be available at startup of the build, which is required to make a valid buildPlan. So even though this used to work with Maven2, I think the approach of Maven3 is better, since Maven can't detect which plugins will effect the buildPlan at startup. I'd like to close this as {{Won't Fix}}.
Doing an {{install-file}} during {{validate}} means that it'll be execute during every build, installing the same file over and over again. That's also a sign that this approach can't be valid.
;;;","05/Jun/15 10:13;khmarbaise;Based on comments of Robert Scholte this will be closed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
mvn -nsu (--no-snapshot-updates) should not download snapshots (and break local builds),MNG-5064,12797524,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,bentmann,ge0ffrey.desmet,ge0ffrey.desmet,13/Apr/11 02:34,14/Feb/18 10:26,03/Jan/22 13:13,27/Jul/11 05:29,3.0.3,,,,,3.0.4,,,Command Line,,,,,3,,,,"Here's the command I ran (on a fresh morning, because our update policy is daily and our SNAPSHOTs are deployed by Hudson at night, with maven 3.0.3):

{code}
$ mvn -nsu clean install -DskipTests
[INFO] Scanning for projects...
Downloading: http://repository.jboss.org/nexus/content/groups/public/org/drools/droolsjbpm-parent/5.2.0-SNAPSHOT/maven-metadata.xml
...
[INFO] ------------------------------------------------------------------------
[INFO] Building Drools Planner core 5.2.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
Downloading: http://repository.jboss.org/nexus/content/groups/public/org/drools/knowledge-api/5.2.0-SNAPSHOT/maven-metadata.xml
Downloaded: http://repository.jboss.org/nexus/content/groups/public/org/drools/knowledge-api/5.2.0-SNAPSHOT/maven-metadata.xml (2 KB at 1.8 KB/sec)
Downloading: http://repository.jboss.org/nexus/content/groups/public/org/drools/knowledge-api/5.2.0-SNAPSHOT/knowledge-api-5.2.0-20110413.010206-9.pom
Downloaded: http://repository.jboss.org/nexus/content/groups/public/org/drools/knowledge-api/5.2.0-SNAPSHOT/knowledge-api-5.2.0-20110413.010206-9.pom (6 KB at 6.0 KB/sec)
...
Downloading: http://repository.jboss.org/nexus/content/groups/public/org/drools/knowledge-api/5.2.0-SNAPSHOT/knowledge-api-5.2.0-20110413.010206-9.jar
...
{code}

Despite that I added ""-nsu"" (also known as ""--no-snapshot-updates""), it downloaded snapshots.

This is a pretty bad thing, because if I hadn't pulled in days (and just wanted to test my local changes before merging in remote changes),
this would have broke my build, for example:
- because the parent pom in downloaded SNAPSHOT had a dependency removed which my local pom was still using (because I hadn't pulled the changes yet)
- because the downloaded knowledge-api changed a non-released method signature (and I hadn't pulled the changes to deal with that yet).
- ...",,,,,,,,,,,,,FLINK-2060,,,,,,,,,,,,,,,,,,,,,,,,MNG-2681,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29cjz:",9223372036854775807,,,,,,,,,,,,,,,,,,,"27/Jun/11 18:19;bmargulies;I just added an integration test to maven that does the right thing (doesn't download snapshots). It passes. 

Perhaps you could offer some additional thought as to what might be going on here?;;;","27/Jun/11 18:19;bmargulies;/Users/benson/asf/mvn/core-integration-testing/core-it-suite svn log -r1140365
------------------------------------------------------------------------
r1140365 | bimargulies | 2011-06-27 19:17:28 -0400 (Mon, 27 Jun 2011) | 2 lines

[MNG-5064]: add a test that seems to prove that this problem does not, in fact, exist.
;;;","27/Jul/11 03:04;ge0ffrey.desmet;Yet I have replicated it a couple of days on the command line. Strange.
Maybe, there's a difference between the command line and the test environment?

I am using maven 3.0.3.

Here's a replication of what I did (although there's might be a shorter reproduce recipe):

{code}
// Use maven 3.0.3 on linux

$ git clone git@github.com:droolsjbpm/droolsjbpm-build-bootstrap.git

// clones droolsjbpm-knowledge, then drools, then drools-planner, ...
$ droolsjbpm-build-bootstrap/script/git-clone-others.sh

// builds droolsjbpm-knowledge, then drools, then drools-planner, ...
$ droolsjbpm-build-bootstrap/script/mvn-all.sh clean install -DskipTests

// Note: drools-planner depends on a SNAPSHOT of drools

// Wait one day

$ cd drools-planner
$ mvn clean install -nsu -DskipTests
// It downloads drools-20110727-... pom and jar
{code}
;;;","27/Jul/11 03:06;ge0ffrey.desmet;Note, we do have this is in our parent pom:

{code}
  <repositories>
    <repository>
      <id>jboss-public-repository-group</id>
      ...
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
      </snapshots>
    </repository>
{code}

But the -nsu should take precedence over that updatePolicy=daily, because command line always overwrites configuration.
The workflow is:
- Either you've just git pulled, so you mvn build to fetch the latest snapshot (as previous snapshots might be binary incompatible with the latest code)
- Or, you've haven't git pulled in a while, so you mvn -nsu build to verify your local changes and you don't want the latest snapshot (which might be binary incompatible because you don't have the latest code);;;","27/Jul/11 05:29;bentmann;Fixed in [r1151418|http://svn.apache.org/viewvc?view=revision&revision=1151418].;;;","07/Oct/13 10:33;michibk;Hi,
For the 3.0.5 and 3.1.0 version of Maven it is not fixed yet.

what I did:
1. I deleted the local .m2/repository/org/drools directory
2. I mvn clean install -nsu -Dfull -DskipTests the optaplanner project
   (optaplanner has dependencies to /drools - which are not anymore in the .m2)
   Optaplanner builds successfully although it needs /drools.
   I saw during the clean install that SNAPSHOTs of drools were downloaded. ;;;","20/May/15 07:49;rmetzger;I would like to reopen this issue, because -nsu is not working as expected in Maven 3.2.5.

Steps to reproduce:
{code}
mvn -v
Apache Maven 3.2.5 (NON-CANONICAL_2014-12-25T17:13:28_root; 2014-12-25T14:13:28+01:00)
Maven home: /opt/maven
Java version: 1.7.0_75, vendor: Oracle Corporation
Java home: /usr/lib/jvm/java-7-openjdk/jre
Default locale: en_US, platform encoding: UTF-8
OS name: ""linux"", version: ""3.18.6-1-arch"", arch: ""amd64"", family: ""unix""

robert@robert-da /tmp % git clone https://github.com/apache/flink.git
Cloning into 'flink'...
remote: Counting objects: 212056, done.
remote: Total 212056 (delta 0), reused 0 (delta 0), pack-reused 212056
Receiving objects: 100% (212056/212056), 47.07 MiB | 10.89 MiB/s, done.
Resolving deltas: 100% (102610/102610), done.
Checking connectivity... done.
robert@robert-da /tmp % cd flink
robert@robert-da /tmp/flink (git)-[master] % git checkout 912f8d90efef2912bd9aac7c0b44d05fd90d6803
Note: checking out '912f8d90efef2912bd9aac7c0b44d05fd90d6803'.
HEAD is now at 912f8d9... [gelly] renamed IncrementalSSSPExample -> IncrementalSSSP to match the new examples naming scheme
robert@robert-da /tmp/flink (git)-[heads/master] % mvn clean install -nsu -DskipTests -Dmaven.repo.local=/tmp/test-mvn

{code}

later, you'll see:
{code}
[INFO] ------------------------------------------------------------------------
[INFO] Building flink-language-binding-generic 0.9-SNAPSHOT
[INFO] ------------------------------------------------------------------------
Downloading: http://repository.apache.org/snapshots/org/apache/flink/flink-compiler/0.9-SNAPSHOT/maven-metadata.xml
Downloaded: http://repository.apache.org/snapshots/org/apache/flink/flink-compiler/0.9-SNAPSHOT/maven-metadata.xml (2 KB at 0.8 KB/sec)
Downloading: http://repository.apache.org/snapshots/org/apache/flink/flink-compiler/0.9-SNAPSHOT/flink-compiler-0.9-20150313.122611-190.pom
Downloaded: http://repository.apache.org/snapshots/org/apache/flink/flink-compiler/0.9-SNAPSHOT/flink-compiler-0.9-20150313.122611-190.pom (4 KB at 5.7 KB/sec)
Downloading: http://repository.apache.org/snapshots/org/apache/flink/flink-compiler/0.9-SNAPSHOT/flink-compiler-0.9-20150313.122611-190.jar
Downloaded: http://repository.apache.org/snapshots/org/apache/flink/flink-compiler/0.9-SNAPSHOT/flink-compiler-0.9-20150313.122611-190.jar (2660 KB at 379.7 KB/sec)
{code}

and the build finishing with success, even though maven was downloading outdated snapshot versions.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fails to resolve plugin dependencies in Maven 3.0.x,MNG-5060,12797435,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Not A Problem,bentmann,wakaleo,wakaleo,07/Apr/11 06:13,07/Apr/11 06:35,03/Jan/22 13:13,07/Apr/11 06:35,3.0.3,,,,,,,,Artifacts and Repositories,,,,,0,,,,"For some projects, Maven 3.x fails to resolve/download plugin dependencies, whereas Maven 2.x worked fine. Could be an aether bug. The artifact when resolving in aether has ""remoteRepositories"" : size:0 

The situation appears to be that it it downloads it from central, adds in _maven.repositories as

#NOTE: This is an internal implementation file, its format can be changed without prior notice.
#Thu Apr 07 20:42:04 NZST 2011
easyb-core-1.1.jar>central=
easyb-core-1.1.pom>central=

and then proceeds to only look for

easyb-core-1-1.pom>=

(i.e. local only repository) which isn't there.

An example of this problem can be reproduced by building the following project from github: https://github.com/wakaleo/thucydides/tree/maven-3.0.x-bug-example 

Just run mvn install. With Maven 2.2.1 it works fine. With Maven 3.0.x you get the following:
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 2:05.397s
[INFO] Finished at: Thu Apr 07 23:08:55 NZST 2011
[INFO] Final Memory: 23M/81M
[INFO] ------------------------------------------------------------------------
[ERROR] Missing:
[ERROR] ----------
[ERROR] 1) org.easyb:easyb-core:jar:1.1
[ERROR] 
[ERROR] Try downloading the file manually from the project website.
[ERROR] 
[ERROR] Then, install it using the command:
[ERROR] mvn install:install-file -DgroupId=org.easyb -DartifactId=easyb-core -Dversion=1.1 -Dpackaging=jar -Dfile=/path/to/file
[ERROR] 
[ERROR] Alternatively, if you host your own repository you can deploy the file there:
[ERROR] mvn deploy:deploy-file -DgroupId=org.easyb -DartifactId=easyb-core -Dversion=1.1 -Dpackaging=jar -Dfile=/path/to/file -Durl=[url] -DrepositoryId=[id]
[ERROR] 
[ERROR] Path to dependency:
[ERROR] 1) org.easyb:maven-easyb-plugin:jar:1.1
[ERROR] 2) org.easyb:easyb-core:jar:1.1
[ERROR] 
[ERROR] ----------
[ERROR] 1 required artifact is missing.
[ERROR] 
[ERROR] for artifact:
[ERROR] org.easyb:maven-easyb-plugin:jar:1.1
[ERROR] 
[ERROR] from the specified remote repositories:
[ERROR] (none)
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MultipleArtifactsNotFoundException

It does this despite the fact that the dependency in question is (a) on central, (b) in the local repository, or (c) both. If you try to install it manually, it fails with a message saying that there is already a JAR file there.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28run:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"07/Apr/11 06:31;wakaleo;Looks like this is an easyb issue. I'll reopen if it turns out not to be.;;;","07/Apr/11 06:35;bentmann;From the plugin's {{EasybMojo.java}}:
{code:xml}
        ArtifactResolutionResult resolutionResult =
            resolver.resolveTransitively(singleton(easybArtifact), mojoArtifact, EMPTY_LIST, localRepository, metadataSource);
{code}
which can be expected to fail due to {{EMPTY_LIST}} when considering https://cwiki.apache.org/confluence/display/MAVEN/Maven+3.x+Compatibility+Notes#Maven3.xCompatibilityNotes-ResolutionfromLocalRepository.

So please fill this against the plugin, asking them to pass the proper set of remote repos (project or plugin) to resolve the artifacts.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The order in which you declare dependencies in pom.xml affect resulting WAR file,MNG-5057,12796944,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Not A Problem,bentmann,lvonk,lvonk,24/Mar/11 10:14,24/Mar/11 14:01,03/Jan/22 13:13,24/Mar/11 11:40,3.0.3,,,,,,,,Dependencies,,,,,0,,,,"When I declare my pom as follows (see attached war-with-xml-apis.zip) then the jar file xml-apis-1.0.b2 is in my WAR file:

{code:xml}
<project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"">
    <modelVersion>4.0.0</modelVersion>
    <groupId>ripe</groupId>
    <artifactId>web</artifactId>
    <packaging>war</packaging>
    <version>0.0.1-SNAPSHOT</version>
    <name>web Maven Webapp</name>
    <url>http://maven.apache.org</url>
    <dependencies>
        <dependency>
            <groupId>com.atomikos</groupId>
            <artifactId>transactions-jta</artifactId>
            <version>3.6.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>3.4.0.GA</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.axonframework</groupId>
            <artifactId>axon-core</artifactId>
            <version>0.7.1</version>
            <exclusions>
                <exclusion>
                    <groupId>xml-apis</groupId>
                    <artifactId>xml-apis</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>
    <build>
        <finalName>web</finalName>
    </build>
</project>
{code}

However, when I declare my pom as follows (axon-core is moved one up) then the xml-apis.jar is no longer in my WAR.
{code:xml}
<project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"">
    <modelVersion>4.0.0</modelVersion>
    <groupId>ripe</groupId>
    <artifactId>web</artifactId>
    <packaging>war</packaging>
    <version>0.0.1-SNAPSHOT</version>
    <name>web Maven Webapp</name>
    <url>http://maven.apache.org</url>
    <dependencies>
        <dependency>
            <groupId>com.atomikos</groupId>
            <artifactId>transactions-jta</artifactId>
            <version>3.6.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.axonframework</groupId>
            <artifactId>axon-core</artifactId>
            <version>0.7.1</version>
            <exclusions>
                <exclusion>
                    <groupId>xml-apis</groupId>
                    <artifactId>xml-apis</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>3.4.0.GA</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <finalName>web</finalName>
    </build>
</project>
{code}
","Apache Maven 3.0.3 (r1075438; 2011-02-28 18:31:09+0100)
Maven home: /Users/lars/tools/apache-maven-3.0.3
Java version: 1.6.0_24, vendor: Apple Inc.
Java home: /System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home
Default locale: en_US, platform encoding: MacRoman
OS name: ""mac os x"", version: ""10.6.6"", arch: ""x86_64"", family: ""mac""
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Mar/11 10:14;web-with-xml-apis.zip;https://issues.apache.org/jira/secure/attachment/12712608/web-with-xml-apis.zip","24/Mar/11 10:14;web-without-xml-apis.zip;https://issues.apache.org/jira/secure/attachment/12713255/web-without-xml-apis.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29c0f:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"24/Mar/11 10:51;bentmann;This is a consequence of [the way conflict resolution works|http://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html]. The relevant bits from the project's dirty dependency tree:
{noformat}
ripe:web:war:0.0.1-SNAPSHOT
   org.hibernate:hibernate-entitymanager:jar:3.4.0.GA:test
      dom4j:dom4j:jar:1.6.1:compile
         xml-apis:xml-apis:jar:1.0.b2:compile
   org.axonframework:axon-core:jar:0.7.1:compile
      dom4j:dom4j:jar:1.6.1:compile
{noformat}
Note that there are two paths leading to {{dom4j}}, one having a dependency on {{xml-apis}} and one not. As both {{dom4j}} dependencies occur on the same graph depth, the one seen first gets picked, including its transitive dependencies.
;;;","24/Mar/11 11:06;lvonk;I still think it a bug, because scope is not taken into account when resolving conflicts. 

Please note that the hibernate-entitymanager is scoped test, so it should be excluded from the war. Therefore none of its transitive dependencies should affect a conflict resolution when building the WAR because that wouldn't make sense since the declaring dependency is excluded anyway.

;;;","24/Mar/11 11:40;bentmann;bq. Please note that the hibernate-entitymanager is scoped test, [...] Therefore none of its transitive dependencies should affect a conflict resolution when building the WAR
Well, this is a misunderstanding. Dependency resolution is independent of the process consuming dependencies, i.e. it doesn't matter whether you package a WAR or run a unit test, the set of artifacts is calculated once and each artifact has exactly one scope. This ensures that the same dependency is used during compilation, packaging and testing of the project. As such it doesn't matter whether {{hibernate-entitymanager}} is scoped test, its transitive dependencies have a conflict with other dependencies of the project and this conflict needs to be solved. And as said, this conflict exists even when the WAR is packaged which will not contain {{hibernate-entitymanager}} but can well contain some of its transitive dependencies in case of conflicts with other dependencies. Slightly modified example:
{noformat}
project
   org.hibernate:hibernate-entitymanager:jar:3.4.0.GA:test
      dom4j:dom4j:jar:1.6.1:compile
         foo:bar:1:compile
   org.axonframework:axon-core:jar:0.7.1:compile
      dom4j:dom4j:jar:1.1:compile
{noformat}
Same conflict around {{dom4j}}. Following nearest-wins conflict resolution, {{dom4j:1.6.1}} gets picked and the system has no solid foundation to argue that it can safely drop {{foo:bar:1}} as a compile dependency without breaking {{dom4j:1.6.1}}.;;;","24/Mar/11 14:01;lvonk;Ok understood. Thanks for clarifying.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test dependencies get packaged into WAR file.,MNG-5056,12797528,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,rfscholte,lvonk,lvonk,24/Mar/11 09:26,21/Jan/15 13:20,03/Jan/22 13:13,21/Jan/15 13:20,3.0.3,,,,,3.1.0,,,Dependencies,,,,,2,,,,"When I add the following dependency as scope test in my pom.xml some of its transitive dependencies (I guess) still get packaged into the WAR file.
{code:xml}
<dependency>
  <groupId>com.atomikos</groupId>
  <artifactId>transactions-jta</artifactId>
  <version>3.6.4</version>
  <scope>test</scope>
</dependency>
{code}","Apache Maven 3.0.3 (r1075438; 2011-02-28 18:31:09+0100)
Maven home: /usr/share/maven
Java version: 1.6.0_24, vendor: Apple Inc.
Java home: /System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home
Default locale: en_US, platform encoding: MacRoman
OS name: ""mac os x"", version: ""10.6.6"", arch: ""x86_64"", family: ""mac""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-4982,,,,,,,,,,,,,,,,,"24/Mar/11 09:26;debug.out;https://issues.apache.org/jira/secure/attachment/12712740/debug.out","24/Mar/11 09:26;web.zip;https://issues.apache.org/jira/secure/attachment/12712679/web.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28kzb:",9223372036854775807,,,,,,,,,,,,,,,,,,,"24/Mar/11 09:28;lvonk;I forgot to mention that these jars wind up in the WAR file (see debug.out):

antlr-2.7.6.jar
asm-1.5.3.jar
asm-attrs-1.5.3.jar
cglib-2.1_3.jar
commons-collections-2.1.1.jar
commons-logging-1.0.4.jar
dom4j-1.6.1.jar
ehcache-1.2.3.jar
hibernate-3.2.5.ga.jar
jms-1.1.jar
jta-1.0.1B.jar;;;","01/Aug/11 06:35;robertdw;See http://jira.codehaus.org/browse/MNG-5145 for a probably related bug.;;;","22/Jan/14 20:22;jvanzyl;Please refer to https://cwiki.apache.org/confluence/display/MAVEN/The+Great+JIRA+Cleanup+of+2014;;;","22/Jan/14 20:31;jvanzyl;Please refer to https://cwiki.apache.org/confluence/display/MAVEN/The+Great+JIRA+Cleanup+of+2014 if you're wondering why this issue was closed out.;;;","21/Jan/15 13:20;rfscholte;I've tested it with 3.1.0 and newer. Now it is correct. I think this was fixed thanks to MNG-5354.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SnapshotTransformation class missing in maven 3.0.* series,MNG-5045,12795954,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Won't Fix,jvanzyl,sentimentalbryan,sentimentalbryan,21/Mar/11 08:47,07/Apr/15 12:25,03/Jan/22 13:13,19/Jan/14 13:11,3.0.1,3.0.2,3.0.3,,,,,,Bootstrap & Build,Class Loading,Dependencies,Errors,,1,,,,"
The class org/apache/maven/artifact/transform/SnapshotTransformation was originally (apache-maven-2.2.1) bundled in maven-2.2.1-uber.jar

However this is now missing from maven 3.0.* releases. 

As a result, one of the flex-mojo's sonatype project goals breaks when run under maven 3.0.* series. 

The bug report is here. 

https://issues.sonatype.org/browse/FLEXMOJOS-397

It's been marked as Fixed as the developer is adamant that API compatability is supposed to be maintained between Maven 2 and 3 series but is very much still active. 

There are no more releases planned in that series but it is depended upon by many developers.

Best Regards,

Bryan Hunt",Linux (Ubuntu) most likely all platforms,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i298b3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Scope of dependecies defined in Dependecy Management can't be overriden,MNG-5041,12795964,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Cannot Reproduce,bentmann,ehsavoie,ehsavoie,14/Mar/11 09:02,15/Mar/11 03:23,03/Jan/22 13:13,14/Mar/11 09:15,3.0.2,3.0.3,,,,,,,Dependencies,,,,,3,,,,"If I define a dependency with in a parent pom using dependency management I can't override the scope of the dependency management declaration in a child pom.
If I use the dependency plugin the tree is as expected (the child override the parent) but if I use the effective-pom I get what is declared in the dependency management.
This seems a Maven 3.0.x bug",Linux x64 JDK 1.60_24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Mar/11 09:14;bentmann;MNG-5041.zip;https://issues.apache.org/jira/secure/attachment/12713156/MNG-5041.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i2970v:",9223372036854775807,,,,,,,,,,,,,,,,,,,"14/Mar/11 09:14;bentmann;Using this example project yields:
{noformat}
>mvn help:effective-pom -V
Apache Maven 3.0.3 (r1075438; 2011-02-28 18:31:09+0100)

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>3.8.2</version>
        <scope>provided</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.2</version>
      <scope>compile</scope>
    </dependency>
  </dependencies>
{noformat}
i.e. the scope from the parent's dependency management was successfully overriden by the child.;;;","15/Mar/11 02:59;aheritier;Benjamin did you try with the depMgt in a parent pom and the dep in a child ? It is how I understand the explained testcase.
Emmanuel, can you provide a little testcase to reproduce it ?;;;","15/Mar/11 03:23;ehsavoie;Yes, Silverpeas poms on github ;)
)After more investigations using the latest help plugin and effective pom all is working fine.
It seems to come from a bug in the assembly plugin (2.2beta5) which was fixed in 2.2.1.
The fact that the dependency plugin display wrong informations lead us to creating this bug.
Sorry for the inconvenience.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven does not properly track class files to be included in jar/test breaking incremental build,MNG-5039,12795656,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Duplicate,bentmann,emilsit,emilsit,11/Mar/11 10:52,11/Mar/11 11:40,03/Jan/22 13:13,11/Mar/11 11:00,2.2.1,3.0,,,,,,,Plugins and Lifecycle,,,,,0,,,,"When files in the source tree (either src/main or src/test) are renamed or removed, the class files resulting from their prior compilation remain in the corresponding target/ directories.  It seems that surefire and package plugins simply grab everything from target/ and as a result, incremental builds are not correct.  For example,

* If you remove a test source file and the test will continue to run. This is bad esp when the test is failing; packaging will fail even though it should not.
* If you remove/rename a source file and the class file will continue to be in the jar.  This may cause tests to succeed even though they should not.  (And if you share the jar, this will affect downstream non-test dependencies.)

I wrote up a test suite for the second case and put it up at https://github.com/sit/java-build-test. To run it ...

   git clone git://github.com/sit/java-build-test.git
   cd java-build-test
   sh runme.sh

(It does rely on git to automate the rename/delete actions though so a tar of the sources won't work.)
In addition to Maven, it tests Gradle (which works) and Buildr (which behaves the same as Maven).

While incremental builds are not the recommendation for official deliverables, this does make Maven appear extremely unreliable to developers who never know after syncing whether they will have to do a clean build or if an incremental one is correct.",,,,,,,,,,,,,,,,,,,,,,,,MNG-4885,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i293db:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"11/Mar/11 11:33;emilsit;This strikes me to be a different problem from MNG-4885.  It's one thing for incremental builds to be efficient (as in only recompiling the files that need to be recompiled).  It's another thing entirely to include class files that shouldn't be included in jar/war artifacts and in test runners, after they've been compiled.;;;","11/Mar/11 11:40;bentmann;It's just another facet of the same feature.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Defining a mirror invalidates local repository content,MNG-5029,12797430,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Not A Problem,bentmann,lynggaard,lynggaard,28/Feb/11 15:28,28/Feb/11 15:38,03/Jan/22 13:13,28/Feb/11 15:38,3.0.2,,,,,,,,Artifacts and Repositories,,,,,0,,,,"If I define a mirror in settings.xml, maven can no longer find artifacts which are allready in the local repository.

Steps to reproduce.
1. Create simple pom like
<project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"">
  <modelVersion>4.0.0</modelVersion>
  <groupId>dk.hlyh.par</groupId>
  <artifactId>par</artifactId>
  <version>1.0</version>
  <packaging>pom</packaging>
  <name>par</name>
</project>

2. make sure  setting.xml has no mirrors
3. build using mvn -o install (which completes succssfully, hence all artifacts available locally)

4. add mirror to settings.xml (mirror must be of * or central)
5. rebuild using mvn -o install

expected result:
* the build completes without error

actual result:
Build fails with:
[ERROR] Plugin org.apache.maven.plugins:maven-install-plugin:2.3.1 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-install-plugin:jar:2.3.1: The repository system is offline but the artifact org.apache.maven.plugins:maven-install-plugin:pom:2.3.1 is not available in the local repository.

but given step 3 above I know all required artifacts are available locally, hence the build should not fail.


","ubuntu, maven 3.0.2",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28s8f:",9223372036854775807,,,,,,,,,,,,,,,,,,,"28/Feb/11 15:38;bentmann;This works as intended. A mirror is technically a different repository. Until Maven has verified that it actually provides the artifacts in question (i.e. by running an online build using the mirror), the artifacts that have previously cached from the original repository won't be accessible to the build.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Artifact metadata file names are corrupted with the text ""local""",MNG-5002,12797151,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Incomplete,,akutz,akutz,04/Feb/11 10:48,22/Jan/14 20:31,03/Jan/22 13:13,22/Jan/14 20:31,3.0.2,,,,,,,,Artifacts and Repositories,,,,,0,,,,"I have a custom MOJO where in I add a piece of metadata to the project's primary artifact. I've extended the AbstractArtifactMetadata class to do so. The getLocalFilename and getRemoteFilename methods simply return a string in the following format $artifactId-$version.nvn. In Maven 2.2.1 the file would get stored in the repository properly. For example, emc-vsi-core-features-4.1.0-SNAPSHOT.nvn is how the file should look, and does in Maven 2.2.1. In Maven 3 the file resembles emc-vsi-core-features-4-local.1.0-SNAPSHOT.nvn. Clearly the new local resolution logic in Maven 3 is inserting the text ""local"" into the metadata's file name prior to storing it on the file system.

I'm simply invoking the primary artifact's addMetadata method and passing it an instance of my custom class. I've attached my metadata class to this bug report.",Windows XP SP 3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Feb/11 10:48;akutz;NvnArtifactMetadata.java;https://issues.apache.org/jira/secure/attachment/12713151/NvnArtifactMetadata.java",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29bsn:",9223372036854775807,,,,,,,,,,,,,,,,,,,"22/Jan/14 20:23;jvanzyl;Please refer to https://cwiki.apache.org/confluence/display/MAVEN/The+Great+JIRA+Cleanup+of+2014;;;","22/Jan/14 20:31;jvanzyl;Please refer to https://cwiki.apache.org/confluence/display/MAVEN/The+Great+JIRA+Cleanup+of+2014 if you're wondering why this issue was closed out.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Transitive dependencies with classifiers not resolved correctly,MNG-4985,12795929,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Duplicate,bentmann,wujek,wujek,19/Jan/11 08:56,20/Jan/11 01:00,03/Jan/22 13:13,19/Jan/11 09:13,3.0.1,3.0.2,,,,,,,Dependencies,,,,,0,,,,"Tested against maven 3.0.1, and the latest 3.0.2. I don't know whether this works for 2.2.1.
The project described below is attached to this issue.

I have a multi-module project that has modules: A, B, and C. B depends on A, C depends on B and transitively on A.
Additionally, there is a web archive that depends on B and C directly and transitively on A:

I have 2 profiles: dev and qa. They define a single property named 'classifier' - and this property is used in maven jar and war plugins:

<plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-jar-plugin</artifactId>
    <version>2.3.1</version>
    <configuration>
        <classifier>${classifier}</classifier>
    </configuration>
</plugin>
<plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-war-plugin</artifactId>
    <version>2.1.1</version>
    <configuration>
        <classifier>${classifier}</classifier>
        <failOnMissingWebXml>false</failOnMissingWebXml>
    </configuration>
</plugin>

Thus, depending on the profile, different version of the application is build and installed / deployed (actually not in this demo, as I don't declare any repository to deploy to).

Supposing none of the modules in any of the profiles has been built, go on and try to build the project with -Pqa turned on. Parent pom is correctly deployed, A is correctly deployed, and so is B. The problem is with module C which has a transitive dependency on A, and somehow it doesn't take the classifier into account:

[ERROR] Failed to execute goal on project C: Could not resolve dependencies for project test:C:jar:0.0.1-SNAPSHOT: Could not find artifact test:A:jar:*dev*:0.0.1-SNAPSHOT -> [Help 1]

When I first build everything using the dev profile (which is turned on by default), the build of the qa profile goes Ok. But, when I go to C and invoke 'mvn dependency:tree', I see:

[INFO] --- maven-dependency-plugin:2.1:tree (default-cli) @ C ---
[INFO] test:C:jar:0.0.1-SNAPSHOT
[INFO] \- test:B:jar:qa:0.0.1-SNAPSHOT:compile
[INFO]    \- test:A:jar:*dev*:0.0.1-SNAPSHOT:compile

As can be seen, the transitive dependency used an invalid classifier.

However, I can't use the workaround that I build dev and then qa, as in my current project we have a web module that packages these jars inside WEB-INF/lib - and the transitive dependencies are packaged with invalid qualifiers. Please check out the jars that are packages within WEB-INF/lib of the generated war file - it packages a qa jar only for the direct dependency. Here is the output of 'mvn dependency:tree -Pqa':

[INFO] --- maven-dependency-plugin:2.1:tree (default-cli) @ web ---
[INFO] test:web:war:0.0.1-SNAPSHOT
[INFO] +- test:C:jar:qa:0.0.1-SNAPSHOT:compile
[INFO] |  \- test:B:jar:*dev*:0.0.1-SNAPSHOT:compile
[INFO] +- test:B:jar:qa:0.0.1-SNAPSHOT:compile
[INFO] |  \- test:A:jar:*dev*:0.0.1-SNAPSHOT:compile
[INFO] \- org.apache.geronimo.specs:geronimo-servlet_3.0_spec:jar:1.0:provided

It gets even worse - there is also a direct dependency on B, so when the -Pqa switch is used, both B-qa.jar and B-dev.jar end up in the war file - dev is the transitive dep, qa the direct one.
For us this means disaster - mixing of jars from other profiles means the jars use different JMS resources, different JDBC pools and so on. Supposing B is a JPA module, we end up with the same persistence unit twice, with the same name, but using different pools (one for devs, one for qa).

Setting at critical as I don't know any workaround.

If I am doing something wrong, this means I don't understand profiles and classifiers correctly. In this case, please be generous and point me to the right resources.","Ubuntu 10.04 64bit, JDK 1.6_23",,,,,,,,,,,,,,,,,,,,,,,MNG-1388,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jan/11 08:56;wujek;classifiers-test.zip;https://issues.apache.org/jira/secure/attachment/12713293/classifiers-test.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28vdr:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"19/Jan/11 10:33;wujek;I read the other issue this one is supposed to duplicate, and whereas the other one also deals with profiles, I wouldn't consider them identical, and hence close this one. The use case depicted by my is quite different.
I don't define dependencies within a profile - I define classifiers that are used to point to correct dependencies, that in turn are defined globally.
Or is it that the two features share common erroneous code, fixing of which will fix both issues? Please pardon my question, but I simply don't know the maven codebase.;;;","19/Jan/11 10:37;bentmann;Quote from the linked issue:
bq. This happens because dependency POMs aren't currently candidates for profile triggering.
So it doesn't matter whether your profile defines dependencies or properties of what not, profiles in POMs of dependencies are currently not subject to activation from the CLI.;;;","19/Jan/11 13:10;wujek;Thank you for your answer, I think I understand what is meant by that.
So what would be the correct and functioning way of doing what I am trying to do with profiles and classifier? It cannot be that rare a case, can it?

The workaround that we use for now is that for qa we disable install, deploy and site-deploy as we don't want to mess up the repository. This also means, however, that I can go to the web project shown in the use case, build it with the qa profile, but what gets packaged inside the war is whatever was built last - in the worst case, when certain projects are build separately, without using the reactor, the 'qa' war can contain a completely mixed up set of libraries, which can be unsynchronized - for example, one module can be a JPA module with a unit with a certain name, and other module might expect a different name as it was build with a different profile. I see no way to manage this, apart from the not-so-nice workaround that to be sure, everything has to be build in one go, starting with the umbrella project.
How is this done the maven way?;;;","20/Jan/11 01:00;wujek;One more though of mine: it is not completely true that dependnecy POM don't know anything about profiles - in my use case, each dependency has a classifier that is profile-specific - and the transitive dependencies take the default 'dev' profile somehow. If deps were completely oblivious to profile triggering, I would expect a completely different error, like 'there is no dependency test:A:jar:${classifier}:0.0.1-SNAPSHOT' or something similar - where the classifier is not replaced by any profile-dependent setting. This doesn't happen, though.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLONE -Dependency exclusions not always honored for dependencies with classifier,MNG-4961,12795916,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Duplicate,bentmann,sunil.dhage@symphonysv.com,sunil.dhage@symphonysv.com,06/Jan/11 00:51,06/Jan/11 05:26,03/Jan/22 13:13,06/Jan/11 05:26,2.2.1,,,,,,,,Dependencies,,,,,0,,,,"Like the summary says, I've encountered and tracked down a bug that prevents dependency exclusions from being honored by plugins when the dependency with the exclusions has a classifier. This seems to only occur or surface in multi-module builds.

For example, I have a multi-module project structured as follows:
{noformat}
myproj-parent
  myproj-a
  myproj-b
{noformat}

If {{myproj-a}} produces a classified artifact (say, an obfuscated JAR via ProGuard) and {{myproj-b}} has it as a dependency with exclusions, those exclusions will not be honored by plugins run in {{myproj-b}} (say, the webstart plugin).

I think I've tracked the problem down to the {{replaceWithActiveArtifact(...)}} method of {{org.apache.maven.project.MavenProject}}. Specifically, see [lines 1772 through 1784|http://maven.apache.org/ref/2.2.1/xref/org/apache/maven/project/MavenProject.html#1772]. The following {{if}} clause does not account for artifacts with classifiers:
{noformat}
if ( ref.getArtifact() != null
     && ref.getArtifact().getDependencyConflictId().equals( pluginArtifact.getDependencyConflictId() ) )
{noformat}

Because the classified {{pluginArtifact}} does not match the _main_ artifact of {{ref}}, the artifact is not resolved from the currently building project's dependencies. As the method continues, it is instead resolved with {{myproj-a}}'s ""standard"" metadata, which of course don't include the exclusions in {{myproj-b}}.

I've marked this bug a blocker because I can't think of a way around it and it's badly polluting one of my project's builds. Due to it, a webstart build that only needs 30 artifacts has over 100. I have not yet tried to reproduce it in Maven 3.x because our company likely won't be moving to it for a couple of months.","Windows 7 64bit, Java 1.6 32bit",,,,,,,,,,,,,,,,,,,,,,,MNG-4872,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28oyv:",9223372036854775807,,,,,,,,,,,,,,,,,,,"06/Jan/11 01:03;sunil.dhage@symphonysv.com;Hi Benjamin,
I have created clone of MNG 4872, since the fix version(3.0-beta-1) provided for the issue did not have this  issue actually fixed.  or might not have included the bug id in the release notes.

If it has been taken care of, please update the release notes of 3.0-beta-1 or PLEASE avoid closing issues before they actually fixing the same.;;;","06/Jan/11 05:26;bentmann;bq. I have created clone of MNG 4872, since the fix version(3.0-beta-1) provided for the issue did not have this issue actually fixed
3.0-beta-1 fixes MNG-4872, as you would know if you had actually tried the example project provided by the reporter.

Finally note that the authorative source for the release notes is this issue tracker, there will never be updates to release notes posted in other places
http://jira.codehaus.org/secure/ReleaseNote.jspa?projectId=10500&version=16089;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
transitive dependency exclusion fails when classifier specified on a subproject and building the root project.,MNG-4939,12795899,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Duplicate,bentmann,sunil.dhage@symphonysv.com,sunil.dhage@symphonysv.com,17/Dec/10 02:23,17/Dec/10 05:29,03/Jan/22 13:13,17/Dec/10 05:29,2.2.1,,,,,,,,Dependencies,,,,,0,,,,"My issue is  related to MNG-3555.

I have a root pom which has multiple child projects and poms. 
For simplicity let us consider project Subproject1,Subproject2.

Subproject1 has a distribution.xml which will install a classifier based jar (Subproject1-1.0-distribution.jar)along with the actual Subproject1-1.0.jar
The Subproject1-1.0-distribution.jar contains only those classes which are used in Subproject2. And its size is something around 10KB and 
the Subproject1-1.0.jar  contains all the transitive dependencies and the complete functionality and the size is few MB.

Now I want to have the Subproject1-1.0-distribution.jar as a dependency in Subproject2 and I am excluding all the third party jars.

After going through closing comments of MNG-3555, I could understand that 
I should exclude for the main dependency as well. 

1.How can we mention that particular exclusion is for main dependency and particular exclusion is for classifier based dependency?

2. Do I need to create two dependencies one for Subproject1 and other with classifier?

Here my Subproject2 is in need of only Subproject1-1.0-distribution.jar only.  Why should I create one more dependency and exclude the jars.

PS: 1. Interesting point is if I am building Subproject2 alone then the excluded  jars are getting excluded
But when I build the root, then my Subproject2 will not be able to exclude the excluded jars.
2. If my Subproject2 has a similar dependency on SomeOther-1.0-distribution.jar, which is not a sibling, then either I build Subproject or I build root, all the excluded jars are getting excluded.
","Window XP, Java 6 u10",,,,,,,,,,,,,,,,,,,,,,,MNG-4872,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28tp3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"maven3+tycho build fails: can't find plugin with name ""<plugin_name>_null""",MNG-4906,12797387,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Not A Problem,bentmann,ask_12345,ask_12345,18/Nov/10 15:14,18/Nov/10 15:24,03/Jan/22 13:13,18/Nov/10 15:20,3.0,,,,,,,,,,,,,0,,,,"tried building my project with last Maven 3.0 + Tycho.
build failed with a weird error:

[INFO] Resolving target platform for project MavenProject: org.alskor.taskconverter:org.alskor.mspsync.rcp:1.0.0-SNAPSHOT @ C:\mspsync\org.alskor.msps
ync.rcp\pom.xml
[ERROR] Internal error: java.lang.RuntimeException: Could not resolve plugin org.alskor.mspsync.rcp_null; Path to dependency: -> [Help 1]
org.apache.maven.InternalErrorException: Internal error: java.lang.RuntimeException: Could not resolve plugin org.alskor.mspsync.rcp_null; Path to dep
endency:

        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:163)
        at org.apache.maven.cli.MavenCli.execute(MavenCli.java:445)
        at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:168)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:132)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
        at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
        at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
Caused by: java.lang.RuntimeException: Could not resolve plugin org.alskor.mspsync.rcp_null; Path to dependency:

        at org.codehaus.tycho.ArtifactDependencyVisitor.newRuntimeException(ArtifactDependencyVisitor.java:38)
        at org.codehaus.tycho.ArtifactDependencyVisitor.missingPlugin(ArtifactDependencyVisitor.java:27)
        at org.codehaus.tycho.osgitools.AbstractArtifactDependencyWalker.traversePlugin(AbstractArtifactDependencyWalker.java:240)
        at org.codehaus.tycho.osgitools.AbstractArtifactDependencyWalker.traverseProduct(AbstractArtifactDependencyWalker.java:115)
        at org.codehaus.tycho.osgitools.AbstractArtifactDependencyWalker.traverseProduct(AbstractArtifactDependencyWalker.java:98)
        at org.codehaus.tycho.osgitools.EclipseApplicationProject$1.walk(EclipseApplicationProject.java:28)
        at org.codehaus.tycho.osgitools.AbstractArtifactBasedProject.resolve(AbstractArtifactBasedProject.java:43)
        at org.codehaus.tycho.resolver.DefaultTychoDependencyResolver.resolveProject(DefaultTychoDependencyResolver.java:80)
        at org.codehaus.tycho.maven.TychoMavenLifecycleParticipant.afterProjectsRead(TychoMavenLifecycleParticipant.java:94)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:268)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:151)
        ... 11 more",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Nov/10 15:14;ask_12345;debug.log;https://issues.apache.org/jira/secure/attachment/12713142/debug.log","18/Nov/10 15:18;ask_12345;pom.xml;https://issues.apache.org/jira/secure/attachment/12713212/pom.xml","18/Nov/10 15:18;ask_12345;pom.xml;https://issues.apache.org/jira/secure/attachment/12712598/pom.xml",,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28om7:",9223372036854775807,,,,,,,,,,,,,,,,,,,"18/Nov/10 15:18;ask_12345;the parent POM.xml file;;;","18/Nov/10 15:18;ask_12345;org.alskor.mspsync.rcp\pom.xml file;;;","18/Nov/10 15:20;bentmann;Please report this at https://issues.sonatype.org/browse/TYCHO.;;;","18/Nov/10 15:22;ask_12345;the problem disappears if I remove ""org.alskor.mspsync.rcp"" from the build:

<!--    <module>org.alskor.mspsync.rcp</module>-->

;;;","18/Nov/10 15:24;ask_12345;oh.... Tried to register at their website too, and got runtime exception from their Jira.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[regression] Version x.y.z.SNAPSHOT resolution/deployment not handled correctly,MNG-4893,12797022,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Won't Fix,bentmann,pgier,pgier,09/Nov/10 22:02,25/Nov/14 14:40,03/Jan/22 13:13,25/Nov/14 14:40,3.0,,,,,,,,Deployment,,,,,0,,,,"When using a version that ends with "".SNAPSHOT"" instead of the usual ""-SNAPSHOT"", Maven 3.0 changes the project version to the timestamped version.  So ""5.2.0.SNAPSHOT"" becomes something like ""5.2.0.20101109.215833-1"".  A Nexus snapshot repository will reject this deployment because the version in the directory name does not end with ""SNAPSHOT"".

I tested that this works in Maven 2.2.1 and Maven 3.0-beta-1, but does not work in Maven 3.0.  The build returns an HTTP 400 error when deploying to Nexus.

Error from Nexus log
{noformat}
2010-11-09 22:02:23 INFO [1298122354-2147] - o.s.n.p.m.m.M2Repos~ - Storing of item snapshots:/org/drools
/drools/5.2.0.20101110.030222-361/drools-5.2.0.20101110.030222-361.pom is forbidden by Maven Repository 
policy. Because snapshots is a SNAPSHOT repository
2010-11-09 22:02:23 ERROR [1298122354-2147] - o.s.n.r.ContentPlex~ - Got exception during processing 
request ""PUT http://repository.jboss.org/nexus/content/repositories/snapshots/org/drools/drools
/5.2.0.20101110.030222-361/drools-5.2.0.20101110.030222-361.pom"": Storing of item snapshots:/org/drools
/drools/5.2.0.20101110.030222-361/drools-5.2.0.20101110.030222-361.pom is forbidden by Maven Repository 
policy. Because snapshots is a SNAPSHOT repository 
{noformat}

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-4957,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28uun:",9223372036854775807,,,,,,,,,,,,,,,,,,,"10/Nov/10 08:43;bentmann;This is caused by an inconsistency in snapshot detection. Maven [2.0, 3.0] consider ""5.2.0-20101110.030222-361"" a snapshot version but not ""5.2.0.20101110.030222-361"" whereas the corresponding base forms ""5.2.0-SNAPSHOT"" and ""5.2.0.SNAPSHOT"" are both considered snapshot versions. I.e. if one tried to resolve the timestamped snapshot 5.2.0.20101110.030222-361 as a dependency, it would fail as well.;;;","11/Nov/10 07:33;brianf@infinity.nu;I think we should stick with the x.y.z-SNAPSHOT form for both expanded and non-expanded forms. Widening that pattern in Maven is just bound to cause additional problems in all the ecosystem tools that need to interpret snapshot v release;;;","11/Nov/10 07:37;jvanzyl;Why exactly do you need x.y.z.SNAPSHOT instead of x.y.z-SNAPSHOT? If they are trying have OSGi versioning then we should probably have something that means something in OSGi which would be x.y.z.qualifier. We want to move toward OSGi and this could be the first step. But I think you just took advantage of something we were doing wrong. We can probably help Mark Proctor fix the Drools build.;;;","10/Dec/10 10:46;ge0ffrey.desmet;Drools recently dumped the bad snapshot way (.SNAPSHOT) for the good way (-SNAPSHOT) because maven 3  couldn't deal with it and it's better to do it right.;;;","03/Jan/11 14:48;bentmann;As discussed, going forward {{\*-SNAPSHOT}} is the only snapshot version format we want to support. A corresponding warning for irregular snapshot versions has been added as per MNG-4957.;;;","26/Jun/12 10:48;jdcasey;Still, it's interesting that Maven 3.0.4 isn't treating this as either a release OR a snapshot:

{noformat}
[DEBUG] Using connector WagonRepositoryConnector with priority 0 for http://localhost/aprox/api/1.0/group/cs-repo
Downloading: http://localhost/aprox/api/1.0/group/cs-repo/com/redhat/services/rest/user/user-rest-client-java/1.0.0.SNAPSHOT/maven-metadata.xml
[...]
Downloading: http://localhost/aprox/api/1.0/group/cs-repo/com/redhat/services/rest/user/user-rest-client-java/1.0.0.20110720.215608-33/user-rest-client-java-1.0.0.20110720.215608-33.pom
[...]
[WARNING] The POM for com.redhat.services.rest.user:user-rest-client-java:jar:1.0.0.20110720.215608-33 is missing, no dependency information available
{noformat}

You'll notice that it's grabbing the maven-metadata.xml from the 1.0.0.SNAPSHOT version dir, then using that to formulate a new URL (just as it would for a snapshot). The problem is, it's formatting the URL incorrectly. So, it appears we have a half-baked snapshot implementation where .SNAPSHOT is concerned.

Whether or not we choose to support .SNAPSHOT, this is broken.;;;","26/Jun/12 10:49;jdcasey;It's still broken, even if we suppose that .SNAPSHOT isn't supported. If that's true, then x.y.z.SNAPSHOT should be treated as a release version (not interpreted at all)...and it's not. See my comment just above this one.;;;","25/Nov/14 14:40;michael-o;Please refer to https://cwiki.apache.org/confluence/display/MAVEN/The+Great+JIRA+Cleanup+of+2014 if you're wondering why this issue was closed out.

Assignee, if you think you can fix this bug anytime soon, please reopen and proceed appropriately.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLONE -Multiple Executions of Plugin at Difference Inhertiance levels causes plugin executions to run multiple times,MNG-4879,12795868,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Cannot Reproduce,bentmann,dbernard,dbernard,26/Oct/10 20:09,27/Oct/10 03:16,03/Jan/22 13:13,27/Oct/10 03:16,,,,,,,,,Inheritance and Interpolation,,,,,0,,,,"Can occur in a variety of ways, but the attached test case shows a parent pom defining an antrun-execution, and then a child specifying another execution with a different id.  Both executions run twice when running from the child.

I believe this is the same as Kenney Westerhof's comment: http://jira.codehaus.org/browse/MNG-2054#action_62477",,,,,,,,,,,,,,,,,MNG-2237,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-2054,,,,,,,,,,,"26/Oct/10 20:09;dbernard;repeat-test.zip;https://issues.apache.org/jira/secure/attachment/12713043/repeat-test.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i297pz:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"26/Oct/10 20:15;dbernard;This regressed in Maven 3.0 unless this is intended behaviour. 
Don't have permission to edit this to update the ""affected"".
Apache Maven 3.0 (r1004208; 2010-10-04 22:50:56+1100)
;;;","27/Oct/10 03:16;bentmann;Not able to reproduce from the information given, both inherited execution and child execution run exactly once:
{noformat}
> mvn -V package
Apache Maven 3.0 (r1004208; 2010-10-04 13:50:56+0200)
Java version: 1.5.0_22
Java home: D:\java\jdk-1.5\jre
Default locale: de_DE, platform encoding: Cp1252
OS name: ""windows 7"" version: ""6.1"" arch: ""x86"" Family: ""windows""
[INFO] Scanning for projects...
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building Child Repeat Execution Test 1.0
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.4.3:resources (default-resources) @ child-repeat-test ---
[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory M:\downloads\repeat-test\repeat-test\repeat-child-test\src\main\resources
[INFO] 
[INFO] --- maven-compiler-plugin:2.3.2:compile (default-compile) @ child-repeat-test ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-resources-plugin:2.4.3:testResources (default-testResources) @ child-repeat-test ---
[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory M:\downloads\repeat-test\repeat-test\repeat-child-test\src\test\resources
[INFO] 
[INFO] --- maven-compiler-plugin:2.3.2:testCompile (default-testCompile) @ child-repeat-test ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.5:test (default-test) @ child-repeat-test ---
[INFO] No tests to run.
[INFO] 
[INFO] --- maven-jar-plugin:2.3.1:jar (default-jar) @ child-repeat-test ---
[WARNING] JAR will be empty - no content was marked for inclusion!
[INFO] 
[INFO] --- maven-antrun-plugin:1.3:run (parent-echo) @ child-repeat-test ---
[INFO] Executing tasks
     [echo] PARENT TESTING
[INFO] Executed tasks
[INFO] 
[INFO] --- maven-antrun-plugin:1.3:run (child-echo) @ child-repeat-test ---
[INFO] Executing tasks
     [echo] CHILD TESTING
[INFO] Executed tasks
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 1.050s
[INFO] Finished at: Wed Oct 27 10:13:36 CEST 2010
[INFO] Final Memory: 3M/7M
[INFO] ------------------------------------------------------------------------
{noformat}
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dependency exclusions not always honored for dependencies with classifier,MNG-4872,12797020,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,bentmann,karlmdavis,karlmdavis,22/Oct/10 00:30,06/Jan/11 05:20,03/Jan/22 13:13,22/Oct/10 17:17,2.2.1,,,,,3.0-beta-1,,,Dependencies,,,,,0,,,,"Like the summary says, I've encountered and tracked down a bug that prevents dependency exclusions from being honored by plugins when the dependency with the exclusions has a classifier. This seems to only occur or surface in multi-module builds.

For example, I have a multi-module project structured as follows:
{noformat}
myproj-parent
  myproj-a
  myproj-b
{noformat}

If {{myproj-a}} produces a classified artifact (say, an obfuscated JAR via ProGuard) and {{myproj-b}} has it as a dependency with exclusions, those exclusions will not be honored by plugins run in {{myproj-b}} (say, the webstart plugin).

I think I've tracked the problem down to the {{replaceWithActiveArtifact(...)}} method of {{org.apache.maven.project.MavenProject}}. Specifically, see [lines 1772 through 1784|http://maven.apache.org/ref/2.2.1/xref/org/apache/maven/project/MavenProject.html#1772]. The following {{if}} clause does not account for artifacts with classifiers:
{noformat}
if ( ref.getArtifact() != null
     && ref.getArtifact().getDependencyConflictId().equals( pluginArtifact.getDependencyConflictId() ) )
{noformat}

Because the classified {{pluginArtifact}} does not match the _main_ artifact of {{ref}}, the artifact is not resolved from the currently building project's dependencies. As the method continues, it is instead resolved with {{myproj-a}}'s ""standard"" metadata, which of course don't include the exclusions in {{myproj-b}}.

I've marked this bug a blocker because I can't think of a way around it and it's badly polluting one of my project's builds. Due to it, a webstart build that only needs 30 artifacts has over 100. I have not yet tried to reproduce it in Maven 3.x because our company likely won't be moving to it for a couple of months.","Windows 7 64bit, Java 1.6 32bit",,,,,,,,,,,,,,,,MNG-4961,MNG-4939,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Oct/10 19:23;karlmdavis;2010-10-24-1715-fix-to-maven-project-for-MNG4872.patch;https://issues.apache.org/jira/secure/attachment/12713209/2010-10-24-1715-fix-to-maven-project-for-MNG4872.patch","22/Oct/10 11:35;karlmdavis;myproj.zip;https://issues.apache.org/jira/secure/attachment/12713041/myproj.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28utj:",9223372036854775807,,,,,,,,,,,,,,,,,,,"22/Oct/10 04:08;bentmann;Could you also attach a working test project that actually exhibits the issue you describe?;;;","22/Oct/10 11:35;karlmdavis;Sorry, had planned to but needed sleep last night. Here you are. Just run {{mvn clean package}} on the root {{myproj}} and then take a look in {{myproj/myproj-b/target/myproj-b-0.0.1-SNAPSHOT.zip}}. You'll notice that the supposed-to-be-excluded log4j library is in there. If you comment out the classifier in {{myproj-b}}'s dependency and re-build, the exclusion works as expected.;;;","24/Oct/10 19:23;karlmdavis;This is a patch for the reported issue. This patch is against the root of {{maven-project}} in the 2.2.1 tag. If you guys end up doing another 2.2.1 release, I'd greatly appreciate it if you could include these fixes.

Please note that once I'd fixed the lines of code mentioned in the description, I ran into problems with other methods that made similar assumptions. A lot of the code in {{maven-project}} neglects to account for anything other than the project's ""main"" artifact. I fixed those places that I could find (the ones that caused my build to go boom) but there are likely others still left.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Profile activated accidentially,MNG-4846,12795824,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Incomplete,,compi,compi,02/Oct/10 14:36,22/Jan/14 20:31,03/Jan/22 13:13,22/Jan/14 20:31,2.2.1,,,,,,,,Profiles,,,,,0,,,,"When you define a profile activated like

{code}
  ...
  <profiles>
    <profile>
      <id>someCase</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>somePropertyName</name>
          <value>!Value</value>
        </property>
      </activation>
      ...
    </profile>
  </profiles>
  ...
{code}

this profile will also be activated when no property/profile is defined on the command line. I expected that profile beeing activated only when you supply -DsomePropertyName=NotTheValue.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Oct/10 15:11;compi;SystemPropertyProfileActivator.patch;https://issues.apache.org/jira/secure/attachment/12713077/SystemPropertyProfileActivator.patch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28urj:",9223372036854775807,,,,,,,,,,,,,,,,,,,"04/Oct/10 05:28;bentmann;This works as designed, since {{""Value"".equals( System.getProperty( ""somePropertyName"" ) ) == false}} when {{somePropertyName}} has not been specified.;;;","04/Oct/10 06:21;compi;
But then there is no difference to
{code}
      ...
      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>!somePropertyName</name>
        </property>
      </activation>
      ...
{code}
and make no sense for me.

By specifying <name>somePropertyName</name> I would expect that property being there but not having the value ""Value"". That makes the difference.

To be more precise:
What I would like to do is defining some properties as default. The same properties should be used when activating a profile by property ""env"" and the value ""target"". Different properties should be used - and are defined in another profile - when specifying the property ""env"" with a value other than ""target"" to activate that profile. So the only way, rather than creating a profile for each possible value, is the way I tried to manage it and that's the way how it should work in my opinion.;;;","04/Oct/10 06:22;compi;see my last comment;;;","16/Oct/10 15:11;compi;Created and attached a patch for SystemPropertyProfileActivator covering the difference mentioned. Please check it and give some feedback.;;;","22/Jan/14 20:23;jvanzyl;Please refer to https://cwiki.apache.org/confluence/display/MAVEN/The+Great+JIRA+Cleanup+of+2014;;;","22/Jan/14 20:31;jvanzyl;Please refer to https://cwiki.apache.org/confluence/display/MAVEN/The+Great+JIRA+Cleanup+of+2014 if you're wondering why this issue was closed out.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven 3 RC1 crashes with IBM JDK 6,MNG-4844,12797012,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Duplicate,bentmann,julianpayne,julianpayne,30/Sep/10 07:40,30/Sep/10 07:44,03/Jan/22 13:13,30/Sep/10 07:44,,,,,,,,,,,,,,0,,,,"Running the minimal project that is provided crashes maven with this error:

[ERROR] Internal error: java.lang.NullPointerException -> [Help 1]
org.apache.maven.InternalErrorException: Internal error: java.lang.NullPointerException
	at org.apache.maven.lifecycle.internal.BuilderCommon.handleBuildError(BuilderCommon.java:128)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:95)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:315)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:152)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:445)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:168)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:48)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:600)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
Caused by: java.lang.NullPointerException
	at org.sonatype.aether.util.graph.transformer.JavaEffectiveScopeCalculator.getInheritedScopes(JavaEffectiveScopeCalculator.java:149)
	at org.sonatype.aether.util.graph.transformer.JavaEffectiveScopeCalculator.resolve(JavaEffectiveScopeCalculator.java:126)
	at org.sonatype.aether.util.graph.transformer.JavaEffectiveScopeCalculator.transformGraph(JavaEffectiveScopeCalculator.java:80)
	at org.sonatype.aether.util.graph.transformer.ChainedDependencyGraphTransformer.transformGraph(ChainedDependencyGraphTransformer.java:76)
	at org.sonatype.aether.impl.internal.DefaultDependencyCollector.collectDependencies(DefaultDependencyCollector.java:246)
	at org.sonatype.aether.impl.internal.DefaultRepositorySystem.collectDependencies(DefaultRepositorySystem.java:265)
	at org.apache.maven.project.DefaultProjectDependenciesResolver.resolve(DefaultProjectDependenciesResolver.java:117)
	at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.getDependencies(LifecycleDependencyResolver.java:165)
	at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.resolveProjectDependencies(LifecycleDependencyResolver.java:104)
	at org.apache.maven.lifecycle.internal.MojoExecutor.ensureDependenciesAreResolved(MojoExecutor.java:244)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:187)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:148)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:140)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)

All the details are in the readme.txt in the attached zip file.
","Apache Maven 3.0-RC1 (r997478; 2010-09-15 21:57:55+0200)
Java version: 1.6.0
Java home: C:\Dev\ibm_jdk1.6.0_8\jre
Default locale: en_US, platform encoding: Cp1252
OS name: ""windows xp"" version: ""5.1 build 2600 service pack 3"" arch: ""x86"" Family: ""windows""

IBM JDK 6:
java version ""1.6.0_21""
Java(TM) SE Runtime Environment (build 1.6.0_21-b07)
Java HotSpot(TM) Client VM (build 17.0-b17, mixed mode, sharing)",,,,,,,,,,,,,,,,,,,,,,,MNG-4798,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Sep/10 07:40;julianpayne;mvn3-crash.zip;https://issues.apache.org/jira/secure/attachment/12713245/mvn3-crash.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28m6f:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"30/Sep/10 07:44;bentmann;Known bug in the IBM/Harmony class library, please try [3.0-RC3|https://repository.apache.org/content/repositories/maven-014/org/apache/maven/apache-maven/3.0-RC3/] where we added a workaround.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven 3 Regression: Missing constructor of org.codehaus.plexus.component.configurator.converters.special.ClassRealmConverter,MNG-4832,12795848,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,bentmann,jaxzin,jaxzin,22/Sep/10 15:24,27/Sep/10 11:21,03/Jan/22 13:13,24/Sep/10 16:41,3.0,,,,,3.0,,,,,,,,0,,,,"I reported MNG-4811 and it was fixed for 3.0-RC2 but introduced a new error.  The source for com.espn.maven.plugins.espnservice.IncludeProjectDependenciesComponentConfigurator is attached to MNG-4811.  The exception I'm seeing is below:


Caused by: java.lang.NoSuchMethodError: org.codehaus.plexus.component.configurator.converters.special.ClassRealmConverter.<init>(Lorg/codehaus/classworlds/ClassRealm;)V
	at com.espn.maven.plugins.espnservice.IncludeProjectDependenciesComponentConfigurator.configureComponent(IncludeProjectDependenciesComponentConfigurator.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:90)
	at org.apache.maven.plugin.internal.DefaultMavenPluginManager.populatePluginFields(DefaultMavenPluginManager.java:505)
	... 22 more
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28lnb:",9223372036854775807,,,,,,,,,,,,,,,,,,,"24/Sep/10 08:10;bentmann;Another side note about your converter or any other custom converter you write: You very likely don't need the following line for your mojo:
{code:java}
converterLookup.registerConverter(new ClassRealmConverter(containerRealm));
{code}
In the basic converter, it exists only for backward-compat and I'm not aware of any valid use case that requires it.;;;","24/Sep/10 16:41;bentmann;Fixed in [r1001090|http://svn.apache.org/viewvc?view=revision&revision=1001090].;;;","27/Sep/10 11:21;jaxzin;Thanks Ben for your help.  I confirmed with 3.0-RC3 that my plugin now works as-is with no apparent regressions.  I will refactor with your suggestions ASAP, but its nice to see it work untouched in a 3.0 release.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Custom Maven Plugin regression in Maven 3.x, custom ComponentConfigurator causes infinite loop",MNG-4811,12795791,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,bentmann,jaxzin,jaxzin,16/Sep/10 13:12,22/Sep/10 15:25,03/Jan/22 13:13,22/Sep/10 12:56,3.0-beta-1,3.0-beta-2,3.0-beta-3,,,3.0,,,,,,,,0,,,,"I have a custom Maven plugin that I wrote and it has a custom ComponentConfigurator.  This doesn't cause issues with Maven 2.x builds but for Maven 3.x builds it gets in an infinite loop (stacktrace at bottom).  My ComponentConfigurator overrides ""public void configureComponent(Object component, PlexusConfiguration configuration, ExpressionEvaluator expressionEvaluator, ClassRealm containerRealm, ConfigurationListener listener) throws ComponentConfigurationException"" and is built against Maven 2.0.8 artifacts.  This plugin is needed in both Maven 2.x and 3.x builds so rebuilding with 3.x dependency isn't an option.

I've attached the source of my custom ComponentConfigurator.

It is used by one mojo like this:

/**
 * A Maven 2 goal responsible for creating ESPN service configuration files
 * by combining the information defined in the espnservices.xml and executing Tea templates.
 *
 * @phase generate-resources
 * @goal process-config
 * @requiresDependencyResolution
 * @configurator include-project-dependencies
 * @since Mar 4, 2008 3:54:07 PM
 */
public class ProcessConfigMojo extends AbstractMojo {
...



Stacktrace:

java.lang.reflect.InvocationTargetException
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
Caused by: java.lang.StackOverflowErrorjava.lang.reflect.InvocationTargetException
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
		at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:85)
Caused by: java.lang.StackOverflowError
	at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:544)
	at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:252)
	at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:106)
	at java.io.OutputStreamWriter.write(OutputStreamWriter.java:190)
	at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:111)
	at java.io.PrintStream.write(PrintStream.java:476)
	at java.io.PrintStream.print(PrintStream.java:619)
	at java.io.PrintStream.println(PrintStream.java:756)
	at java.lang.Throwable.printStackTraceAsCause(Throwable.java:488)
	at java.lang.Throwable.printStackTrace(Throwable.java:468)
	at java.lang.Throwable.printStackTrace(Throwable.java:451)
	at org.codehaus.plexus.component.configurator.AbstractComponentConfigurator.configureComponent(AbstractComponentConfigurator.java:90)
	... 1012 more
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Sep/10 13:12;jaxzin;IncludeProjectDependenciesComponentConfigurator.java;https://issues.apache.org/jira/secure/attachment/12713046/IncludeProjectDependenciesComponentConfigurator.java",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i297d3:",9223372036854775807,,,,,,,,,,,,,,,,,,,"17/Sep/10 07:34;bentmann;bq. addProjectDependenciesToClassRealm(expressionEvaluator, containerRealm);
You are aware that this pollution of the plugin realm is a catastrophe for the Maven runtime system? If your plugin needs to load classes from the project classpath, it should create a dedicated class loader and not stuff the project dependencies into the plugin classpath. While the stack overflow needs investigation, be warned that hijacking the plugin realms like this isn't supported.;;;","17/Sep/10 10:42;jaxzin;Thanks Benjamin, I wasn't aware, otherwise I wouldn't have written that code.  Do you have an example of a plugin that does what I need in the way you propose? I've read everything I've found (books, blog posts, mailing lists, etc) about plugin development but nothing digs as deep as explaining the inner-workings you are knowledgeable about. If I'm wrong, and this architecture and/or solution is well-documented, I'd greatly appreciate a link to it so I can refactor this plugin I've written so it works with Maven 2 and 3.;;;","17/Sep/10 11:00;bentmann;I was suggesting to set up an {{URLClassLoader}} with the project dependencies, similar to what [AbstractMappingMojo.getProjectClassLoader()|http://svn.codehaus.org/mojo/trunk/mojo/castor-maven-plugin/src/main/java/org/codehaus/mojo/castor/AbstractMappingMojo.java] from Mojo's castor-maven-plugin does (the code there isn't perfect but you get the idea) and use that class loader to load any classes/resources from the project dependencies. Something that you know better than me is how the project dependencies and the plugin dependencies need to interact, i.e. do you want full isolation of both or shall the project dependencies be considered additions with a higher/lower precedence that potentially conflicting classes from the plugin class path.;;;","22/Sep/10 12:56;bentmann;Fixed in [r1000107|http://svn.apache.org/viewvc?view=revision&revision=1000107].;;;","22/Sep/10 15:25;jaxzin;I got farther but got a new error in the RC2 release.  MNG-4832;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
'org.apache.maven.plugins:maven-install-plugin:2.3.1'. A required class is missing: org.codehaus.plexus.digest.Digester,MNG-4794,12796610,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,bentmann,ajoe04,ajoe04,03/Sep/10 05:57,26/Sep/10 10:51,03/Jan/22 13:13,26/Sep/10 10:50,3.0-beta-3,,,,,3.0,,,,,,,,0,,,,"This error doesn't show up on Windows with maven 3 beta-3, Java 1.6.0_21 !!!
This error also doesn't show up with maven 3 beta-2 on Linux and Windows, both Java 1.6.0_21.

I switched from maven 3 beta-2 to beta-3 and got this error. 
I deleted the complete .m2/repository/ but nothing changed.

Only on Linux with maven 3 beta-3 I can reproduce this error:
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.3.1:install (default-install) on project nivadis: Execution default-install of goal org.apache.maven.plugins:maven-install-plugin:2.3.1:install failed: Unable to load the mojo 'install' in the plugin 'org.apache.maven.plugins:maven-install-plugin:2.3.1'. A required class is missing: org.codehaus.plexus.digest.Digester
-----------------------------------------------------
realm =    plugin>org.apache.maven.plugins:maven-install-plugin:2.3.1
strategy = org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy
urls[0] = file:/home/vbs/.m2/repository/org/apache/maven/plugins/maven-install-plugin/2.3.1/maven-install-plugin-2.3.1.jar
urls[1] = file:/home/vbs/.m2/repository/org/codehaus/plexus/plexus-utils/1.1/plexus-utils-1.1.jar
Number of foreign imports: 4
import: Entry[import org.codehaus.plexus.util.xml.pull.XmlSerializer from realm ClassRealm[plexus.core, parent: null]]
import: Entry[import org.codehaus.plexus.util.xml.pull.XmlPullParserException from realm ClassRealm[plexus.core, parent: null]]
import: Entry[import org.codehaus.plexus.util.xml.pull.XmlPullParser from realm ClassRealm[plexus.core, parent: null]]
import: Entry[import org.codehaus.plexus.util.xml.Xpp3Dom from realm ClassRealm[plexus.core, parent: null]]

realm =    maven.api
strategy = org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy
Number of foreign imports: 21
import: Entry[import org.sonatype.aether from realm ClassRealm[plexus.core, parent: null]]
import: Entry[import org.codehaus.plexus.personality from realm ClassRealm[plexus.core, parent: null]]
import: Entry[import org.codehaus.plexus.logging from realm ClassRealm[plexus.core, parent: null]]
import: Entry[import org.codehaus.plexus.lifecycle from realm ClassRealm[plexus.core, parent: null]]
import: Entry[import org.codehaus.plexus.context from realm ClassRealm[plexus.core, parent: null]]
import: Entry[import org.codehaus.plexus.container from realm ClassRealm[plexus.core, parent: null]]
import: Entry[import org.codehaus.plexus.configuration from realm ClassRealm[plexus.core, parent: null]]
import: Entry[import org.codehaus.plexus.component from realm ClassRealm[plexus.core, parent: null]]
import: Entry[import org.codehaus.plexus.classworlds from realm ClassRealm[plexus.core, parent: null]]
import: Entry[import org.codehaus.plexus.PlexusContainerException from realm ClassRealm[plexus.core, parent: null]]
import: Entry[import org.codehaus.plexus.PlexusContainer from realm ClassRealm[plexus.core, parent: null]]
import: Entry[import org.codehaus.plexus.PlexusConstants from realm ClassRealm[plexus.core, parent: null]]
import: Entry[import org.codehaus.plexus.MutablePlexusContainer from realm ClassRealm[plexus.core, parent: null]]
import: Entry[import org.codehaus.plexus.DuplicateChildContainerException from realm ClassRealm[plexus.core, parent: null]]
import: Entry[import org.codehaus.plexus.DefaultPlexusContainer from realm ClassRealm[plexus.core, parent: null]]
import: Entry[import org.codehaus.plexus.DefaultContainerConfiguration from realm ClassRealm[plexus.core, parent: null]]
import: Entry[import org.codehaus.plexus.DefaultComponentRegistry from realm ClassRealm[plexus.core, parent: null]]
import: Entry[import org.codehaus.plexus.ContainerConfiguration from realm ClassRealm[plexus.core, parent: null]]
import: Entry[import org.codehaus.plexus.ComponentRegistry from realm ClassRealm[plexus.core, parent: null]]
import: Entry[import org.codehaus.classworlds from realm ClassRealm[plexus.core, parent: null]]
import: Entry[import org.apache.maven from realm ClassRealm[plexus.core, parent: null]]

-----------------------------------------------------
-> [Help 1]
[ERROR]
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR]
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/PluginContainerException
","Linux 2.6.27.48-0.6-pae #1 SMP 686 athlon i386 GNU/Linux - SUSE Linux Enterprise Server 11.
Java 1.6.0_21 Sun",,,,,,,,,,,,,,,,MNG-4798,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i290av:",9223372036854775807,,,,,,,,,,,,,,,,,,,"03/Sep/10 06:15;bentmann;The plugin class path is incomplete, which is usually caused by bad POM, in this case the maven-install-plugin-2.3.1.pom. I'm not able reproduce this from the information given. So please verify your local copy of the mentioned POM actually matches the [remote copy on central|http://repo2.maven.org/maven2/org/apache/maven/plugins/maven-install-plugin/2.3.1/maven-install-plugin-2.3.1.pom] or attach a full debug log from Maven which would reveal why it didn't properly parse the POM.;;;","08/Sep/10 02:47;ajoe04;I checked the pom with different tools in different ways (checksum, differ, bytes-size) - they all say the pom's on this computer and on my windows computer are the same.

Steps's I already did:
1.) deleted .m2/repository/
2.) run Maven 3 Beta-2 mvn clean install - all jar's are downloaded, no failure.
3.) change to Maven 3 Beta-3.
4.) run Maven 3 Beta-3 mvn clean install (with the same files inside the repository) it throws this error MNG-4794
5.) run Maven 3 Beta-3 mvn clean package it throws the error MNG-4798
Environment: Suse Linux Enterprise (SLES) 11, Sun Java 1.6.0_21

I tried using Ubuntu (10.10 beta) on my Notebook, with Sun Java 1.6.0_21 it works.

Summary:
On my SLES Server it works with Maven 3 Beta-2 but it doesn't work with Beta-3. 
Maven 3 Beta-3 works fine on my WinXP and Ubuntu Installation. All used the same Java Version.

Possibly causes:
- SLES Server 11 - because until now it only happens there.
- Changes inside Maven - because it works fine with Beta-2 but not Beta-3.

I'll try to provide debug output from the Beta-2 and Beta-3 run.
;;;","08/Sep/10 08:03;ajoe04;I found the cause of this problem!
On the SLES Server there were two JDK's installed. The Sun JDK and an IBM JDK.

JAVA_HOME was pointing to the IBM-JDK and in the PATH the Sun JDK was first:
output of: mvn -version
Apache Maven 3.0-beta-3 (r990787; 2010-08-30 14:44:03+0200)
Java version: 1.6.0
Java home: /usr/lib/jvm/java-1_6_0-ibm-1.6.0/jre
Default locale: de_DE, platform encoding: ISO-8859-1
OS name: ""linux"" version: ""2.6.27.48-0.6-pae"" arch: ""x86"" Family: ""unix""

output of (Sun JDK): java -version
java version ""1.6.0_21""
Java(TM) SE Runtime Environment (build 1.6.0_21-b06)
Java HotSpot(TM) Client VM (build 17.0-b16, mixed mode, sharing)

output of (IBM-JDK): /usr/lib/jvm/java-1_6_0-ibm-1.6.0/jre/java -version 
java version ""1.6.0""
Java(TM) SE Runtime Environment (build pxi3260sr8-20100409_01(SR8))
IBM J9 VM (build 2.4, JRE 1.6.0 IBM J9 2.4 Linux x86-32 jvmxi3260sr8-20100401_55940 (JIT enabled, AOT enabled)
J9VM - 20100401_055940
JIT  - r9_20100401_15339
GC   - 20100308_AA)
JCL  - 20100408_01

Then I changed the JAVA_HOME to the Sun-JDK and it works. Afterwards I changed the JAVA_HOME and the PATH to the IBM-JDK and I'm getting the exception again.;;;","08/Sep/10 08:07;bentmann;I would still appreciate a debug log to see how exactly the JDK affects the overall build process.;;;","26/Sep/10 10:50;bentmann;Installed workaround for JRE bug in [r1001459|http://svn.apache.org/viewvc?view=revision&revision=1001459].;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can't deploy to Nexus staging repository,MNG-4781,12795819,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,bentmann,bentmann,bentmann,26/Aug/10 11:05,30/Aug/10 06:19,03/Jan/22 13:13,30/Aug/10 06:19,3.0-beta-3,,,,,3.0-beta-3,,,Deployment,,,,,0,,,,"Trying to deploy to a Nexus staging repository using Aether yields
{noformat}
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-deploy-plugin:2.4:deploy (default-deploy) [...]
Failed to retrieve remote metadata [...]
Error transferring file: Server returned HTTP response code: 400 for URL [...]
{noformat}

The issue is caused by the combination of
a) Aether first trying to fetch the remote metadata (instead of PUTting something first)
b) Nexus returning a 400 (instead of 404) for the requested metadata",Nexus 1.7.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i297a7:",9223372036854775807,,,,,,,,,,,,,,,,,,,"30/Aug/10 06:19;bentmann;Fixed in [r990771|http://svn.apache.org/viewvc?view=revision&revision=990771].;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
lastUpdated file created for releases,MNG-4758,12795792,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Duplicate,bentmann,kha,kha,08/Aug/10 14:08,09/Aug/10 05:27,03/Jan/22 13:13,09/Aug/10 05:27,,,,,,,,,Artifacts and Repositories,,,,,0,,,,"I have a project depending transitively on easymock 2.4
(http://repo2.maven.org/maven2/org/easymock/easymock/2.4/)

When connecting to download the dependency, my network connection failed (for 5-10 seconds) which made maven stop with a connection timeout.

The issue is that a file has been created on my local repo for this release: easymock-2.4.jar.lastUpdated

So when i re-executed the mvn package command, Maven keeps stopping with the same error (connection timeout), whereas it is now came back and working.

I understand the purpose of the lastUpdated file: for snapshots they are more than required. But i really don't understand why the lastUpdated is also applied to releases. If a project is deployed and depends on a release version, I think Maven should keep trying to get this dependency in all available repository until it is found, because it's an illegal state to not find it.

Also, by working in a large company, I really think this lastUpdated file on releases could really prevent or slow down Maven 3 adoption since this is quite an annoying think that will slow down people and increase the work load of the maven support team (at least because Maven will report false-problems that could be now solved).

Is there an option or something that could be temporary put somewhere to get back to the same Maven 2 behavior ?

Thanks a lot,

Mathieu.","JAVA_HOME=/usr/lib/jvm/java-6-sun
Apache Maven 3.0-beta-1 (r935667; 2010-04-19 13:00:39-0400)
Java version: 1.6.0_20
Java home: /usr/lib/jvm/java-6-sun-1.6.0.20/jre
Default locale: en_CA, platform encoding: UTF-8
OS name: ""linux"" version: ""2.6.32-24-generic"" arch: ""i386"" Family: ""unix""",,,,,,,,,,,,,,,,,,,,,,,MNG-4673,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28o9j:",9223372036854775807,,,,,,,,,,,,,,,,,,,"09/Aug/10 05:27;bentmann;You can specify -U on the command line to force a remote trip.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Snapshot version not resolved for version range,MNG-4751,12797294,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,bentmann,briank,briank,05/Aug/10 06:47,05/Apr/15 23:50,03/Jan/22 13:13,15/Sep/10 11:10,3.0-beta-1,,,,,3.0,,,Dependencies,,,,,3,,,,"Even with a snapshot dependency in the pom, a release version is included in the classpath for compilation.

This happens when a mid-level dependency and the top-level project both depend on the same artifact.  The mid-level dependency selects a range of valid versions which includes the snapshot version and the top-level project depends explicitly on the snapshot version.

This is a regression from 2.2.1

To reproduce:
1. Release/deploy/install v1.0 of tlib
2. deploy v1.1-SNAPSHOT of tlib
3. Release/deploy/install v1.0 of tlib2
4. Try to compile tapp","linux x86_64, sun java 1.6.0_14",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-3092,MENFORCER-94,,,,,,,,,,,,,,,,"05/Aug/10 06:47;briank;snapshot_dep.zip;https://issues.apache.org/jira/secure/attachment/12712395/snapshot_dep.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28zp3:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"05/Aug/10 07:10;briank;I found a workaround, I'm not sure that this is the intended behavior but if you make the snapshot a single inclusive range then it works.

in tapp/pom.xml:
    <dependency>
      <groupId>org.tlib</groupId>
      <artifactId>tlib</artifactId>
      <version>[1.1-SNAPSHOT]</version>
    </dependency>
;;;","05/Aug/10 07:34;bentmann;This was an intentional change to fix MNG-3092. The new behavior is apparently as controversial as the previous one, so feel free to join the related discussion [Resolving SNAPSHOTs from Version Ranges in Maven 3|http://maven.40175.n5.nabble.com/Resolving-SNAPSHOTs-from-Version-Ranges-in-Maven-3-td2257936.html];;;","05/Aug/10 15:12;mark@talios.com;This now seems to be affecting IntelliJ IDEA as well ( at least I suspect this might be the reason ), as the IDE's maven support now resolves all project artifacts to the released version, rather than the -SNAPSHOT version in the opened project, which means you get the annoying behavior of single stepping into, and breakpoints stopping on .class entries from a jar file rather than the .java file in our source paths.

As mentioned in MNG-3092 - I love this feature -FOR RELEASES- where I wholeheartedly only want to resolve released artifacts so that any API breakages are caught that otherwise might leak in without a proper version bump ( 1.2.4 -> 1.3.1 for instance ) - but for integration tests, distribution builds, and IDE integration I think having the old behavior is preferred.

Off by default would be fine by me, as long as I can enable it for projects that explicitly say ""give me the bleeding edge"", possibly via a POM element ( schema breaking tho ), a plugin configuration, or just a system property that one needs to set.

I was pointed at http://youtrack.jetbrains.net/issue/IDEA-25146 yesterday (IntelliJ bug report) for some maven resolution oddities which I commented on about this range issue, however they may or may not be related.
;;;","08/Sep/10 01:12;hboutemy;please have a look at http://docs.codehaus.org/display/MAVENUSER/SNAPSHOT+Resolution

if the use case given by Brian is correct, we should transform it as a maven-aether-provider unit test and work on a fix (doing a fork of Maven in github should be ok to have everybody make personal tests);;;","13/Sep/10 17:33;bentmann;FYI, I sent a proposal to the dev thread [Re: snapshot range changes in m3|http://www.mail-archive.com/dev@maven.apache.org/msg85742.html], feedback appreciated.;;;","15/Sep/10 11:10;bentmann;Fixed in [r997380|http://svn.apache.org/viewvc?view=revision&revision=997380] by reverting the change for MNG-3092 until a more robust solution is designed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Javaagent not usable since 3.0-alpha,MNG-4747,12795761,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,bentmann,dams,dams,02/Aug/10 08:22,29/Jul/19 22:17,03/Jan/22 13:13,04/Aug/10 16:13,3.0-alpha-6,3.0-alpha-7,3.0-beta-1,,,3.0-beta-2,,,,,,,,1,,,,"When launching a maven build, the {{-javaagent}} argument is ignored since Maven 3, and was processed with maven 2.X.X.

The use case is a build with jetty:run goal (org.mortbay.jetty:jetty-maven-plugin 8.0.0.M1) with {noformat}-javaagent:""${settings.localRepository}/org/springframework/spring-instrument/${spring-version}/spring-instrument-${spring-version}.jar""{noformat}
",Windows XP 32bits SP3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-4787,,,,,,,,,,,"03/Aug/10 08:56;dams;TestJavaAgent -v2.zip;https://issues.apache.org/jira/secure/attachment/12712558/TestJavaAgent+-v2.zip","03/Aug/10 08:50;dams;TestJavaAgent.zip;https://issues.apache.org/jira/secure/attachment/12712591/TestJavaAgent.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29axb:",9223372036854775807,,,,,,,,,,,,,,,,,,,"02/Aug/10 08:50;bentmann;We need more information than that, {{-javaagent}} is a JVM option, not a Maven option, and a quick test showed that setting it via MAVEN_OPTS is still effective, i.e. the JVM tries to load the agent. So please re-open with a minimal demo project that allows to reproduce your issue.;;;","03/Aug/10 08:48;dams;All my apologies... I didn't take the time to make a proper bug report.
So, here it is, a maven project that reproduce the problem.

To reproduce the bug:
1- set your PATH and M2_HOME to an Maven 3 installation.
2- catch the artifact org.springframework:spring-instrument 3.0.2.RELEASE
3- set MAVEN_OPTS to -javaagent:YOUR_REPO/org/springframework/spring-instrument/3.0.2.RELEASE/spring-instrument-3.0.2.RELEASE.jar
4- run mvn jetty:run

You'll get an exception :
java.lang.IllegalStateException: Must start with Java agent to use InstrumentationLoadTimeWeaver. See Spring documentation

Now :
1- change your PATH and M2_HOME to a Maven 2 installation
2- check that your repository was not any spaces in its path (cause the jetty plugin to fail)
3- run mvn jetty:run

Everything's fine, and if you go to http://localhost:8080/test/, you'll get
Hello World ! - intercepted !
;;;","03/Aug/10 08:50;dams;The test case;;;","03/Aug/10 08:56;dams;Sorry, an configuration error in the pom (thank you Eclipse !);;;","04/Aug/10 16:13;bentmann;Fixed in [r982405|http://svn.apache.org/viewvc?view=revision&revision=982405].;;;","29/Jul/19 22:17;hudson;Build failed in Jenkins: Maven TLP » maven » MAVEN_OPTS #3

See https://builds.apache.org/job/maven-box/job/maven/job/MAVEN_OPTS/3/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
packaging aar declared in one module affects the following modules,MNG-4730,12795794,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Duplicate,bentmann,victorbr,victorbr,14/Jul/10 11:44,17/Jul/10 12:50,03/Jan/22 13:13,17/Jul/10 12:50,2.2.1,,,,,,,,Reactor and Workspace,,,,,0,,,,"When there is an aar module in the reactor, it causes the following modules to install (and then to deploy) their main artifact with the '.aar' extension, although they are regular JAR modules. This is a regression from 2.1.0-M1.
Attached is a project that demonstrates the problem. Inside there's also a log of mvn --debug clean install.",,,,,,,,,,,,,,,,,,,,,,,,MNG-4654,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jul/10 11:44;victorbr;test.zip;https://issues.apache.org/jira/secure/attachment/12713140/test.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i298k7:",9223372036854775807,,,,,,,,,,,,,,,,,,,"17/Jul/10 12:50;bentmann;This is a combination of two issues: one being the missing isolation of projects and their build extensions, and the other being the wrong selection of the artifact handler (MNG-4654).

Apart from the fixes on the Maven side, I suggest to also contact the Axis2 developers and ask them to fix their plugin:
{code:xml}
<component>
  <role>org.apache.maven.artifact.handler.ArtifactHandler</role>
  <role-hint>aar</role-hint>
  <implementation>org.apache.maven.artifact.handler.DefaultArtifactHandler</implementation>
  <configuration>
    <classifier></classifier>
    <extension>aar</extension>
    <type>aar</type>
    <packaging>jar</packaging>
    <language>java</language>
    <addedToClasspath>false</addedToClasspath>
  </configuration>
</component>
{code}
The line {{<packaging>jar</packaging>}} should be removed from the {{components.xml}} of their plugin to make it work properly with Maven 2.x as well.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven generates incorrect MD5 and SHA1 on deply,MNG-4726,12795774,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Duplicate,bentmann,russel,russel,12/Jul/10 12:23,12/Jul/10 13:13,03/Jan/22 13:13,12/Jul/10 12:30,2.2.1,,,,,,,,,,,,,0,,,,"The project exhibiting the problem is JCSP at Codehaus, there are no wiki or web pages at Codehaus for the project, but the Codehaus project page is at http://xircles.codehaus.org/projects/jcsp. (This is a mirror of the Kent Subversion repository in Git for the purpose of getting artefacts into the Maven repository.)  To date only the 1.1-rc5-SNAPSHOT has been tried there is no release upload.

There are issue with the tests so I have to do ""mvn -Dmaven.test.skip=true deploy"".

First deploy appears to go to plan, but the checksums are written wrong.  Every deploy after that gets errors of the form:
{code}
[INFO] [deploy:deploy {execution: default-deploy}]
[INFO] Retrieving previous build number from codehaus.org
[WARNING] *** CHECKSUM FAILED - Checksum failed on download: local = '110ada6eb9e8c34d368f3bd1a6b7ffe0ab4f3f25'; remote = '35bed1f3738459f97c0937df4a741f6182749a82' - RETRYING
[WARNING] *** CHECKSUM FAILED - Checksum failed on download: local = '110ada6eb9e8c34d368f3bd1a6b7ffe0ab4f3f25'; remote = '35bed1f3738459f97c0937df4a741f6182749a82' - IGNORING
Uploading: https://dav.codehaus.org/snapshots.repository/jcsp/org/codehaus/jcsp/jcsp/1.1-rc5-SNAPSHOT/jcsp-1.1-rc5-20100712.171732-2.jar
691K uploaded  (jcsp-1.1-rc5-20100712.171732-2.jar)
[INFO] Uploading project information for jcsp 1.1-rc5-20100712.171732-2
[INFO] Retrieving previous metadata from codehaus.org
[WARNING] *** CHECKSUM FAILED - Checksum failed on download: local = '7c238a5ed9006729bd1dffbe45b41a8259c502cc'; remote = '1f7bcc732be23a69e3c087194e1693f7c9439ba2' - RETRYING
[WARNING] *** CHECKSUM FAILED - Checksum failed on download: local = '7c238a5ed9006729bd1dffbe45b41a8259c502cc'; remote = '1f7bcc732be23a69e3c087194e1693f7c9439ba2' - IGNORING
[INFO] Uploading repository metadata for: 'artifact org.codehaus.jcsp:jcsp'
[INFO] Retrieving previous metadata from codehaus.org
[WARNING] *** CHECKSUM FAILED - Checksum failed on download: local = '110ada6eb9e8c34d368f3bd1a6b7ffe0ab4f3f25'; remote = '35bed1f3738459f97c0937df4a741f6182749a82' - RETRYING
[WARNING] *** CHECKSUM FAILED - Checksum failed on download: local = '110ada6eb9e8c34d368f3bd1a6b7ffe0ab4f3f25'; remote = '35bed1f3738459f97c0937df4a741f6182749a82' - IGNORING
[INFO] Uploading repository metadata for: 'snapshot org.codehaus.jcsp:jcsp:1.1-rc5-SNAPSHOT'
[INFO] [bundle:deploy {execution: default-deploy}]
[INFO] Remote OBR update disabled (enable with -DremoteOBR)
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESSFUL
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 34 seconds
[INFO] Finished at: Mon Jul 12 18:18:02 BST 2010
[INFO] Final Memory: 26M/292M
[INFO] ------------------------------------------------------------------------
{code}

In all cases anyone attempting to obtain the artefacts from the Codehaus snapshot repository is told there is a problem with the checksums.
 
My version of Maven locally is:
{code}
|> mvn -version
Apache Maven 2.2.1 (r801777; 2009-08-06 20:16:01+0100)
Java version: 1.6.0_18
Java home: /usr/lib/jvm/java-6-openjdk/jre
Default locale: en_GB, platform encoding: UTF-8
OS name: ""linux"" version: ""2.6.32-23-generic"" arch: ""amd64"" Family: ""unix""
{code}","Ubuntu Lucid, Maven 2.2.1",,,,,,,,,,,,,,,,,,,,,,,MNG-4301,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28uj3:",9223372036854775807,,,,,,,,,,,,,,,,,,,"12/Jul/10 12:29;russel;This may be a bug that should have been reported to MDEPLOY rather than MNG, but I cannot find a way of moving it.;;;","12/Jul/10 13:13;russel;Apologies for reporting a duplicate, I should have done better research before posting.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Please fix license distribution model,MNG-4680,12796939,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Not A Problem,,brunoharbulot,brunoharbulot,18/May/10 10:21,02/Jul/14 08:44,03/Jan/22 13:13,10/Aug/11 13:18,,,,,,,,,Artifacts and Repositories,,,,,0,,,,"Most OSS licences mandate the redistribution of the licence with the software as a condition in the licence. A large number of projects, more particularly in the central repository, are redistributed without any mechanism to redistribute the licence correctly, thereby making the central repository be in breach of those licences.

While there is a guideline in the ""Introduction to the Standard Directory Layout"" [1] to put the LICENSE.txt and NOTICE.txt file in the root directory, nothing seems to be done with them.
In addition:
  - Since version 2.1 of the maven-repository-plugin, LICENSE.txt is no longer included in the bundle created with repository:bundle-create.
  - LICENSE.txt files in bundles uploaded via the JIRA/MAVENUPLOAD mechanism don't seem to appear in the central repository.

Having <license>BSD</license> or <license>GPL</license> in the POM is not enough.

(See related thread [2].)

[1] http://maven.apache.org/guides/introduction/introduction-to-the-standard-directory-layout.html
[2] http://markmail.org/thread/s5jsvatxbsynwajc#query:+page:1+mid:whtbsnnejszyad2h+state:results",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i296zr:",9223372036854775807,,,,,,,,,,,,,,,,,,,"18/May/10 10:29;bentmann;The Maven core is not responsible for the artifacts produced/deployed by 3rd party projects. Please contact the respective project owners and ask them to fix their builds to produce artifacts that include any required licence files.;;;","18/May/10 11:01;brunoharbulot;Sorry, but the Maven mechanism is flawed, it's not just a matter of contacting the project owners.

Firstly, I am one of these project owners as mentioned in the thread I cited above, and the licence file was packaged properly in the bundle but it was never included in the central repository, despite being bundled correctly.

Secondly, most OSS licences are about the conditions of *redistribution* of the software and Maven, via the central repository or more generally the repository system is *redistributing* software. Yet, the Maven distribution system doesn't actually enable adequate redistribution of the licences as they often require (e.g. BSD), or the documentation needs some serious fixing.;;;","18/May/10 11:25;bentmann;Hint: The art is to report concerns to the right address.

This issue tracker (MNG) is for the Maven core distribution as available from the download site. The Maven core is basically nothing more than a framework for build plugins. What files go into an artifact and what artifacts/files get deployed to repositories is for the most part a matter of the plugins being employed.

bq. the licence file was packaged properly in the bundle but it was never included in the central repository
So, if you have an issue with the contents of the central repository and its maintenance, you can try filling an issue in MEV or contact repo-maintainers@maven.apache.org. Maven core is not responsible for processing bundle uploads.

bq. Yet, the Maven distribution system doesn't actually enable adequate redistribution of the licences
You can include license files inside your artifacts or attach them as secondary artifacts, so I can't follow your reasoning in this regard.;;;","18/May/10 12:20;brunoharbulot;bq. > Yet, the Maven distribution system doesn't actually enable adequate redistribution of the licences
bq. You can include license files inside your artifacts or attach them as secondary artifacts, so I can't follow your reasoning in this regard.

(I've just posted another e-mail on the users list in that thread.)

My reasoning is that redistribution of software is one of the key core features of Maven, and it's built its success upon distributing OSS software via the central repository; yet, it has too little, virtually nothing, to ensure that those licences are respected (considering that most of them are about the conditions of redistribution). The convention over configuration aspect seems to fail in that respect.

One suitable enhancement would be to have a licence file pulled along with the POM file for example, when fetching a new artifact.;;;","10/Aug/11 13:18;struberg;Bruno, what Benjamin tried to express is that Maven itself is _NOT_ responsible for adding any LICENSE.txt file to the artifacts!

There are mechanisms which are perfectly supporting this use case, but this options also must get used by the maintainers of the respective OSS projects. 

As you can see in all ASF maintained projects it _is_ certainly possible as we contain a LICENSE.txt in all of our jars.

If you think that there could be an improvement done to the maven-repository-plugin then please feel free to report an issue over there.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[regression] @required plugin parameters are not validated,MNG-4615,12795644,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,bentmann,magnayn,magnayn,31/Mar/10 11:17,08/Feb/14 07:18,03/Jan/22 13:13,06/Aug/10 11:50,3.0-alpha-7,,,,,3.0-beta-2,,,Plugins and Lifecycle,,,,,1,,,,"Executing

{noformat}mvn -X install:install-file -DgroupId=com.adobe.flex.framework -DartifactId=halo -Dversion=4.0.0.14159 -Dpackaging=swc /Applications/Adobe\ Flash\ Builder\ 4/sdks/4.0.0/frameworks/themes/Halo/halo.swc {noformat}

Yields:

{noformat}Apache Maven 3.0-alpha-7 (r921173; 2010-03-09 22:31:07+0000)
Java version: 1.6.0_17
Java home: /System/Library/Frameworks/JavaVM.framework/Versions/1.6.0/Home
Default locale: en_US, platform encoding: MacRoman
OS name: ""mac os x"" version: ""10.6.3"" arch: ""x86_64"" Family: ""mac""
[INFO] Error stacktraces are turned on.
[DEBUG] Reading user settings from /Users/magnayn/.m2/settings.xml
[DEBUG] Reading global settings from /usr/share/maven/conf/settings.xml
[DEBUG] Using local repository at /Users/magnayn/.m2/repository
[INFO] Scanning for projects...
[DEBUG] Extension realms for project org.apache.maven:standalone-pom:pom:1: (none)
[DEBUG] Looking up lifecyle mappings for packaging pom from ClassRealm[plexus.core, parent: null]
[DEBUG] Resolving plugin prefix install from [org.jvnet.hudson.tools, org.apache.maven.plugins, org.codehaus.mojo]
[DEBUG] Resolved plugin prefix install to org.apache.maven.plugins:maven-install-plugin from POM org.apache.maven:standalone-pom:pom:1
[DEBUG] === REACTOR BUILD PLAN ================================================
[DEBUG] Project: org.apache.maven:standalone-pom:pom:1
[DEBUG] Tasks:   [org.apache.maven.plugins:maven-install-plugin:2.3:install-file]
[DEBUG] Style:   Aggregating
[DEBUG] -----------------------------------------------------------------------
[DEBUG] Project: org.apache.maven:standalone-pom:pom:1
[DEBUG] Tasks:   [/Applications/Adobe Flash Builder 4/sdks/4.0.0/frameworks/themes/Halo/halo.swc]
[DEBUG] Style:   Regular
[DEBUG] =======================================================================
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building Maven Stub Project (No POM) 1
[INFO] ------------------------------------------------------------------------
[DEBUG] === PROJECT BUILD PLAN ================================================
[DEBUG] Project:       org.apache.maven:standalone-pom:1
[DEBUG] Dependencies (collect): []
[DEBUG] Dependencies (resolve): []
[DEBUG] -----------------------------------------------------------------------
[DEBUG] Goal:          org.apache.maven.plugins:maven-install-plugin:2.3:install-file (default-cli)
[DEBUG] Style:         Aggregating
[DEBUG] Configuration: <?xml version=""1.0"" encoding=""UTF-8""?>
<configuration>
  <artifactId>${artifactId}</artifactId>
  <classifier>${classifier}</classifier>
  <createChecksum default-value=""false"">${createChecksum}</createChecksum>
  <file>${file}</file>
  <generatePom>${generatePom}</generatePom>
  <groupId>${groupId}</groupId>
  <javadoc>${javadoc}</javadoc>
  <localRepository>${localRepository}</localRepository>
  <localRepositoryPath>${localRepositoryPath}</localRepositoryPath>
  <packaging>${packaging}</packaging>
  <pomFile>${pomFile}</pomFile>
  <repositoryLayout default-value=""default"">${repositoryLayout}</repositoryLayout>
  <sources>${sources}</sources>
  <updateReleaseInfo default-value=""false"">${updateReleaseInfo}</updateReleaseInfo>
  <version>${version}</version>
</configuration>
[DEBUG] =======================================================================
[INFO] 
[INFO] --- maven-install-plugin:2.3:install-file (default-cli) @ standalone-pom ---
[DEBUG] Created new class realm plugin>org.apache.maven.plugins:maven-install-plugin:2.3
[DEBUG] Populating class realm plugin>org.apache.maven.plugins:maven-install-plugin:2.3
[DEBUG]   Included: org.apache.maven.plugins:maven-install-plugin:maven-plugin:2.3
[DEBUG]   Included: org.codehaus.plexus:plexus-utils:jar:1.5.6
[DEBUG]   Included: junit:junit:jar:3.8.1
[DEBUG]   Included: org.codehaus.plexus:plexus-digest:jar:1.0
[DEBUG]   Excluded: org.apache.maven:maven-plugin-api:jar:2.0.6
[DEBUG]   Excluded: org.apache.maven:maven-project:jar:2.0.6
[DEBUG]   Excluded: org.apache.maven:maven-settings:jar:2.0.6
[DEBUG]   Excluded: org.apache.maven:maven-model:jar:2.0.6
[DEBUG]   Excluded: org.codehaus.plexus:plexus-container-default:jar:1.0-alpha-9-stable-1
[DEBUG]   Excluded: classworlds:classworlds:jar:1.1-alpha-2
[DEBUG]   Excluded: org.apache.maven:maven-profile:jar:2.0.6
[DEBUG]   Excluded: org.apache.maven:maven-artifact-manager:jar:2.0.6
[DEBUG]   Excluded: org.apache.maven:maven-repository-metadata:jar:2.0.6
[DEBUG]   Excluded: org.apache.maven:maven-artifact:jar:2.0.6
[DEBUG]   Excluded: org.apache.maven:maven-plugin-registry:jar:2.0.6
[DEBUG] Configuring mojo 'org.apache.maven.plugins:maven-install-plugin:2.3:install-file' with basic configurator -->
[DEBUG]   (f) artifactId = halo
[DEBUG]   (f) createChecksum = false
[DEBUG]   (f) groupId = com.adobe.flex.framework
[DEBUG]   (f) localRepository =        id: local
      url: file:///Users/magnayn/.m2/repository/
   layout: none

[DEBUG]   (f) packaging = swc
[DEBUG]   (f) repositoryLayout = default
[DEBUG]   (f) updateReleaseInfo = false
[DEBUG]   (f) version = 4.0.0.14159
[DEBUG] -- end configuration --
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 0.430s
[INFO] Finished at: Wed Mar 31 17:13:56 BST 2010
[INFO] Final Memory: 3M/80M
[INFO] ------------------------------------------------------------------------
[WARNING] The requested profile ""jrebel"" could not be activated because it does not exist.
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.3:install-file (default-cli) on project standalone-pom: Execution default-cli of goal org.apache.maven.plugins:maven-install-plugin:2.3:install-file failed. NullPointerException -> [Help 1]
org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.3:install-file (default-cli) on project standalone-pom: Execution default-cli of goal org.apache.maven.plugins:maven-install-plugin:2.3:install-file failed.
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:592)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:323)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:247)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:104)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:427)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:157)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
Caused by: org.apache.maven.plugin.PluginExecutionException: Execution default-cli of goal org.apache.maven.plugins:maven-install-plugin:2.3:install-file failed.
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:114)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:576)
	... 14 more
Caused by: java.lang.NullPointerException
	at org.apache.maven.plugin.install.InstallFileMojo.execute(InstallFileMojo.java:210)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:105)
	... 15 more
[ERROR] 
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/PluginExecutionException
{noformat}","OS X, not in a pom directory",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-5476,,,,,,MNG-4764,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28llz:",9223372036854775807,,,,,,,,,,,,,,,,,,,"31/Mar/10 11:30;bentmann;Your command is missing the -Dfile property;;;","06/Aug/10 11:50;bentmann;Fixed in [r983050|http://svn.apache.org/viewvc?view=revision&revision=983050].;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"command line option ""-update-snapshots"" does not work for parent POMs (Maven 2 also affected)",MNG-4587,12795679,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Won't Fix,brettporter,pniederw,pniederw,13/Mar/10 17:47,20/Sep/10 16:59,03/Jan/22 13:13,20/Sep/10 16:59,2.2.1,,,,,,,,Artifacts and Repositories,,,,,0,,,,"Since I didn't get any response to my comment on MNG-4433, I've opened a new issue. The following is from my original comment.

I have exactly the same issue with 2.2.1. After changing and deploying parent POM, I run build with -U (on a different machine). Excerpt from output:

{noformat}
[INFO] snapshot org.spockframework:spock-parent:0.4-groovy-1.7-SNAPSHOT: checking for updates from central
[17:48:33]: Downloading: http://xxx/artifactory/repo/org/spockframework/spock-parent/0.4-groovy-1.7-SNAPSHOT/spock-parent-0.4-groovy-1.7-SNAPSHOT.pom
[17:48:33]: Downloading: http://xxx/artifactory/repo/org/spockframework/spock-maven/0.4-groovy-1.7-SNAPSHOT/spock-maven-0.4-groovy-1.7-SNAPSHOT.jar
{noformat}

Maven says that it is downloading spock-parent POM, but it doesn't end up in the local repo. Compare to the output after manually deleting the old POM from the local repo:

{noformat}
[INFO] snapshot org.spockframework:spock-parent:0.4-groovy-1.7-SNAPSHOT: checking for updates from central
Downloading: http://xxx/artifactory/repo/org/spockframework/spock-parent/0.4-groovy-1.7-SNAPSHOT/spock-parent-0.4-groovy-1.7-SNAPSHOT.pom
8K downloaded  (spock-parent-0.4-groovy-1.7-SNAPSHOT.pom)
{noformat}

Here we get ""8K downloaded"", which we didn't get before. The local repo now contains the correct POM, and the build succeeds.

Here is what the local repo looked like before I manually deleted the old POM:

{noformat}
drwxr-xr-x  6 pniederw  admin   204 Mar  5 16:48 .
drwxr-xr-x  3 pniederw  admin   102 Dec 14 13:47 ..
-rw-r--r--  1 pniederw  admin   331 Mar  5 16:48 maven-metadata-central.xml
-rw-r--r--  1 pniederw  admin    40 Mar  5 16:48 maven-metadata-central.xml.sha1
-rw-r--r--  1 pniederw  admin  9048 Mar  5 16:48 spock-parent-0.4-groovy-1.7-SNAPSHOT.pom
-rw-r--r--  1 pniederw  admin    40 Dec 14 13:47 spock-parent-0.4-groovy-1.7-SNAPSHOT.pom.sha1
{noformat}

As you can see, the POM's last modified date is recent, but nevertheless the content is old. In fact it still matches the pom.sha1, which was last updated in December! How is this possible?
This is a very insidious bug, and you would help a lot of people by fixing it ASAP.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-4433,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i293c7:",9223372036854775807,,,,,,,,,,,,,,,,,,,"16/Sep/10 09:04;salandur;the most likely cause is that the dependency is installed (with maven-install-plugin) in the remote repository and not deployed (with maven-deploy-plugin). The deploy plugin create's a new snapshot version which is identifiable by maven.;;;","20/Sep/10 16:59;brettporter;as described at https://cwiki.apache.org/confluence/display/MAVEN/Maven+3.x+Compatibility+Notes#Maven3.xCompatibilityNotes-NonuniqueSnapshotDeployments, non-unique snapshots are not going to be supported in the future. I recommend changing to that behaviour.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
surefire-junit-2.4.3 artifact not available with Maven 3 Alpha-6,MNG-4585,12797388,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Not A Problem,bentmann,pierre devreux,pierre devreux,11/Mar/10 02:56,10/Jun/10 04:14,03/Jan/22 13:13,11/Mar/10 04:21,3.0-alpha-6,,,,,,,,Artifacts and Repositories,,,,,0,,,,"When building a project with in plugin management :

{noformat}
<plugin>
   <groupId>org.apache.maven.plugins</groupId>
   <artifactId>maven-surefire-plugin</artifactId>
   <version>2.4.3</version>
</plugin>
{noformat}

_Maven 3 Alpha 6_ fails to download artifact :
{noformat}
Downloading: http://repo1.maven.org/maven2/org/apache/maven/surefire/surefire/2.4.3/surefire-2.4.3.pom
8 KB downloaded at 18.4 KB/sec
Downloading: http://repo1.maven.org/maven2/org/apache/maven/surefire/surefire-booter/2.4.3/surefire-booter-2.4.3.pom
2 KB downloaded at 0.5 KB/sec
Downloading: http://repo1.maven.org/maven2/org/apache/maven/surefire/surefire-api/2.4.3/surefire-api-2.4.3.pom
3 KB downloaded at 4.6 KB/sec
Downloading: http://repo1.maven.org/maven2/org/apache/maven/surefire/surefire-booter/2.4.3/surefire-booter-2.4.3.jar
262 KB downloaded at 144.4 KB/sec
Downloading: http://repo1.maven.org/maven2/org/apache/maven/surefire/surefire-api/2.4.3/surefire-api-2.4.3.jar
504 KB downloaded at 166.2 KB/sec
Downloading: http://repo1.maven.org/maven2/org/apache/maven/surefire/surefire-junit/2.4.3/surefire-junit-2.4.3.pom
[WARNING] Missing artifact metadata for org.apache.maven.surefire:surefire-junit:jar:2.4.3
Downloading: http://repo1.maven.org/maven2/org/apache/maven/surefire/surefire-junit/2.4.3/surefire-junit-2.4.3.jar
{noformat}


and finally 

{noformat}
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.4.3:test (default-test) on project xa-common: Error to resolving suref
ire provider dependency: Error transferring file
  org.apache.maven.surefire:surefire-junit:jar:2.4.3

from the specified remote repositories:
  central (http://repo1.maven.org/maven2, releases=true, snapshots=false)
Path to dependency:
        1) dummy:dummy:jar:1.0
        2) org.apache.maven.surefire:surefire-junit:jar:2.4.3: Connection timed out: connect
-> [Help 1]
{noformat}


But building same project with _Maven 2.0.9_ works fine.

{noformat}
[INFO] Nothing to compile - all classes are up to date
Downloading: http://repo1.maven.org/maven2/org/apache/maven/surefire/surefire-booter/2.4.3/surefire-booter-2.4.3.pom
Downloading: http://repo1.maven.org/maven2/org/apache/maven/surefire/surefire-api/2.4.3/surefire-api-2.4.3.pom
Downloading: http://repo1.maven.org/maven2/org/apache/maven/surefire/surefire-booter/2.4.3/surefire-booter-2.4.3.jar
Downloading: http://repo1.maven.org/maven2/org/apache/maven/surefire/surefire-api/2.4.3/surefire-api-2.4.3.jar
[INFO] [surefire:test]
Downloading: http://repo1.maven.org/maven2/org/apache/maven/surefire/surefire-junit/2.4.3/surefire-junit-2.4.3.pom
Downloading: http://repo1.maven.org/maven2/org/apache/maven/surefire/surefire-providers/2.4.3/surefire-providers-2.4.3.pom
Downloading: http://repo1.maven.org/maven2/org/apache/maven/surefire/surefire-junit/2.4.3/surefire-junit-2.4.3.jar
[INFO] Surefire report directory: D:\workspaces\workspace_xa\xa-common-parent\xa-common-core\target\surefire-reports
{noformat}","windows XP.
maven-3.0-alpha-6
jdk 1.5.0.22",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28xov:",9223372036854775807,,,,,,,,,,,,,,,,,,,"11/Mar/10 04:21;bentmann;bq. 2) org.apache.maven.surefire:surefire-junit:jar:2.4.3: Connection timed out: connect

This is an issue with your network (connection timeout), not Maven.;;;","11/Mar/10 04:42;pierre devreux;Benjamin, I'm not sure this is a network issue.

I launch mvn command on the same project.

The only differences are mvn directory in classpath and M2_HOME variable.
All the rest is identical.
;;;","10/Jun/10 04:14;jean-sebastien.screve@atosorigin.com;Adding this dependency will solve the issue :

<dependency>
	<groupId>org.apache.maven.surefire</groupId>
	<artifactId>surefire-junit4</artifactId>
	<version>2.4.3</version>
	<scope>test</scope>
</dependency>

It will download surefire-junit4 instead of surefire-junit

Kind of weird...

Regards,

Jean-Sébastien Scrève
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Issue running test plugin, build failure .. -Tycho- (getEclipseLauncher?)",MNG-4576,12793593,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Not A Problem,bentmann,michaelhuettermann,michaelhuettermann,03/Mar/10 03:08,03/Mar/10 04:50,03/Jan/22 13:13,03/Mar/10 04:50,3.0-alpha-6,,,,,,,,,,,,,0,,,,"Setting up my test with <packaging>eclipse-test-plugin</packaging> provokes a build failure: the test bundle contains JUnit tests under src/.. and requires some of my other bundles. I run ""mvn clean integration-test -Dtycho.targetPlatform=C:\app\mypath\rcp-target-platform\platform\win32\rcp"" which breaks, see attached log file. (throwing a NPE in context of TestMojo.getEclipseLauncher?) Calling phases before integration-test suceeds. Please find enclosed the debug log and the POM. 


",Tycho 0.7.0 M3-alpha-6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Mar/10 03:08;log.txt;https://issues.apache.org/jira/secure/attachment/12713025/log.txt","03/Mar/10 03:08;pom.xml;https://issues.apache.org/jira/secure/attachment/12712976/pom.xml",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28oun:",9223372036854775807,,,,,,,,,,,,,,,,,,,"03/Mar/10 04:50;bentmann;{noformat}
Caused by: java.lang.NullPointerException
	at org.codehaus.tycho.osgitest.TestMojo.getEclipseLauncher(TestMojo.java:566)
	at org.codehaus.tycho.osgitest.TestMojo.runTest(TestMojo.java:480)
{noformat}
Please report this against [Tycho|https://issues.sonatype.org/browse/TYCHO]. It's apparently the plugin that fails, not Maven.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
maven-clean-plugin:2.3 could not be resolved ..,MNG-4569,12795706,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Cannot Reproduce,bentmann,michaelhuettermann,michaelhuettermann,24/Feb/10 08:28,24/Feb/10 08:39,03/Jan/22 13:13,24/Feb/10 08:39,3.0-alpha-6,,,,,,,,,,,,,0,,,,"Hello,

I downloaded 3.0-alpha-6 and executed an initial ""mvn clean"". A bunch of plugins are downloaded, as expected. But finally, it breaks with ""Plugin org.apache.maven.plugins:maven-clean-plugin:2.3 or one of its dependencies could not be resolved: Missing:
1) org.apache.maven.plugins:maven-clean-plugin:maven-plugin:2.3

Every further ""mvn clean"" reproduces this issue. Also re-installing 3.0-alpha-6 and re-filling local repos reproduces this issue.

Internet connection is available, with no proxy between.

Thank you !!!



","Java 1.6.0_06, Vista",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Feb/10 08:36;bentmann;debug.log;https://issues.apache.org/jira/secure/attachment/12713130/debug.log",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28pcf:",9223372036854775807,,,,,,,,,,,,,,,,,,,"24/Feb/10 08:39;bentmann;Works here and given the level of basic functionallity we talk about (clean) for a bunch of other peoples that use the alphas. So this appears more like an environmental issue on your side. Anyways, impossible to help without a complete debug log or a demo project. In case of network issues, I suggest you contact the [user list|http://maven.apache.org/mail-lists.html] for help with the network setup.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
dependencyManagament dependencies within profiles are not activated by settings.xml ,MNG-4538,12796815,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Duplicate,brettporter,onmomo,onmomo,19/Jan/10 05:39,14/Feb/10 20:17,03/Jan/22 13:13,14/Feb/10 20:17,2.2.1,3.0-alpha-7,,,,,,,,,,,,0,,,,"This issue is *not* reproducable with Maven 2.0.9, 2.0.10 and 2.2.2-RC1-SNAPSHOT.          

I'm referring to the sample projects contained in profileBug.zip:
preparation:

- You need to set in your settings.xml: 

  <activeProfiles>
     <activeProfile>testing</activeProfile>
  </activeProfiles>

- Install main-parent

reproducing:

- Install project parent. This will fail because of ChildTwo. 

The transivite dependency of junit is not beeing resolved correctly through project ChildOne even it's not necessary. I guess not finding commons-lang is just a ""sequence error"" of the ""invalid"" pom of ChildOne.

It seems like the profile isn't activated by the settings.xml and so the dependencies aren't known in context of project ChildTwo transitive dependencies.
But e.g. childOne or childThree can be installed without any problems so the profile should be loaded correctly, the only difference to ChildTwo is that they don't have any transitive dependencies to other projects with the same parent. 

If you cange in project parent the profile ""testing"" to:

<activation>
   <activeByDefault>true</activeByDefault>
</activation>

or change the profile activation by property and install project parent with -Dtesting, childTwo will be installed correctly.

This issue only occurs with maven 3.0 or 2.2.1. It works fine with maven 2.0.10 or 2.2.2-RC1-SNAPSHOT

Will this error be fixed in maven 3.0?",Windows XP,,,,,,,,,,,,,,,,,,,,,,,MNG-4148,,,,,,,,,,,,,,,,,,,MNG-1388,,,,,,,,,,,"19/Jan/10 05:39;onmomo;profileBug.zip;https://issues.apache.org/jira/secure/attachment/12712337/profileBug.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i2958n:",9223372036854775807,,,,,,,,,,,,,,,,,,,"19/Jan/10 05:43;onmomo;read the last two comments in MNG-1388, please;;;","19/Jan/10 07:00;onmomo;I've found a different behavior of maven 2.2.1 & 3.0
maven 2.2.1: You're able to install project parent recursive, but installing project childTwo will fail.
maven 3.0: You aren't able to install project parent recursive, neither you can install childTwo.;;;","14/Feb/10 20:15;brettporter;this is a duplicate of MNG-4148;;;","14/Feb/10 20:17;brettporter;note that this is likely to be rolled back, so you can expect the behaviour in 2.2.1 and 3.0-SNAPSHOT to be permanent. Applying profiles to POMs built from the repository can lead to inconsistent build behaviour across machines - I think the fact this reproduction example was so confusing to find the cause illustrates that.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error while installing dependencies,MNG-4524,12797130,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Duplicate,bentmann,rameshv1210,rameshv1210,09/Jan/10 15:00,06/Apr/15 01:53,03/Jan/22 13:13,17/Mar/10 05:23,2.0.10,,,,,,,,Artifacts and Repositories,,,,,0,,,,"Actually i am new to maven, while i am trying to work on the example given in Maven Definitive guide pdf(example in Chapter 4) its giving me the below error. I have also attached pom.xml for your reference.

Downloading: https://maven-repository.dev.java.net/nonav/repository/javax.mail/poms/mail-1.4.pom
349b downloaded
[WARNING] *** CHECKSUM FAILED - Checksum failed on download: local = 'b521e8e2d0286806e747b071b969ba7a78dab3fb'; remote = '<!DOCTYPE' - RETRYING
Downloading: https://maven-repository.dev.java.net/nonav/repository/javax.mail/poms/mail-1.4.pom
349b downloaded
[WARNING] *** CHECKSUM FAILED - Checksum failed on download: local = 'b521e8e2d0286806e747b071b969ba7a78dab3fb'; remote = '<!DOCTYPE' - IGNORING
[WARNING] POM for 'javax.mail:mail:pom:1.4:compile' is invalid. It will be ignored for artifact resolution. Reason: Not a v4.0.0 POM. for project javax.mail:mail at C:\Documents and Settings\Mahy\.m2\repository\javax\mail\mail\1.4\mail-1.4.pom
[WARNING] POM for 'javax.mail:mail:pom:1.4:compile' is invalid. It will be ignored for artifact resolution. Reason: Not a v4.0.0 POM. for project javax.mail:mail at C:\Documents and Settings\Mahy\.m2\repository\javax\mail\mail\1.4\mail-1.4.pom
Downloading: https://maven-repository.dev.java.net/nonav/repository/javax.jms/poms/jms-1.1.pom
347b downloaded
[WARNING] *** CHECKSUM FAILED - Checksum failed on download: local = 'c8f2a9fb3984c36fc4f4b6a53383b40b52cfec2c'; remote = '<!DOCTYPE' - RETRYING
Downloading: https://maven-repository.dev.java.net/nonav/repository/javax.jms/poms/jms-1.1.pom
347b downloaded
[WARNING] *** CHECKSUM FAILED - Checksum failed on download: local = 'c8f2a9fb3984c36fc4f4b6a53383b40b52cfec2c'; remote = '<!DOCTYPE' - IGNORING
[WARNING] POM for 'javax.jms:jms:pom:1.1:compile' is invalid. It will be ignored for artifact resolution. Reason: Not a v4.0.0 POM. for project javax.jms:jms at
 C:\Documents and Settings\Mahy\.m2\repository\javax\jms\jms\1.1\jms-1.1.pom
[WARNING] POM for 'javax.jms:jms:pom:1.1:compile' is invalid. It will be ignored for artifact resolution. Reason: Not a v4.0.0 POM. for project javax.jms:jms at
 C:\Documents and Settings\Mahy\.m2\repository\javax\jms\jms\1.1\jms-1.1.pom
Downloading: https://maven-repository.dev.java.net/nonav/repository/com.sun.jdmk/poms/jmxtools-1.2.1.pom
357b downloaded
[WARNING] *** CHECKSUM FAILED - Checksum failed on download: local = 'b662aa01d4
9d8a571aa79f67a1d4a92a7d9c6359'; remote = '<!DOCTYPE' - RETRYING
Downloading: https://maven-repository.dev.java.net/nonav/repository/com.sun.jdmk
/poms/jmxtools-1.2.1.pom
357b downloaded


Thanks,
Ramesh.V",WINDOWS XP,,,,,,,,,,,,,,,,,,,,,,,WAGON-314,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Jan/10 15:00;rameshv1210;pom.xml;https://issues.apache.org/jira/secure/attachment/12712128/pom.xml",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28y4f:",9223372036854775807,,,,,,,,,,,,,,,,,,,"10/Feb/10 15:23;xerx593;Could you please provide the command line and the debug output for your problem!? (mvn ... --debug...) (On Vista i build successfully from the scratch -- as downloaded from [http://www.sonatype.com/books/mvnex-book/mvnexbook-examples-0.3.1-project.zip].);;;","17/Mar/10 00:14;aaroniw;I had the same issue and resolved it by using log4j version 1.2.14 instead of 1.2.15.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Contradiction between the documentation and Maven's behavior related to profile-activation with multiple criteria,MNG-4516,12796803,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Incomplete,,bbodnar,bbodnar,04/Jan/10 11:56,18/Mar/19 19:54,03/Jan/22 13:13,22/Jan/14 20:31,2.2.1,,,,,,,,Profiles,,,,,12,,,,"The chapter 5.3.1 of the Maven Complete Reference (edition 0.2.1, Novemeber 2009) speaks unambiguously about considering a logical ""AND"" between more activation-conditions of a profile (cit.: ""A profile is activated when all activation criteria has been satisfied. For example, a profile could list an Operating System family of Windows, and a JDK version of 1.4, this profile will only be activated when the build is executed on a Windows machine running Java 1.4.""). 
Suprisingly, Maven's real behavior suggests, that the logical ""OR"" operator is used. The attached demo project contains a profile with two activation-criteria: a property and the existence of a file. As the output shows (attachement output.txt), the fulfillment of a single criterion is enough for activating the profile. Also the corresponding implementation in the Maven core expresses the intention to use an ""OR"" logic (maven-project/src/main/java/org/apache/maven/profiles/DefaultProfileManager.java r813685 (branch 2.2.x), line 268):

for ( Iterator activatorIterator = activators.iterator(); activatorIterator.hasNext(); )
{
    ProfileActivator activator = (ProfileActivator) activatorIterator.next();

    if ( activator.canDetermineActivation( profile ) )
    {
        if ( activator.isActive( profile ) )
        {
            return true;
        }
    }
}

return false;


As I'm considering the documentation's variant more reasonable, I'm reporting this as a bug instead of a documentation-issue.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-1753,,,,,,MNG-4565,MNG-3106,MNG-1753,MNG-3328,,,,,,,,"04/Jan/10 11:56;bbodnar;debug_output.txt;https://issues.apache.org/jira/secure/attachment/12713015/debug_output.txt","05/Jan/10 14:08;bbodnar;example2.zip;https://issues.apache.org/jira/secure/attachment/12712735/example2.zip","04/Jan/10 11:56;bbodnar;output.txt;https://issues.apache.org/jira/secure/attachment/12712654/output.txt","04/Jan/10 11:56;bbodnar;pom.xml;https://issues.apache.org/jira/secure/attachment/12712962/pom.xml",,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29d73:",9223372036854775807,,,,,,,,,,,,,,,,,,,"04/Jan/10 12:41;dennisl@apache.org;If you read this:
http://maven.apache.org/guides/introduction/introduction-to-profiles.html

you will see:

""As of Maven 2.0.9, the tags <exists> and <missing> could be interpolated. Supported variables are system properties like ${user.home} and enviroment variables like ${env.HOME}. Please note that properties defined in the POM itself are not available for interpolation here."";;;","04/Jan/10 13:22;bbodnar;In my example-project I didn't use variables (except in the project-name and the local ones in the Ant-part). Besides, what should of effect have the interpolation onto the logical relation between the activation criteria?

;;;","05/Jan/10 14:08;bbodnar;I have provided another example (example2.zip), analogue to that mentioned in the chapter 5.3.1 of the Maven Complete Reference. The profile-activation is conditioned by two critera: the operating-system family Windows and JDK version 1.5:
{noformat}
      <activation>
          <os>
              <family>windows</family>
          </os>
          <jdk>1.5</jdk>
      </activation>
{noformat} 
By the documentation, it is expected that the profile will *only be activated when the build is executed on a Windows machine running Java 1.5*. 
However, executing the build under Windows with *JDK 1.6* already leads to the activation of the profile (see example2.zip#output_windows_jdk16.txt), similarly to executing the build under *Linux* with JDK 1.5 (see example2.zip#output_linux_jdk15.txt). Consequently, *one single criterion* was enough for activating the profile, in contrast to the behavior described in the documentation (""A profile is activated when *all activation criteria* has been satisfied."").

Is the actual behavior the intended one and the documentation erroneous, or inversely?
;;;","06/Jan/10 08:11;bbodnar;Apparently it was consciously decided for an ""OR""-logic in the version 2.0.x (MNG-3106), although the documentation of that version too spoke about an ""AND""-logic. Which were the reasons for it?
;;;","21/Apr/11 08:54;epabst;I have a fix for this here:
https://github.com/epabst/maven-3/tree/MNG-4516;;;","19/Jan/12 04:33;gorgophol;If this Issue was Issues to be reviewed for 3.x, as it says, what were the results?
Activation via settings.xml is useless without an OR condition. 

And as long as there is an activation used in the settings.xml, it is impossible to choose the correct profile via -P profile on the commandline ... 

Is nobody willing to fix that problem in the official version? ;;;","22/Jan/14 20:23;jvanzyl;Please refer to https://cwiki.apache.org/confluence/display/MAVEN/The+Great+JIRA+Cleanup+of+2014;;;","22/Jan/14 20:31;jvanzyl;Please refer to https://cwiki.apache.org/confluence/display/MAVEN/The+Great+JIRA+Cleanup+of+2014 if you're wondering why this issue was closed out.;;;","18/Mar/19 19:54;epabst;[https://cwiki.apache.org/confluence/display/MAVEN/The+Great+JIRA+Cleanup+of+2014] shows 
h1. Service Unavailable

The server is temporarily unable to service your request due to maintenance downtime or capacity problems. Please try again later.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Unable to use ""test"" scope dependencies",MNG-4444,12795629,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Not A Problem,bentmann,asolntsev,asolntsev,15/Nov/09 05:37,14/Feb/13 18:37,03/Jan/22 13:13,15/Nov/09 06:37,3.0-alpha-3,,,,,,,,Dependencies,,,,,0,,,,"Maven build fails with the following error message:
""[ERROR]   The project bla.bla-SNAPSHOT (C:\bla\pom.xml) has 1 error
[ERROR]     'build.plugins.plugin[org.apache.maven.plugins:maven-surefire-plugin].dependencies.dependency.scope' must be one of [compile, runtime, system] for org.testng:testng:jar:jdk15 but is 'test'.

Maven2.* build this project without problems.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28nwn:",9223372036854775807,,,,,,,,,,,,,,,,,,,"15/Nov/09 06:37;bentmann;Stricter validation of the POM than in Maven 2.x is by design. Plugin dependencies of scopes other than the ones listed in the error message make no sense. When Maven executes a plugin, we talk about a runtime classpath and test-scope dependencies in general don't contribute to this.

Simply remove the {{<scope>}} from the plugin dependency in your POM.;;;","16/Nov/09 03:13;asolntsev;Benjamin, thank you!
Removing the <scope> really helped. Stricter validation rules!;;;","14/Feb/13 18:37;carlin.scott;According to Maven documentation:
{quote}
*test*
This scope indicates that the dependency is not required for normal use of the application, and is only available for the +test compilation+ and execution phases.
{quote}
http://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Dependency_Scope

So if my plugin is only needed for test compilation, shouldn't I use the test scope?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE when reporting command line error for non-existent option,MNG-4409,12796790,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,bentmann,pbenedict,paul4christ79,27/Oct/09 01:06,07/Apr/15 19:22,03/Jan/22 13:13,27/Oct/09 05:25,3.0-alpha-3,,,,,3.0-alpha-3,,,Command Line,,,,,0,,,,"If I type in a command option that does not exist, this results:
java.lang.NullPointerException
        at org.apache.maven.cli.CLIReportingUtils.showError(CLIReportingUtils.java:194)
        at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:132)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:104)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
        at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
        at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29d3r:",9223372036854775807,,,,,,,,,,,,,,,,,,,"27/Oct/09 05:25;bentmann;Fixed in [r830017|http://svn.apache.org/viewvc?view=revision&revision=830017].;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Properties defined in parent POM and used in systemPath element cause POM validation warnings and dependencies ignoration - compilation error,MNG-4379,12796782,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,bentmann,tomec,tomec,24/Sep/09 15:14,25/Jan/10 06:10,03/Jan/22 13:13,02/Jan/10 11:48,2.1.0,2.2.1,,,,3.0-alpha-6,,,POM,,,,,1,,,,"In parent POM of some ""common_jar"" module we have property definition:

<properties>
        <WEBSPHERE_HOME>${env.WAS7_HOME}</WEBSPHERE_HOME>
</properties>

then in child module ""common_jar"" we use this property

<!-- WebSphere 7 libraries-->
<dependency>
       <groupId>com.ibm.ws</groupId>
       <artifactId>webservices.thinclient</artifactId>
       <version>7.0.0</version>
       <systemPath>${WEBSPHERE_HOME}/runtimes/com.ibm.ws.webservices.thinclient_7.0.0.jar</systemPath>
       <scope>system</scope>
</dependency>

Next we use this ""common_jar"" as dependency for our ""other module"":

<dependency>
    <groupId>our_company.common</groupId>
    <artifactId>common_jar</artifactId>
    <version>1.0-SNAPSHOT</version>
</dependency>

but unfortunatelly this ""other module"" can not be compiled because of

[WARNING] POM for 'our_company.common:common_jar:pom:1.0.102:compile' is invalid.

Its dependencies (if any) will NOT be available to the current build.

This causes that the libraries from ""common_jar"" are not available to ""other module"" and therefore ""other module"" can not be compiled.


If I replace the WEBSPHERE_HOME's property in ""common_jar""'s parent POM with absolute path then ""other module"" compiles OK. So it seems that it can not read environment properties in ""common_jar"" from ""other module"". Module ""common_jar"" compiles OK under all circumstances (there is no problem with this property in systemPath).


Other thing is that in parent of ""other module"" there is also a property WEBSPHERE_HOME defined which points to the same directory as WEBSPHERE_HOME in ""common_jar"" parent POM (simple copy paste by project creation), but it seems that does not affect the issue. There was no problem with this configuration (setup) in Maven 2.0.10. Problem started with Maven 2.1.0 and continues with Maven 2.2.1. We can not use Maven 2.0.10 due to old version of Maven-Eclipse plugin which is generatin wrong "".settings"" for EAR project.

For test case to run please modify WEBSPHERE_HOME property and WS libraries dependency in ""common_jar"" and its parent POM.",Windows Vista 32,,,,,,,,,,,,,,,,MNG-4545,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Sep/09 15:14;tomec;MavenTestCase.zip;https://issues.apache.org/jira/secure/attachment/12712966/MavenTestCase.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i295tb:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"15/Oct/09 11:03;hentner;Same thing with Windows XP and RH Enterprise Linux  5. 

It works fine when running the parent pom, but fails when running one of the childs. 

{code}
[WARNING] POM for 'de.xxx:xxxCommon:pom:1.0-SNAPSHOT:compile' is invalid.
Its dependencies (if any) will NOT be available to the current build.
{code};;;","02/Jan/10 11:48;bentmann;Fixed in [r895245|http://svn.apache.org/viewvc?view=revision&revision=895245].

The problem is that environment variables are not available during dependency resolution. You could work around this by setting an equally named JVM system property via {{MAVEN_OPTS=-Denv.WAS7_HOME=%WAS7_HOME%}}.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven wants to create meta data files with invalid file names,MNG-4378,12795552,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,bentmann,bernd,bernd,24/Sep/09 08:44,24/Sep/09 08:54,03/Jan/22 13:13,24/Sep/09 08:54,3.0-alpha-2,,,,,3.0-alpha-3,,,Artifacts and Repositories,,,,,0,,,,"It seems to me that Maven 3.0-alpha-2 wants to create meta data files with the URL from reprositories in the file name including the : after the protocol:



[INFO] snapshot com.odcgroup.odp:ocs-component:1.40.0-SNAPSHOT: checking for updates from http://maven.oams.com/content/groups/odyssey
[WARNING] repository metadata for: 'snapshot com.odcgroup.odp:ocs-component:1.40.0-SNAPSHOT' could not be retrieved from repository: http://maven.oams.com/content/groups/odyssey due to an error: Specified destination directory cannot be created: C:\EDS-maven-repository\com\odcgroup\odp\ocs-component\1.40.0-SNAPSHOT\maven-metadata-http:\maven.oams.com\content\groups",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28zyf:",9223372036854775807,,,,,,,,,,,,,,,,,,,"24/Sep/09 08:54;bentmann;Bernd, we already [fixed a bunch of issues with 3.0-alpha-2|http://jira.codehaus.org/browse/MNG/fixforversion/14719] so you might want to try out our latest SNAPSHOTs produced by our [CI server|https://grid.sonatype.org/ci/job/maven-3.0.x-bootstrap/jdk=1.5,label=ubuntu/ws/trunk/apache-maven/target/].;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XmlPullParserException while parsing XML with encoded entities within attributes,MNG-4365,12795561,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,bentmann,bernd,bernd,22/Sep/09 09:33,22/Sep/09 11:06,03/Jan/22 13:13,22/Sep/09 11:06,3.0-alpha-2,,,,,3.0-alpha-3,,,POM,,,,,0,,,,"Problems parsing encoded XML entities within XML attributes.

Example: Plugin with following configuration leads to following Exception

						<configuration>
							<tasks>
								<filter token=""CLIENT-LOCALE-START"" value=""&lt;!--"" />
							</tasks>
						</configuration>



Exception:


java.io.IOException: org.codehaus.plexus.util.xml.pull.XmlPullParserException: markup not allowed inside attribute value - illegal <  (position: TEXT seen ...<filter value=""<... @15:17) :

<project>
<modelVersion>4.0.0</modelVersion>
<groupId>test</groupId>
<artifactId>Parent</artifactId>
<packaging>pom</packaging>
<version>0.0.1-SNAPSHOT</version>
<build>
<plugins>
<plugin>
<executions>
<execution>
<configuration>
<tasks>
<filter value=""<!--""  token=""CLIENT-LOCALE-START"" ></filter></tasks></configuration>
<phase>package</phase>
<goals>
<goal>run</goal></goals>
<id>filter-jnlp-file</id></execution></executions>
<version>1.1</version>
<artifactId>maven-antrun-plugin</artifactId></plugin></plugins>
<sourceDirectory>C:\DOKUME~1\imm0136\LOKALE~1\Temp\src\main\java</sourceDirectory>
<scriptSourceDirectory>src\main\scripts</scriptSourceDirectory>
<testSourceDirectory>C:\DOKUME~1\imm0136\LOKALE~1\Temp\src\test\java</testSourceDirectory>
<outputDirectory>C:\DOKUME~1\imm0136\LOKALE~1\Temp\target\classes</outputDirectory>
<testOutputDirectory>C:\DOKUME~1\imm0136\LOKALE~1\Temp\target\test-classes</testOutputDirectory>
<resources>
<resource>
<directory>C:\DOKUME~1\imm0136\LOKALE~1\Temp\src\main\resources</directory></resource></resources>
<testResources>
<testResource>
<directory>C:\DOKUME~1\imm0136\LOKALE~1\Temp\src\test\resources</directory></testResource></testResources>
<directory>C:\DOKUME~1\imm0136\LOKALE~1\Temp\target</directory>
<finalName>Parent-0.0.1-SNAPSHOT</finalName>
<pluginManagement>
<plugins>
<plugin>
<artifactId>maven-antrun-plugin</artifactId>
<version>1.1</version></plugin>
<plugin>
<artifactId>maven-assembly-plugin</artifactId>
<version>2.2-beta-1</version></plugin>
<plugin>
<artifactId>maven-clean-plugin</artifactId>
<version>2.2</version></plugin>
<plugin>
<artifactId>maven-compiler-plugin</artifactId>
<version>2.0.2</version></plugin>
<plugin>
<artifactId>maven-dependency-plugin</artifactId>
<version>2.0</version></plugin>
<plugin>
<artifactId>maven-deploy-plugin</artifactId>
<version>2.3</version></plugin>
<plugin>
<artifactId>maven-ear-plugin</artifactId>
<version>2.3.1</version></plugin>
<plugin>
<artifactId>maven-ejb-plugin</artifactId>
<version>2.1</version></plugin>
<plugin>
<artifactId>maven-install-plugin</artifactId>
<version>2.2</version></plugin>
<plugin>
<artifactId>maven-jar-plugin</artifactId>
<version>2.2</version></plugin>
<plugin>
<artifactId>maven-javadoc-plugin</artifactId>
<version>2.4</version></plugin>
<plugin>
<artifactId>maven-plugin-plugin</artifactId>
<version>2.4.2</version></plugin>
<plugin>
<artifactId>maven-rar-plugin</artifactId>
<version>2.2</version></plugin>
<plugin>
<artifactId>maven-release-plugin</artifactId>
<version>2.0-beta-7</version></plugin>
<plugin>
<artifactId>maven-resources-plugin</artifactId>
<version>2.2</version></plugin>
<plugin>
<artifactId>maven-site-plugin</artifactId>
<version>2.0-beta-7</version></plugin>
<plugin>
<artifactId>maven-source-plugin</artifactId>
<version>2.0.4</version></plugin>
<plugin>
<artifactId>maven-surefire-plugin</artifactId>
<version>2.4.3</version></plugin>
<plugin>
<artifactId>maven-war-plugin</artifactId>
<version>2.1-alpha-1</version></plugin></plugins></pluginManagement></build>
<repositories>
<repository>
<snapshots>
<enabled>false</enabled></snapshots>
<id>central</id>
<name>Maven Repository Switchboard</name>
<url>http://repo1.maven.org/maven2</url></repository></repositories>
<pluginRepositories>
<pluginRepository>
<releases>
<updatePolicy>never</updatePolicy></releases>
<snapshots>
<enabled>false</enabled></snapshots>
<id>central</id>
<name>Maven Plugin Repository</name>
<url>http://repo1.maven.org/maven2</url></pluginRepository></pluginRepositories>
<reporting>
<outputDirectory>C:\DOKUME~1\imm0136\LOKALE~1\Temp\target\site</outputDirectory></reporting></project>
	at org.apache.maven.project.builder.PomClassicDomainModelFactory.createDomainModel(PomClassicDomainModelFactory.java:26)
	at org.apache.maven.project.builder.PomTransformer.transformToDomainModel(PomTransformer.java:458)
	at org.apache.maven.shared.model.ModelTransformerContext.transform(ModelTransformerContext.java:287)
	at org.apache.maven.project.builder.impl.DefaultProjectBuilder.buildModel(DefaultProjectBuilder.java:162)
	at org.apache.maven.project.builder.impl.DefaultProjectBuilder.buildFromLocalPath(DefaultProjectBuilder.java:182)
	at org.apache.maven.project.DefaultMavenProjectBuilder.readModelFromLocalPath(DefaultMavenProjectBuilder.java:397)
	at org.apache.maven.project.DefaultMavenProjectBuilder.build(DefaultMavenProjectBuilder.java:130)
	at org.apache.maven.embedder.MavenEmbedder.readProject(MavenEmbedder.java:347)
	at org.apache.maven.embedder.MavenEmbedder.readProject(MavenEmbedder.java:339)
	at de.visualrules.artifact.core.ModelReaderTest.testRead(ModelReaderTest.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at junit.framework.TestCase.runTest(TestCase.java:164)
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:120)
	at junit.framework.TestSuite.runTest(TestSuite.java:230)
	at junit.framework.TestSuite.run(TestSuite.java:225)
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:130)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)



",jdk 1.5.0_11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Sep/09 09:33;bernd;ModelReaderTest.java;https://issues.apache.org/jira/secure/attachment/12712959/ModelReaderTest.java",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i296f3:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"22/Sep/09 09:36;bernd;arg.. JIIRA has decoded my XML entitiy in the comment above.. please take a look at the junit test to see the encoded entity...;;;","22/Sep/09 11:06;bentmann;Already fixed on trunk, a corresponding snapshot distro can be fetched from [our CI builds|https://grid.sonatype.org/ci/job/maven-3.0.x-bootstrap/jdk=1.5,label=ubuntu/ws/trunk/apache-maven/target/].;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Proxy is not used  !! ,MNG-4364,12795585,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Not A Problem,,grider,grider,22/Sep/09 07:34,23/Sep/09 06:29,03/Jan/22 13:13,23/Sep/09 06:29,2.2.1,,,,,,,,,,,,,0,,,,"Maven does not use the proxy setting .... At least that's how it looks like. 
The used proxy that is printed in the console is correct, but it seems to be never used (conn times out). 
On the command line i can use the proxy (http_proxy has been exported and set correctly). 

{code}

[DEBUG] Connecting to repository: 'central' with url: 'http://repo1.maven.org/maven2'.
[DEBUG] Using Proxy: proxy:3128
Downloading: http://repo1.maven.org/maven2/org/apache/maven/plugins/maven-assembly-plugin/2.2-beta-2/maven-assembly-plugin-2.2-beta-2.jar
[DEBUG] Error transferring file: Connection timed out
org.apache.maven.wagon.TransferFailedException: Error transferring file: Connection timed out
        at org.apache.maven.wagon.providers.http.LightweightHttpWagon.fillInputData(LightweightHttpWagon.java:143)
        at org.apache.maven.wagon.StreamWagon.getInputStream(StreamWagon.java:116)
        at org.apache.maven.wagon.StreamWagon.getIfNewer(StreamWagon.java:88)
        at org.apache.maven.wagon.StreamWagon.get(StreamWagon.java:61)
        at org.apache.maven.artifact.manager.DefaultWagonManager.getRemoteFile(DefaultWagonManager.java:546)
        at org.apache.maven.artifact.manager.DefaultWagonManager.getArtifact(DefaultWagonManager.java:427)
        at org.apache.maven.artifact.manager.DefaultWagonManager.getArtifact(DefaultWagonManager.java:382)
        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:216)
        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:90)
        at org.apache.maven.plugin.DefaultPluginManager.verifyVersionedPlugin(DefaultPluginManager.java:212)
        at org.apache.maven.plugin.DefaultPluginManager.verifyPlugin(DefaultPluginManager.java:184)
        at org.apache.maven.plugin.DefaultPluginManager.loadPluginDescriptor(DefaultPluginManager.java:1642)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.verifyPlugin(DefaultLifecycleExecutor.java:1540)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.getMojoDescriptor(DefaultLifecycleExecutor.java:1787)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.segmentTaskListByAggregationNeeds(DefaultLifecycleExecutor.java:462)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:175)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
        at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: java.net.ConnectException: Connection timed out
        at java.net.PlainSocketImpl.socketConnect(Native Method)
        at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:333)
        at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:195)
        at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:182)
        at java.net.Socket.connect(Socket.java:519)
        at java.net.Socket.connect(Socket.java:469)
        at sun.net.NetworkClient.doConnect(NetworkClient.java:157)
        at sun.net.www.http.HttpClient.openServer(HttpClient.java:388)
        at sun.net.www.http.HttpClient.openServer(HttpClient.java:500)
        at sun.net.www.http.HttpClient.<init>(HttpClient.java:233)
        at sun.net.www.http.HttpClient.New(HttpClient.java:306)
        at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:799)
        at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:747)
        at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:658)
        at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:981)
        at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:373)
        at org.apache.maven.wagon.providers.http.LightweightHttpWagon.fillInputData(LightweightHttpWagon.java:115)
        ... 27 more
[DEBUG] Using Wagon implementation lightweight from default mapping for protocol http
[WARNING] Unable to get resource 'org.apache.maven.plugins:maven-assembly-plugin:maven-plugin:2.2-beta-2' from repository central (http://repo1.maven.org/maven2): Error 
transferring file: Connection timed out
[INFO] Cannot find mojo descriptor for: 'eclipse:eclipse' - Treating as non-aggregator.
[DEBUG] 
org.apache.maven.plugin.PluginNotFoundException: Plugin could not be found - check that the goal name is correct: Unable to download the artifact from any repository

Try downloading the file manually from the project website.

Then, install it using the command: 
    mvn install:install-file -DgroupId=org.apache.maven.plugins -DartifactId=maven-assembly-plugin -Dversion=2.2-beta-2 -Dpackaging=maven-plugin -Dfile=/path/to/file

Alternatively, if you host your own repository you can deploy the file there: 
    mvn deploy:deploy-file -DgroupId=org.apache.maven.plugins -DartifactId=maven-assembly-plugin -Dversion=2.2-beta-2 -Dpackaging=maven-plugin -Dfile=/path/to/file -Durl
=[url] -DrepositoryId=[id]


  org.apache.maven.plugins:maven-assembly-plugin:maven-plugin:2.2-beta-2

from the specified remote repositories:
  central (http://repo1.maven.org/maven2)

  org.apache.maven.plugins:maven-assembly-plugin:maven-plugin:2.2-beta-2

from the specified remote repositories:
  central (http://repo1.maven.org/maven2)


        at org.apache.maven.plugin.DefaultPluginManager.verifyVersionedPlugin(DefaultPluginManager.java:253)
        at org.apache.maven.plugin.DefaultPluginManager.verifyPlugin(DefaultPluginManager.java:184)
        at org.apache.maven.plugin.DefaultPluginManager.loadPluginDescriptor(DefaultPluginManager.java:1642)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.verifyPlugin(DefaultLifecycleExecutor.java:1540)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.getMojoDescriptor(DefaultLifecycleExecutor.java:1787)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.segmentTaskListByAggregationNeeds(DefaultLifecycleExecutor.java:462)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:175)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
        at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.apache.maven.wagon.ResourceDoesNotExistException: Unable to download the artifact from any repository
        at org.apache.maven.artifact.manager.DefaultWagonManager.getArtifact(DefaultWagonManager.java:404)
        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:216)
        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:90)
        at org.apache.maven.plugin.DefaultPluginManager.verifyVersionedPlugin(DefaultPluginManager.java:212)
        ... 18 more
[DEBUG] Wagons could not be registered as the extension container was never created
[INFO] ------------------------------------------------------------------------
[INFO] Building AQ JMS GUI
[INFO]    task-segment: [eclipse:eclipse]
[INFO] ------------------------------------------------------------------------
[DEBUG] Trying repository central
[DEBUG] Using Wagon implementation lightweight from default mapping for protocol http
[DEBUG] Checking for pre-existing User-Agent configuration.
[DEBUG] Adding User-Agent configuration.
[DEBUG] Connecting to repository: 'central' with url: 'http://repo1.maven.org/maven2'.
[DEBUG] Using Proxy: proxy:3128

{code}

Could also be that the wagon is not using it ? ??? 

",linux,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28uvb:",9223372036854775807,,,,,,,,,,,,,,,,,,,"23/Sep/09 06:29;grider;i had a wrong setting in my .m2/settings.xml
i set by accident the host entry to proxy:3128 when using mvn 2.0.4 while trying out stuff before i switched to mvn 2.2.1

It works now like a charm ! 
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DefaultArtifactResolver has problems when used with multiple repos,MNG-4354,12796774,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Cannot Reproduce,,hceylan@batoo.org,hceylan@batoo.org,11/Sep/09 09:31,05/Apr/15 14:53,03/Jan/22 13:13,14/Nov/12 00:34,2.2.1,,,,,,,,Bootstrap & Build,,,,,6,,,,"DefaultArtifactResolver attaches the repositories to artifacts (AFAIK) to optimize the repo look ups.

Here I have a case

1) An artifact dependens on org.eclipse.equniox:app:1.2.0
2) org.eclipse.equinox:app depends on org.eclipse.equinox:registry:[3.4.0,4.0.0)
3) Both central repo and custom corporate repo has org.eclipse.equinox:registry
4) central repo has outdated versions
     3.2.1-R32x_v20060814
     3.3.0-v20070522
5) DefaultArtifactResolver for optimization attaches central repo (last one wins) 
6) Central repo neither satisfies the version range nor - even if it did - has the latest version
7) dependency is not satisfied
8) Build halts

Attached patch is a dirty hack to disable signle repo downloand and checks all the repositories.

",N/A,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-3560,,,,,,,,,,,"11/Sep/09 09:31;hceylan@batoo.org;maven.patch;https://issues.apache.org/jira/secure/attachment/12712956/maven.patch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,Patch,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i2923r:",9223372036854775807,,,,,,,,,,,,,,,,,,,"26/Nov/09 02:50;nicolas.dumoulin;I can confirm this annoying bug. For instance, our fix is to use our proxy as a mirro of the central repo.;;;","28/Dec/09 13:32;hceylan@batoo.org;it's a bloker...
patch is provided

it's over 3 months and even not assigned yet....

Should we not bother to contribute to maven?;;;","28/Dec/09 20:00;brettporter;we can take a look for 2.2.x, but a patch that is classified as a ""dirty hack"" with no tests in critical functionality is not something we can just apply. If you put together an integration test and more information about the changes required it can be adopted much faster. Thanks!

We don't assign things as they come in, they get reviewed as people with time look over them, and our priorities tend to be on regressions and bugs with large numbers of votes. ;;;","28/Dec/09 22:43;hceylan@batoo.org;Hello Brett,

Two things:
1) Responding with a feed back
2) Closing the issue...

These two things obviously totally different. 

If I had got this feedback three months ago, - while I still remember all the insights - I would have solved it totally by then.

So, not that the fact that it's not been solved, but no feedback has been provided for so long, that is I'm not happy with.

Regards,
Hasan Ceylan;;;","18/Aug/10 02:33;jnrouvignac;This problem look very similar to MNG-3560 .;;;","26/Jul/11 11:30;dhomann;I just stumbled upon a problem which sounds related:
* an artifact was resolved from a remote mirror and placed in the local repository, along with a file _maven.repositories which points to the ID of mirror where the artifact was resolved from
* when I disconnect from the network, Maven will try to resolve the artifact from remote repositories although it is present locally, and the build will fail
* when I disconnect from the network AND run with -o, Maven will fail with ""The repository system is offline but the artifact ... is not available in the local repository."" 
* when I delete the _maven.repositories file for the artifact in question, it will get resolved locally and the build will fail for the next dependency as described above;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Invalid checksums on deploy when using webdav without extension,MNG-4301,12797471,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Incomplete,,kpshek,kpshek,14/Aug/09 07:35,06/Apr/15 01:53,03/Jan/22 13:13,22/Jan/14 20:31,2.2.1,,,,,,,,Deployment,,,,,23,,,,"With maven 2.2.1, our deployments via webdav are producing invalid checksums, similar to the issue reported in MNG-4235.

From maven 2.0.8 and previous, the following build extension was required to deploy via webdav:

<extensions>
   <extension>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-webdav</artifactId>
      <version>1.0-beta-2</version>
   </extension>
</extensions>

Starting with maven 2.0.9 (see MNG-3418), webdav was included by default and the aforementioned build extension must be removed from the project.  If it was included in the project the deployment would fail as Maven would report multiple versions of wagon-webdav present.

With maven 2.2.0, our deployment suffered from invalid checksums reported in MNG-4235.

With maven 2.2.1, we still see the invalid checksums on deployment as reported in MNG-4235.  However, I've found that if you add the above build extension into the project, we don't experience this issue (of generating invalid checksums).  Is this workaround an intentional change brought about by the fix of MNG-4235?",n/a,,,,,,,,,,,,,,,,MNG-4726,,,,,,,,,,,,,,,,,,,,MNG-4235,,,,,,WAGON-304,,,,,,,,MNG-4742,,WAGON-277,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i297s7:",9223372036854775807,,,,,,,,,,,,,,,,,,,"31/Aug/09 22:58;davecheney;I can confirm that I have seen invalid checksums produced via the webdav wagon using version 2.2.1;;;","09/Sep/09 10:58;jdcasey;The problem may be that preemptive authentication was turned off by default for httpclient in the 1.0-beta-6 release, as was the case for the non-lightweight http wagon. I suspect this is the case in the jackrabbit-webdav as well, since IIRC they both use the same common abstract class. Since preemptive auth is disabled, Maven waits for the server to challenge the request then re-sends the data with the credentials. The problem is that the checksum stream observer is unaware that this challenge has taken place, so it sees the data go by twice without realizing it, thereby skewing the checksums.

To workaround the problem, you can re-enable preemptive authentication. The information is here:

http://maven.apache.org/guides/mini/guide-http-settings.html

But essentially, you'll need to specify something like the following in your settings.xml:

{code:xml}
<settings>
  <servers>
    <server>
      <id>my-server</id>
      <configuration>
        <httpConfiguration>
          <put>
            <params>
              <param>
                <name>http.authentication.preemptive</name>
                <value>%b,true</value>
              </param>
            </params>
          </put>
        </httpConfiguration>
      </configuration>
    </server>
  </servers>
</settings>
{code}

;;;","16/Oct/09 12:34;stephenjpack;I believe the previous comment is the workaround for maven 2.2.0; for maven 2.2.1, you need to add  <wagonProvider>httpclient</wagonProvider> in the configuration.  Without that addition, I got the exception ""Cannot find setter nor field in org.apache.maven.wagon.providers.http.LightweightHttpWagon for 'httpConfiguration'"";;;","26/Oct/09 14:53;deckrider;I tried the following ~/.m2/settings.xml which did not work with maven 2.2.1 (the double md5 issue still exists):

\\

{noformat} 

  <servers>
    <server>
      <id>deployment.webdav</id>
      <username>foo</username>
      <password>bar</password>
      <configuration>
        <wagonProvider>httpclient</wagonProvider>
        <httpConfiguration>
          <put>
            <params>
              <param>
                <name>http.authentication.preemptive</name>
                <value>%b,true</value>
              </param>
            </params>
          </all>
        </httpConfiguration>
      </configuration>
    </server>
  </servers>

{noformat} ;;;","24/Mar/10 05:39;gesha;@deckrider

thankx for valuable tipps :/ Result is attached>


+ Error stacktraces are turned on.
Error reading settings.xml: end tag name </all> must be the same as start tag <put> from line 28 (position: TEXT seen ...</params>\r\n          </all>... @35:17)
  Line:   35
  Column: 17
Error stacktrace:
org.apache.maven.SettingsConfigurationException: end tag name </all> must be the same as start tag <put> from line 28 (position: TEXT seen ...</params>\r\n          </all>... @35:1
7)
  Line:   35
  Column: 17
        at org.apache.maven.cli.MavenCli.buildSettings(MavenCli.java:432)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:202)
        at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.codehaus.plexus.util.xml.pull.XmlPullParserException: end tag name </all> must be the same as start tag <put> from line 28 (position: TEXT seen ...</params>\r\n
     </all>... @35:17)
        at hidden.org.codehaus.plexus.util.xml.pull.MXParser.parseEndTag(MXParser.java:1708)
        at hidden.org.codehaus.plexus.util.xml.pull.MXParser.nextImpl(MXParser.java:1143)
        at hidden.org.codehaus.plexus.util.xml.pull.MXParser.next(MXParser.java:1105)
        at hidden.org.codehaus.plexus.util.xml.Xpp3DomBuilder.build(Xpp3DomBuilder.java:179)
        at hidden.org.codehaus.plexus.util.xml.Xpp3DomBuilder.build(Xpp3DomBuilder.java:86)
        at org.apache.maven.settings.io.xpp3.SettingsXpp3Reader.parseServer(SettingsXpp3Reader.java:1062)
        at org.apache.maven.settings.io.xpp3.SettingsXpp3Reader.parseSettings(SettingsXpp3Reader.java:1158)
        at org.apache.maven.settings.io.xpp3.SettingsXpp3Reader.read(SettingsXpp3Reader.java:1579)
        at org.apache.maven.settings.DefaultMavenSettingsBuilder.readSettings(DefaultMavenSettingsBuilder.java:122)
        at org.apache.maven.settings.DefaultMavenSettingsBuilder.buildSettings(DefaultMavenSettingsBuilder.java:163)
        at org.apache.maven.settings.DefaultMavenSettingsBuilder.buildSettings(DefaultMavenSettingsBuilder.java:154)
        at org.apache.maven.settings.DefaultMavenSettingsBuilder.buildSettings(DefaultMavenSettingsBuilder.java:142)
        at org.apache.maven.cli.MavenCli.buildSettings(MavenCli.java:423)
        ... 10 more
;;;","24/Mar/10 08:35;stephenjpack;@gesha: replace the </all> in deckrider's snippet with </put>.  This workaround works for me using Maven 2.2.1 (note that if you deploy a snapshot that already exists -- or anyone on your team doesn't implement the workaround as well -- you may get the error, since the artifact being replaced has the issue).;;;","12/Jul/10 13:16;russel;Can someone specify the definitive, official, minimal workaround for this bug?;;;","26/Jul/10 11:19;cornel.masson;We are experiencing the same bug and it's now a show-stopper for our Maven release. We have a large build and are seeing numerous CHECKSUM failures, even on Maven jars from Central.

We are using:
 
* Maven 2.2.1
* Nexus Open Source Edition, Version: 1.6.0

We have tried all the suggestions on the Net, including:

* setting the wagon provider to httpclient
* setting http.authentication.preemptive to true (as above)
* setting the specific wagon-webdav version (as above)

and nothing works. Each time we run the build, a random selection of artifacts fail with CHECKSUM errors. This happens for both internal (self-deployed) and external artifacts.

Here's an example failure:

4425K downloaded  (groovy-all-1.6.5.jar)
[WARNING] *** CHECKSUM FAILED - Checksum failed on download: local = '9c6a38100085d8fbfb3f017ac82e396999e64f92'; remote = 'PK

If you examine the remote checksum, it seems it references the actual *contents* of the JAR, not a checksum file(!!).

We also get 'invalid POM' errors as a result of some failures, so our build actually breaks at the end (no use just ignoring the bad checksums). Example:

40b downloaded  (plexus-utils-1.5.6.pom)
[WARNING] *** CHECKSUM FAILED - Checksum failed on download: local = '8394a409e7b98020aac9429157265db0fb8cfac6'; remote = '<?xml' - IGNORING
[WARNING] POM for 'org.codehaus.plexus:plexus-utils:pom:1.5.6:runtime' is invalid.


Please help!;;;","26/Jul/10 15:50;brianf@infinity.nu;See the trick is that maven is producing these junk checksums upon upload. Even if you fix it, until you repair the checksums in the repo, you will continue to get the checksum errors whenever someone downloads those artifacts.

The workaround for this bug is to stop producing bad checksums, and then repair the ones that are broken.

Stop producing bad checksums by: 
Not using Maven 2.2.0
or not using a wagon with httpclient against an authenticated repo unless you disable preemptive authentication.

If you're using Nexus, it can repair the checksums simply by doing a ""Rebuild Maven Metadata"" on the subfolder of the repo where your busted checksums are.;;;","27/Jul/10 04:23;cornel.masson;We were seeing these on jars from Maven Central, not just our own ones. Does this mean Central is corrupt?

Also, if we're using Maven 2.2.1, what is the definitive set of configurations that will make the uploading of corrupt checksums go away? ;;;","27/Jul/10 11:25;cornel.masson;We found our problem: if you restrict the artifact resolver to a single thread, the problem goes away.

Bug logged: http://jira.codehaus.org/browse/MNG-4742;;;","06/Jun/11 15:27;tangercp;
For nexus users it also relates to https://issues.sonatype.org/browse/NEXUS-4347

;;;","19/Jun/11 16:46;bmargulies;Doesn't this net out to a bug in the dav plugin, not maven itself?;;;","22/Jan/14 20:23;jvanzyl;Please refer to https://cwiki.apache.org/confluence/display/MAVEN/The+Great+JIRA+Cleanup+of+2014;;;","22/Jan/14 20:31;jvanzyl;Please refer to https://cwiki.apache.org/confluence/display/MAVEN/The+Great+JIRA+Cleanup+of+2014 if you're wondering why this issue was closed out.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"ArtifactHandler, LifecycleMapping from plugin dependency is not used when plugin extensions are enabled",MNG-4270,12795463,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,jdcasey,jdcasey,jdcasey,31/Jul/09 13:23,31/Jul/09 17:23,03/Jan/22 13:13,31/Jul/09 17:23,2.2.0,,,,,2.2.1,,,Plugins and Lifecycle,,,,,0,,,,"MNG-3506 fixed the case where two plugins with extensions enabled get in one another's way, and some artifact handlers are not loaded properly.

A related issue is that artifact handlers (and lifecycle mappings) brought in via plugin dependencies are not used. This is because only the plugin's own artifact is actually scanned for extension components like ArtifactHandler or LifecycleMapping.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-3506,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29b67:",9223372036854775807,,,,,,,,,,,,,,,,,,,"31/Jul/09 13:24;jdcasey;Need to fix this to make extensions, custom lifecycle mappings, and custom artifact handlers more intuitive to use.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[regression] Invocation of just installed plugin on its plugin project can fail with ComponentLookupException for mojo class,MNG-4269,12795490,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,bentmann,bentmann,bentmann,31/Jul/09 12:20,31/Jul/09 13:12,03/Jan/22 13:13,31/Jul/09 13:12,3.0-alpha-3,,,,,3.0-alpha-3,,,Artifacts and Repositories,Plugins and Lifecycle,,,,0,,,,"This is a side effect of my initial solution for MNG-3043: Basically, reactor resolution is too eager and resolves artifacts from project output even if the project has not been build in the current reactor build. In other words, a possibly cleaned (but not deleted) output directory is used for the artifact instead of the file from the repo.

For instance, the following steps on a simple plugin project will fail
- {{mvn install}} to install the plugin JAR locally
- erasing the contents of the project's {{target/classes}} directory, but leaving the directory itself existent
- {{mvn the-just-installed-plugin:goal}}
The last invocation will resolve the plugin from its own invalidate output directory.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-3043,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28lhb:",9223372036854775807,,,,,,,,,,,,,,,,,,,"31/Jul/09 13:12;bentmann;Fixed in [r799680|http://svn.apache.org/viewvc?view=rev&revision=799680].;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing method ArtifactUtils.isSnapshot used in the release plugin,MNG-4266,12795505,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,bentmann,olamy,olamy,29/Jul/09 18:37,30/Jul/09 05:17,03/Jan/22 13:13,30/Jul/09 05:17,3.0-alpha-3,,,,,3.0-alpha-3,,,Plugin API,,,,,0,,,,"Testing current trunk with the release plugin :
{code}
constituent[20]: file:/local/olamy/apache-maven-3.0-SNAPSHOT/lib/commons-cli-1.2.jar
---------------------------------------------------
Exception in thread ""main"" java.lang.NoSuchMethodError: org.apache.maven.artifact.ArtifactUtils.isSnapshot(Ljava/lang/String;)Z
        at org.apache.maven.plugins.release.phase.CheckPomPhase.execute(CheckPomPhase.java:93)
        at org.apache.maven.plugins.release.phase.CheckPomPhase.simulate(CheckPomPhase.java:105)
        at org.apache.maven.plugins.release.DefaultReleaseManager.prepare(DefaultReleaseManager.java:135)
        at org.apache.maven.plugins.release.PrepareReleaseMojo.execute(PrepareReleaseMojo.java:106)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:324)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:264)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:198)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:180)
        at org.apache.maven.embedder.MavenEmbedder.execute(MavenEmbedder.java:467)
        at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:163)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:56)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
        at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:408)
        at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:351)
bash-3.00$ mvn -v
Apache Maven 3.0-SNAPSHOT (r799084; 2009-07-29 23:31:35+0200)
Java version: 1.6.0_14
Java home: /local/tomcat/shared/jdk1.6.0_14/jre
Default locale: en, platform encoding: ISO646-US
OS name: ""sunos"" version: ""5.10"" arch: ""sparc"" Family: ""unix""
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i294ov:",9223372036854775807,,,,,,,,,,,,,,,,,,,"30/Jul/09 05:17;bentmann;Fixed in [r799225|http://svn.apache.org/viewvc?view=rev&revision=799225].;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
site plugin doesn't generate reports,MNG-4261,12795537,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Won't Fix,bentmann,olamy,olamy,27/Jul/09 19:06,31/Jan/15 13:35,03/Jan/22 13:13,14/Oct/09 13:55,3.0-alpha-3,,,,,,,,Plugins and Lifecycle,,,,,1,,,,"With the current trunk (rev 798335), reports mojo are not populated anymore in the site mojo. (expression ${reports} )",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-4162,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28r4f:",9223372036854775807,,,,,,,,,,,,,,,,,,,"05/Oct/09 05:32;olamy;So maven-site-plugin (branch 3.x) works with the restrictions related [here|http://cwiki.apache.org/confluence/display/MAVEN/Maven+3.x+and+site+plugin]
The last point (regarding configuration) is not fully implemented yet.
But the site plugin works with the current configuration (using reporting section from the pom).;;;","14/Oct/09 13:55;bentmann;This is an intended change for 3.x. More details about the new Site Plugin are available in the related issue MNG-4162;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[regression] http wagon uploads files twice with Maven 2.2.0 when preemptive auth is disabled (default setting),MNG-4236,12797139,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,jdcasey,jdcasey,09/Jul/09 17:18,06/Apr/15 01:53,03/Jan/22 13:13,23/Jul/09 13:49,2.2.0,,,,,2.2.1,,,Artifacts and Repositories,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-4254,,,,,,MNG-4235,WAGON-277,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28mmv:",9223372036854775807,,,,,,,,,,,,,,,,,,,"09/Jul/09 17:22;jdcasey;Need to make sure httpclient-driven http wagon is compliant with the spec: http://www.w3.org/Protocols/rfc2616/rfc2616-sec8.html (see section 8.2.3);;;","09/Jul/09 18:33;jdcasey;This seems to be a problem that will definitely affect repository managers that use Jetty: https://fisheye.codehaus.org/browse/JETTY-341 (which, let's face it, is a common configuration).;;;","09/Jul/09 19:57;jdcasey;The difference between httpclient and what the sun HttpURLConnection does seems to be that sun's impl caches authentication and preemptively sends the Authorization header after the first challenge happens. This means that the first transfer happens twice, to trigger the authentication challenge, and then subsequent transfers happen once only with preemptive auth.

We need to look into a way to cache the fact of an auth challenge so we know to authenticate preemptively in the httpclient-driven wagon.;;;","23/Jul/09 13:45;jdcasey;MNG-4254 is a stop-gap until this can be solved in the next WAGON release.;;;","23/Jul/09 13:47;jdcasey;This issue has been filed against WAGON for the next release. We have a stop-gap measure in place that's in testing now, so we'll close this issue for Maven 2.2.1 and come back to the longer-term solution in WAGON-277;;;","23/Jul/09 13:49;jdcasey;HTTP wagon implementation is selectable for Maven 2.2.1, with the lightweight (Sun-driven, not HttpClient-driven) implementation selected by default. This default is the same as was used for Maven prior to 2.2.0;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[regression] Maven 2.2.0 produces invalid checksums during deployment to secured HTTP repo,MNG-4235,12795543,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,jdcasey,jdcasey,09/Jul/09 15:57,06/Apr/15 01:53,03/Jan/22 13:13,22/Jul/09 14:46,2.2.0,,,,,2.2.1,,,Artifacts and Repositories,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-4236,MNG-4254,WAGON-304,,,,MNG-4301,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28ypr:",9223372036854775807,,,,,,,,,,,,,,,,,,,"10/Jul/09 02:24;flynnk;I am definitely seeing this for all our Maven projects.  Had to revert to an earlier version to avoid this.  I can provide more details if required/reproduction.;;;","12/Jul/09 17:25;bentmann;An IT is online. The checksum produced by Maven 2.2.0 equals the checksum of twice the input data, so this seems related to MNG-4236.;;;","13/Jul/09 18:40;jdcasey;This *SHOULD* mean that the checksum error should happen also for the very first file transferred for any given deployment in a Maven 2.1.0 environment. It seems that the Sun implementation sends the first transfer twice, then caches authentication and uses it for preemptive authentication in subsequent transfers.

We should check this out under the above circumstances.;;;","22/Jul/09 14:44;jdcasey;This WAGON issue is meant to track the longer-term efforts to solve the problem for the httpclient-based wagon, after the MNG issue is closed. We can close the MNG issue without closing the WAGON issue since we're going back to the lightweight-http wagon by default.;;;","22/Jul/09 14:46;jdcasey;Reverting to use of lightweight-http wagon by default, while still enabling the use of the httpclient-driven wagon if properly configured. We're tracking the long-term solution to the problem in the httpclient-driven wagon in WAGON-277.;;;","23/Jul/09 13:07;jdcasey;MNG-4254 provides a stop-gap until the issues can be sorted out in the WAGON project itself.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[regression] Authorization failed: Not authorized by proxy.,MNG-4228,12795456,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,cn73,cn73,03/Jul/09 08:04,20/Sep/09 20:04,03/Jan/22 13:13,21/Jul/09 12:22,2.2.0,,,,,2.2.1,,,Artifacts and Repositories,Settings,,,,3,,,,"I can not access any external repository using the version 2.2.0. If I go back to 2.1.0 everything works properly. 

For example:

mvn -U eclipse:eclipse
[INFO] Scanning for projects...
[INFO] Searching repository for plugin with prefix: 'eclipse'.
[INFO] org.apache.maven.plugins: checking for updates from central
[WARNING] repository metadata for: 'org.apache.maven.plugins' could not be retrieved from repository: central due
 to an error: Authorization failed: Not authorized by proxy.
[INFO] Repository 'central' will be blacklisted","Windows XP, java version ""1.6.0_04""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-4254,,,,,,,,,,,,,,,,,"08/Jul/09 07:59;jmborer;NTLMV21.RAR;https://issues.apache.org/jira/secure/attachment/12712995/NTLMV21.RAR","08/Jul/09 07:58;jmborer;TestNTLMAuth.java;https://issues.apache.org/jira/secure/attachment/12712996/TestNTLMAuth.java",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i296uf:",9223372036854775807,,,,,,,,,,,,,,,,,,,"07/Jul/09 09:45;jmborer;Same for me.;;;","07/Jul/09 09:45;jmborer;How can such a problem slip into a release?;;;","07/Jul/09 09:58;cn73;No answer? seems like a serious problem ... has changed the management of http file transfer? Can be a problem similar to that of Eclipse Galileo? http://wiki.eclipse.org/ECF_Filetransfer_Support_for_NTLMv2_Proxies;;;","07/Jul/09 10:51;jdcasey;maybe you could describe the type of proxy you're trying to use? testing on proxied networks is famously difficult, and many people don't have access to test on certain configurations. It's possible an actual problem slipped through, but I'd expect this isn't beyond our reach to correct using settings.xml configuration. Since Maven 2.2.0 has switched to using a HttpClient-driven http wagon, you might take a look at these pages as starting points, and see how your particular type of proxy is configured:

http://maven.apache.org/guides/mini/guide-http-settings.html
http://hc.apache.org/httpclient-3.x/;;;","07/Jul/09 11:02;jdcasey;After looking around at this some more, it's possible we'll have to address this in a 2.2.1 release. Not sure what the best strategy is, maybe simply to provide some mapping mechanism for which http wagon to use, then allow folks behind an NTLMv2 proxy to switch over to the lightweight-http solution we used to use. This cuts off some nicer features, but it doesn't look like solutions such as those in [HTTPCLIENT-579|http://issues.apache.org/jira/browse/HTTPCLIENT-579] is going to be an option any time soon.;;;","07/Jul/09 11:12;jdcasey;See also: http://wiki.apache.org/jakarta-httpclient/FrequentlyAskedNTLMQuestions;;;","07/Jul/09 16:48;jdcasey;upgrade priority;;;","08/Jul/09 02:18;cn73;Thanks for your reply jhon.
Some developers are not able to configure their corporate proxy. Neither the information about proxy implementation is provided to employees.:(
However, our proxy is NTLMv2, but the company certainly do not want to change it if I can not use maven 2.2.0.;;;","08/Jul/09 06:01;jmborer;Same for me as for Marco. Still not understanding the issue with maven 2.2.0. Why does it work with 2.1.0 and not 2.2.0. I think to understand that the HTTP library has been updated, right? Why does it break NTLM authentication then that was working before?!

I am also using an artifactory server. They use apache's httpclient library and proxy authentication works fine there. So what's the matter here?;;;","08/Jul/09 06:15;jmborer;Maybe you maven developpers should have a look at http://www.ioplex.com/jespa.html. Maybe it is not your business to make httpclient work, but at least you could suggest a patch or make the guys at apache move to include the lib. I will certainly be benefic for all of use and especially maven;;;","08/Jul/09 06:21;jmborer;Jespa is not free. Anyway httpclient 4.0 seems to adress some NTLM issues or provide insights

http://hc.apache.org/httpcomponents-client/ntlm.html;;;","08/Jul/09 07:57;jmborer;It seems we are using NTLMv1: artifactory 2.0.6 uses httpclient 3.x lib which implements NTLMv1. This works fine and authentication is successful. So not (yet) a NTLMv2 issue for me. 

Anyway maven 2.2.0 cannot access internet because of Authorization failed: Not authorized by proxy. 

I have used the patched lib provided by Konstantin at http://issues.apache.org/jira/browse/HTTPCLIENT-579. You can downloaded it at http://issues.apache.org/jira/secure/attachment/12410908/NTLMV21.RAR 

Then I have rewritten his example see my attached file. Simply drop it to the example dir build and run. 

Edit:
Steps to run the example:
1) go to src directory and typ:
$ant
2) go to examples dir
3) edit run.bat and put quotes around the value of -Djavax.net.ssl.trustStore if it contains spaces otherwise you will get an error
4) edit the java file and put your information (proxy address, login password etc)
5) to compile type
$ ant
6) execute run.bat

Marco could you try the example to see if this works for you?;;;","08/Jul/09 08:04;jmborer;The solution provided above is based on a patched version of httpclient v3.

If you look at the explanation on page  http://hc.apache.org/httpcomponents-client/ntlm.html concerning httpclient 4.x it uses jcifs implementation for NTLMv2. However they will no longer support the http part of jcifs according to their page http://jcifs.samba.org/src/docs/ntlmhttpauth.html 

I am puzzled here: apache recommends to use a lib that will no longer be supported (at least the http part) and redirect to a commercial implementation jespa http://www.ioplex.com/jespa.html. What sould we do? They don't even explain how to use jespa in httpclient 4.x...;;;","08/Jul/09 09:47;cn73;jean-marc  i run the examples and:


        <LI id=L_default_11>Error Code: 407 Proxy Authentication Required. The ISA Server requires authorization
to fulfill the request. Access to the Web Proxy filter is denied. (12209)
<LI id=L_default_12>IP Address: ------------
<LI id=L_default_13>Date: 08/07/2009 15:14:01 [GMT]
<LI id=L_default_14>Server: -----------------
<LI id=L_default_15>Source: proxy
;;;","09/Jul/09 03:45;jmborer;Marco, I don't know what that means. I am not an expert in this domain. I am just looking for solutions.

Are you sure to have provided all the required information? Do you use my example [1] or the one bundled in [2]?

Proxy authentication is just used in my example.;;;","09/Jul/09 05:16;olegk;> I am puzzled here: apache recommends to use a lib that will no longer be supported (at least the http part)

As far as my interpretation of the JCIF developers' position goes it sounds perfectly reasonable for them to discontinue development of components they consider out of scope and concentrate their efforts on the core competency, which is the NTLM authentication protocol.

> What sould we do?

General recommendation to all HttpClient users is to not use NTLM

Oleg;;;","09/Jul/09 05:40;jmborer;> General recommendation to all HttpClient users is to not use NTLM

That is no acceptable! We work in companies where they impose proxies that use such authentication scheme. We have no influence at all on this choice. 

I would really be sorry to be obliged to drop maven because of connection issues that seem not impossible to fix... Maven 2.1.0 works fine though...;;;","09/Jul/09 15:50;jdcasey;Please rest assured that we're not simply going to drop support for users behind NTLM proxies. Our hands are somewhat tied with httpclient, it seems, but we're thinking about using a delegator Wagon implementation for Maven 2.2.1 that would allow you to specify which http wagon impl you want to use...the lightweight-http wagon used in Maven < 2.2.0, which supports NTLM but falls down in other fringe use cases, or the httpclient-driven wagon used in Maven 2.2.0. We're probably going to leave httpclient in as the default choice, but allow users to flip this if they run into problems.;;;","13/Jul/09 15:49;jdcasey;lightweight wagon is once again the default for http/s wagons, but httpclient-driven wagons can be selected using:

{noformat}
-Dmaven.wagon.provider.http=httpclient 

-OR-

-Dmaven.wagon.provider.https=httpclient
{noformat}

Or, you can configure the provider per-server using the following <server> configuration:

{noformat}
<wagonProvider>httpclient</wagonProvider>
{noformat}

Once the release goes out, you'll be able to read up on this configuration at:

http://maven.apache.org/guides/mini/guide-wagon-providers.html;;;","14/Jul/09 05:42;jmborer;So if I understand well:

lightweight wagon is based on Sun's Java implementation and http wagon  is based on Apache's HttpClient lib, right?

Anyway Artifactory (http://www.jfrog.org/products.php) uses plain vanilla httpclient lib version 3 and is able to access the internet through our NTLM corporate proxy. Why is then wagon no able to do that? I was able my self to build a small example with httpclient 3 that works fine... 

Great that at least the previous behavior of maven is restored. When is 2.2.1 planned to be released?;;;","14/Jul/09 06:11;olegk;@Jean-Marc

There are several versions of the NTLM authentication scheme [1]. HttpClient 3.x _partially_ supports only what is known as NTLMv1. Depending on the version of the ISA proxy and its configuration this may or may not be sufficient. 

Oleg

[1] http://en.wikipedia.org/wiki/NTLM;;;","14/Jul/09 07:42;jmborer;@Oleg

I totally agree with you, but:
1) httpclient 3.x works for me out of the box with my proxy
2) maven 2.2.0 fails where maven 2.1.0 succeeds to access the web

So I am wondering what is wrong anyway with the lib that wagon uses in maven 2.2.0 since httpclient 3.x works with my proxy? Something is ""wronger"" than just using another lib...;;;","14/Jul/09 11:55;jdcasey;@Jean-Marc

Maybe you can provide us with some of this miracle code, then? We're always looking for good patches...

Maven 2.1.0 did *not* use the httpclient-driven wagon; it uses the Sun implementation. Also, Artifactory may have different licensing requirements than Maven, which may allow them to use code derived from jCIFS that is known to support NTLMv2 according to some other threads I've read.

A big part of the problem here is that I don't have access to an NTLMv2 proxy for testing, nor would I really know whether/how I could set one up on a VirtualBox/VMWare appliance for testing. This is the root problem when dealing with proxy issues, since there are a million flavors and they all seem to have different quirks. Are you sure you're behind an NTLM *v2* proxy, or is it just v1?

We're just using httpclient, there are no tricks or hacks. We have a client instance initialized inside the HttpWagon (actually, AbstractHttpWagon, IIRC) and it's used in the same manner as I've ever seen httpclient used anywhere. There's nothing special about it, but we may not have exactly the same configuration code as you do. So, I could use a look at your working example, to compare notes.

BTW, I'll start trying to release Maven 2.2.1 as soon as our issue count hits zero for this version. As time goes on, we may shift some issues out to 2.2.2 or 2.3, and we may discover some new regressions that need addressing before the release. But in any case, I'm working as hard as I can to get this release done ASAP. 

As always, users can help out immensely by providing sample code and failing test cases that can be used to create integration tests.;;;","14/Jul/09 11:56;jdcasey;Follow up with the discussion in this issue related to NTLMv2 code in httpclient...;;;","14/Jul/09 14:50;olegk;> Follow up with the discussion in this issue related to NTLMv2 code in httpclient... 

No, it is NOT. This has _nothing_ to do with HttpClient. SUN _licensed_ the NTLM protocol from Microsoft, the luxury we obviously do not have. Besides, they make use of native code accessing native Windows APIs somewhere in their NTLM implementation, which makes NTLM auth in JRE HTTP Windows only.

HttpClient 4.0 supports NTLMv2 through JCIFS on all platforms. Unfortunately due to licensing issues we cannot ship or even import JCIFS code.

This is a purely licensing issue and it has nothing to do with HttpClient. This is the reason why the use of NTLM is strongly discouraged.

Oleg;;;","15/Jul/09 01:59;cn73;Guys, thanks for your work ... I don't consider it a big problem using version 2.1.0 for some time ;);;;","15/Jul/09 03:23;jmborer;Guys,

I am perfectly understanding all your points, especially the licensing issues withJCIFS, but it seems that my explanations are not enough clear. So let's make it as clear as possible.

- We are sitting behind a proxy server which requires NTLM authentication. I don't know if it is v1 or v2, but I have some insights (see below). All server and clients are hosted on Windows machines.

- Maven 2.1.0 works where Maven 2.2.0 fails. According to your feedback, 2.2.0 has moved from Sun's http layer to Apache's httpclient 4.

- Meanwhile we have another product, Artifactory from http://www.jfrog.org/, which uses httpclient that manages to authenticate with our proxy server. I asked the developpers which version of httpclient they use in their product and they said it is an unpatched/unmodified apache's httpclient 3.x.

- I made wrote a small example (see attached [2]) which uses httpclient 3.x that authenticates successfuly with our proxy server. This makes me suppose that our proxy server uses NTLMv1, because it supported (even tough partially) by httpclient 3.x

- I retried with a modified version of httpclient that I found among the httplcient issues (http://issues.apache.org/jira/browse/HTTPCLIENT-579) which is supposed to improve NTLM support. I works fine too. However there are again licensing issues.

Conclusion: 
Why is then maven 2.2.0 no longer working? Problably because it uses httpclient 4.x and not httpclient 3.x. This would explain why artifactory has no problems and maven 2.2.0 has. Something changed in version 4.x. Did they completely drop the NTLM support? If yes, this are bad news. 

JCIFS is no longer going to support the HTTP implementation (http://jcifs.samba.org/src/docs/ntlmhttpauth.html). Instead they recommend to use a commercial library (http://www.ioplex.com/jespa.html). We could afford to buy the lib instead of dropping maven, but it still is unclear to me how to tell httpclient 4.x to use jespa.

Letting the user to decide which implementation of HTTP layer to use is the best option for me. Downgrade from httpclient 4.x to httpclient 3.x is not really I good idea, even if it breaks NTLM authentication. One may argue here.

I understand the licensing issues with jcifs. But would it be an option to let the end user download jcifs and make mave use it? Same question for jespa?;;;","21/Jul/09 12:12;jdcasey;Maven is using httpclient 3.x, NOT 4.x. The trick seems to be that we're not using NTCredentials, since (from what I can tell) there is no way to determine whether we're talking to an NTLM proxy or not. It may be worthwhile pursuing in future releases of Wagon, to allow the use of NTCredentials if a certain configuration flag is set, or a system property is set.

As for dropping in NTLMv2 support via jcifs or similar, I'm not sure how well that would work, since I'm guessing we'd have to have code that used it directly, which would mean that code was GPL'ed...

OTOH, the modifications I've made for Maven 2.2.1 should allow you to specify your own implementation of the HTTP wagon, and use that one instead of the built-in versions.;;;","21/Jul/09 12:21;jdcasey;Actually, reading the source again, it looks like NTCredentials IS used:

{code}
        ProxyInfo proxyInfo = getProxyInfo( getRepository().getProtocol(), getRepository().getHost() );
        if ( proxyInfo != null )
        {
            String proxyUsername = proxyInfo.getUserName();
            String proxyPassword = proxyInfo.getPassword();
            String proxyHost = proxyInfo.getHost();
            int proxyPort = proxyInfo.getPort();
            String proxyNtlmHost = proxyInfo.getNtlmHost();
            String proxyNtlmDomain = proxyInfo.getNtlmDomain();
            if ( proxyHost != null )
            {
                hc.setProxy( proxyHost, proxyPort );

                if ( proxyUsername != null && proxyPassword != null )
                {
                    Credentials creds;
                    if ( proxyNtlmHost != null || proxyNtlmDomain != null )
                    {
                        creds = new NTCredentials( proxyUsername, proxyPassword, proxyNtlmHost, proxyNtlmDomain );
                    }
                    else
                    {
                        creds = new UsernamePasswordCredentials( proxyUsername, proxyPassword );
                    }

                    int port = proxyInfo.getPort() > -1 ? proxyInfo.getPort() : AuthScope.ANY_PORT;
                    
                    AuthScope scope = new AuthScope( proxyHost, port );
                    client.getState().setProxyCredentials( scope, creds );
                }
            }
        }
{code}

So, if you use ntlmHost and ntlmDomain in your proxy configuration, it should work for NTLMv1 (but not v2).;;;","20/Sep/09 20:04;paul4christ79;FYI, Eclipse 3.6M2 now includes NTLMv2 proxy support:
http://download.eclipse.org/eclipse/downloads/drops/S-3.6M2-200909170100/eclipse-news-M2.html

Peek at their code and determine if it can be re-used for Maven.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Plugin dependencies are incorrectly included as needed artifacts in IBM JDK 1.5 sr8 and IBM JDK 1.6 ,MNG-4225,12797370,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Not A Problem,bmargulies,bnemazie@yahoo.com,bnemazie@yahoo.com,30/Jun/09 14:30,19/Jun/11 20:14,03/Jan/22 13:13,19/Jun/11 20:14,2.0.9,,,,,,,,Dependencies,,,,,0,,,,"We have been using a ""parent pom"" that specifies the plugin dependencies for our projects. This parent pom has been in use for more than a year. We have been using IBM JDK 1.5 sr4 until recently, and we had no problems building the parent pom. However for the upcoming release we upgraded to IBM JDK 1.5 sr8. Upon upgrade to the sr8 edition, when we tried to build the parent pom, the build process incorrectly tried to search for specified plugin dependencies, and since these specified plugin dependencies are built AFTER the parent pom is built the build process fails with the error message that it could not find the plugin-dependencies in order to proceed with building the parent pom.


We encountered the same issue with IBM JDK 1.6 as well. Since many of the developers who use our product will be using IBM JDK 1.6, we need to resolve this issue for both IBM JDK1.5 sr8 and IBM JDK 1.6.

We did NOT encounter this issue with the Sun JDK 1.6. This led us to approach IBM to investigate the issue as it appeared that this maybe an IBM JDK specific issue. We sent our test case to them, and they reported to us that suspect that maven code could be depending on the hashmap ordering, which is breaking the dependency check.

They instructed us to post this issue to the maven issue tracking and they will follow up with the maven folks.

Attached is the test case to reproduce the problem. Please read the file how_to_reproduce.txt in the attached. IBM folks will provide you with the needed JDK's.

","OS : Windows Server 2003
JDK: IBM JDK 1.5 sr8 edition and IBM JDK 1.6",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-3106,,,,,,,,,,,,,,,,,"30/Jun/09 14:30;bnemazie@yahoo.com;JavaMavenTest.zip;https://issues.apache.org/jira/secure/attachment/12712992/JavaMavenTest.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28puf:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"30/Jun/09 16:20;bentmann;That one is nice. The build failure (Unable to build project for plugin 'com.ebay.ebox.maven.plugin.sr8:maven-v4-plugin') or build success ultimatively depend on the POM profile ""ebox-v4-prebuild"" being active or not. If the profile is active, it introduces a dependency on the mentioned plugin which can't be resolved yet.

The relevant piece of info about the profile ""ebox-v4-prebuild"" is that it employs multiple activation conditions. Before MNG-3106 was fixed in [r656820|http://svn.apache.org/viewvc?view=rev&revision=656820], the first and only the first matching profile activator would determine the actiation status. The activators are looked up from the Plexus container with a non-deterministic order. Now, with JDK 1.5 sr4, the activator responsible for {{<file>}} was checked before the one responsible for {{<property>}}. As "".v4prebuild"" does not exist, the file activator caused the profile to be disabled. In newer JDKs, the order of the activators was reversed, so this time the property activator was queried first, and it deemed the profile active as the property ""skip.v4.prebuild"" is not set.

Newer Maven versions handle multiple activators as logically ORed, so they will activate the profile, regardless of the activators order. So you would need to update your profile activation conditions.;;;","30/Jun/09 18:03;snambi;This issue manifests when we use IBM JDK 1.6.
But there are no problems with SUN JDK 1.6.

Why do we see different behaviour between Different  JDK vendors?;;;","30/Jun/09 19:36;bnemazie@yahoo.com;Hi Ben,

It seems your response suggests that an upgrade to version 2.0.10, the version on which MNG-3106 was fixed, should have fixed the problem. However I previously tried mvn 3.0 alpha and I encountered the same problem. Trying with mvn 2.0.10 I still have the same problem. Building the parent pom pulls in the plugin dependencies.

Please advise.;;;","01/Jul/09 03:09;bentmann;You misunderstood me. MNG-3106 only fixed the non-determinism of the profile activation that you observe with SR4 vs SR8. In newer Maven versions the profile ""box-v4-prebuild"", i.e. the one that brings in the plugin dependency, will be activated. Apparently, you don't want this profile activated so either you explicitly disable it via ""-P!box-v4-prebuild"" on the CLI or you fix your profile activation condition.;;;","01/Jul/09 03:16;bentmann;bq. Why do we see different behaviour between Different JDK vendors?
I repeat: ""The activators are looked up from the Plexus container with a non-deterministic order."" And before MNG-3106, the activation of a profile was sensitive to the order of the activators. That it works with Maven 2.0.9- and IBM JDK 1.5 SR4 or Sun JDK 1.6 is a mere coincident.;;;","21/Apr/11 09:01;epabst;I posted a fix for MNG-4516 which is related.;;;","18/Jun/11 17:08;bmargulies;THe reason for the differing behavior is that Maven uses classes like HashMap which iterate in undefined order, so unless special effort is taken to impose an order, results can vary between implementations. Since this particular order is defined by Maven to be *undefined*, it's not a defect that this difference occurs. So I think this should be closed as not-a-bug.
;;;","19/Jun/11 20:14;bmargulies;Behavior is neither incorrect, nor myterious.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
preemptive auth in non-lightweight http wagon causes Unauthorized responses from some servers,MNG-4213,12795508,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,jdcasey,jdcasey,19/Jun/09 16:51,06/Apr/15 01:53,03/Jan/22 13:13,19/Jun/09 18:03,2.2.0,,,,,2.2.0,,,Artifacts and Repositories,,,,,0,,,,see WAGON-270,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,WAGON-270,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28wp3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[regression] proxy access broken between maven version 2.0.10 and 2.1. Probably due to addition of  wagon 1.0-beta-4+,MNG-4211,12797369,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Not A Problem,bentmann,robertgloverjr,robertgloverjr,18/Jun/09 15:12,15/Feb/11 09:31,03/Jan/22 13:13,09/Feb/11 05:07,2.1.0,2.2.0,,,,,,,Artifacts and Repositories,,,,,5,,,,"  At a large company, maven become impossible to use via proxy when maven upgraded from 1.0.10 to 2.1.  maven has always worked fine via proxy in 2.0.9 and continues to work fine.  however maven via proxy always fails in version 2.1.0 and higher.  
  Attached is a  zip file containing   1) log of GMAIL chat between the creater of this JIRA and a maven developer.  2) two console outputs of running maven 2.2. RC3 showing the proxy failure messages.  3) setting.xml (with comments stripped out)",WinXP SP2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-3652,MNG-3599,,,,,,,,,,,,,,,,"18/Jun/09 15:12;robertgloverjr;jira_files_4_total.zip;https://issues.apache.org/jira/secure/attachment/12712988/jira_files_4_total.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28xnr:",9223372036854775807,,,,,,,,,,,,,,,,,,,"18/Jun/09 15:17;robertgloverjr;I (the creator of this JIRA)  was asked by a maven developer to try to find out the brand of the proxy server being used.  I was stopped in my tracks however by a directive from a company spokesman to not divulge any information concerning the brand of proxy server.  So I must apologetically say that even though it would be a big help to solve this JIRA, I am forbidden to say the brand of proxy server.  (I don't know it myself and am forbidden from even asking what it is).;;;","18/Jun/09 16:19;jdcasey;I'll have to do some poking around here locally with a proxy appliance, but the problem is complicated by the fact that many users configure proxies for use with Maven, and there seem to be no other problem reports like this one.

Without knowing what type of proxy is causing this problem, it's going to be very difficult to fix.;;;","18/Jun/09 19:37;wfay;> Without knowing what type of proxy is causing this problem, it's going to be very difficult to fix.

Which is what I told Robert originally on the Users list... One way or another, you're going to have to get us that information, Robert. Even if you're forbidden from asking or passing it on. Big companies are so stupid sometimes -- I would know, I've worked for several of them.;;;","18/Jun/09 21:07;robertgloverjr;I will investigate whether there is a legitimate way for me to provide that information.  I agree it seems ridiculous that I can't provide such basic information in this context when the company is totally anonymous and entirely obfuscated in the JIRA. I will do what I can but it's an uphill battle to say the least..

Please notice what I found from a google of ""Wagon 1.0-beta-4"". (See below).  It does look like change WAGON-225 might be the culprit, don't you think?

The Wagon 1.0-beta-4 candidate has been staged.

This release includes 4 fixes. You can take a look at the release 
notes here:
    http://jira.codehaus.org/secure/ReleaseNote.jspa?projectId=10335&styleName=Html&version=14310

* [WAGON-222] - Empty file transfer causes NPE
* [WAGON-224] - ChecksumObserver sets digest == null on transfer 
error, leading to NPE's if checksum downloads are retried with same 
observer instance
* [WAGON-225] - proxyInfoProvider is never used
* [WAGON-226] - filePermissions and directoryPermissions are not set 
correctly for FTP ;;;","19/Jun/09 09:24;jdcasey;The breakage in this issue seems to stem from the upgrade to wagon 1.0-beta-4, which introduced a new method of handling proxy information. The proxy described here works in 2.0.10, which uses wagon 1.0-beta-2, and stops working in 2.1.0+. Therefore, the changes in wagon beta-3 or beta-4, or potentially beta-5 must be the cause.

We can probably narrow this down further by checking to see whether the problems happens in 2.1.0-M1 of Maven, since the switch to wagon 1.0-beta-5 wasn't until Maven 2.1.0.;;;","09/Jul/09 18:58;jdcasey;will revisit once we get these other regressions solved, since this one is sparse on information we could use to debug/diagnose.;;;","28/Jul/09 02:45;slysha;Hi John,

Any news concerning that topic ? We are behind a company's proxy and maven 2.2.0 does not seem to work. Our partners at another company have the same issue. Did the configuration file change for proxies ?

Thanks;;;","30/Jul/09 10:12;jdcasey;@Sylvain: Please try out the first release candidate of Maven 2.2.1 to see whether this helps. It's at:

https://repository.apache.org/content/repositories/maven-staging-025/org/apache/maven/apache-maven/2.2.1-RC1/

I'm not certain whether yours is the same problem that was reported by Robert, since so many things can go wrong with proxies. For instance, one of the main fixes for 2.2.1 aims to re-enable the use of NTLM proxies, which don't always work with the httpclient-driven wagon. Since we switched from using the Sun implementation in 2.2.0, it may simply be a matter of going back to something that supports NTLM for your issue.
;;;","30/Jul/09 11:26;slysha;Hi John, I've tried your 2.2.1-RC1 and it helps to solve this issue (but there is still a bug because  

                                           <configuration>
			<wagonProvider>lightweight</wagonProvider>
		  </configuration> 

is used only for one dependency download: if there are several dependencies in this repository it hangs. This doe not happen if the configuration is provided by commandline option 
                                             -Dmaven.wagon.provider.http=lightweight -Dmaven.wagon.provider.https=lightweight 
, as described in the email I sent you. There is also a big side-effect for us since it seems to impact other wagons, in particular the wagon-svn, see email)


Anyway it is strange because even with RC2.2.1, I have additionally to set java proxy features for https in the mvn.bat script (-Dhttps.proxyHost and -Dhttps.proxyPort). I remember a time (maybe maven 2.0.6 ?) where this was not needed, and where maven worked fine with our proxy using just the settings' <proxies> section. It is sad that this behaviour is now lost..

Best regards,


Sylvain;;;","04/Aug/09 11:24;jdcasey;@Sylvain-

Unfortunately, one of the bugfixes I had for RC1 addressed the single-download problem...but it got lost in version-control on my localhost, and didn't make it into RC1. This and the other issue with cross-pollution of wagon providers has been addressed in RC2.

I'm not sure about the need to set https.proxyHost/Port, though. Can you try out 2.2.1-RC2:

https://repository.apache.org/content/repositories/maven-staging-008/org/apache/maven/apache-maven/2.2.1-RC2

and report your results to the '[PLEASE TEST] Maven 2.2.1-RC2' thread out on the users or dev list? That would be a great help.;;;","12/Sep/09 01:48;fcorneli;Apparently 2.2.1 still has some proxy issues. At work I'm having difficulties compiling my software because we're sitting behind a proxy over there. I have a mixture of both http and https repositories, and this doesn't really work apparently. At home (direct connection) the build works as expected.;;;","14/Sep/09 15:36;jdcasey;@Frank:

Do you have any information about what type of proxy is being used? Can you attach a debug log from a failing build? If so, just run with -X and pipe or redirect the output to a file, then attach that file to this issue.

On linux/mac, I'd do something like this:

{noformat}
mvn -X clean install 2>&1 | tee build.log
{noformat};;;","23/Sep/09 16:17;ericeberry;We've also seen this issue in 2.1.0, 2.2.0, and 2.2.1.  We are using Artifactory (2.0.8) as our maven proxy.  We have Artifactory proxied behind Apache using SSL.  Here is a sample error we get from Maven, unfortunately (-X is not turned on).  This can happen with plugins or dependencies.  The solution is to rerun maven 1 or more times until the problem goes away.

[INFO] ------------------------------------------------------------------------
[ERROR] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] A required plugin was not found: Plugin could not be found - check that the goal name is correct: File: https://vmswdev1/artifactory/repo/com/ccadllc/firebird/maven/ccad-firebird-maven-flex-plugin/3.1.0-SNAPSHOT/ccad-firebird-maven-flex-plugin-3.1.0-SNAPSHOT.jar does not exist

Try downloading the file manually from the project website.

Then, install it using the command:
    mvn install:install-file -DgroupId=com.ccadllc.firebird.maven -DartifactId=ccad-firebird-maven-flex-plugin -Dversion=3.1.0-SNAPSHOT -Dpackaging=maven-plugin -Dfile=/path/to/file

Alternatively, if you host your own repository you can deploy the file there:
    mvn deploy:deploy-file -DgroupId=com.ccadllc.firebird.maven -DartifactId=ccad-firebird-maven-flex-plugin -Dversion=3.1.0-SNAPSHOT -Dpackaging=maven-plugin -Dfile=/path/to/file -Durl=[url] -DrepositoryId=[id]


  com.ccadllc.firebird.maven:ccad-firebird-maven-flex-plugin:maven-plugin:3.1.0-SNAPSHOT

from the specified remote repositories:
  central (https://vmswdev1/artifactory/repo)


  com.ccadllc.firebird.maven:ccad-firebird-maven-flex-plugin:maven-plugin:3.1.0-SNAPSHOT

from the specified remote repositories:
  central (https://vmswdev1/artifactory/repo)


[INFO] ------------------------------------------------------------------------
[INFO] For more information, run Maven with the -e switch;;;","24/Sep/09 00:46;ericeberry;Captured the problem with -X:

23-Sep-2009 20:04:13  	[DEBUG]   Artifact resolved
23-Sep-2009 20:04:13 	[DEBUG] ccad-firebird-core-base-common: using locally installed snapshot
23-Sep-2009 20:04:13 	[DEBUG] Trying repository central
23-Sep-2009 20:04:13 	[DEBUG] Checking for pre-existing User-Agent configuration.
23-Sep-2009 20:04:13 	[DEBUG] Adding User-Agent configuration.
23-Sep-2009 20:04:13 	[DEBUG] Connecting to repository: 'central' with url: 'https://vmswdev1/artifactory/repo'.
23-Sep-2009 20:04:13 	Downloading: https://vmswdev1/artifactory/repo/com/ccadllc/firebird/core/ccad-firebird-core-base-common/3.1.0-SNAPSHOT/ccad-firebird-core-base-common-3.1.0-SNAPSHOT.jar
23-Sep-2009 20:04:13 	[DEBUG] sending ==> If-Modified-Since: Thu, 24-Sep-09 03:03:09 GMT
23-Sep-2009 20:04:13 	(1253761389000)
23-Sep-2009 20:04:29 	[DEBUG] https://vmswdev1/artifactory/repo/com/ccadllc/firebird/core/ccad-firebird-core-base-common/3.1.0-SNAPSHOT/ccad-firebird-core-base-common-3.1.0-SNAPSHOT.jar - Status code: 404
23-Sep-2009 20:04:29 	[DEBUG] File: https://vmswdev1/artifactory/repo/com/ccadllc/firebird/core/ccad-firebird-core-base-common/3.1.0-SNAPSHOT/ccad-firebird-core-base-common-3.1.0-SNAPSHOT.jar does not exist
23-Sep-2009 20:04:29 	org.apache.maven.wagon.ResourceDoesNotExistException: File: https://vmswdev1/artifactory/repo/com/ccadllc/firebird/core/ccad-firebird-core-base-common/3.1.0-SNAPSHOT/ccad-firebird-core-base-common-3.1.0-SNAPSHOT.jar does not exist
23-Sep-2009 20:04:29 	        at org.apache.maven.wagon.shared.http.AbstractHttpClientWagon.fillInputData(AbstractHttpClientWagon.java:603)
23-Sep-2009 20:04:29 	        at org.apache.maven.wagon.StreamWagon.getInputStream(StreamWagon.java:116)
23-Sep-2009 20:04:29 	        at org.apache.maven.wagon.StreamWagon.getIfNewer(StreamWagon.java:88)
23-Sep-2009 20:04:29 	        at org.apache.maven.artifact.manager.DefaultWagonManager.getRemoteFile(DefaultWagonManager.java:475)
23-Sep-2009 20:04:29 	        at org.apache.maven.artifact.manager.DefaultWagonManager.getArtifact(DefaultWagonManager.java:372)
23-Sep-2009 20:04:29 	        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:212)
23-Sep-2009 20:04:29 	        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:90)
23-Sep-2009 20:04:29 	        at org.apache.maven.artifact.resolver.DefaultArtifactResolver$ResolveArtifactTask.resolveArtifact(DefaultArtifactResolver.java:456)
23-Sep-2009 20:04:29 	        at org.apache.maven.artifact.resolver.DefaultArtifactResolver$ResolveArtifactTask.run(DefaultArtifactResolver.java:433)
23-Sep-2009 20:04:29 	        at hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1061)
23-Sep-2009 20:04:29 	        at hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:575)
23-Sep-2009 20:04:29 	        at java.lang.Thread.run(Thread.java:636)
23-Sep-2009 20:04:29 	[DEBUG] File: https://vmswdev1/artifactory/repo/com/ccadllc/firebird/core/ccad-firebird-core-base-common/3.1.0-SNAPSHOT/ccad-firebird-core-base-common-3.1.0-SNAPSHOT.jar does not exist
23-Sep-2009 20:04:29 	
23-Sep-2009 20:04:29 	Try downloading the file manually from the project website.
23-Sep-2009 20:04:29 	
23-Sep-2009 20:04:29 	Then, install it using the command:
23-Sep-2009 20:04:29 	    mvn install:install-file -DgroupId=com.ccadllc.firebird.core -DartifactId=ccad-firebird-core-base-common -Dversion=3.1.0-SNAPSHOT -Dpackaging=jar -Dfile=/path/to/file
23-Sep-2009 20:04:29 	
23-Sep-2009 20:04:29 	Alternatively, if you host your own repository you can deploy the file there:
23-Sep-2009 20:04:29 	    mvn deploy:deploy-file -DgroupId=com.ccadllc.firebird.core -DartifactId=ccad-firebird-core-base-common -Dversion=3.1.0-SNAPSHOT -Dpackaging=jar -Dfile=/path/to/file -Durl=[url] -DrepositoryId=[id]
23-Sep-2009 20:04:29 	
23-Sep-2009 20:04:29 	Path to dependency:
23-Sep-2009 20:04:29 	        1) com.ccadllc.dks:com.ccadllc.dks.assembly:p2-repository:1.0.0-S5_SNAPSHOT
23-Sep-2009 20:04:29 	        2) com.ccadllc.osgi:com.ccadllc.osgi.appserver:p2-repository:1.0.8-SNAPSHOT
23-Sep-2009 20:04:29 	        3) com.ccadllc.firebird.core:ccad-firebird-core-base-common:jar:3.1.0-SNAPSHOT
23-Sep-2009 20:04:29 	
23-Sep-2009 20:04:29 	
23-Sep-2009 20:04:29 	  com.ccadllc.firebird.core:ccad-firebird-core-base-common:jar:3.1.0-SNAPSHOT
23-Sep-2009 20:04:29 	
23-Sep-2009 20:04:29 	from the specified remote repositories:
23-Sep-2009 20:04:29 	  central (https://vmswdev1/artifactory/repo)
23-Sep-2009 20:04:29 	
23-Sep-2009 20:04:29 	
23-Sep-2009 20:04:29 	org.apache.maven.artifact.resolver.ArtifactNotFoundException: File: https://vmswdev1/artifactory/repo/com/ccadllc/firebird/core/ccad-firebird-core-base-common/3.1.0-SNAPSHOT/ccad-firebird-core-base-common-3.1.0-SNAPSHOT.jar does not exist
23-Sep-2009 20:04:29 	
23-Sep-2009 20:04:29 	Try downloading the file manually from the project website.
23-Sep-2009 20:04:29 	
23-Sep-2009 20:04:29 	Then, install it using the command:
23-Sep-2009 20:04:29 	    mvn install:install-file -DgroupId=com.ccadllc.firebird.core -DartifactId=ccad-firebird-core-base-common -Dversion=3.1.0-SNAPSHOT -Dpackaging=jar -Dfile=/path/to/file
23-Sep-2009 20:04:29 	
23-Sep-2009 20:04:29 	Alternatively, if you host your own repository you can deploy the file there:
23-Sep-2009 20:04:29 	    mvn deploy:deploy-file -DgroupId=com.ccadllc.firebird.core -DartifactId=ccad-firebird-core-base-common -Dversion=3.1.0-SNAPSHOT -Dpackaging=jar -Dfile=/path/to/file -Durl=[url] -DrepositoryId=[id]
23-Sep-2009 20:04:29 	
23-Sep-2009 20:04:29 	Path to dependency:
23-Sep-2009 20:04:29 	        1) com.ccadllc.dks:com.ccadllc.dks.assembly:p2-repository:1.0.0-S5_SNAPSHOT
23-Sep-2009 20:04:29 	        2) com.ccadllc.osgi:com.ccadllc.osgi.appserver:p2-repository:1.0.8-SNAPSHOT
23-Sep-2009 20:04:29 	        3) com.ccadllc.firebird.core:ccad-firebird-core-base-common:jar:3.1.0-SNAPSHOT
23-Sep-2009 20:04:29 	
23-Sep-2009 20:04:29 	
23-Sep-2009 20:04:29 	  com.ccadllc.firebird.core:ccad-firebird-core-base-common:jar:3.1.0-SNAPSHOT
23-Sep-2009 20:04:29 	
23-Sep-2009 20:04:29 	from the specified remote repositories:
23-Sep-2009 20:04:29 	  central (https://vmswdev1/artifactory/repo)
23-Sep-2009 20:04:29 	
23-Sep-2009 20:04:29 	
23-Sep-2009 20:04:29 	        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:228)
23-Sep-2009 20:04:29 	        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:90)
23-Sep-2009 20:04:29 	        at org.apache.maven.artifact.resolver.DefaultArtifactResolver$ResolveArtifactTask.resolveArtifact(DefaultArtifactResolver.java:456)
23-Sep-2009 20:04:29 	        at org.apache.maven.artifact.resolver.DefaultArtifactResolver$ResolveArtifactTask.run(DefaultArtifactResolver.java:433)
23-Sep-2009 20:04:29 	        at hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1061)
23-Sep-2009 20:04:29 	        at hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:575)
23-Sep-2009 20:04:29 	        at java.lang.Thread.run(Thread.java:636)
23-Sep-2009 20:04:29 	Caused by: org.apache.maven.wagon.ResourceDoesNotExistException: File: https://vmswdev1/artifactory/repo/com/ccadllc/firebird/core/ccad-firebird-core-base-common/3.1.0-SNAPSHOT/ccad-firebird-core-base-common-3.1.0-SNAPSHOT.jar does not exist
23-Sep-2009 20:04:29 	        at org.apache.maven.wagon.shared.http.AbstractHttpClientWagon.fillInputData(AbstractHttpClientWagon.java:603)
23-Sep-2009 20:04:29 	        at org.apache.maven.wagon.StreamWagon.getInputStream(StreamWagon.java:116)
23-Sep-2009 20:04:29 	        at org.apache.maven.wagon.StreamWagon.getIfNewer(StreamWagon.java:88)
23-Sep-2009 20:04:29 	        at org.apache.maven.artifact.manager.DefaultWagonManager.getRemoteFile(DefaultWagonManager.java:475)
23-Sep-2009 20:04:29 	        at org.apache.maven.artifact.manager.DefaultWagonManager.getArtifact(DefaultWagonManager.java:372)
23-Sep-2009 20:04:29 	        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:212)
23-Sep-2009 20:04:29 	        ... 6 more
;;;","24/Sep/09 00:46;ericeberry;Captured the problem with -X:

23-Sep-2009 20:04:13  	[DEBUG]   Artifact resolved
23-Sep-2009 20:04:13 	[DEBUG] ccad-firebird-core-base-common: using locally installed snapshot
23-Sep-2009 20:04:13 	[DEBUG] Trying repository central
23-Sep-2009 20:04:13 	[DEBUG] Checking for pre-existing User-Agent configuration.
23-Sep-2009 20:04:13 	[DEBUG] Adding User-Agent configuration.
23-Sep-2009 20:04:13 	[DEBUG] Connecting to repository: 'central' with url: 'https://vmswdev1/artifactory/repo'.
23-Sep-2009 20:04:13 	Downloading: https://vmswdev1/artifactory/repo/com/ccadllc/firebird/core/ccad-firebird-core-base-common/3.1.0-SNAPSHOT/ccad-firebird-core-base-common-3.1.0-SNAPSHOT.jar
23-Sep-2009 20:04:13 	[DEBUG] sending ==> If-Modified-Since: Thu, 24-Sep-09 03:03:09 GMT
23-Sep-2009 20:04:13 	(1253761389000)
23-Sep-2009 20:04:29 	[DEBUG] https://vmswdev1/artifactory/repo/com/ccadllc/firebird/core/ccad-firebird-core-base-common/3.1.0-SNAPSHOT/ccad-firebird-core-base-common-3.1.0-SNAPSHOT.jar - Status code: 404
23-Sep-2009 20:04:29 	[DEBUG] File: https://vmswdev1/artifactory/repo/com/ccadllc/firebird/core/ccad-firebird-core-base-common/3.1.0-SNAPSHOT/ccad-firebird-core-base-common-3.1.0-SNAPSHOT.jar does not exist
23-Sep-2009 20:04:29 	org.apache.maven.wagon.ResourceDoesNotExistException: File: https://vmswdev1/artifactory/repo/com/ccadllc/firebird/core/ccad-firebird-core-base-common/3.1.0-SNAPSHOT/ccad-firebird-core-base-common-3.1.0-SNAPSHOT.jar does not exist
23-Sep-2009 20:04:29 	        at org.apache.maven.wagon.shared.http.AbstractHttpClientWagon.fillInputData(AbstractHttpClientWagon.java:603)
23-Sep-2009 20:04:29 	        at org.apache.maven.wagon.StreamWagon.getInputStream(StreamWagon.java:116)
23-Sep-2009 20:04:29 	        at org.apache.maven.wagon.StreamWagon.getIfNewer(StreamWagon.java:88)
23-Sep-2009 20:04:29 	        at org.apache.maven.artifact.manager.DefaultWagonManager.getRemoteFile(DefaultWagonManager.java:475)
23-Sep-2009 20:04:29 	        at org.apache.maven.artifact.manager.DefaultWagonManager.getArtifact(DefaultWagonManager.java:372)
23-Sep-2009 20:04:29 	        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:212)
23-Sep-2009 20:04:29 	        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:90)
23-Sep-2009 20:04:29 	        at org.apache.maven.artifact.resolver.DefaultArtifactResolver$ResolveArtifactTask.resolveArtifact(DefaultArtifactResolver.java:456)
23-Sep-2009 20:04:29 	        at org.apache.maven.artifact.resolver.DefaultArtifactResolver$ResolveArtifactTask.run(DefaultArtifactResolver.java:433)
23-Sep-2009 20:04:29 	        at hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1061)
23-Sep-2009 20:04:29 	        at hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:575)
23-Sep-2009 20:04:29 	        at java.lang.Thread.run(Thread.java:636)
23-Sep-2009 20:04:29 	[DEBUG] File: https://vmswdev1/artifactory/repo/com/ccadllc/firebird/core/ccad-firebird-core-base-common/3.1.0-SNAPSHOT/ccad-firebird-core-base-common-3.1.0-SNAPSHOT.jar does not exist
23-Sep-2009 20:04:29 	
23-Sep-2009 20:04:29 	Try downloading the file manually from the project website.
23-Sep-2009 20:04:29 	
23-Sep-2009 20:04:29 	Then, install it using the command:
23-Sep-2009 20:04:29 	    mvn install:install-file -DgroupId=com.ccadllc.firebird.core -DartifactId=ccad-firebird-core-base-common -Dversion=3.1.0-SNAPSHOT -Dpackaging=jar -Dfile=/path/to/file
23-Sep-2009 20:04:29 	
23-Sep-2009 20:04:29 	Alternatively, if you host your own repository you can deploy the file there:
23-Sep-2009 20:04:29 	    mvn deploy:deploy-file -DgroupId=com.ccadllc.firebird.core -DartifactId=ccad-firebird-core-base-common -Dversion=3.1.0-SNAPSHOT -Dpackaging=jar -Dfile=/path/to/file -Durl=[url] -DrepositoryId=[id]
23-Sep-2009 20:04:29 	
23-Sep-2009 20:04:29 	Path to dependency:
23-Sep-2009 20:04:29 	        1) com.ccadllc.dks:com.ccadllc.dks.assembly:p2-repository:1.0.0-S5_SNAPSHOT
23-Sep-2009 20:04:29 	        2) com.ccadllc.osgi:com.ccadllc.osgi.appserver:p2-repository:1.0.8-SNAPSHOT
23-Sep-2009 20:04:29 	        3) com.ccadllc.firebird.core:ccad-firebird-core-base-common:jar:3.1.0-SNAPSHOT
23-Sep-2009 20:04:29 	
23-Sep-2009 20:04:29 	
23-Sep-2009 20:04:29 	  com.ccadllc.firebird.core:ccad-firebird-core-base-common:jar:3.1.0-SNAPSHOT
23-Sep-2009 20:04:29 	
23-Sep-2009 20:04:29 	from the specified remote repositories:
23-Sep-2009 20:04:29 	  central (https://vmswdev1/artifactory/repo)
23-Sep-2009 20:04:29 	
23-Sep-2009 20:04:29 	
23-Sep-2009 20:04:29 	org.apache.maven.artifact.resolver.ArtifactNotFoundException: File: https://vmswdev1/artifactory/repo/com/ccadllc/firebird/core/ccad-firebird-core-base-common/3.1.0-SNAPSHOT/ccad-firebird-core-base-common-3.1.0-SNAPSHOT.jar does not exist
23-Sep-2009 20:04:29 	
23-Sep-2009 20:04:29 	Try downloading the file manually from the project website.
23-Sep-2009 20:04:29 	
23-Sep-2009 20:04:29 	Then, install it using the command:
23-Sep-2009 20:04:29 	    mvn install:install-file -DgroupId=com.ccadllc.firebird.core -DartifactId=ccad-firebird-core-base-common -Dversion=3.1.0-SNAPSHOT -Dpackaging=jar -Dfile=/path/to/file
23-Sep-2009 20:04:29 	
23-Sep-2009 20:04:29 	Alternatively, if you host your own repository you can deploy the file there:
23-Sep-2009 20:04:29 	    mvn deploy:deploy-file -DgroupId=com.ccadllc.firebird.core -DartifactId=ccad-firebird-core-base-common -Dversion=3.1.0-SNAPSHOT -Dpackaging=jar -Dfile=/path/to/file -Durl=[url] -DrepositoryId=[id]
23-Sep-2009 20:04:29 	
23-Sep-2009 20:04:29 	Path to dependency:
23-Sep-2009 20:04:29 	        1) com.ccadllc.dks:com.ccadllc.dks.assembly:p2-repository:1.0.0-S5_SNAPSHOT
23-Sep-2009 20:04:29 	        2) com.ccadllc.osgi:com.ccadllc.osgi.appserver:p2-repository:1.0.8-SNAPSHOT
23-Sep-2009 20:04:29 	        3) com.ccadllc.firebird.core:ccad-firebird-core-base-common:jar:3.1.0-SNAPSHOT
23-Sep-2009 20:04:29 	
23-Sep-2009 20:04:29 	
23-Sep-2009 20:04:29 	  com.ccadllc.firebird.core:ccad-firebird-core-base-common:jar:3.1.0-SNAPSHOT
23-Sep-2009 20:04:29 	
23-Sep-2009 20:04:29 	from the specified remote repositories:
23-Sep-2009 20:04:29 	  central (https://vmswdev1/artifactory/repo)
23-Sep-2009 20:04:29 	
23-Sep-2009 20:04:29 	
23-Sep-2009 20:04:29 	        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:228)
23-Sep-2009 20:04:29 	        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:90)
23-Sep-2009 20:04:29 	        at org.apache.maven.artifact.resolver.DefaultArtifactResolver$ResolveArtifactTask.resolveArtifact(DefaultArtifactResolver.java:456)
23-Sep-2009 20:04:29 	        at org.apache.maven.artifact.resolver.DefaultArtifactResolver$ResolveArtifactTask.run(DefaultArtifactResolver.java:433)
23-Sep-2009 20:04:29 	        at hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1061)
23-Sep-2009 20:04:29 	        at hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:575)
23-Sep-2009 20:04:29 	        at java.lang.Thread.run(Thread.java:636)
23-Sep-2009 20:04:29 	Caused by: org.apache.maven.wagon.ResourceDoesNotExistException: File: https://vmswdev1/artifactory/repo/com/ccadllc/firebird/core/ccad-firebird-core-base-common/3.1.0-SNAPSHOT/ccad-firebird-core-base-common-3.1.0-SNAPSHOT.jar does not exist
23-Sep-2009 20:04:29 	        at org.apache.maven.wagon.shared.http.AbstractHttpClientWagon.fillInputData(AbstractHttpClientWagon.java:603)
23-Sep-2009 20:04:29 	        at org.apache.maven.wagon.StreamWagon.getInputStream(StreamWagon.java:116)
23-Sep-2009 20:04:29 	        at org.apache.maven.wagon.StreamWagon.getIfNewer(StreamWagon.java:88)
23-Sep-2009 20:04:29 	        at org.apache.maven.artifact.manager.DefaultWagonManager.getRemoteFile(DefaultWagonManager.java:475)
23-Sep-2009 20:04:29 	        at org.apache.maven.artifact.manager.DefaultWagonManager.getArtifact(DefaultWagonManager.java:372)
23-Sep-2009 20:04:29 	        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:212)
23-Sep-2009 20:04:29 	        ... 6 more
;;;","24/Sep/09 00:50;ericeberry;After taking a look at the artifactory log, it looks like artifactory is timing out reading from the remote repository.;;;","28/Jan/10 09:02;jdcasey;we've gotten lost in the weeds a little bit in this issue. Robert, is Maven 2.2.1 working for you?;;;","08/Feb/10 21:35;robertgloverjr;      The corporate security policies at work are so fantastically paranoid, that I  continue to use Maven 2.09 on the job instead of upgrading to a more recent version.   I sincerely apologize for being so unhelpful as to whether Maven 2.2.1 works through the proxy or not.   It's even been a while since I've run maven from the command line,  because I've been able to do my work using m2eclipse.   I guess after all the work that's been done on this jira, I really should try Maven 2.2.1.  Will post if I can find some time to try it.  
best wishes,
Robert;;;","09/Feb/10 00:48;betz;I'm rather new to maven but have found the following problem working with a proxy:

I use Maven 2.2.1 with Java 1.6.0_16.

I had to reach SSL-repositories as well as nonSSL-repositories via proxy. So I added the following lines to the settings.xml-file:

{code}
  <proxies>
    <proxy>
      <active>true</active>
      <protocol>http</protocol>
      <host>proxy.mycompany.com</host>
      <port>8080</port>
      <nonProxyHosts></nonProxyHosts>
    </proxy>
    <proxy>
      <active>true</active>
      <protocol>https</protocol>
      <host>proxy.mycompany.com</host>
      <port>8080</port>
      <nonProxyHosts></nonProxyHosts>
    </proxy>
  </proxies>
{code}

But maven fails to connect to either http- or https-repositories. This depends on the proxy setting mentioned first in the settings.xml.

Found the following solution:

I set the environment variable MAVEN_OPTS:
{code}
MAVEN_OPTS=""-Dhttp.proxyHost=proxy.mycompany.com -Dhttp.proxyPort=8080 -Dhttps.proxyHost=proxy.mycompany.com -Dhttps.proxyPort=8080 -Dmaven.wagon.provider.http=httpclient -Dmaven.wagon.provider.https=lightweight""
{code}

With this settings maven works fine. So I had to specify different wagon-providers for the two protocolls to get it work.


;;;","08/Feb/11 11:13;robertgloverjr;By good luck,  an associate of mine seems to have located the specific reason why Maven firewall ""broke"" (for some of us) when Maven 2.1.0 was released.  The problem can be seen if a debugging proxy is used to intercept and examine the request header that is sent outbound from Maven 2.1.0.  In earlier versions the request header simply stated the java version.  However the request header sent by Maven 2.1.0 says something to the effect of ""Maven Apache.. etc."".
   If a debugging proxy is used to change the text of the request head back to what it was in  Maven 2.0.9 and earlier, the problem with the firewall disappears and Maven 2.1.0 works again through a firewall.
   So, this sounds like it should be almost trivially simple for the Maven developers to ""fix"" so as to provide backwards compatibility in Maven 2.1.0 and above.  I.e., add an option to send the same request header that Maven was sending in Maven 2.0.9 and earlier.
  I hope someone on the Maven developer team reads this and can implement a quick fix.  It is so frustrating to be forced to use Maven 2.0.9 instead of all the goodness in Maven 2.1.0, not to mention Maven 3.;;;","08/Feb/11 11:33;bentmann;Thanks for the info, the change in user agent is due to MNG-3652. You could try the [advanced HTTP config|http://maven.apache.org/guides/mini/guide-http-settings.html] to force another agent or in Maven3 add {{-Daether.connector.userAgent=desired-agent}} to your {{MAVEN_OPTS}}. But in the long run, you should probably talk to the firewall maintainer to allow the Maven's requests to pass through, with their original user agent info. ;;;","08/Feb/11 11:53;robertgloverjr;I asked my associated to review the comment I made above, and he replied, ""The biggest problem with your description is that you keep calling it ""the request header"". It is the user-agent header and you should make that clear.""
   So please, when reading the comment above  think ""user-agent"" whenever you see ""request header"".
;;;","08/Feb/11 12:25;robertgloverjr;     Benjamin, my associate took a look at your response and especially the link you provided: http://maven.apache.org/guides/mini/guide-http-settings.html

     His reply indicates to me that it would be incredibly helpful if you could provide a a simple step-by-step explanation on how to change the user agent header-- ideally in your next comment here.  (Hopeful, wistful smile).

     Here are my associates's 2 comments: 

First comment:  Unfortunately it doesn't say anything about the user agent header. And the whole thing is pretty confusing. 

Second comment in a subsequent email:   I re-read it and tried again to follow the instructions but was unsuccessful. The user agent doesn't change.  ;;;","08/Feb/11 14:42;robertgloverjr;Here are specific details for this problem, as forwarded by my associate a few minutes ago:

Apache Maven 2.2.1 (r801777; 2009-08-06 15:16:01-0400)
Java version: 1.6.0_21
Default locale: en_US, platform encoding: Cp1252
OS name: ""windows xp"" version: ""5.1"" arch: ""x86"" Family: ""windows""

Failing user agent: 	Apache-Maven/2.2 (Java 1.6.0_21; Windows XP 5.1) maven-artifact/2.2.1
Successful user agent: 	Java/1.6.0_21
;;;","08/Feb/11 15:26;robertgloverjr;My associate tells me that adding to the folowing to settings.xml fixes the problem. Hooray!

    <server>
    	<id>nexus</id>
    	<configuration>
    		<wagonProvider>httpclient</wagonProvider>
    		<httpHeaders>
    			<property>
    				<name>User-Agent</name>
    				<value>Java/1.6.0_21</value>
    			</property>
    		</httpHeaders>
    	</configuration>
    </server>;;;","14/Feb/11 16:47;robertgloverjr;
I have verified that by using the <server> configuration shown in the preceeding comment, I can do a successful Maven ""package"" in maven version 2.2.1.  However I get a ""wagon"" failure when I use the exact same settings.xml file but change the version of maven to either version 2.0.11 or version 2.1.0.  (And of course, maven 2.0.9 and below always work and do not need that <server> configuration shown in the comment at all.
   To be completely clear about this,  at the bottom of this comment I pasted the 2 <server> additions I use in settings.xml.  It works perfectly in maven 2.2.1,  it is not needed in maven 2.0.9 and below,  and it causes a ""wagon"" error message and does not work in maven 2.0.11 and maven 2.1.0.

The error message I get running version 2.0.11 is  ""Unable to apply wagon configuration.""  (see below).  Same error occurs in maven 2.1.0

[INFO] ------------------------------------------------------------------------
[WARNING] Unable to get resource 'org.apache.maven.plugins:maven-resources-plugin:pom:2.3' from repository central (http://repo1.maven.org/maven2): While configuring wagon for 'central': Unable to apply wagon configuration.
[WARNING] Unable to get resource 'org.apache.maven.plugins:maven-resources-plugin:pom:2.3' from repository nexus (http://b1bsdzv03:8082/nexus/content/groups/public): While configuring wagon for 'nexus': Unable to apply wagon configuration.
[WARNING] Unable to get resource 'org.apache.maven.plugins:maven-resources-plugin:pom:2.3' from repository central (http://repo1.maven.org/maven2): While configuring wagon for 'central': Unable to apply wagon configuration.
[INFO] ------------------------------------------------------------------------


<servers>
  
   <server>
    	<id>nexus</id>
    	<configuration>
    		<wagonProvider>httpclient</wagonProvider>
    		<httpHeaders>
    			<property>
    				<name>User-Agent</name>
    				<value>Java/1.6.0_21</value>
    			</property>
    		</httpHeaders>
    	</configuration>
    </server>

   <server>
    	<id>central</id>
    	<configuration>
    		<wagonProvider>httpclient</wagonProvider>
    		<httpHeaders>
    			<property>
    				<name>User-Agent</name>
    				<value>Java/1.6.0_21</value>
    			</property>
    		</httpHeaders>
    	</configuration>
    </server>
;;;","15/Feb/11 09:31;robertgloverjr;I want to be clearer about the addition to settings.xml shown in the comment above not working in maven version 2.1.0.  I originally tested to my satisfaction that it does not work (in maven 2.1.0) by testing with the version of maven that comes prepackaged in the zip file for the newest version of the Atlassian Plugin SDK  ( http://confluence.atlassian.com/display/DEVNET/Atlassian+Plugin+SDK+Documentation ) .
   To rule out that the version of maven (2.1.0) Atlassian's included in their package ""maven-2.1.0-uber.jar"" is not the latest version of maven 2.1.0,  I just now went into the maven archives and downloaded/installed the latest version of maven 2.1.0 and verified that when I test against ""Apache Maven 2.1.0 (r755702; 2009-03-18 15:10:27-0400)""
I get this same ""Unable to apply wagon configuration."" error (which I do not get in Maven 2.2.1) :

   The reason this is a problem is that I cannot simply start using maven 2.2.1 for my specific need: the Atlassian Plugin SDK will only work with maven 2.1.0.  I confirmed that with the Atlassian Plugin developers at Atlassian.

   So,  since this JIRA is closed because MNG-4211 this is not a bug, I wonder if a new JIRA should be opened for this specific inability to change the User-Agent in version 2.1.0 of maven without getting a Wagon error?


;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Plugins that use ArtifactResolver with http repositories AND depend on log4j run into ExceptionInInitializerError,MNG-4207,12795487,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,jdcasey,jdcasey,17/Jun/09 11:28,17/Jun/09 16:39,03/Jan/22 13:13,17/Jun/09 16:39,2.2.0,,,,,2.2.0,,,Artifacts and Repositories,Class Loading,,,,0,,,,"plugins that use log4j as a dependency and that also resolve artifacts using the ArtifactResolver to access one or more http repositories are running into a stacktrace as follows:

{noformat}
[FATAL ERROR] org.apache.maven.plugin.coreit.ItMojo#execute() caused a linkage error (java.lang.ExceptionInInitializerError) and may be out-of-date. 
    Check the realms:
[FATAL ERROR] Plugin realm = app0.child-container[org.apache.maven.its.plugins:maven-it-plugin-log4j:2.1-SNAPSHOT]
urls[0] = file:/Users/jdcasey/.m2/repository/org/apache/maven/its/plugins/maven-it-plugin-log4j/2.1-SNAPSHOT/maven-it-plugin-log4j-2.1-SNAPSHOT.jar
urls[1] = file:/Users/jdcasey/.m2/repository/org/codehaus/plexus/plexus-utils/1.1/plexus-utils-1.1.jar
urls[2] = file:/Users/jdcasey/.m2/repository/log4j/log4j/1.2.14/log4j-1.2.14.jar
[FATAL ERROR] Container realm = plexus.core
urls[0] = file:/Users/jdcasey/apps/maven/apache-maven-2.2.0-RC3-SNAPSHOT/lib/maven-2.2.0-RC3-SNAPSHOT-uber.jar
[INFO] ------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ------------------------------------------------------------------------
[INFO] null
org/apache/log4j/Category
[INFO] ------------------------------------------------------------------------
[DEBUG] Trace
java.lang.ExceptionInInitializerError
        at org.apache.maven.wagon.shared.http.AbstractHttpClientWagon.openConnectionInternal(AbstractHttpClientWagon.java:153)
        at org.apache.maven.wagon.AbstractWagon.openConnection(AbstractWagon.java:105)
        at org.apache.maven.wagon.AbstractWagon.connect(AbstractWagon.java:207)
        at org.apache.maven.artifact.manager.DefaultWagonManager.getRemoteFile(DefaultWagonManager.java:439)
        at org.apache.maven.artifact.manager.DefaultWagonManager.getArtifact(DefaultWagonManager.java:372)
        at org.apache.maven.artifact.manager.DefaultWagonManager.getArtifact(DefaultWagonManager.java:327)
        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:216)
        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:90)
        at org.apache.maven.plugin.coreit.ItMojo.execute(ItMojo.java:97)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:483)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:678)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:540)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:519)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:371)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:332)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:181)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:356)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:137)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
        at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:41)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: hidden.org.apache.commons.logging.LogConfigurationException: 
    hidden.org.apache.commons.logging.LogConfigurationException: No suitable Log constructor [Ljava.lang.Class;@986c47 for 
    hidden.org.apache.commons.logging.impl.Log4JLogger (Caused by java.lang.NoClassDefFoundError: org/apache/log4j/Category) 
    (Caused by hidden.org.apache.commons.logging.LogConfigurationException: No suitable Log constructor [Ljava.lang.Class;@986c47 
    for hidden.org.apache.commons.logging.impl.Log4JLogger (Caused by java.lang.NoClassDefFoundError: org/apache/log4j/Category))
        at hidden.org.apache.commons.logging.impl.LogFactoryImpl.newInstance(LogFactoryImpl.java:543)
        at hidden.org.apache.commons.logging.impl.LogFactoryImpl.getInstance(LogFactoryImpl.java:235)
        at hidden.org.apache.commons.logging.impl.LogFactoryImpl.getInstance(LogFactoryImpl.java:209)
        at hidden.org.apache.commons.logging.LogFactory.getLog(LogFactory.java:351)
        at hidden.org.apache.commons.httpclient.HttpClient.<clinit>(HttpClient.java:66)
        ... 28 more
Caused by: hidden.org.apache.commons.logging.LogConfigurationException: No suitable Log constructor [Ljava.lang.Class;@986c47 
    for hidden.org.apache.commons.logging.impl.Log4JLogger (Caused by java.lang.NoClassDefFoundError: org/apache/log4j/Category)
        at hidden.org.apache.commons.logging.impl.LogFactoryImpl.getLogConstructor(LogFactoryImpl.java:413)
        at hidden.org.apache.commons.logging.impl.LogFactoryImpl.newInstance(LogFactoryImpl.java:529)
        ... 32 more
Caused by: java.lang.NoClassDefFoundError: org/apache/log4j/Category
        at java.lang.Class.getDeclaredConstructors0(Native Method)
        at java.lang.Class.privateGetDeclaredConstructors(Class.java:2357)
        at java.lang.Class.getConstructor0(Class.java:2671)
        at java.lang.Class.getConstructor(Class.java:1629)
        at hidden.org.apache.commons.logging.impl.LogFactoryImpl.getLogConstructor(LogFactoryImpl.java:410)
        ... 33 more
{noformat}

The problem seems to come from some sort of conflict between the dependencies of httpclient, which is now included in the Maven core as part of the non-lightweight http wagon, and other users of log4j (plugins, mainly). Still tracking down the exact cause of the problem, trying to determine how best to fix it. I'm including Benjamin Bentmann's original test case for this issue, since he's the one who has done most of the legwork at this point.

instructions for the attached files (maven-it-plugin-log4j.zip and pom.xml):

1. unpack and install the IT plugin using Maven
2. Using the attached pom.xml as the project POM, try `mvn initialize -X`
3. observe the stacktrace that results.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-4147,,,,,,,,,,,,,,,,,"17/Jun/09 11:29;jdcasey;maven-it-plugin-log4j.zip;https://issues.apache.org/jira/secure/attachment/12712986/maven-it-plugin-log4j.zip","17/Jun/09 11:29;jdcasey;pom.xml;https://issues.apache.org/jira/secure/attachment/12712916/pom.xml",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i297an:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"17/Jun/09 11:29;jdcasey;seems to have lost my original attachments. These are the same files again...;;;","17/Jun/09 11:31;jdcasey;Linking to the original issue that caused the switch to the non-lightweight http wagon.;;;","17/Jun/09 11:34;jdcasey;Note that the stacktrace above uses 2.2.0-RC3, which is identical to the staged release of 2.2.0 when this bug was found.;;;","17/Jun/09 16:39;jdcasey;The problem is in the way the commons-logging API discovers which logging framework to delegate to. Commons-logging is used by httpclient, which is used by the non-lightweight http wagon. The first thing clogging checks for is the presence of the Log4J classes, and if it finds them, it tries to load them preferentially over the other logging frameworks. If a plugin depends on log4j, it seems like this can confuse clogging into thinking Maven's core has access to these classes - probably because clogging is using the Thread context classloader to discover the log4j classes - which in turn leads commons-logging to throw an exception when it tries to instantiate log4j (commons-logging in this case is loaded from shaded classes that are in the Maven core). Including - and shading - log4j into the Maven core seems to solve this problem by making the classes available in the correct classloader.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to resolve ${env.HOSTNAME},MNG-4202,12795471,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Not A Problem,bentmann,dezwart,dezwart,16/Jun/09 04:08,28/Jul/10 05:08,03/Jan/22 13:13,28/Jul/10 05:08,2.0.10,2.0.9,2.1.0,,,,,,,,,,,1,,,,"Empirical test. Using the following POM, you will be able to resolve the environment variable {{$FOO}}:

{noformat}
<project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
        xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"">
    <modelVersion>4.0.0</modelVersion>

    <groupId>test</groupId>
    <artifactId>test</artifactId>
    <packaging>pom</packaging>
    <version>1.1-SNAPSHOT</version>

    <modules>
	<module>${env.FOO}</module>
    </modules>
</project>
{noformat}

If we then assign the value {{BAR}} to {{$FOO}}, we can observer that the environment has been set in the shell:

{noformat}
pdzwart@Fosters:/tmp[18:57:46](1,0)$ export FOO=BAR
pdzwart@Fosters:/tmp[18:58:48](1,0)$ echo $FOO
BAR
{noformat}

Now, running {{mvn clean}} using this POM, we expect that an exception will be thrown regarding {{$PWD/BAR}} not existing:

{noformat}
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Error building POM (may not be this project's POM).


Project ID: unknown

Reason: Could not find the model file '/private/tmp/BAR'. for project unknown


[INFO] ------------------------------------------------------------------------
[INFO] Trace
org.apache.maven.reactor.MavenExecutionException: Could not find the model file '/private/tmp/BAR'. for project unknown
	at org.apache.maven.DefaultMaven.getProjects(DefaultMaven.java:432)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:300)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:137)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:356)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
	at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.apache.maven.project.ProjectBuildingException: Could not find the model file '/private/tmp/BAR'. for project unknown
	at org.apache.maven.project.DefaultMavenProjectBuilder.readModel(DefaultMavenProjectBuilder.java:1585)
	at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromSourceFileInternal(DefaultMavenProjectBuilder.java:506)
	at org.apache.maven.project.DefaultMavenProjectBuilder.build(DefaultMavenProjectBuilder.java:200)
	at org.apache.maven.DefaultMaven.getProject(DefaultMaven.java:632)
	at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:515)
	at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:588)
	at org.apache.maven.DefaultMaven.getProjects(DefaultMaven.java:419)
	... 11 more
Caused by: java.io.FileNotFoundException: /private/tmp/BAR (No such file or directory)
	at java.io.FileInputStream.open(Native Method)
	at java.io.FileInputStream.<init>(FileInputStream.java:106)
	at hidden.org.codehaus.plexus.util.xml.XmlReader.<init>(XmlReader.java:124)
	at hidden.org.codehaus.plexus.util.xml.XmlStreamReader.<init>(XmlStreamReader.java:67)
	at hidden.org.codehaus.plexus.util.ReaderFactory.newXmlReader(ReaderFactory.java:113)
	at org.apache.maven.project.DefaultMavenProjectBuilder.readModel(DefaultMavenProjectBuilder.java:1580)
	... 17 more
[INFO] ------------------------------------------------------------------------
[INFO] Total time: < 1 second
[INFO] Finished at: Tue Jun 16 18:59:37 EST 2009
[INFO] Final Memory: 1M/3M
[INFO] ------------------------------------------------------------------------
{noformat}

Excellent. Now, try this with {{$env.HOSTNAME}}, here is the POM:

{noformat}
<project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
        xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"">
    <modelVersion>4.0.0</modelVersion>

    <groupId>test</groupId>
    <artifactId>test</artifactId>
    <packaging>pom</packaging>
    <version>1.1-SNAPSHOT</version>

    <modules>
	<module>${env.HOSTNAME}</module>
    </modules>
</project>
{noformat}

Here is what is currently assigned to {{$HOSTNAME}}:

{noformat}
pdzwart@Fosters:/tmp[19:00:10](1,0)$ echo $HOSTNAME
Fosters.sydney.atlassian.com
{noformat}

No, run maven again, and we expect that the directory {{$PWD/Fosters.sydney.atlassian.com}} does not exist:

{noformat}
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Error building POM (may not be this project's POM).


Project ID: unknown

Reason: Could not find the model file '/private/tmp/${env.HOSTNAME}'. for project unknown


[INFO] ------------------------------------------------------------------------
[INFO] Trace
org.apache.maven.reactor.MavenExecutionException: Could not find the model file '/private/tmp/${env.HOSTNAME}'. for project unknown
	at org.apache.maven.DefaultMaven.getProjects(DefaultMaven.java:432)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:300)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:137)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:356)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
	at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.apache.maven.project.ProjectBuildingException: Could not find the model file '/private/tmp/${env.HOSTNAME}'. for project unknown
	at org.apache.maven.project.DefaultMavenProjectBuilder.readModel(DefaultMavenProjectBuilder.java:1585)
	at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromSourceFileInternal(DefaultMavenProjectBuilder.java:506)
	at org.apache.maven.project.DefaultMavenProjectBuilder.build(DefaultMavenProjectBuilder.java:200)
	at org.apache.maven.DefaultMaven.getProject(DefaultMaven.java:632)
	at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:515)
	at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:588)
	at org.apache.maven.DefaultMaven.getProjects(DefaultMaven.java:419)
	... 11 more
Caused by: java.io.FileNotFoundException: /private/tmp/${env.HOSTNAME} (No such file or directory)
	at java.io.FileInputStream.open(Native Method)
	at java.io.FileInputStream.<init>(FileInputStream.java:106)
	at hidden.org.codehaus.plexus.util.xml.XmlReader.<init>(XmlReader.java:124)
	at hidden.org.codehaus.plexus.util.xml.XmlStreamReader.<init>(XmlStreamReader.java:67)
	at hidden.org.codehaus.plexus.util.ReaderFactory.newXmlReader(ReaderFactory.java:113)
	at org.apache.maven.project.DefaultMavenProjectBuilder.readModel(DefaultMavenProjectBuilder.java:1580)
	... 17 more
[INFO] ------------------------------------------------------------------------
[INFO] Total time: < 1 second
[INFO] Finished at: Tue Jun 16 19:01:25 EST 2009
[INFO] Final Memory: 1M/3M
[INFO] ------------------------------------------------------------------------
{noformat}

OOOOKKKAAAAY..... let's take a closer look at that shall we:

{noformat}
Reason: Could not find the model file '/private/tmp/${env.HOSTNAME}'. for project unknown
{noformat}

And closer:

{noformat}
'/private/tmp/${env.HOSTNAME}'
{noformat}

Some extra special magic is going on there; I suspect that this specific environment variable is being filtered out for some reason. So, let's try the following:
* {{${env.HOSTNAM}}}
{noformat}
 pdzwart@Fosters:/tmp[19:06:53](1,146)$ cat pom.xml && HOSTNAM=$HOSTNAME mvn clean
<project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
        xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"">
    <modelVersion>4.0.0</modelVersion>

    <groupId>test</groupId>
    <artifactId>test</artifactId>
    <packaging>pom</packaging>
    <version>1.1-SNAPSHOT</version>

    <modules>
	<module>${env.HOSTNAM}</module>
    </modules>
</project>
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Error building POM (may not be this project's POM).


Project ID: unknown

Reason: Could not find the model file '/private/tmp/Fosters.sydney.atlassian.com'. for project unknown
...
{noformat}
* {{${env.HOSTNAMEE}}}
{noformat}
pdzwart@Fosters:/tmp[19:07:31](1,146)$ cat pom.xml && HOSTNAMEE=$HOSTNAME mvn clean
<project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
        xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"">
    <modelVersion>4.0.0</modelVersion>

    <groupId>test</groupId>
    <artifactId>test</artifactId>
    <packaging>pom</packaging>
    <version>1.1-SNAPSHOT</version>

    <modules>
	<module>${env.HOSTNAMEE}</module>
    </modules>
</project>
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Error building POM (may not be this project's POM).


Project ID: unknown

Reason: Could not find the model file '/private/tmp/Fosters.sydney.atlassian.com'. for project unknown
...
{noformat}
* {{${env.HOSTNAMO}}}
{noformat}
pdzwart@Fosters:/tmp[19:07:59](1,146)$ cat pom.xml && HOSTNAMO=$HOSTNAME mvn clean
<project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
        xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"">
    <modelVersion>4.0.0</modelVersion>

    <groupId>test</groupId>
    <artifactId>test</artifactId>
    <packaging>pom</packaging>
    <version>1.1-SNAPSHOT</version>

    <modules>
	<module>${env.HOSTNAMO}</module>
    </modules>
</project>
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Error building POM (may not be this project's POM).


Project ID: unknown

Reason: Could not find the model file '/private/tmp/Fosters.sydney.atlassian.com'. for project unknown
{noformat}

Thanks for coming in today maven.","Mac OS X _Leopard_ 10.5.7 with JDK 1.5.0_16
CentOS 5.2 with JDK 1.5.0_17 & 1.6.0_12",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28wmv:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"16/Jun/09 04:11;dezwart;Woo, no edit permissions.;;;","27/Jul/10 16:11;bentmann;This is platform-specific issue: {{$HOSTNAME}} is an [internal variable of the shell|http://tldp.org/LDP/abs/html/internalvariables.html], it is not an environment variable (cf. the output of the {{env}} command or the {{System.getenv()}} method) and as such not available to Maven.;;;","27/Jul/10 18:46;dezwart;{noformat}
pdzwart@fosters:~[09:44:29](0,0)$ env | grep HOSTNAME
HOSTNAME=fosters.sydney.atlassian.com
{noformat};;;","28/Jul/10 05:08;bentmann;Again, quoting http://www.bsdnewsletter.com/bsda-book/Recognize__44___view_and_modify_environmental_variables.html
bq. Most shells have their own internal variables, which should not be confused with global environment variables as they are not passed to newly started processes.
And {{HOSTNAME}} is such an internal shell variable (cf. http://www.gnu.org/software/bash/manual/html_node/Bash-Variables.html#Bash-Variables). So the ""extra special magic"" you mention is your OS/shell, not Maven. Maven eventually invokes {{System.getenv()}}, what the JVM+OS don't provide here, isn't available for interpolation. So please fill any issue about HOSTNAME with the vendor of your JVM/OS, Maven isn't responsible for the underlying software stack it runs on.

Besides, a pristine shell yields this for me:
{noformat}
bbm:~ bentmann$ env | grep HOSTNAME
bbm:~ bentmann$ echo $HOSTNAME
bbm
{noformat}
and furthermore, the expression {{$\{env.HOSTNAME}}} gets available for interpolation of the POM as soon as I do
{noformat}
export HOSTNAME=$HOSTNAME
{noformat}
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Custom packaging break in trunk (rev 784628),MNG-4201,12796764,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,bentmann,olamy,olamy,14/Jun/09 17:58,22/Jul/09 12:18,03/Jan/22 13:13,22/Jul/09 12:18,3.0-alpha-3,,,,,3.0-alpha-3,,,Plugins and Lifecycle,,,,,0,,,,"Custom packaging doesn't.
Log output :
{code}
java.lang.NullPointerException
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.getPluginsBoundByDefaultToAllLifecycles(DefaultLifecycleExecutor.java:784)
        at org.apache.maven.model.plugin.DefaultLifecycleBindingsInjector.injectLifecycleBindings(DefaultLifecycleBindingsInjector.java:58)
        at org.apache.maven.model.DefaultModelBuilder.build(DefaultModelBuilder.java:174)
        at org.apache.maven.model.DefaultModelBuilder.build(DefaultModelBuilder.java:100)
        at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:109)
        at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:84)
        at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:193)
        at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:239)
        at org.apache.maven.DefaultMaven.getProjectsForMavenReactor(DefaultMaven.java:181)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:91)
        at org.apache.maven.embedder.MavenEmbedder.execute(MavenEmbedder.java:534)
        at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:167)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:61)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccesorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Laun{code}
{code}
By example try to run a hudson plugin or run its for the maven-zip-plugin which in the maven plugins sandbox.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i2949b:",9223372036854775807,,,,,,,,,,,,,,,,,,,"22/Jul/09 12:18;bentmann;Fixed in [r796801|http://svn.apache.org/viewvc?view=rev&revision=796801].

The problem with the maven-zip-plugin is that it uses the deprecated XML configuration style. The new form is
{code:xml}
<configuration>
  <lifecycles>
    <lifecycle>
      <id>default</id>
      <phases>
        <initialize>...</initialize>
         ...
      </phases>
    </lifecycle>
  </lifecycles>
</configuration>
{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
relocation doesn't work in trunk (rev 784345),MNG-4197,12795486,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,bentmann,olamy,olamy,13/Jun/09 05:22,06/Aug/09 08:50,03/Jan/22 13:13,06/Aug/09 08:50,3.0-alpha-3,,,,,3.0-alpha-3,,,Artifacts and Repositories,Dependencies,,,,2,,,,see it MavenITmng0507ArtifactRelocationTest,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jun/09 17:38;olamy;MNG-4197-2.x-code.patch;https://issues.apache.org/jira/secure/attachment/12712915/MNG-4197-2.x-code.patch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28ptj:",9223372036854775807,,,,,,,,,,,,,,,,,,,"14/Jun/09 17:38;olamy;Here a patch which take code from 2.x branch.
Let me know if this is ok.
Or if someone has better idea with the current trunk code.;;;","03/Jul/09 02:14;olamy;Any news on the proposed patch ?
Sure I can commit this but I prefer someone review it.;;;","03/Jul/09 10:19;bentmann;From what I know, there is still some heavy refactoring ongoing in the repo system so I suggest to wait until that's finished. From my experience, those refactorings tend to loose some bits ;-);;;","09/Jul/09 10:49;hgomez;It's a serious problem with m2eclipse since we could use a correct artifact or exclude a bad in project dependencies, but are stuck when the artifact is defined in a maven plugin, ie jaxws plugin :

 Path to dependency:
       1) org.codehaus.mojo:jaxws-maven-plugin:maven-plugin:1.11
       2) com.sun.xml.ws:jaxws-tools:jar:2.1.5
       3) com.sun.xml.ws:jaxws-rt:jar:2.1.5
       4) javax.xml.ws:jaxws-api:jar:2.1
       5) javax.xml.soap:saaj-api:jar:1.3
       6) activation:activation:jar:1.0.2;;;","06/Aug/09 08:50;bentmann;Applied in [r801648|http://svn.apache.org/viewvc?view=rev&revision=801648], thanks Olivier.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
dependency:trunk doesn't work with mvn trunk rev 782332,MNG-4187,12796787,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,,olamy,olamy,07/Jun/09 02:40,24/Jun/09 16:56,03/Jan/22 13:13,24/Jun/09 16:56,3.0-alpha-3,,,,,3.0-alpha-3,,,,,,,,0,,,,"running dependency:tree failed with current trunk :

Logs :
{code}
bash-3.00$ mvn dependency:tree
[INFO] Build Order:
[INFO]
[INFO] Commontrunk api
[INFO]
[INFO] Building Commontrunk api
[INFO] Executing maven-dependency-plugin[2.1]: tree on commontrunk-api
---------------------------------------------------
constituent[0]: file:/local/olamy/apache-maven-3.0-SNAPSHOT/lib/maven-embedder-3.0-SNAPSHOT.jar
constituent[1]: file:/local/olamy/apache-maven-3.0-SNAPSHOT/lib/maven-model-3.0-SNAPSHOT.jar
constituent[2]: file:/local/olamy/apache-maven-3.0-SNAPSHOT/lib/plexus-utils-1.5.15.jar
constituent[3]: file:/local/olamy/apache-maven-3.0-SNAPSHOT/lib/maven-core-3.0-SNAPSHOT.jar
constituent[4]: file:/local/olamy/apache-maven-3.0-SNAPSHOT/lib/maven-compat-3.0-SNAPSHOT.jar
constituent[5]: file:/local/olamy/apache-maven-3.0-SNAPSHOT/lib/maven-model-builder-3.0-SNAPSHOT.jar
constituent[6]: file:/local/olamy/apache-maven-3.0-SNAPSHOT/lib/plexus-interpolation-1.11.jar
constituent[7]: file:/local/olamy/apache-maven-3.0-SNAPSHOT/lib/plexus-component-annotations-1.0-beta-3.0.8-20090528.210709-1.jar
constituent[8]: file:/local/olamy/apache-maven-3.0-SNAPSHOT/lib/plexus-container-default-1.0-beta-3.0.8-20090528.210709-1.jar
constituent[9]: file:/local/olamy/apache-maven-3.0-SNAPSHOT/lib/xbean-reflect-3.4.jar
constituent[10]: file:/local/olamy/apache-maven-3.0-SNAPSHOT/lib/nekohtml-1.9.6.2.jar
constituent[11]: file:/local/olamy/apache-maven-3.0-SNAPSHOT/lib/google-collect-snapshot-20080530.jar
constituent[12]: file:/local/olamy/apache-maven-3.0-SNAPSHOT/lib/wagon-provider-api-1.0-beta-5.jar
constituent[13]: file:/local/olamy/apache-maven-3.0-SNAPSHOT/lib/wagon-file-1.0-beta-5.jar
constituent[14]: file:/local/olamy/apache-maven-3.0-SNAPSHOT/lib/wagon-http-lightweight-1.0-beta-5.jar
constituent[15]: file:/local/olamy/apache-maven-3.0-SNAPSHOT/lib/wagon-http-shared-1.0-beta-5.jar
constituent[16]: file:/local/olamy/apache-maven-3.0-SNAPSHOT/lib/xercesMinimal-1.9.6.2.jar
constituent[17]: file:/local/olamy/apache-maven-3.0-SNAPSHOT/lib/maven-repository-3.0-SNAPSHOT.jar
constituent[18]: file:/local/olamy/apache-maven-3.0-SNAPSHOT/lib/maven-plugin-api-3.0-SNAPSHOT.jar
constituent[19]: file:/local/olamy/apache-maven-3.0-SNAPSHOT/lib/plexus-sec-dispatcher-1.2.jar
constituent[20]: file:/local/olamy/apache-maven-3.0-SNAPSHOT/lib/plexus-cipher-1.1.jar
constituent[21]: file:/local/olamy/apache-maven-3.0-SNAPSHOT/lib/maven-toolchain-3.0-SNAPSHOT.jar
constituent[22]: file:/local/olamy/apache-maven-3.0-SNAPSHOT/lib/commons-cli-1.0.jar
---------------------------------------------------
Exception in thread ""main"" java.lang.NoSuchMethodError: org.apache.maven.project.MavenProject.createArtifacts(Lorg/apache/maven/artifact/factory/ArtifactFactory;Ljava/lang/String;Lorg/apache/maven/artifact/resolver/filter/ArtifactFilter;)Ljava/util/Set;
        at org.apache.maven.shared.dependency.tree.DefaultDependencyTreeBuilder.buildDependencyTree(DefaultDependencyTreeBuilder.java:90)
        at org.apache.maven.plugin.dependency.TreeMojo.execute(TreeMojo.java:249)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:338)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:202)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:147)
        at org.apache.maven.embedder.MavenEmbedder.execute(MavenEmbedder.java:535)
        at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:167)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:61)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
        at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:408)
        at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:351)

{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28ylz:",9223372036854775807,,,,,,,,,,,,,,,,,,,"24/Jun/09 16:56;olamy;tested with rev 788115. And it looks to work now.
Thanks !;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLONE -Maven 2 says host is unavailable while in browser I can download from that repository,MNG-4183,12796769,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Duplicate,brettporter,asaltiel,asaltiel,01/Jun/09 19:06,01/Jul/09 11:57,03/Jan/22 13:13,01/Jul/09 11:57,2.0.8,,,,,,,,,,,,,0,,,,"I am using the offical Glassfish repository on java.net.

Maven tells me that it cannot resolve one of the references pointing into that repository. The stack trace tells me that the host is not available (see below).

In fact, when I go to that same URL in the browser, it downloads the artifact without any problem!

Also that worked for weeks and now is broken, but my POM didn't change!

So I assume a bug in WAGON.

Here is the POM excerpt, below the POM is the stack trace.

	<repositories>
		<repository>
			<id>glassfish-repository.dev.java.net</id>
			<name>Java.net Repository for Glassfish</name>
			<url>http://download.java.net/maven/glassfish</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>javax.resource</groupId>
			<artifactId>connector-api</artifactId>
			<version>1.5</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

org.apache.maven.lifecycle.LifecycleExecutionException: Unable to get dependency
 information: Unable to read the metadata file for artifact 'javax.resource:conn
ector-api:jar': Cannot find parent: org.glassfish.api:api for project: javax.res
ource:connector-api:jar:1.5 for project javax.resource:connector-api:jar:1.5
  javax.resource:connector-api:jar:1.5

from the specified remote repositories:
  central (http://repo1.maven.org/maven2),
  glassfish-repository.dev.java.net (http://download.java.net/maven/glassfish)
Path to dependency:
        1) net.sourceforge.rafc:rafc:jar:1.1.1
...
Caused by: java.net.UnknownHostException: download.java.net
        at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:177)
        at java.net.Socket.connect(Socket.java:519)
        at java.net.Socket.connect(Socket.java:469)
        at sun.net.NetworkClient.doConnect(NetworkClient.java:157)
        at sun.net.www.http.HttpClient.openServer(HttpClient.java:394)
        at sun.net.www.http.HttpClient.openServer(HttpClient.java:529)
        at sun.net.www.http.HttpClient.<init>(HttpClient.java:233)
        at sun.net.www.http.HttpClient.New(HttpClient.java:306)
        at sun.net.www.http.HttpClient.New(HttpClient.java:323)
        at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLC
onnection.java:788)
        at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConne
ction.java:729)
        at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection
.java:654)
        at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLCon
nection.java:977)
        at org.apache.maven.wagon.providers.http.LightweightHttpWagon.fillInputD
ata(LightweightHttpWagon.java:83)
        ... 33 more",,,,,,,,,,,,,,,,,,,,,,,,MNG-3373,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28yrb:",9223372036854775807,,,,,,,,,,,,,,,,,,,"01/Jun/09 19:17;asaltiel;The issue I have is essentially the same as the one I have cloned except that maven is unable to download any artifacts what so ever. Maven version 2.1.0. I am re-opening the issue because, although this error occurs in different forms a lot, I cannot find specifics to a solution in any mailing.
I am unclear what configuration issue might be behind this or if it is a bug.
I have tried a new empty repository and the behaviour is the same.
I do not connect using a proxy and there is no internal firewall to this machine. There is a firewall configured on the terminal adaptor.
However, as with the cloned issue, I can manually download and I know that maven attempts to download. I know this because I tried to setup a proxy server on this machine. Although I am not sure it was correctly set - it worked for my browser at least - the error message from maven changed to access denied.
Below is typical output:-
[DEBUG] Connecting to repository: 'id0' with url: 'http://static.appfuse.org/releases'.                                                                         
Downloading: http://static.appfuse.org/releases/org/appfuse/archetypes/appfuse-basic-tapestry/2.0.2/appfuse-basic-tapestry-2.0.2.jar                            
[DEBUG] Error transferring file: static.appfuse.org                             
org.apache.maven.wagon.TransferFailedException: Error transferring file: static.appfuse.org                                                                     
        at org.apache.maven.wagon.providers.http.LightweightHttpWagon.fillInputData(LightweightHttpWagon.java:143)                                              
        at org.apache.maven.wagon.StreamWagon.getInputStream(StreamWagon.java:116)                                                                              
        at org.apache.maven.wagon.StreamWagon.getIfNewer(StreamWagon.java:88)   
        at org.apache.maven.artifact.manager.DefaultWagonManager.getRemoteFile(DefaultWagonManager.java:475)                                                    
        at org.apache.maven.artifact.manager.DefaultWagonManager.getArtifact(DefaultWagonManager.java:372)                                                      
        at org.apache.maven.artifact.manager.DefaultWagonManager.getArtifact(DefaultWagonManager.java:327)                                                      
        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:216)                                                 
        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolveAlways(DefaultArtifactResolver.java:96)                                            
        at org.apache.maven.archetype.downloader.DefaultDownloader.downloadOld(DefaultDownloader.java:80)                                                       
        at org.apache.maven.archetype.old.DefaultOldArchetype.createArchetype(DefaultOldArchetype.java:122)                                                     
        at org.apache.maven.archetype.mojos.MavenArchetypeMojo.execute(MavenArchetypeMojo.java:229)                                                             
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:483)                                                              
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:678)                                                  
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeStandaloneGoal(DefaultLifecycleExecutor.java:553)                                         
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:523)                                                   
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:371)                                  
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:268)                                           
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:181)                                                       
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:356)       
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:137)         
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:356)                
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)          
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)                                                                        
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)                                                                
        at java.lang.reflect.Method.invoke(Method.java:597)                     
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)  
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)          
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)            
Caused by: java.net.UnknownHostException: static.appfuse.org                    
        at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:177)           
        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:366)           
        at java.net.Socket.connect(Socket.java:519)                             
        at java.net.Socket.connect(Socket.java:469)                             
        at sun.net.NetworkClient.doConnect(NetworkClient.java:163)              
        at sun.net.www.http.HttpClient.openServer(HttpClient.java:394)          
        at sun.net.www.http.HttpClient.openServer(HttpClient.java:529)          
        at sun.net.www.http.HttpClient.<init>(HttpClient.java:233)              
        at sun.net.www.http.HttpClient.New(HttpClient.java:306)                 
        at sun.net.www.http.HttpClient.New(HttpClient.java:323)                 
        at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:837)                                                             
        at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:778)                                                                 
        at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:703)                                                                      
        at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1026)                                                              
        at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:373)                                                                               
        at org.apache.maven.wagon.providers.http.LightweightHttpWagon.fillInputData(LightweightHttpWagon.java:115)                                              
        ... 28 more                                                             
[WARNING] Unable to get resource 'org.appfuse.archetypes:appfuse-basic-tapestry:jar:2.0.2' from repository id0 (http://static.appfuse.org/releases): Error transferring file: static.appfuse.org                                                
[INFO] ----------------------------------------------------------------------------                                                                             
[INFO] Using following parameters for creating OldArchetype: appfuse-basic-tapestry:2.0.2                                                                       
[INFO] ----------------------------------------------------------------------------                                                                             
[INFO] Parameter: groupId, Value: com.mycompany.app                             
[INFO] Parameter: packageName, Value: com.mycompany.app                         
[INFO] Parameter: package, Value: com.mycompany.app                             
[INFO] Parameter: artifactId, Value: myproject                                  
[INFO] Parameter: basedir, Value: /home/adam/workspaces/workspace-03            
[INFO] Parameter: version, Value: 1.0-SNAPSHOT                                  
[INFO] ------------------------------------------------------------------------ 
[ERROR] BUILD ERROR             ;;;","01/Jul/09 11:57;brettporter;please try Maven 2.2.0, which has switched to httpclient. IF it is still a problem, you can request we reopen MNG-3373;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Properties from profiles.xml are not replaced when builing in parent module,MNG-4182,12795459,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Incomplete,,k_o_,k_o_,31/May/09 21:06,02/Jul/14 08:44,03/Jan/22 13:13,22/Jan/14 20:31,2.1.0,,,,,,,,Profiles,,,,,0,,,,"When running a submodule in its own directory properties form a parent profiles.xml are honored.

Trying to build in the parent, this properties are not honored. The properties are not replaced.

I get this result with help:effective-pom. See the ${appletkeyalias} instead of the proper replacment.

        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.2</version>
          <executions>
            <execution>
              <phase>package</phase>
              <goals>
                <goal>sign</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <keystore>../${keystore}</keystore>
            <alias>${appletkeyalias}</alias>
            <storepass>${keystorepass}</storepass>
            <jarPath>C:\Users\widerstand_2\Documents\mobifetch\apps\coupon\j2se
coupon-install-applet\target/coupon-install-applet-1.0.2-SNAPSHOT-jar-with-depe
dencies.jar</jarPath>
            <signedjar>C:\Users\widerstand_2\Documents\mobifetch\apps\coupon\j2
e\coupon-install-applet\target/signed/coupon-install-applet-1.0.2-SNAPSHOT-jar-
ith-dependencies.jar</signedjar>
            <verify>true</verify>
          </configuration>
        </plugin>",Windows Vista,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28m27:",9223372036854775807,,,,,,,,,,,,,,,,,,,"25/Jun/09 12:20;bentmann;Karsten, could you provide a minimal test project that demonstrates the issue?;;;","22/Jan/14 20:23;jvanzyl;Please refer to https://cwiki.apache.org/confluence/display/MAVEN/The+Great+JIRA+Cleanup+of+2014;;;","22/Jan/14 20:31;jvanzyl;Please refer to https://cwiki.apache.org/confluence/display/MAVEN/The+Great+JIRA+Cleanup+of+2014 if you're wondering why this issue was closed out.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
system path dependencies are not resolved,MNG-4181,12796762,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Duplicate,brettporter,k_o_,k_o_,30/May/09 11:56,01/Jul/09 12:43,03/Jan/22 13:13,01/Jul/09 12:43,2.1.0,,,,,,,,POM,,,,,0,,,,"If a system path dependency is used, the depencies are not included.

I cannot build my project anymore and I'm stuck.

This is the error I get:

[WARNING] POM for 'net.sf:microlog-instrument:pom:1.1.1:compile' is invalid.

Its dependencies (if any) will NOT be available to the current build.
[DEBUG] Reason: Failed to validate POM for project net.sf:microlog-instrument at
 Artifact [net.sf:microlog-instrument:pom:1.1.1:compile]
[DEBUG]
Validation Errors:
[DEBUG] For managed dependency Dependency {groupId=com.sun.wtk, artifactId=jsr21
1, version=2.2, type=jar}: system-scoped dependency must specify an absolute pat
h systemPath.
[DEBUG] For managed dependency Dependency {groupId=com.sun.wtk, artifactId=jsr08
2, version=2.2, type=jar}: system-scoped dependency must specify an absolute pat
h systemPath.
[DEBUG] For managed dependency Dependency {groupId=com.sun.wtk, artifactId=jsr75
, version=2.2, type=jar}: system-scoped dependency must specify an absolute path
 systemPath.
[DEBUG] For managed dependency Dependency {groupId=com.sun.wtk, artifactId=wma20
, version=2.2, type=jar}: system-scoped dependency must specify an absolute path
 systemPath.",Windows Vista,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-4148,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28sif:",9223372036854775807,,,,,,,,,,,,,,,,,,,"31/May/09 03:53;bentmann;bq. system-scoped dependency must specify an absolute path systemPath.
In your [POM|http://microlog.sourceforge.net/repo/m2-repository/net/sf/microlog/1.1.1/microlog-1.1.1.pom] I see {{<systemPath>${wtk.home}/lib/jsr211.jar</systemPath>}}. The error message suggests that the property {{wtk.home}} was not resolved (hence no absolute path) so you should check your environmental setup.;;;","31/May/09 06:17;k_o_;The variable is set. I did not unset it before installing Maven 2.1.0

It iscontained in a properties section:

		<wtk.home>${env.WTK_HOME}</wtk.home>

echo %WTK_HOME%
C:\WTK2.5.1

Something must have been improved  from 2.0.9 to 2.1.0.;;;","31/May/09 06:30;bentmann;Hm, how does a minimal POM that does not inherit from any parent but declares the {{wtk.home}} property and the system dependency itself work for you? Just trying to figure out whether inheritance plays a role or not.

The other thing interesting to test might be to outcomment the system dependency in this minimal POM and check the output of ""mvn help:effective-pom"" shows the value of the {{wtk.home}} property as expected.;;;","31/May/09 15:58;k_o_;I get with mvn help:effective-pom:

        <dependency>
          <groupId>j2me</groupId>
          <artifactId>mmapi</artifactId>
          <version>10</version>
          <scope>system</scope>
          <systemPath>C:\WTK2.5.1/lib/mmapi.jar</systemPath>
        </dependency>
        <dependency>
          <groupId>com.sun.wtk</groupId>
          <artifactId>wma20</artifactId>
          <version>2.2</version>
          <scope>system</scope>
          <systemPath>C:\WTK2.5.1/lib/wma20.jar</systemPath>
        </dependency>
        <dependency>
          <groupId>j2me</groupId>
          <artifactId>midp</artifactId>
          <version>20</version>
          <scope>system</scope>
          <systemPath>C:\WTK2.5.1/lib/midpapi20.jar</systemPath>
        </dependency>
        <dependency>
          <groupId>j2me</groupId>
          <artifactId>cldc</artifactId>
          <version>11</version>
          <scope>system</scope>
          <systemPath>C:\WTK2.5.1/lib/cldcapi11.jar</systemPath>
        </dependency>
        <dependency>
          <groupId>javax.microedition.location</groupId>
          <artifactId>jsr179</artifactId>
          <version>1.0</version>
          <scope>system</scope>
          <systemPath>C:\WTK2.5.1/lib/jsr179.jar</systemPath>
        </dependency>

The path separators are different. Maybe this is the problem.;;;","31/May/09 16:07;bentmann;If you get this via ""mvn help:effective-pom"", you have already passed the point where it would otherwise bail out (model validation). Hence, the different file separators are not the problem. Assuming you got this output from the minimal POM I described earlier, I assume inheritance and/or dependency management play a role here.;;;","31/May/09 17:08;k_o_;Th maven code which does this tries to locate the fiel with a File().exists(). The warning is thrown there. 
(file maven/project/DefaultValidatorModel.java);;;","31/May/09 23:22;k_o_;[WARNING] POM for 'net.sf:microlog-instrument:pom:1.1.1:compile' is invalid.

Its dependencies (if any) will NOT be available to the current build.
[DEBUG] Reason: Failed to validate POM for project net.sf:microlog-instrument at
 Artifact [net.sf:microlog-instrument:pom:1.1.1:compile]
[DEBUG]
I have build the current Maven snapshot and modified the code to see what DefaultValidatorModel.java does:

Validation Errors:
[DEBUG] For managed dependency Dependency {groupId=com.sun.wtk, artifactId=jsr21
1, version=2.2, type=jar}: system-scoped dependency must specify an absolute pat
h ${env.WTK_HOME}/lib/jsr211.jar.
[DEBUG] For managed dependency Dependency {groupId=com.sun.wtk, artifactId=jsr08
2, version=2.2, type=jar}: system-scoped dependency must specify an absolute pat
h ${env.WTK_HOME}/lib/jsr082.jar.
[DEBUG] For managed dependency Dependency {groupId=com.sun.wtk, artifactId=jsr75
, version=2.2, type=jar}: system-scoped dependency must specify an absolute path
 ${env.WTK_HOME}/lib/jsr75.jar.
[DEBUG] For managed dependency Dependency {groupId=com.sun.wtk, artifactId=wma20
, version=2.2, type=jar}: system-scoped dependency must specify an absolute path
 ${env.WTK_HOME}/lib/wma20.jar.
[DEBUG]

The variable is not resolved at runtime. Maybe this is related to MNG-4182.;;;","25/Jun/09 09:22;ntruchsess;here's something I found out:

I have system-scoped dependency in my pom.xml:

		<dependency>
			<groupId>weblogic</groupId>
			<artifactId>wls-api</artifactId>
			<version>${weblogic.version}</version>
			<scope>system</scope>
			<systemPath>${weblogic.home}/server/lib/wls-api.jar</systemPath>
		</dependency>

If I specify weblogic-home in settings.xml profile:

	<profiles>
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<weblogic.home>C:\localdata\lib\bea\wlserver_10.0</weblogic.home>
			</properties>
		</profile>
	</profiles>

it fails to resolve and I get the same warning:
[WARNING] POM for '....' is invalid.
Its dependencies (if any) will NOT be available to the current build.

But if I specify the same property via -D-parameter on the mvn commandline
mvn -Dweblogic.home=c:\\localdata\\weblogic
then it's going to be resolved and it builds without errors.
;;;","25/Jun/09 12:11;bentmann;Norbert, the cause for your issue is captured by MNG-4148.;;;","01/Jul/09 12:43;brettporter;superceded by linked issue;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven doesn't try to download a dependency when it already exists a version with classifier locally,MNG-4142,12796913,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Incomplete,,aheritier,aheritier,23/Apr/09 09:28,23/Jan/21 21:44,03/Jan/22 13:13,23/Jan/21 21:44,2.0.10,2.0.9,2.1.0,,,,,,Dependencies,,,,,38,,,,"When maven installs in the local repository an artifact with a classifier, and not the principal artifact, it won't try in a reactor to download the principal artifact from the remote repository.
I created a testcase to reproduce it. It's quite simple. You unzip it and in the root directory you launch {code}mvn site{code}
This build uses clover, thus it installs locally cloverified versions of artifacts.
The build will fail because it doesn't find the SNAPSHOT of the module1 :
{code}
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Failed to resolve artifact.

Missing:
----------
1) org.apache.maven.it.test-metadata-local-clover:module1:jar:1.0.0-SNAPSHOT

  Try downloading the file manually from the project website.

  Then, install it using the command:
      mvn install:install-file -DgroupId=org.apache.maven.it.test-metadata-local-clover -DartifactId=module1 -Dversion=1.0.0-SNAPSHOT -Dpackaging=jar -Dfile=/pa
th/to/file

  Alternatively, if you host your own repository you can deploy the file there:
      mvn deploy:deploy-file -DgroupId=org.apache.maven.it.test-metadata-local-clover -DartifactId=module1 -Dversion=1.0.0-SNAPSHOT -Dpackaging=jar -Dfile=/path
/to/file -Durl=[url] -DrepositoryId=[id]

  Path to dependency:
        1) org.apache.maven.it.test-metadata-local-clover:module2:jar:1.0.0-SNAPSHOT
        2) org.apache.maven.it.test-metadata-local-clover:module1:jar:1.0.0-SNAPSHOT

----------
1 required artifact is missing.

for artifact:
  org.apache.maven.it.test-metadata-local-clover:module2:jar:1.0.0-SNAPSHOT

from the specified remote repositories:
  central (http://maven-proxy.groupe.generali.fr/all),
  remote-repo (file://E:\jtb\workspaces\tests\test-metadata-local-clover/remote-repo)
{code}
It's anormal because I set a ""local"" remote repository in the build where it should try to download it.
You can validate that it is working by launching :
{code}mvn install -f module2/pom.xml{code}

This bug is really annoying for us. It exists for a long long time now. I thought it was due to a problem with metadata sent by archiva, but after migrating to nexus the problem always occurs. 
I don't know if the problem is in metadata or in the reactor itself. I think it is the second one. There are many issues opened about the reactor and classifiers.
Is there some who can try if it can reproduce the error with my testcase ?
It should be easy to create a real IT for maven with it if it is necessary.
","Java 5, Windows XP",,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-4343,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Aug/09 05:03;drousselie;MNG-4142.patch;https://issues.apache.org/jira/secure/attachment/12712949/MNG-4142.patch","23/Apr/09 09:28;aheritier;test-metadata-local-clover.zip;https://issues.apache.org/jira/secure/attachment/12712896/test-metadata-local-clover.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29a87:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"23/Apr/09 09:48;aheritier;Something else to add : If I launch after the site build, another build which doesn't produce the main artefact (for example : mvn sonar), it will also fail trying to download dependency. I think that it can be related to maven-metadata and more probably to the maven maven-metadata-local.xml which is generated.
After the mvn site, I have in my local repository in org\apache\maven\it\test-metadata-local-clover\module1\1.0.0-SNAPSHOT:
{code}
maven-metadata-central.xml
maven-metadata-local.xml
maven-metadata-remote-repo.xml
maven-metadata-remote-repo.xml.sha1
module1-1.0.0-SNAPSHOT-clover.jar
module1-1.0.0-SNAPSHOT.pom
{code}
and in each metadata file :
* maven-metadata-central.xml
{code}
<?xml version=""1.0"" encoding=""UTF-8""?>
<metadata xsi:schemaLocation=""http://maven.apache.org/METADATA/1.0.0 http://maven.apache.org/xsd/metadata-1.0.0.xsd"" xmlns=""http://maven.apache.org/METADATA/1.0.0""
    xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
  <groupId>org.apache.maven.it.test-metadata-local-clover</groupId>
  <artifactId>module1</artifactId>
  <version>1.0.0-SNAPSHOT</version>
</metadata>
{code}
* maven-metadata-local.xml
{code}
<?xml version=""1.0"" encoding=""UTF-8""?>
<metadata xsi:schemaLocation=""http://maven.apache.org/METADATA/1.0.0 http://maven.apache.org/xsd/metadata-1.0.0.xsd"" xmlns=""http://maven.apache.org/METADATA/1.0.0""
    xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
  <groupId>org.apache.maven.it.test-metadata-local-clover</groupId>
  <artifactId>module1</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <versioning>
    <snapshot>
      <localCopy>true</localCopy>
    </snapshot>
    <lastUpdated>20090423144418</lastUpdated>
  </versioning>
</metadata>
{code}
* maven-metadata-remote-repo.xml
{code}
<?xml version=""1.0"" encoding=""UTF-8""?>
<metadata xsi:schemaLocation=""http://maven.apache.org/METADATA/1.0.0 http://maven.apache.org/xsd/metadata-1.0.0.xsd"" xmlns=""http://maven.apache.org/METADATA/1.0.0""
    xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
  <groupId>org.apache.maven.it.test-metadata-local-clover</groupId>
  <artifactId>module1</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <versioning>
    <snapshot>
      <timestamp>20090423.140624</timestamp>
      <buildNumber>1</buildNumber>
    </snapshot>
    <lastUpdated>20090423140625</lastUpdated>
  </versioning>
</metadata>
{code}
Do you think that maven-metadata-local.xml is good ? It says that there's a local copy whereas there's no module1-1.0.0-SNAPSHOT.jar in the directory.


;;;","18/Aug/09 05:02;drousselie;The problem is that when the Maven resolve the artifact version with maven-metadata-local.xml when it exists and it resolves it to 1.0.0-SNAPSHOT whereas only module1-1.0.0-SNAPSHOT-clover.jar (in this exemple). Then when it try to access the file artifact (module1-1.0.0-SNAPSHOT.jar) and fails, it tries to get the *same version* on remote repositories whereas it should have try to resolve the artifact version with data found in maven-metadata-${remotereponame}.xml before trying to get it from each repository.

I have attached a small patch (base on revision 805295 in branch maven-2.2.x) which might not be the best way to correct this bug : while resolving artifact version, it loads local metadata only if artifact's file exists locally.;;;","18/Aug/09 05:03;drousselie;A possible correction for bug MNG-4142;;;","30/Nov/09 02:43;pliljenberg@gmail.com;I've encountered this problem as well when doing distributed builds (using Hudson).
When one build server (#1) builds and deploys an artifact the maven-metadata-local.xml will contain the localCopy attribute:
  <versioning>
    <snapshot>
      <localCopy>true</localCopy>
    </snapshot>
    <lastUpdated>20091127124227</lastUpdated>
  </versioning>

Which means that if another build server builds the same module AFTER server #1 and produce a new artifact in the repository, machine #1 will never download this new SNAPSHOT version when trying to build artifacts depending on the artifact.
This is a huge problem (and a scary one!) for us and I would like to see a fix for this soon :);;;","31/May/10 15:41;brian.laframboise;I just ran into this issue myself (with Maven 2.2.1). A build on one of my build machines was failing due to maven not downloading a newer version of a dependency that was available on Nexus because it had previously installed an earlier version of that same dependency into the local repository.

When I removed the <localCopy>true</localCopy> element from the metadata of the non-updating dependency the problem went away - and dutifully came back when I re-added it.

Peter, I agree - this is a scary problem for anybody trying to implement a distributed build system. What I don't understand is why more people are not encountering this issue.

For now I'll attempt a workaround this by adding a cron job, per build agent, to frequently change <localCopy> back to false. If anybody has a better suggestion, I'd love to hear it.;;;","27/Oct/10 07:32;carlspring;

Hi,

I would like to ask why the attached patch is not being accepted?
There are currently over three dozen votes for this and it is apparent that people are hitting the problem.

In addition, perhaps the title of the bug is not quite correct. This doesn't just happen for artifacts with classifiers. In our case it happens for POM files where there are several inherited POMs.
We're using Hudson and Nexus had to limit the parents to build on one Hudson node, while all modules which depend on them - on the rest of the nodes.

I also think this is a huge and very obscure problem (esp. with distributed builds) and, provided that there is already a patch, I believe it's about time for it to be reviewed.

Regards,

Martin


;;;","27/Oct/10 07:38;aheritier;Were you able to test if the problem exists with maven 3 ?
I agree that this issue is really annoying but for now there is no 2.X version release scheduled. 
That's why there was no feedback from dev team.;;;","28/Oct/10 10:27;carlspring;

Bonjour Arnaud!

As per your request, I have tested this with Maven 3.0 today. I am afraid the problem still persists. Today this actually happened with a completely different project/setup/machine under both Maven 2.2.1 and 3.0.

This is not just annoying, it's actually a show-stopper when it happens to a developer who's not expecting it, as they spend quite some time trying to figure it out.

Please review for the release of Maven 3.1, (if a 2.x version will not be further released).

Regards,

Martin


;;;","14/Jul/11 03:22;nodje;I've the same problem but with standard SNAPSHOT dependencies, not using classifier, and with 3.0.3.;;;","14/Jul/11 03:26;carlspring;This bug/feature doesn't really have much to do with classifiers. I believe the original bug report filer just thought it had something to do with the problem.
Perhaps somebody should rename the bug to ""Maven doesn't try to download SNAPSHOT artifacts, if you've installed them locally; even if you pass -U"".

I believe that by using -U the local metadata should get ""unlocked"" (which currently doesn't do this) for the locally installed SNAPSHOT artifacts.;;;","14/Jul/11 03:42;nodje;alright, good then, that's my problem!

Can't wait for the fix to come, hopefully as early as 3.0.4...;;;","13/Jun/12 03:07;nodje;We're a year after the latest comment, could someone update the Fix version, that'd give some hope.

Our team is severely being affected by this problem, and it seems to be larger than the description suggests.
We have SNAPSHOT update problems on a daily basis, even for deps than haven't been installed locally. 
A CI server deploy the artifact, and in some case no one seem to get the updated artifact.

Thanks for pointing me to other bug report if my problem is out of scope here.;;;","13/Jun/12 03:14;carlspring;I have replied to numerous posts on Stack Overflow concerning this particular issue. People keep hitting this and are unhappy with the current behavior. In the company I work for, we had to make Jenkins use private repositories for each project which would be removed before every build, just for the sake of sanity and for us not losing our minds when a build fails due to this reason.

The problem here is also observed under Maven 3. Furthermore, it's not a classifier problem. It happens to whatever dependencies you have to modules which you've installed locally.

My suggestion would be to make the -U option ""unlock"" the Maven metadata files so that they are fetched from the remote repository.

I would also appreciate some response from the you guys. What's the problem here that keeps this issue unscheduled for future releases? We haven't received an official comment for a long while. :-|;;;","13/Jun/12 20:59;nodje;Removing a private repository before each build would indeed solve my problem :) 
I'm considering the option, since I'm losing my mind with all the build failing due to SNAPSHOT update problem.

Developers new to Maven in our team don't even understand ""SNAPSHOT update"", they just think they have to install manually each SNAPSHOT dependency... which messes up even more the whole thing.

And I insist, our CI server build agents don't install SNAPSHOT locally, and still they fail to retrieve the latest snapshots in many cases.

It's not a locally installed artifact update problem ONLY.


;;;","30/May/13 14:39;javacody;We are experiencing this issue with Maven 3.0.5 on Jenkins with multiple slaves.

It's kind of a nightmare.

Can we please get this at least assigned?

Here is the workaround that I came up with that in my opinion really sucks, but it works.

http://maven.apache.org/plugins/maven-dependency-plugin/purge-local-repository-mojo.html#include

In this case, I use a filter to clear out the SNAPSHOT artifacts that need to be updated. But it sucks that I have to do it. And we have a LOT of projects where we are going to have to do something similar.;;;","30/May/13 21:10;nodje;Good luck, you just have to live with it or spend the time to understand the Maven sources by yourself.
See Martin Todorov comments for a work around.  ;;;","23/May/14 18:21;jchatham;Ran into this issue recently on maven 3.0.4; our workaround was to update to maven 3.2.1, where there's a new property one can set: maven.install.skip

Set that to true, either with -Dmaven.install.skip or (how we did it) by adding a property entry in the maven settings file our jenkins build was using, and that fixed that; we build and deploy our snapshots, but don't install them into the local repositories.;;;","15/Oct/16 20:59;michael-o;First of all, thank you [~carlspring] for the great analysis on the issue: there is no conneciton to classifiers. I have tested the sample project with 3.0.5, 3.2.5, 3.3.9 and 3.4.0-SNAPSHOT. This issue still persists, now the bad thing: this issue is not rooted in Maven but in Aether, it rejects to redownload the snapshot. The root cause is the [update policy|http://maven.apache.org/ref/3.3.9/maven-settings/settings.html#class_snapshots] of the remote repository set in the POM. The first check is done [here|https://github.com/eclipse/aether-core/blob/4cf5f7a406b516a45d8bf15e7dfe3fb3849cb87b/aether-impl/src/main/java/org/eclipse/aether/internal/impl/DefaultUpdateCheckManager.java#L111] which handles over to [this|https://github.com/eclipse/aether-core/blob/4cf5f7a406b516a45d8bf15e7dfe3fb3849cb87b/aether-impl/src/main/java/org/eclipse/aether/internal/impl/DefaultUpdatePolicyAnalyzer.java#L84].

My questions are:

1. Why are the snapshots arleady in the repo, usecase, state?
2. What is your expected behavior? If the artifact is not yet in the local repo it has to pulled no matter what?;;;","15/Oct/16 22:58;slandelle;Consider this use case:
* you use a library and you need the bleeding age, so you fetch from this lib's CI repo
* you notice a bug, so you fork the repo, fix the bug, build and test locally, so you end up with a local snapshot
* you contribute the fix and it gets merged upstream
* now, you want to go back on depending on the official upstream snapshots, without having to maintain your local snapshot until the stable release;;;","15/Oct/16 23:09;michael-o;I need to revert my previous statement partially. I have found probably the issue why this is caused. Initially I thought that this is MNG-4343, but it isn't. It is the Clover Maven Plugin. First of all, I have updated to 4.1.2 to reproduce with the attached usecase. The issue is located as well as in the plugin but also in the sample project configuration. At runtime [clover replaces the main artifact with a classified one|https://docs.atlassian.com/maven-clover2-plugin/latest/xref/com/atlassian/maven/plugin/clover/CloverInstrumentInternalMojo.html#467]. This happens in {{pre-site}} phase. Unfortunately, the author of the sample project added {{module1}} as a dependency of {{module2}}, but forgot to add the classifier. If you now run with added classifier, the stuff works. It can never ever work the way it is configured now because there is no unclassified main artifact to depend upon due to Clover plugin.

Upshot: this is a misconfiguration in your POMs.

If some one now still thinks that this will fail even if a main and a side artifact exist, please create a proper sample project.;;;","15/Oct/16 23:11;michael-o;Perfectly fine usecase and I am convinced that this works. See post below.;;;","16/Dec/19 13:01;elharo;Poor description, but I've seen this myself. ;;;","12/Mar/20 06:50;lemon55;maven 3.6.1 This issue still persists :(

I spent about 2 weeks searching for the problem, discovered by accident. The problem is the same, only we do not have a snapshot, but a release;;;","12/Mar/20 08:22;michael-o;It may take a day or two to debug this :-(;;;","19/Aug/20 07:27;michael-o;[~lemon55], as I have described in my old comment: The given sample project is faulty. Please, someone create a new sample project.;;;","21/Nov/20 21:44;michael-o;I am still waiting for a new, proper sample project...;;;","23/Jan/21 21:44;michael-o;I have been waiting for quite some time now for a valid sample project. None provided. If someone can, request reopen.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Properties incorrectly replaced in pom,MNG-4140,12795448,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,jdcasey,unguiculus,unguiculus,20/Apr/09 01:26,07/Jul/09 12:29,03/Jan/22 13:13,21/Apr/09 17:56,2.1.0,,,,,2.2.0,,,,,,,,0,,,,"The attached sample pom configures the dependency plugin. During an install, {{$\{project.version\}}} is replaced by the actual version when in fact no replacement at all must happen (see {{pom-transformed.xml}}). This seems to be related to the {{version}}, since all other properties remain unchanged.

In our real world scenario, the dependency plugin is configured in a profile in order to copy child module artifacts to Luntbuild's publish directory. This, of course, won't work if the version is replaced during install. It must be evaluated at runtime.

This is a regression in Maven 2.1.0. Maven 2.0.10 does not have the problem.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-3057,,,,,,,,,,,,,,,,,"20/Apr/09 01:26;unguiculus;pom-transformed.xml;https://issues.apache.org/jira/secure/attachment/12712921/pom-transformed.xml","20/Apr/09 01:26;unguiculus;pom.xml;https://issues.apache.org/jira/secure/attachment/12712922/pom.xml",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28zz3:",9223372036854775807,,,,,,,,,,,,,,,,,,,"20/Apr/09 01:40;brettporter;yes, I think plugin configuration, and possible properties, need to be excluded form this rule;;;","20/Apr/09 20:09;jdcasey;sorry, not sure what I was thinking on this one. It's simply searching for any ""<version>.+</version>"" and interpolating the value...which has obvious side-effects for plugin configurations. I'm working on an xpath solution now that will allow us to preserve xml comments, etc. in the original POM, without the need to drag in additional dependencies.;;;","21/Apr/09 17:56;jdcasey;replaced StringSearchInterpolator (outer interpolator that isolated ""<version>.*</version>"" sections of the POM) with an XPath-based solution that allows fine-tuning of which versions to replace.;;;","27/Apr/09 09:07;jdcasey;NOTE: I've revised the fix for this issue to be JDK 1.4 compatible. Note also that when using JDK 1.4, your POMs WILL NOT BE INTERPOLATED for version expressions on install/deploy...however, the build will still run on 1.4. You should use JDK 1.5+ if you plan to use this feature.;;;","28/Jun/09 11:50;bentmann;For the record, POM interpolation upon installation/deployment to repos has been completely removed from Maven 2.2.;;;","07/Jul/09 10:03;jmborer;Why is this an issue? Shouldn't the pom included in the jars being interpolated? I am missing something here... any insights?;;;","07/Jul/09 12:29;jdcasey;See: http://docs.codehaus.org/display/MAVEN/Artifact-Coordinate+Expression+Transformation;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Execution's inherited is not working as expected.,MNG-4129,12796741,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,bentmann,imyousuf,imyousuf,10/Apr/09 04:24,01/Apr/10 13:05,03/Jan/22 13:13,21/May/09 13:22,2.1.0,,,,,3.0-alpha-3,,,Inheritance and Interpolation,,,,,0,,,,"I have following mentioned in my POM, but 'assemble-static-gh-pages' gets executed in the child POMs anyway. I see that its supposed to working as of - MNG-3286 but it ain't so. The build process in my project (http://github.com/imyousuf/smart-dao/tree) is incomplete just because of it.
{code:xml}
<plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-assembly-plugin</artifactId>
    <version>${assembly.version}</version>
    <inherited>false</inherited>
    <executions>
        <!-- Assembly execution for aggregating gh-pages -->
        <execution>
            <id>assemble-static-gh-pages</id>
            <phase>compile</phase>
            <inherited>false</inherited>
            <goals>
                <goal>single</goal>
            </goals>
            <configuration>
                <descriptors>
                    <descriptor>src/main/assembly/assemble-gh-pages.xml</descriptor>
                </descriptors>
            </configuration>
        </execution>
        <!-- Filter README -->
        <execution>
            <id>assemble-readme</id>
            <phase>process-resources</phase>
            <inherited>true</inherited>
            <goals>
                <goal>single</goal>
            </goals>
            <configuration>
                <descriptors>
                    <descriptor>src/main/assembly/assemble-readme.xml</descriptor>
                </descriptors>
            </configuration>
        </execution>
    </executions>
</plugin>
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-3286,,,,,,MNG-2103,,,,,,,,,,,"10/Apr/09 04:24;imyousuf;pom.xml;https://issues.apache.org/jira/secure/attachment/12712918/pom.xml",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29a2v:",9223372036854775807,,,,,,,,,,,,,,,,,,,"10/Apr/09 04:25;imyousuf;Its the same issue, but it does not seem to be fixed.;;;","10/Apr/09 06:36;bentmann;A workaround should be to add
{code:xml}
<plugin>
  <groupId>org.apache.maven.plugins</groupId>
  <artifactId>maven-assembly-plugin</artifactId>
  <version>${assembly.version}</version>
</plugin>
{code}
to the child POMs, i.e. ensure the plugin declaration is present in the children as well such that Maven needs to actually merge them.

You will need to remove {{<inherited>false</inherited>}} from the {{<plugin>}} declaration or the execution {{assemble-readme}} can't be inherited because inheritance of the plugin declaration is a prerequisite for inheritance of plugin executions.;;;","13/Apr/09 05:27;imyousuf;Thanks Benjamin, that actually got the inherited to work as it is, but unfortunately its not documented anywhere, if it was that would have saved me a lot of time :).

FYI, I set <inherited>false</inherited> as I could not get it to work and after that I copy pasted it, sorry for the inconvenience.

Thanks once again.;;;","13/Apr/09 05:36;bentmann;My current understanding is that this is really more than a documentation deficit...;;;","21/May/09 13:22;bentmann;Fixed in [r777205|http://svn.eu.apache.org/viewvc?view=rev&revision=777205].;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[regression] settings.xml profiles are executed after project profiles,MNG-4088,12795414,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Duplicate,bentmann,samaxes,samaxes,16/Mar/09 07:25,24/Mar/09 09:36,03/Jan/22 13:13,24/Mar/09 09:36,2.0.10,,,,,,,,Profiles,,,,,0,,,,"Examples like the one at http://www.sonatype.com/books/maven-book/reference/profiles-sect-tips-tricks.html do not work anymore.

The active profiles output is:
$ mvn help:active-profiles
Active Profiles for Project 'My Project':

The following profiles are active:

 - my-internal-profile (source: pom.xml)
 - my-external-profile (source: profiles.xml)
 - my-settings-profile (source: settings.xml)

instead of:
$ mvn help:active-profiles
Active Profiles for Project 'My Project':

The following profiles are active:

 - my-settings-profile (source: settings.xml)
 - my-external-profile (source: profiles.xml)
 - my-internal-profile (source: pom.xml)","Windows, Linux",,,,,,,,,,,,,,,,,,,,,,,MNG-2276,,,,,,,,,,,,,MNG-3614,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28y9j:",9223372036854775807,,,,,,,,,,,,,,,,,,,"22/Mar/09 23:49;brettporter;haven't yet confirmed;;;","24/Mar/09 09:36;bentmann;AFAICT, the section in the guide actually never worked. Profile activation by property is currently limited to CLI properties and there is already an issue for activation from settings properties (MNG-2276). From my testing, this is no regression as simply no available Maven version ever supported this.

For the record: ""execution"" of a profile is a misleading term for profile handling. One would like the collection of properties from the settings.xml for activation of other profiles to happen first, but the injection of a settings profile into the POM should still happen last to ensure the user settings can override POM defaults.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.maven.lifecycle.LifecycleExecutionException: An Ant BuildException has occured: java.lang.IllegalAccessError ( MAC OS ),MNG-4066,12797359,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Not A Problem,brettporter,shoemaker,shoemaker,04/Mar/09 15:00,22/Mar/09 23:47,03/Jan/22 13:13,22/Mar/09 23:47,2.0.10,,,,,,,,,,,,,0,,,,"% mvn --version
Maven version: 2.0.10
Java version: 1.6.0_07
OS name: ""mac os x"" version: ""10.5.6"" arch: ""x86_64"" Family: ""mac""


i% ant -version
Apache Ant version 1.7.1 compiled on June 27 2008


W hen trying to run

# mvn -e install 

on a MAC OS. I keep getting this exception.

org.apache.maven.lifecycle.LifecycleExecutionException: An Ant BuildException has occured: java.lang.IllegalAccessError: tried to access method org.apache.tools.ant.launch.Locator.decodeUri(Ljava/lang/String;)Ljava/lang/String; from class org.apache.tools.ant.AntClassLoader
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:584)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:500)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:479)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:331)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:292)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:142)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:336)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:129)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:301)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
	at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.apache.maven.plugin.MojoExecutionException: An Ant BuildException has occured: java.lang.IllegalAccessError: tried to access method org.apache.tools.ant.launch.Locator.decodeUri(Ljava/lang/String;)Ljava/lang/String; from class org.apache.tools.ant.AntClassLoader
	at org.apache.maven.plugin.antrun.AbstractAntMojo.executeTasks(AbstractAntMojo.java:131)
	at org.apache.maven.plugin.antrun.AntRunMojo.execute(AntRunMojo.java:98)
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:453)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:559)
	... 16 more
Caused by: java.lang.IllegalAccessError: tried to access method org.apache.tools.ant.launch.Locator.decodeUri(Ljava/lang/String;)Ljava/lang/String; from class org.apache.tools.ant.AntClassLoader
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:116)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.maven.plugin.antrun.AbstractAntMojo.executeTasks(AbstractAntMojo.java:118)
	... 19 more
Caused by: java.lang.IllegalAccessError: tried to access method org.apache.tools.ant.launch.Locator.decodeUri(Ljava/lang/String;)Ljava/lang/String; from class org.apache.tools.ant.AntClassLoader
	at org.apache.tools.ant.AntClassLoader.addPathFile(AntClassLoader.java:542)
	at org.apache.tools.ant.AntClassLoader.addPathElement(AntClassLoader.java:458)
	at org.apache.tools.ant.AntClassLoader.setClassPath(AntClassLoader.java:358)
	at org.apache.tools.ant.AntClassLoader.<init>(AntClassLoader.java:241)
	at org.apache.tools.ant.Project.createClassLoader(Project.java:334)
	at org.apache.tools.ant.util.ClasspathUtils.getUniqueClassLoaderForPath(ClasspathUtils.java:219)
	at org.apache.tools.ant.util.ClasspathUtils.getClassLoaderForPath(ClasspathUtils.java:194)
	at org.apache.tools.ant.util.ClasspathUtils$Delegate.getClassLoader(ClasspathUtils.java:445)
	at org.apache.tools.ant.taskdefs.DefBase.createLoader(DefBase.java:142)
	at org.apache.tools.ant.taskdefs.Definer.execute(Definer.java:197)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	... 22 more
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 33 seconds
[INFO] Finished at: Wed Mar 04 12:55:49 PST 2009
[INFO] Final Memory: 64M/245M
[INFO] ------------------------------------------------------------------------

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i291an:",9223372036854775807,,,,,,,,,,,,,,,,,,,"04/Mar/09 18:34;brettporter;can you please show the POM (or at least the antrun plugin section) that is responsible for this?

Note that Ant does not have to be installed (so the version you indicated is not actually used);;;","04/Mar/09 19:28;shoemaker;
Bret,

This is what the antrun plugin reads.


            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-antrun-plugin</artifactId>
              <dependencies>
                <dependency>
                  <groupId>ant</groupId>
                  <artifactId>ant-nodeps</artifactId>
                  <version>1.6.5</version>
                </dependency>
              </dependencies>
            </plugin>


Thanks for the prompt response
---;;;","04/Mar/09 19:36;brettporter;the current version of antrun is 1.3, which uses Ant 1.7.1. Please change the version from 1.6.5 to 1.7.1 (and I recommend locking in the antrun version for compatibility).

If you need 1.6.5, you will need to downgrade the antrun plugin to an earlier version.
;;;","22/Mar/09 23:47;brettporter;please reopen if this continues to be a problem;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Default phase binding is not working,MNG-4051,12797356,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Not A Problem,bentmann,mkarg,mkarg,25/Feb/09 13:09,26/Feb/09 13:40,03/Jan/22 13:13,26/Feb/09 12:56,2.0.10,,,,,,,,Plugins and Lifecycle,,,,,0,,,,"The default phase binding is not working: My mojo contains @phase generate-resources, what results in a phase entry in the plugin.xml. But it is not getting execute at mvn compile (yes, there is no typo, I double checked. If I am adding an explicit phase binding (execution) to the pom, it IS getting execute. So the default seems to do just nothing.","Windows XP Pro SP2
JDK 1.6.0_10",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28zrz:",9223372036854775807,,,,,,,,,,,,,,,,,,,"25/Feb/09 14:35;bentmann;I couldn't reproduce your issue here. Did you declare an {{<execution>}} element for your goal in the POM? Just adding {{@phase ...}} is not enough.;;;","26/Feb/09 12:46;mkarg;No I have not added <execution> since I want that the plugin automatically is always bound to exactly that phase told in ""@phase"". Isn't that what ""@phase"" is good for? I mean, what is ""@phase"" good for if the user must make up his mind to what phase to explicitly bind?;;;","26/Feb/09 12:56;bentmann;In Maven, you have goal executions which are bound to lifecycle phases. {{@phase}} is only meant to provide a default phase binding for a goal execution in case the user did not specify the {{<phase>}} element but declaring the actual execution is still up to the user.;;;","26/Feb/09 13:30;mkarg;So it is impossible to write a plugin that will execute some of its goals automatically in a particular phase? This is sad, since e. g. it is obvious that a goal like ""compile:compile"" certainly will be bound to exactly the ""compile"" phase and no other phase ever would make sense. Maybe I should add a feature request instead of a bug report, proposing another annotation for ""default executions"" to get rid of the need to add <execution> elements for such obvious places?;;;","26/Feb/09 13:40;bentmann;bq. So it is impossible to write a plugin that will execute some of its goals automatically in a particular phase?
Not in general. There are two sources that can introduce goal executions:
- the {{<execution>}} element in the POM
- the built-in lifecycle bindings for the {{<packaging>}} of the project

Plugins can provide their own packaging with a custom lifecycle mapping and this lifecycle mapping can automatically call your plugin goals just like the phase ""compile"" usually invokes ""compile:compile"".

But yes, if you like, fill a feature request.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Resolve or rollback WebDAV wagon deployment issue where hostname is improperly extracted from URL,MNG-4043,12795391,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,jdcasey,jdcasey,18/Feb/09 12:14,06/Apr/15 01:53,03/Jan/22 13:13,24/Feb/09 11:14,2.1.0-M1,,,,,2.1.0,,,Deployment,,,,,0,,,,"See WAGON-244.

This is one of the most serious problems we've had reported for Maven 2.1.0-M1, and should be driven to some sort of resolution before 2.1.0-final is released.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,WAGON-244,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29bxz:",9223372036854775807,,,,,,,,,,,,,,,,,,,"19/Feb/09 01:27;brettporter;upgraded, but requires a release;;;","24/Feb/09 11:14;jdcasey;Wagon 1.0-beta-5 is in use now, which has this issue resolved.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Unrecognised association ""exclude"" in pom parsing <resource><directory><excludes> in 2.0.10-RC10",MNG-4019,12793586,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Not A Problem,bentmann,bfields,bfields,02/Feb/09 17:28,04/Feb/09 05:19,03/Jan/22 13:13,04/Feb/09 05:19,2.0.10,,,,,,,,POM,,,,,0,,,,"Fails in Maven 2.0.10-RC10, works in 2.0.8 and 2.0.9. pom.xml containing the following:
        <resources>
            <resource>
                <directory>src/java</directory>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </resource>

Fails with:
org.apache.maven.reactor.MavenExecutionException: Parse error reading POM. Reason: Unrecognised association: 'excludes' (position: START_TAG seen ...<excludes>\
                    <excludes>... @138:31)  for project unknown:andromda-metafacades-uml at C:\workspaces\A34\andromda34\metafacades\uml\pom.xml

Caused by: org.apache.maven.project.InvalidProjectModelException: Parse error reading POM. Reason: Unrecognised association: 'excludes' (position: START_TAG seen ...<excludes>\r\n                    <excludes>... @138:31)  for project unknown:andromda-metafacades-uml at C:\workspaces\A34\andromda34\metafacades\uml\pom.xml
        at org.apache.maven.project.DefaultMavenProjectBuilder.readModel(DefaultMavenProjectBuilder.java:1591)

Not sure if this is related to http://jira.codehaus.org/browse/MNG-3680

pom.xml and mvn -X output from 2.0.9 and 2.0.10 attached. Pom file is from AndroMDA: http://team.andromda.org/docs/source-repository.html under directory metafacades\uml.
","XP SP3, Java 1.5.0_12-b04, Maven 2.0.10-RC10 2/1/09.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-3645,,,,,,,,,,,,,,,,,"02/Feb/09 17:28;209Debug.log;https://issues.apache.org/jira/secure/attachment/12712827/209Debug.log","02/Feb/09 17:28;210Debug.log;https://issues.apache.org/jira/secure/attachment/12712828/210Debug.log","03/Feb/09 08:22;pom.xml;https://issues.apache.org/jira/secure/attachment/12712870/pom.xml","02/Feb/09 17:28;pom.xml;https://issues.apache.org/jira/secure/attachment/12712829/pom.xml",,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28tfb:",9223372036854775807,,,,,,,,,,,,,,,,,,,"02/Feb/09 17:30;bfields;Oops, I meant to say 2.0.10-RC8, built on 2/1/09, downloaded from http://people.apache.org/~brianf/staging-repository2/org/apache/maven/apache-maven/2.0.10-RC8.;;;","03/Feb/09 05:53;bentmann;Bob, could you also attach the parent POM of the one you already provided, i.e. andromda-uml-metafacades:3.4.1-SNAPSHOT. In CVS, I only found [3.4-SNAPSHOT|http://andromda.cvs.sourceforge.net/viewvc/andromda/metafacades/uml/pom.xml?revision=1.7.2.10&view=markup&pathrev=V3_x_HEAD] which apparently isn't the same.;;;","03/Feb/09 08:22;bfields;All I did was change 3.4-SNAPSHOT to 3.4.1-SNAPSHOT locally, in order to prevent my custom local extensions from being overwritten automatically by the AndroMDA 3.4-SNAPSHOT downloaded version. I would think you would see the same problem from the pom.xml downloaded from the web site, but I haven't tried yet, I can try it today.

Attached top level parent pom.xml.;;;","03/Feb/09 08:56;bentmann;From the [immediate parent POM|http://andromda.cvs.sourceforge.net/viewvc/*checkout*/andromda/metafacades/uml/pom.xml?revision=1.7.2.10&content-type=text%2Fplain&pathrev=V3_x_HEAD] of the POM you provided first:
{code:xml}
<testResource>
  <directory>src/test/java</directory>
  <excludes>
    <excludes>**/*.java</excludes>  <!-- Note the plural here, it should however be <exclude> -->
  </excludes>
</testResource>
{code}
i.e. the POM is indeed invalid, cf. the [XSD|http://maven.apache.org/xsd/maven-4.0.0.xsd].;;;","03/Feb/09 11:12;bfields;Thank you for pointing that out, I'll fix the file on AndroMDA. I guess it was just a simple mistake from the previous developers that I didn't notice. A warning in the previous maven version would have been nice, I guess it just ignored the configuration information it didn't understand.

This issue can be closed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Artifact not found when searching on multiple repositories,MNG-4004,12795169,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Incomplete,,ol,ol,26/Jan/09 02:30,02/Jul/14 08:44,03/Jan/22 13:13,22/Jan/14 20:31,2.0.9,,,,,,,,Artifacts and Repositories,,,,,1,,,,"We have a project P that depends on a dependency D1.
This dependency D1 has a dependency on D2 with a version range. Let's say [1.7,)

In our company, we have 2 enterprise repositories :
central : central repository that contains all dependencies that can be used by our development teams.
poc :  repository that contains dependencies which are being validated by our experts.
In the settings.xml, the central repository is defined before the poc repository

The D2 artifact is present in both repositories, but with different versions:
- D2 version 1.2 is in our poc repository
- D2 version 1.5, 1.7 and 1.8 are in our central repository

When Maven tries to resolve dependencies, it tries to find the best version of the D2 dependency.
So it does the intersection of [1.2, 1.5, 1.7, 1.8] and [1.7,)
The result is 1.8 (available in our central repository).

The problem is that Maven does not find the version 1.8 of D2 because it only searches for it in the poc repository.
We don't know why, but we think that it's because the version 1.2 is in the poc repository, so it also tries to find the version 1.8 in the poc repository.
We found 2 workarounds:
- If we remove the version 1.2 from the poc repository, maven searches for version 1.8 in the central repository (so it works fine).
- If we add the version 1.8 to the poc repository, maven searches for version 1.8 in the poc repository (so it works fine).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28y93:",9223372036854775807,,,,,,,,,,,,,,,,,,,"27/Jan/09 12:10;brettporter;I think I see how that could happen since the repository does get set if the artifact is ""found"".

Can you be more specific about how the repositories are defined in settings.xml to be sure?
;;;","18/Aug/09 05:31;jvogelzang;I can confirm this issue. 
It shows up when your dependency is declared with a version range. If you fixate your version to <version>1.8</version> and do not use a version range, Maven will search in other repositories as well. If suitable for your situation it could be a workaround.

Regards,
Johan;;;","22/Jan/14 20:23;jvanzyl;Please refer to https://cwiki.apache.org/confluence/display/MAVEN/The+Great+JIRA+Cleanup+of+2014;;;","22/Jan/14 20:31;jvanzyl;Please refer to https://cwiki.apache.org/confluence/display/MAVEN/The+Great+JIRA+Cleanup+of+2014 if you're wondering why this issue was closed out.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[regression] Deployment to secured repository fails,MNG-3953,12795341,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jvanzyl,bentmann,bentmann,03/Jan/09 10:43,07/Apr/15 12:25,03/Jan/22 13:13,03/Jan/09 10:44,3.0-alpha-1,,,,,3.0-alpha-1,,,Artifacts and Repositories,,,,,0,,,,The authentication info from the {{settings.xml}} is not properly forwarded to the deployer which makes the deployment to secured repos fail.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i297zr:",9223372036854775807,,,,,,,,,,,,,,,,,,,"03/Jan/09 10:44;bentmann;Fixed in [r730868|http://svn.eu.apache.org/viewvc?view=rev&revision=730868].;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven unable to find the child modules,MNG-3956,12793072,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Incomplete,,sanjay_patil@johnlewis.co.uk,sanjay_patil@johnlewis.co.uk,02/Jan/09 04:59,30/Dec/09 14:47,03/Jan/22 13:13,30/Dec/09 14:47,2.0.9,,,,,,,,,,,,,0,,,,"Hi, Please can you assist me here.

I am using Maven 2.0.9. I have created a parent project for one of my Java project and was trying to run mvn compile cmd from the parent level
but it fails.  This is what i have declared in my parent POM.
{code:xml}
<project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.johnlewis.jjs</groupId>
  <artifactId>jlp_jjs_jjs2core-parent</artifactId>
  <packaging>pom</packaging>
  <name/>
  <version>0.0.1-SNAPSHOT</version>
  <description/>
  <modules>
    <module>../jlp_jjs_jjs2core</module>
  </modules>
</project>
{code}
The error message is 
{noformat}
+ Error stacktraces are turned on.
Maven version: 2.0.9
Java version: 1.5.0
OS name: ""windows xp"" version: ""5.1 build 2600 service pack 2"" arch: ""x86"" Family: ""dos""
[DEBUG] Building Maven user-level plugin registry from: 'C:\Documents and Settings\tso005\.m2\plugin-registry.xml'
[DEBUG] Building Maven global-level plugin registry from: 'C:\Program Files\Maven\apache-maven-2.0.9\conf\plugin-registry.xml'
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ------------------------------------------------------------------------
[INFO] null
[INFO] ------------------------------------------------------------------------
[DEBUG] Trace
java.lang.StackOverflowError
	at java.net.URLClassLoader$ClassFinder.run(URLClassLoader.java:957)
	at java.security.AccessController.doPrivileged(AccessController.java:275)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:487)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:603)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:595)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:327)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:569)
	at org.codehaus.classworlds.DefaultClassRealm.loadClass(DefaultClassRealm.java:243)
	at org.codehaus.plexus.component.factory.java.JavaComponentFactory.newInstance(JavaComponentFactory.java:30)
	at org.codehaus.plexus.DefaultPlexusContainer.createComponentInstance(DefaultPlexusContainer.java:1464)
	at org.codehaus.plexus.component.manager.AbstractComponentManager.createComponentInstance(AbstractComponentManager.java:93)
	at org.codehaus.plexus.component.manager.ClassicSingletonComponentManager.getComponent(ClassicSingletonComponentManager.java:92)
	at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:331)
	at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:440)
	at org.codehaus.plexus.DefaultPlexusContainer.lookupList(DefaultPlexusContainer.java:423)
	at org.apache.maven.profiles.DefaultProfileManager.isActive(DefaultProfileManager.java:260)
	at org.apache.maven.profiles.DefaultProfileManager.getActiveProfiles(DefaultProfileManager.java:209)
	at org.apache.maven.project.DefaultMavenProjectBuilder.injectActiveProfiles(DefaultMavenProjectBuilder.java:1478)
	at org.apache.maven.project.DefaultMavenProjectBuilder.buildInternal(DefaultMavenProjectBuilder.java:761)
	at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromSourceFileInternal(DefaultMavenProjectBuilder.java:506)
	at org.apache.maven.project.DefaultMavenProjectBuilder.build(DefaultMavenProjectBuilder.java:198)
	at org.apache.maven.DefaultMaven.getProject(DefaultMaven.java:583)
	at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:461)
	at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:534)
	at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:534)
	at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:534)
        [...]
	at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:534)
	at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:534)
	at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:534)
	at org.apache.maven.DefaultMaven.getProjects(DefaultMaven.java:365)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:292)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:129)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:287)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:615)
	at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
	at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 14 seconds
[INFO] Finished at: Fri Jan 02 10:23:37 GMT 2009
[INFO] Final Memory: 2M/83M
[INFO] ------------------------------------------------------------------------
{noformat}

I am running the command from CLI.  Both the projects are under the same directory.

Cheers,
Sanjay Patil","Windows XP, Maven 2.0.9",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Jan/09 04:09;bentmann;mng-3956.zip;https://issues.apache.org/jira/secure/attachment/12712859/mng-3956.zip","04/Jan/09 15:51;bentmann;mng-3956.zip;https://issues.apache.org/jira/secure/attachment/12712858/mng-3956.zip","06/Jan/09 03:56;pom.xml;https://issues.apache.org/jira/secure/attachment/12712817/pom.xml","06/Jan/09 03:56;pom.xml;https://issues.apache.org/jira/secure/attachment/12712857/pom.xml","06/Jan/09 08:45;sandebug.log;https://issues.apache.org/jira/secure/attachment/12712816/sandebug.log",,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29a7r:",9223372036854775807,,,,,,,,,,,,,,,,,,,"04/Jan/09 15:51;bentmann;The attached project seems to reproduce your issue but the projects are just malformed: It are two aggregator POMs that reference each other.

You might want to check your project setup for cycles or attach all your involved POMs for inspection.;;;","06/Jan/09 03:56;sanjay_patil@johnlewis.co.uk;Hi,

I have attached both the POM. Please can you have a look.

Cheers,
Sanjay Patil;;;","06/Jan/09 04:09;bentmann;I tried to arrange the POMs in a local file structure as suggested from their contents but I can't reproduce your issue. Running ""mvn validate"" on either of the modules works. Can you provide a ZIP/TAR/whatever archive with a ready-made demo project?;;;","06/Jan/09 08:43;sanjay_patil@johnlewis.co.uk;Hi Benjamin,

I have fixed this problem but I dont know the reason for it. Thing is that my child module artifact id was same as parent POM project name and thats why it was going in loop. I gave a different name today and it started working.

Now I have come across another error while running mvn site command from the parent POM. I fails with the below error.

[DEBUG] Setting property: classpath.resource.loader.class => 'org.codehaus.plexus.velocity.ContextClassLoaderResourceLoader'.
[DEBUG] Setting property: site.resource.loader.class => 'org.codehaus.plexus.velocity.SiteResourceLoader'.
[DEBUG] Setting property: velocimacro.messages.on => 'false'.
[DEBUG] Setting property: resource.loader => 'classpath,site'.
[DEBUG] Setting property: runtime.log.invalid.references => 'false'.
[DEBUG] Setting property: resource.manager.logwhenfound => 'false'.
[DEBUG] Setting property: velocimacro.permissions.allow.inline.to.replace.global => 'true'.
[DEBUG] *******************************************************************
[DEBUG] Starting Apache Velocity v1.5 (compiled: 2007-02-22 08:52:29)
[DEBUG] RuntimeInstance initializing.
[DEBUG] Default Properties File: org\apache\velocity\runtime\defaults\velocity.properties
[DEBUG] LogSystem has been deprecated. Please use a LogChute implementation.
[DEBUG] Default ResourceManager initializing. (class org.apache.velocity.runtime.resource.ResourceManagerImpl)
[DEBUG] ResourceLoader instantiated: org.codehaus.plexus.velocity.ContextClassLoaderResourceLoader
[DEBUG] ResourceLoader instantiated: org.codehaus.plexus.velocity.SiteResourceLoader
[DEBUG] ResourceCache: initialized (class org.apache.velocity.runtime.resource.ResourceCacheImpl)
[DEBUG] Default ResourceManager initialization complete.
[DEBUG] Loaded System Directive: org.apache.velocity.runtime.directive.Literal
[DEBUG] Loaded System Directive: org.apache.velocity.runtime.directive.Macro
[DEBUG] Loaded System Directive: org.apache.velocity.runtime.directive.Parse
[DEBUG] Loaded System Directive: org.apache.velocity.runtime.directive.Include
[DEBUG] Loaded System Directive: org.apache.velocity.runtime.directive.Foreach
[DEBUG] Created '20' parsers.
[DEBUG] Velocimacro : initialization starting.
[DEBUG] Velocimacro : allowInline = true : VMs can be defined inline in templates
[DEBUG] Velocimacro : allowInlineToOverride = true : VMs defined inline may replace previous VM definitions
[DEBUG] Velocimacro : allowInlineLocal = false : VMs defined inline will be global in scope if allowed.
[DEBUG] Velocimacro : autoload off : VM system will not automatically reload global library macros
[DEBUG] Velocimacro : Velocimacro : initialization complete.
[DEBUG] RuntimeInstance successfully initialized.
[DEBUG] Configuring mojo 'org.apache.maven.plugins:maven-site-plugin:2.0-beta-6:site' -->
[DEBUG]   (f) generateReports = true
[DEBUG]   (f) generatedSiteDirectory = C:\Work\IDE\workspace\tso005\jlp_jjs_JJS2Core~SP\jlp_jjs_JJS2Core_Java\target\generated-site
[DEBUG]   (f) inputEncoding = ISO-8859-1
[DEBUG]   (f) localRepository = [local] -> file://c:\work\mavenrepository2
[DEBUG]   (f) outputDirectory = C:\Work\IDE\workspace\tso005\jlp_jjs_JJS2Core~SP\jlp_jjs_JJS2Core_Java\target\site
[DEBUG]   (f) outputEncoding = ISO-8859-1
[DEBUG]   (f) project = MavenProject: com.johnlewis.jjs:jlp_jjs_jjs2core_Java:0.0.1-SNAPSHOT @ C:\Work\IDE\workspace\tso005\jlp_jjs_JJS2Core~SP\jlp_jjs_JJS2Core_Java\pom.xml
[DEBUG]   (f) reactorProjects = [MavenProject: com.johnlewis.jjs:jlp_jjs_jjs2core_Java:0.0.1-SNAPSHOT @ C:\Work\IDE\workspace\tso005\jlp_jjs_JJS2Core~SP\jlp_jjs_JJS2Core_Java\pom.xml, MavenProject: com.johnlewis.jjs:jlp_jjs_jjs2core-parent:0.0.1-SNAPSHOT @ C:\Work\IDE\workspace\tso005\jlp_jjs_JJS2Core~SP\jlp_jjs_JJS2Core\pom.xml]
[DEBUG]   (f) reports = [org.apache.maven.plugin.checkstyle.CheckstyleReport@2a222a22, org.codehaus.mojo.cobertura.CoberturaReportMojo@781a781a, org.codehaus.mojo.findbugs.FindBugsMojo@426a426a, org.codehaus.mojo.jdepend.JDependMojo@5e505e50, org.apache.maven.report.projectinfo.CimReport@27f827f8, org.apache.maven.report.projectinfo.DependenciesReport@62b662b6, org.apache.maven.report.projectinfo.DependencyConvergenceReport@6500650, org.apache.maven.report.projectinfo.IssueTrackingReport@27642764, org.apache.maven.report.projectinfo.LicenseReport@b540b54, org.apache.maven.report.projectinfo.MailingListsReport@6e586e58, org.apache.maven.report.projectinfo.ProjectIndexPageReport@22dc22dc, org.apache.maven.report.projectinfo.ProjectSummaryReport@a640a64, org.apache.maven.report.projectinfo.ScmReport@271c271c, org.apache.maven.report.projectinfo.TeamListReport@32743274]
[DEBUG]   (f) repositories = [[central] -> http://repo1.maven.org/maven2]
[DEBUG]   (f) siteDirectory = C:\Work\IDE\workspace\tso005\jlp_jjs_JJS2Core~SP\jlp_jjs_JJS2Core_Java\src\site
[DEBUG]   (f) templateDirectory = C:\Work\IDE\workspace\tso005\jlp_jjs_JJS2Core~SP\jlp_jjs_JJS2Core_Java\src\site
[DEBUG]   (f) xdocDirectory = C:\Work\IDE\workspace\tso005\jlp_jjs_JJS2Core~SP\jlp_jjs_JJS2Core_Java\xdocs
[DEBUG] -- end configuration --
[INFO] [site:site]
[DEBUG] Mapped url: C:\Work\IDE\workspace\tso005\jlp_jjs_JJS2Core~SP\jlp_jjs_JJS2Core_Java\src\site to relative path: src\site
[WARNING] No URL defined for the project - decoration links will not be resolved
[DEBUG] maven-default-skin: using locally installed snapshot
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] The skin does not exist: Unable to determine the release version

Try downloading the file manually from the project website.

Then, install it using the command: 
    mvn install:install-file -DgroupId=org.apache.maven.skins -DartifactId=maven-default-skin -Dversion=RELEASE -Dpackaging=jar -Dfile=/path/to/file

Alternatively, if you host your own repository you can deploy the file there: 
    mvn deploy:deploy-file -DgroupId=org.apache.maven.skins -DartifactId=maven-default-skin -Dversion=RELEASE -Dpackaging=jar -Dfile=/path/to/file -Durl=[url] -DrepositoryId=[id]


  org.apache.maven.skins:maven-default-skin:jar:RELEASE


[INFO] ------------------------------------------------------------------------
[DEBUG] Trace
org.apache.maven.BuildFailureException: The skin does not exist: Unable to determine the release version

Try downloading the file manually from the project website.

Then, install it using the command: 
    mvn install:install-file -DgroupId=org.apache.maven.skins -DartifactId=maven-default-skin -Dversion=RELEASE -Dpackaging=jar -Dfile=/path/to/file

Alternatively, if you host your own repository you can deploy the file there: 
    mvn deploy:deploy-file -DgroupId=org.apache.maven.skins -DartifactId=maven-default-skin -Dversion=RELEASE -Dpackaging=jar -Dfile=/path/to/file -Durl=[url] -DrepositoryId=[id]


  org.apache.maven.skins:maven-default-skin:jar:RELEASE


	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:579)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:499)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:478)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:330)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:291)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:142)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:336)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:129)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:287)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:615)
	at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
	at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.apache.maven.plugin.MojoFailureException: The skin does not exist: Unable to determine the release version

Try downloading the file manually from the project website.

Then, install it using the command: 
    mvn install:install-file -DgroupId=org.apache.maven.skins -DartifactId=maven-default-skin -Dversion=RELEASE -Dpackaging=jar -Dfile=/path/to/file

I will attach the log as well when the run the command from CLI.  Please can you have a look.

Cheers,
Sanjay Patil;;;","06/Jan/09 08:57;bentmann;Make sure that your copy of {{org/apache/maven/skins/maven-default-skin/maven-metadata-central.xml}} in your local repo matches the [official remote copy|http://repo2.maven.org/maven2/org/apache/maven/skins/maven-default-skin/maven-metadata.xml] or delete the file's parent directory to have Maven redownload it. Also, try to add the flag ""-U"" to your command line to force a re-check of the metadata. Your skin issue is likely a duplicate of MNG-3139.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"FATAL ERROR if a variable contains &lt; or &gt;",MNG-3924,12795319,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,bentmann,bebbo,bebbo,19/Dec/08 03:52,19/Dec/08 16:12,03/Jan/22 13:13,19/Dec/08 16:12,2.0.9,,,,,2.1.0-M1,3.0-alpha-1,,,,,,,0,,,,"Try to use a variable with content like:
    <properties>
        <xmlHeader>&lt;?xml version=""1.0"" ?&gt;</xmlHeader>
    </properties>

Then maven fails with

[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ------------------------------------------------------------------------
[INFO] 9262
[INFO] ------------------------------------------------------------------------
[INFO] Trace
java.lang.ArrayIndexOutOfBoundsException: 9262
        at org.codehaus.plexus.util.xml.pull.MXParser.parsePI(MXParser.java:2447)
        at org.codehaus.plexus.util.xml.pull.MXParser.nextImpl(MXParser.java:1245)
        at org.codehaus.plexus.util.xml.pull.MXParser.next(MXParser.java:1093)
        at hidden.org.codehaus.plexus.util.xml.Xpp3DomBuilder.build(Xpp3DomBuilder.java:187)
        at hidden.org.codehaus.plexus.util.xml.Xpp3DomBuilder.build(Xpp3DomBuilder.java:94)
        at org.apache.maven.model.io.xpp3.MavenXpp3Reader.parsePlugin(MavenXpp3Reader.java:2955)
        at org.apache.maven.model.io.xpp3.MavenXpp3Reader.parseBuild(MavenXpp3Reader.java:753)
        at org.apache.maven.model.io.xpp3.MavenXpp3Reader.parseModel(MavenXpp3Reader.java:2224)
        at org.apache.maven.model.io.xpp3.MavenXpp3Reader.read(MavenXpp3Reader.java:4422)
        at org.apache.maven.model.io.xpp3.MavenXpp3Reader.read(MavenXpp3Reader.java:4433)
        at org.apache.maven.project.interpolation.RegexBasedModelInterpolator.interpolate(RegexBasedModelInterpolator.ja
va:105)
        at org.apache.maven.project.DefaultMavenProjectBuilder.processProjectLogic(DefaultMavenProjectBuilder.java:1016)

        at org.apache.maven.project.DefaultMavenProjectBuilder.buildInternal(DefaultMavenProjectBuilder.java:878)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromSourceFileInternal(DefaultMavenProjectBuilder.ja
va:506)
        at org.apache.maven.project.DefaultMavenProjectBuilder.build(DefaultMavenProjectBuilder.java:198)
        at org.apache.maven.DefaultMaven.getProject(DefaultMaven.java:583)
        at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:461)
        at org.apache.maven.DefaultMaven.getProjects(DefaultMaven.java:365)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:292)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:129)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:287)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
[INFO] ------------------------------------------------------------------------
[INFO] Total time: < 1 second
[INFO] Finished at: Fri Dec 19 10:47:09 CET 2008
[INFO] Final Memory: 1M/2M
[INFO] ------------------------------------------------------------------------
",any,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-3662,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i296dz:",9223372036854775807,,,,,,,,,,,,,,,,,,,"19/Dec/08 03:54;bebbo;HAHAHA JIRA is also buggy :) Let's try again:

    <properties>
        <xmlHeader>&amp;lt;?xml version=""1.0"" ?&amp;gt;</xmlHeader>
    </properties>
;;;","19/Dec/08 16:12;bentmann;It's not the mere definition of the property but its interpolation in some other place that causes the error. This was fixed by refactoring of the model interpolation in both Maven 2.1.x (by John) and 3.x (by Shane).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Transitive dependencies override explicitly set scope.,MNG-3890,12797617,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Won't Fix,schulte77,bitshuffler,bitshuffler,03/Dec/08 13:34,24/Jun/16 00:48,03/Jan/22 13:13,24/Jun/16 00:48,2.0.9,2.1.0-M1,3.0-alpha-1,,,,,,Dependencies,,,,,6,,,,"Transitive dependencies override explicitly set scope.

E.g. a project A depends on ""Hibernate"" with default scope and a project B depends on project A as well as on ""Hibernate"" for which it sets the scope explicitly to ""provided"". Further an EAR project C depends on project B (see the attached testcase).

Now I would expect that C does not contain any jars for Hibernate and its dependencies since B explicitly set the scope to ""provided"". Sadly this is not the case and C contains all hibernate jars. The only way around this I have found is setting the scope to ""provided"" for Hibernate in A as well - which is just a crude hack that produces other issues.

IMHO this is a bug because Maven should respect the overridden dependency scope since the current way forces me to set the scope to provided in A which is just wrong.

Please try to get this fixed for 2.10 or 2.1 since it's a real pita atm.",,,,,,,,,,,,,,,,,MNG-5761,,,,,,,,,,,,,,MNG-5197,MNG-5980,,,,,MNG-2205,,,,,,,,,,,,,,,,,"07/Feb/09 14:25;MMG-3890-core-it-suite.patch;https://issues.apache.org/jira/secure/attachment/12712826/MMG-3890-core-it-suite.patch","03/Dec/08 13:34;testcase.tar.bz2;https://issues.apache.org/jira/secure/attachment/12712325/testcase.tar.bz2",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28ylj:",9223372036854775807,,,,,,,,,,,,,,,,,,,"06/Dec/08 11:26;bentmann;IT has been created from provided example with test artifacts to exhibit problem:
{noformat}
[INFO] ------------------------------------------------------------------------
[INFO] [dependency:tree]
[INFO] org.apache.maven.its.mng3890:b:jar:0.1
[INFO] \- org.apache.maven.its.mng3890:a:jar:0.1:compile
[INFO] ------------------------------------------------------------------------
[INFO] [dependency:tree]
[INFO] org.apache.maven.its.mng3890:c:jar:0.1
[INFO] +- org.apache.maven.its.mng3890:a:jar:0.1:provided (scope not updated to compile)
[INFO] \- org.apache.maven.its.mng3890:b:jar:0.1:compile
[INFO] ------------------------------------------------------------------------
[INFO] [dependency:tree]
[INFO] org.apache.maven.its.mng3890:test:jar:1.0
[INFO] \- org.apache.maven.its.mng3890:c:jar:0.1:compile
[INFO]    \- org.apache.maven.its.mng3890:b:jar:0.1:compile
[INFO]       \- org.apache.maven.its.mng3890:a:jar:0.1:compile  << ERROR: Should be excluded because declared as provided by c
[INFO] ------------------------------------------------------------------------
{noformat}
;;;","07/Feb/09 14:25;torbengee;The IT's POM can't be validated because it contains {{--------}} within a comment. The patch replaces dashes with {{====}} and the IT will run.;;;","07/Feb/09 14:39;bentmann;Applied your fix to the IT POM, thanks Torben!;;;","08/Feb/09 13:12;torbengee;The problem seems to be that artifacts of {{provided}} scope are excluded from dependency resolution right from the start. Here's the code in {{DefaultArtifactFactory}}:

{code}
    private Artifact createArtifact( String groupId, String artifactId, VersionRange versionRange, String type,
                                     String classifier, String scope, String inheritedScope, boolean optional )
    {
        // TODO: can refactor - inherited scope calculation belongs in the collector, use scope handler

        String desiredScope = Artifact.SCOPE_RUNTIME;
        if ( inheritedScope == null )
        {
            desiredScope = scope;
        }
        else if ( Artifact.SCOPE_TEST.equals( scope ) || Artifact.SCOPE_PROVIDED.equals( scope ) )
        {
            return null;
        }

        ...
}
{code}

If the {{provided}} dependencies don't show up, then there's no way telling what must finally be excluded from the dependency tree. The {{DefaultArtifactCollector}} does everything right in recursively drilling down to {{test --> c --> b --> a}} and adding all dependencies it finds.

However, after all children of a {{ResolutionNode}} have been processed, all dependencies of scope {{runtime}} or {{provided}} should be removed from the list of resolved artifacts. Or at least be added to some sort of exclusion filter.;;;","28/Oct/13 10:28;tknerr;Same problem here. Want to set {{javax.validation:validation-api}} to {{provided}} but it still ends up being packaged in the .war file, because it turns out to be a transitive dependency of {{gwt-user}} as well.

Workaround: set it to {{provided}} scope AND {{excludes}} it from the other artifact:
{code}
        <dependency>
	    <groupId>com.google.gwt</groupId>
	    <artifactId>gwt-user</artifactId>
	    <version>${gwtVersion}</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.validation</groupId>
                    <artifactId>validation-api</artifactId>
                </exclusion>
            </exclusions>
	</dependency>
...
	<dependency>
		<groupId>javax.validation</groupId>
		<artifactId>validation-api</artifactId>
		<scope>provided</scope>
	</dependency>
...
{code};;;","29/Oct/13 04:32;joehni;The easier way is an own dependencyManagement section, because that one officially overwrites the transitive deps.;;;","29/Oct/13 12:28;tknerr;@Jörg Schaible you mean if I set the {{validation-api}} to {{provided}} scope within {{<dependencyManagment>}} I don't need the exclusion anymore?

Can not test right now, but that would be great!;;;","29/Oct/13 13:11;joehni;bq. you mean if I set the validation-api to provided scope within <dependencyManagment> I don't need the exclusion anymore?

Right.;;;","30/Nov/13 10:05;tibordigana;This issue sounds same as https://jira.codehaus.org/browse/MNG-2205
@Jörg is that workaround working same in Maven 2? The workaround looks like another bug, does not it to you?;;;","02/Dec/13 04:48;joehni;@Tibor: No this case is different. The workaround is the same, but Maven should have excluded the artifact here on its own.;;;","24/Feb/16 19:53;schulte77;This is caused by the way dependencies are selected. The [ScopeDependencySelector|https://git-wip-us.apache.org/repos/asf?p=maven.git;a=blob;f=maven-aether-provider/src/main/java/org/apache/maven/repository/internal/MavenRepositorySystemUtils.java;h=3a98b2acc53b828479057814fb0ca4f2f0b30e03;hb=HEAD#l101] is setup to filter out any transitive dependencies using scope {{provided}} or {{test}} right from the start. The comment {{(scope not updated to compile)}} above is misleading. That node got filtered out directly during collecting dependencies so that it is not available to any transformation, conflict resultion, etc.
;;;","24/Jun/16 00:48;schulte77;Cause for the issue is that dependency management is not applied transitively. As soon as dependency management is applied transitively, you can manage the scope to provided correctly. See MNG-5761.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
javadoc is non existent,MNG-3840,12796889,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Not A Problem,bmargulies,amartinwest,amartinwest,14/Nov/08 08:40,19/Jun/11 16:43,03/Jan/22 13:13,19/Jun/11 16:43,2.0.9,,,,,,,,Documentation:  General,,,,,1,,,,"e.g.

http://maven.apache.org/ref/2.0.9/maven-artifact/apidocs/org/apache/maven/artifact/resolver/ArtifactResolver.html

This is symptomatic of the whole maven project documentation.",All,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i297q7:",9223372036854775807,,,,,,,,,,,,,,,,,,,"19/Jun/11 16:43;bmargulies;While it is true that the javadoc available on much of the maven source is risible, a single JIRA to that effect does not help anyone fix anything. Ask yourself how anyone would ever decide to close this as fixed?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[regression] Some POMs fail to parse if the are subject to ModelContainer joining,MNG-3838,12796703,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,sisbell,espenhw,espenhw,13/Nov/08 15:18,22/Dec/08 06:18,03/Jan/22 13:13,22/Dec/08 06:18,3.0-alpha-1,,,,,3.0-alpha-1,,,POM,,,,,1,,,,"With Maven 3.0-SNAPSHOT built from svn r713815, the POM in the attachment fails to parse with the output in fail.log.  The interesting bit is reproduced here:

{noformat}
java.io.IOException: org.codehaus.plexus.util.xml.pull.XmlPullParserException: end tag name </plugin> must match start tag name <dependencies> from line 12 (position: START_TAG seen ...<dependencies></plugin>... @12:24) :

<project xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd""  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""  xmlns=""http://maven.apache.org/POM/4.0.0"" >
<modelVersion>4.0.0</modelVersion>
<groupId>testing</groupId>
<artifactId>testing</artifactId>
<version>1</version>
<build>
<plugins>
<plugin>
<groupId>org.apache.maven.plugins</groupId>
<artifactId>maven-checkstyle-plugin</artifactId>
<dependencies></plugin>
<plugin>
[...lots more...]
{noformat}

As far as I can make out, the problem is that the ModelContainer joining carried out in ModelTransformerContext.transform (on line 269) fails to take into account that it may leave the wrapper collection empty.  Such an empty collection then leads ModelMarshaller astray later.

The example POM is a stripped-down version of the org.apache.cxf:cfx-parent:2.1 POM, which is how I discovered the issue.

This broke sometime after 2008-10-13.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-3821,,,,,,,,,,,,,,,,,"13/Nov/08 15:18;espenhw;example.zip;https://issues.apache.org/jira/secure/attachment/12712320/example.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28ly7:",9223372036854775807,,,,,,,,,,,,,,,,,,,"14/Nov/08 11:19;bentmann;The example POM has been added to the IT suite, thanks very much Espen!;;;","22/Dec/08 06:18;bentmann;Fixed in [r727855|http://svn.eu.apache.org/viewvc?view=rev&revision=727855].;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect parameter injection,MNG-3835,12795257,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Cannot Reproduce,brettporter,mbeerman,mbeerman,12/Nov/08 13:07,07/Apr/10 17:57,03/Jan/22 13:13,06/Apr/10 19:53,2.0.9,2.1.0-M1,,,,,,,Plugin API,,,,,2,,,,"Consider the following configuration fragment. Header is a bean with a list of values; Value is a bean with a map of directives.

                    <headers>                        
                        <header>
                            <name>Bundle-SymbolicName</name>
                            <values>
                                <value>
                                    <name>${project.name}</name>
                                    <directives>
                                        <singleton>true</singleton>
                                    </directives>
                                </value>
                            </values>
                        </header>
                        <header>
                            <name>Eclipse-LazyStart</name>
                            <values>
                                <value>
                                    <name>true</name>
                                </value>
                            </values>
                        </header>
                        <header>
                            <name>Eclipse-BuddyPolicy</name>
                            <values>
                                <value>
                                    <name>registered</name>
                                </value>
                            </values>
                        </header>
                        <header>
                            <name>Require-Bundle</name>
                            <append>true</append>
                            <values>
                                <value>
                                    <name>com.cerner.client.wrapper.osgi.jaxb</name>
                                </value>    
                                <value>
                                    <name>com.cerner.client.wrapper.osgi.msvc</name>
                                </value>                                                                
                            </values>
                        </header>
                        <header>
                            <name>Eclipse-RegisterBuddy</name>
                            <values>
                                <value>
                                    <name>com.cerner.client.wrapper.osgi.jaxb</name>
                                </value>                                
                            </values>                            
                        </header>
                    </headers>

But here's what actually gets sent to the mojo (output from mvn -X):

[DEBUG]   (s) name = Bundle-SymbolicName
[DEBUG]   (s) name = jaxb-clinrpt-template
[DEBUG]   (s) directives = {singleton=true}
[DEBUG]   (s) values = [com.cerner.engineering.maven.osgi.Value@1cb048e]
[DEBUG]   (s) name = Eclipse-LazyStart
[DEBUG]   (s) name = true
[DEBUG]   (s) values = [com.cerner.engineering.maven.osgi.Value@1983ad7]
[DEBUG]   (s) name = Eclipse-BuddyPolicy
[DEBUG]   (s) name = registered
[DEBUG]   (s) values = [com.cerner.engineering.maven.osgi.Value@13f348b]
[DEBUG]   (s) name = Require-Bundle
[DEBUG]   (s) append = true
[DEBUG]   (s) name = com.cerner.client.wrapper.osgi.jaxb
[DEBUG]   (s) name = com.cerner.client.wrapper.osgi.msvc
[DEBUG]   (s) values = [com.cerner.engineering.maven.osgi.Value@92997e, com.cerner.engineering.maven.osgi.Value@9b601d]
[DEBUG]   (s) name = Eclipse-RegisterBuddy
[DEBUG]   (s) name = com.cerner.client.wrapper.osgi.jaxb
[DEBUG]   (s) directives = {singleton=true}
[DEBUG]   (s) values = [com.cerner.engineering.maven.osgi.Value@c3362f]

Note the second, duplicate occurance of <directives> at the end, associated with the wrong header. Where on earth did that come from? It wasn't in the configuration. Even more mysteriously, if you rearrange the order and put the offending <header> at the end of the list, the problem vanishes.

I'm not quite sure what's going on here, but it's causing some of our custom goals to produce invalid output (GIGO).","Maven version: 2.1.0-M1
Java version: 1.5.0_16
Default locale: en_US, platform encoding: Cp1252
OS name: ""windows vista"" version: ""6.0"" arch: ""x86"" family: ""windows""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28rfb:",9223372036854775807,,,,,,,,,,,,,,,,,,,"12/Nov/08 13:24;mbeerman;Other variations on the theme: 

* Only the /first/ <directive> gets duplicated; any additional ones behave as they should. 
* The issue arises for the <header> in any position other than the end of the configuration.
* The issue /might/ be specific to Maps, since we have other plugins that use Lists and we've never noticed anything like this.;;;","17/Dec/08 18:51;brettporter;is this a regression in 2.1.0-M1, or was it also the case in 2.0.9?;;;","18/Dec/08 09:00;mbeerman;It was also the case in 2.0.9.;;;","06/Apr/10 19:53;brettporter;this seems to be particular to your mojo, since you are using setters for the injection. When using the field-injection I can't reproduce the problem. Please post a mojo that reproduces it if it's still an issue.;;;","07/Apr/10 09:24;mbeerman;Brett, can you clarify a little? I hadn't realized that the nested objects don't need to have getters and setters... plain old field injection didn't seem to work when I first tried it, but that's been ages ago now.;;;","07/Apr/10 17:57;brettporter;In the mojo I added:
{code}
/** @parameter */
private List<Header> headers;
{code}

In that package I added the classes:
{code}
public class Header
{
  String name;
  List<Value> values;
  boolean append;
}
{code}
and
{code}
public class Value
{
  String name;
  Map<String,String> directives;
}
{code}

Using the plugin configuration above, and some toString() methods, I could see they were populated correctly.

I'm uncertain how exactly you had configured the mojo and what setters were available. If you can reproduce this with a small mojo that'd be helpful.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Property inheritance when filtering with multiple profiles is gone ,MNG-3817,12795266,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,,mdmd,mdmd,04/Nov/08 05:53,13/Nov/08 10:38,03/Jan/22 13:13,13/Nov/08 06:58,2.0.9,,,,,2.0.9,,,Profiles,,,,,0,,,,"pom.xml:
<build>
       <filters>                    
             <filter>default.properties</filter>
         </filters>
</build>
<profiles>	
	<profile>
            <id>first</id>
            <build>
                <filters>                    
                    <filter>first.properties</filter>
                </filters>
            </build>
        </profile>
	 <profile>
            <id>second</id>
            <build>
                <filters>                    
                    <filter>second.properties</filter>
                </filters>
            </build>
...
default.properties:
prop=

first.properties:
prop=first_value

second.properties:
other_prop=${prop}

since 2.0.9 the value of 

    other_prop 

is not replaced and is written as ${prop}, instead of inherit the value 'first_value', when executing

   mvn -Pfirst,second process-resources

This breaks existing configurations badly and I do not see a workaround whithout losing the ability to configure in more than one dimension, which makes mvn 2.0.9 quite unsuable for project requirements in real life.



	",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Nov/08 06:32;mdmd;MNG-3817.zip;https://issues.apache.org/jira/secure/attachment/12712801/MNG-3817.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28omf:",9223372036854775807,,,,,,,,,,,,,,,,,,,"04/Nov/08 06:32;mdmd;unzip and compare target/classes/test.properties when executing

<yourpath-to>/apache-maven-2.0.8/bin/mvn -Pfirst,second clean process-resources

and

<yourpath-to>/apache-maven-2.0.9/bin/mvn -Pfirst,second clean process-resources;;;","05/Nov/08 14:55;mdmd;The problem exists only if empty values are inherited, which can be quite always eliminated by avoiding to rely on empty values.;;;","06/Nov/08 07:04;mdmd;Doh, forgot to test it with 2.0.9 and with non empty values, and . . . of course it IS a major bug in 2.0.9.;;;","13/Nov/08 06:58;mdmd;The findings:

mvn 2.0.9 uses per default 

maven-resources-plugin-2.2
maven-war-plugin-2.1-alpha-1

while

mvn 2.0.8 uses per default 

maven-resources-plugin-2.3
maven-war-plugin-2.1-alpha-2

this is pretty weird, since the newer version uses the older plugins.

To get the behaviour of mvn 2.0.8. into 2.0.9 one has to provide explicit versions for both plugins in

a parent pom's pluginmangement section like 

...
<build>	
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.3</version>
				</plugin>
				<plugin>
                                       <groupId>org.apache.maven.plugins</groupId>
                                       <artifactId>maven-war-plugin</artifactId>
                                      <version>2.1-alpha-2</version>
                                </plugin>
			</plugins>
		</pluginManagement>
	...


or directly at the plugin definition.




;;;","13/Nov/08 10:38;bentmann;Clarification:
Maven versions before 2.0.9 do *not* provide default versions for the plugins, this is a new feature introduced in Maven 2.0.9 (MNG-3395). Previously, you just got LATEST for any plugin whose version was not explicitly specified. LATEST being quite subject to time and other environmental aspects, this is a suboptimal choice for anybody seeking reproducible builds.

Moral:
Always specify the desired version for each and every plugin your build uses.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[regression] Excluding relocated transitive dependencies does not work,MNG-3769,12795210,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jvanzyl,dirk@xanthippe.ping.de,dirk@xanthippe.ping.de,26/Sep/08 06:21,07/Apr/15 12:24,03/Jan/22 13:13,21/Jan/09 21:37,2.1.0-M1,,,,,2.0.10,2.1.0,,Dependencies,,,,,5,,,,"I'm trying to exclude transitive dependencies of a dependency. This works fine with 2.0.9, however it does not work with 2.1.0-M1.

Run {{mvn dependency:tree}} on the attached pom.xml with 2.0.9 and note how there is no javax.activation in the tree. Re-run with 2.1.0-M1 and note how javax.activation shows up in the dependencies tree.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Oct/08 14:02;lukewpatterson;MNG-3769-debugging-info-2.zip;https://issues.apache.org/jira/secure/attachment/12712313/MNG-3769-debugging-info-2.zip","03/Oct/08 13:29;lukewpatterson;MNG-3769-debugging-info.zip;https://issues.apache.org/jira/secure/attachment/12712790/MNG-3769-debugging-info.zip","23/Dec/08 05:59;bentmann;mng-3769.txt;https://issues.apache.org/jira/secure/attachment/12712856/mng-3769.txt","26/Sep/08 06:21;pom.xml;https://issues.apache.org/jira/secure/attachment/12712309/pom.xml",,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i293z3:",9223372036854775807,,,,,,,,,,,,,,,,,,,"03/Oct/08 13:29;lukewpatterson;With the pom.xml from attachment 1, I captured some info that might be useful for anyone debugging this.  

See MNG-3769-debugging-info.zip


step 0:

        created empty local repo directory /2.0.9-repo
        created empty local repo directory /2.1.0-M1-repo


step 1: using maven 2.0.9 pointing to /2.0.9-repo, ran org.apache.maven.plugins:maven-dependency-plugin:2.0:tree, goal completed
        console capture is in step1-2.0.9-tree.txt
        content listing of /2.0.9-repo is in step1-2.0.9-repo-contents.txt

step 2: using maven 2.1.0-M1 pointing to /2.1.0-M1-repo, ran org.apache.maven.plugins:maven-dependency-plugin:2.0:tree, goal completed
        console capture is in step2-2.1.0-M1-tree.txt
        content listing of /2.1.0-M1-repo is in step2-2.1.0-M1-repo-contents.txt

step 3: using maven 2.1.0-M1 pointing to /2.0.9-repo, ran org.apache.maven.plugins:maven-dependency-plugin:2.0:tree, goal failed
        console capture is in step3-2.1.0-M1-tree.txt
        content listing of /2.0.9-repo is in step3-2.0.9-repo-contents.txt
;;;","03/Oct/08 14:02;lukewpatterson;Oops, last attachment didn't have debugging turned on during dependency:tree.  This attachment does.;;;","22/Dec/08 06:05;brettporter;this may be due to http://jira.codehaus.org/browse/MNG-3380

It occurs because of the relocation. saaj-api actually depends on activation:activation which will properly be excluded.;;;","22/Dec/08 06:51;brettporter;added integration test to the suite for verification;;;","22/Dec/08 07:09;brettporter;confirmed that reverting MNG-3380 fixes this (r675087, r675353). Will continue investigation later.;;;","23/Dec/08 05:59;bentmann;There is apparently some non-determinism in this resolution game. First, the IT added by Brett fails for me even with Maven 2.0.9. Second, I never observe {{javax.activation}} for the POM attached by Dirk with any combination of Maven 2.0.9/2.1.0-M1 and Java 1.4/1.6. See my attached logs.;;;","23/Dec/08 06:36;bentmann;OK, I have traced down my inability to reproduce the reported issue to inconsistent POMs in my local repo. It appears the two Maven versions have different preferences with regard to the remote repo being consulted:
a) central: http://repo1.maven.org/maven2/javax/xml/soap/saaj-api/1.3/saaj-api-1.3.pom
b) java.net: http://download.java.net/maven/1/javax.xml.soap/poms/saaj-api-1.3.pom
Note the different dependency sections in these POMs. It requires the POM from central to reproduce the issue.;;;","21/Jan/09 21:37;jdcasey;fixed in r736543. I'm merging into 2.1.x branch now. Not sure whether this still applies in 3.0.x, though.

Jason, can you comment?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
settings builder doesn't use strict mode in xml parser,MNG-3748,12795185,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,jdcasey,jdcasey,jdcasey,09/Sep/08 16:14,11/Oct/09 17:06,03/Jan/22 13:13,09/Sep/08 18:39,2.1.0-M1,,,,,2.1.0-M1,,,Settings,,,,,0,,,,"if I leave the repositories/pluginRepositories declarations outside of a profile in the settings.xml file, the latest maven 2.1.0-M1 RC (RC16) *does not* throw an error.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-4390,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i294un:",9223372036854775807,,,,,,,,,,,,,,,,,,,"09/Sep/08 18:39;jdcasey;fixed this by rolling back to alpha-13 of the modello plugin. In the longer run, modello will need to be fixed and re-released.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
POM properties do not override default system properties during POM interpolation,MNG-3746,12795188,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,jdcasey,jdcasey,08/Sep/08 13:01,08/Sep/08 17:38,03/Jan/22 13:13,08/Sep/08 17:38,2.1.0-M1,,,,,2.1.0-M1,,,Inheritance and Interpolation,,,,,0,,,,"From Paul Benedict, on the maven dev list:

{noformat}
My issue might be related to MNG-3535.

I defined this property:
<java.version>1.6</java.version>

And used it in my compiler plugin:
<plugin>
  <groupId>org.apache.maven.plugins</groupId>
  <artifactId>maven-compiler-plugin</artifactId>
  <configuration>
    <source>${java.version}</source>
    <target>${java.version}</target>
  </configuration>
</plugin>

I know this use to work before 2.0.10, but now it does not.
[INFO] Compilation failure
Failure executing javac, but could not parse the error:
javac: invalid target release: 1.6.0_06
Usage: javac <options> <source files>
use -help for a list of possible options

The error here is that ${java.version} is not the value I specified,
but one that already exists.

Paul
{noformat}

I've replicated the problem in a separate test mock-up project.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-3535,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28xsf:",9223372036854775807,,,,,,,,,,,,,,,,,,,"08/Sep/08 16:55;paul4christ79;I am not quite sure what the correct solution is. Obviously, properties like java.version are really important, and if they can be overridden, that might lead to some unpredictable expectations.

I'd rather Maven err if such properties like java.* exist. However, if it is pre-existing behavior, maybe it's worth continuing.... but I must admit I feel that my code was inappropriate to use that property namespace.;;;","08/Sep/08 17:11;jdcasey;The two issues are similar, and I've improved the integration tests for MNG-3535 to include a failure case (to make it clearer what should succeed and what should fail among these two features).;;;","08/Sep/08 17:15;jdcasey;Need to verify that -Djava.version=1.4 will override <java.version> in POM.;;;","08/Sep/08 17:38;jdcasey;fixed CLI overrides of POM properties, and added another integration test for this case.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
pluginManagement not consulted when building from lifecycle forked via javdoc reports,MNG-3743,12795187,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,jdcasey,jdcasey,04/Sep/08 15:10,08/Sep/08 12:12,03/Jan/22 13:13,08/Sep/08 12:12,2.1.0-M1,,,,,2.1.0-M1,,,Plugins and Lifecycle,,,,,0,,,,"if you use java5 generics or java 1.4 assertions, and you have the compiler plugin configured with source and target parameters inside a plugin entry in the pluginManagement section of the POM, this configuration is not used when building from a forked lifecycle spawned from a report. The classic example here is the javadoc reports, which trigger the compilation of sources (for some reason).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28rfj:",9223372036854775807,,,,,,,,,,,,,,,,,,,"04/Sep/08 15:39;jdcasey;ok, the reason this is triggering compilation is because javadoc:test-aggregate forks to generate-test-sources, which is later than the compile lifecycle phase.;;;","08/Sep/08 12:12;jdcasey;executionProject was not being used to verify plugins in a forked lifecycle. This meant that when pluginManagement information was injected, it was added to a project instance that wasn't actually being used to execute the plugin, and the plugin never saw the injected configuration parameters.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Plugin builds that reference earlier versions of themselves in the <plugins> section of the POM result in StackOverflowError in 2.1.0-M1-RC12,MNG-3740,12796715,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,jdcasey,jdcasey,03/Sep/08 14:14,03/Sep/08 16:51,03/Jan/22 13:13,03/Sep/08 16:51,2.1.0-M1,,,,,2.1.0-M1,,,Plugins and Lifecycle,,,,,0,,,,"The following seems to result from a project-reference cycle between a plugin project and itself. For instance, when the compiler plugin build configures an earlier version of the compiler plugin, a project reference is established between the compiler plugin and itself in the reactor. This results in a StackOverflowError when trying to calculate the concrete state for the compiler plugin project, since it's trying to traverse project references (to itself).

{noformat}
[INFO] Scanning for projects...
[INFO] Reactor build order:
[INFO]   Maven Plugins
[INFO]   Maven Remote Resources Plugin
[INFO]   Maven Ant Plugin
[INFO]   Maven AntRun Plugin
[INFO]   Maven Assembly Plugin
[INFO]   Maven Changelog Plugin
[INFO]   Maven Changes Report Plugin
[INFO]   Maven Checkstyle Plugin
[INFO]   Maven Clean Plugin
[INFO]   Maven Compiler Plugin
[INFO]   Maven Dependency Plugin
[INFO]   Maven Deploy Plugin
[INFO]   Maven DOAP Plugin
[INFO]   Maven Documentation Checker Plugin
[INFO]   Maven EAR Plugin
[INFO]   Maven Eclipse Plugin
[INFO]   Maven EJB Plugin
[INFO]   Maven GPG Plugin
[INFO]   Maven Help Plugin
[INFO]   Maven IDEA Plugin
[INFO]   Maven Install Plugin
[INFO]   Maven Invoker Plugin
[INFO]   Maven Javadoc Plugin
[INFO]   Maven JAR Plugin
[INFO]   Maven Linkcheck Plugin
[INFO]   Maven One Plugin
[INFO]   Maven Patch Plugin
[INFO]   Maven PMD Plugin
[INFO]   Maven RAR Plugin
[INFO]   Maven Repository Plugin
[INFO]   Maven Resources Plugin
[INFO]   Maven Shade Plugin
[INFO]   Maven Site Plugin
[INFO]   Maven Source Plugin
[INFO]   Maven Stage Plugin
[INFO]   Maven Toolchains Plugin
[INFO]   Maven Verifier Plugin
[INFO]   Maven WAR Plugin
[INFO]
------------------------------------------------------------------------
[INFO] Building Maven Plugins
[INFO]    task-segment: [clean, install]
[INFO]
------------------------------------------------------------------------
[INFO] snapshot org.apache.maven.plugins:maven-enforcer-plugin:1.0-SNAPSHOT:
checking for updates from snapshots
[INFO] snapshot org.apache.maven.plugins:maven-enforcer-plugin:1.0-SNAPSHOT:
checking for updates from snapshots
[INFO] snapshot org.apache.maven.plugins:maven-enforcer-plugin:1.0-SNAPSHOT:
checking for updates from apache.snapshots
[INFO] snapshot org.apache.maven.enforcer:enforcer:1-SNAPSHOT: checking for
updates from snapshots
[INFO] snapshot org.apache.maven.enforcer:enforcer:1-SNAPSHOT: checking for
updates from snapshots
[INFO] snapshot org.apache.maven.enforcer:enforcer:1-SNAPSHOT: checking for
updates from apache.snapshots
[INFO]
------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO]
------------------------------------------------------------------------
[INFO] null
[INFO]
------------------------------------------------------------------------
[INFO] Trace
java.lang.StackOverflowError
        at
org.apache.maven.project.DefaultMavenProjectBuilder.projectWasChanged(DefaultMavenProjectBuilder.java:2033)
        at
org.apache.maven.project.DefaultMavenProjectBuilder.restoreDynamicStateInternal(DefaultMavenProjectBuilder.java:2006)
        at
org.apache.maven.project.DefaultMavenProjectBuilder.restoreDynamicState(DefaultMavenProjectBuilder.java:1994)
        at
org.apache.maven.project.DefaultMavenProjectBuilder.calculateConcreteStateInternal(DefaultMavenProjectBuilder.java:1836)
        at
org.apache.maven.project.DefaultMavenProjectBuilder.calculateConcreteStateInternal(DefaultMavenProjectBuilder.java:1842)
        at
org.apache.maven.project.DefaultMavenProjectBuilder.calculateConcreteProjectReferences(DefaultMavenProjectBuilder.java:1949)
        at
org.apache.maven.project.DefaultMavenProjectBuilder.calculateConcreteStateInternal(DefaultMavenProjectBuilder.java:1918)
...
        at
org.apache.maven.project.DefaultMavenProjectBuilder.calculateConcreteStateInternal(DefaultMavenProjectBuilder.java:1842)
        at
org.apache.maven.project.DefaultMavenProjectBuilder.calculateConcreteProjectReferences(DefaultMavenProjectBuilder.java:1949)
        at
org.apache.maven.project.DefaultMavenProjectBuilder.calculateConcreteStateInternal(DefaultMavenProjectBuilder.java:1918)
[INFO]
------------------------------------------------------------------------
[INFO] Total time: 22 seconds
[INFO] Finished at: Tue Sep 02 13:53:56 CEST 2008
[INFO] Final Memory: 6M/254M
[INFO]
------------------------------------------------------------------------
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i291in:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong repository used in artifact resolution for a transitive dependency that is also declared as a managed artifact with a different version,MNG-3737,12796698,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Incomplete,,duribe,duribe,29/Aug/08 18:53,02/Jul/14 08:44,03/Jan/22 13:13,22/Jan/14 20:31,2.0.8,2.0.9,,,,,,,Artifacts and Repositories,,,,,1,,,,"I am creating a 2.1-SNAPSHOT version of artifact A, which is the only version of artifact A stored in our Local Repository. All other release versions (old and new) of artifact A are stored in the Maven Central Repository. 

My project is multi-module. The parent POM declares that version 2.1-SNAPSHOT of artifact A should be used. A child module has a dependency to artifact B, which in turn depends on version 1.0 of artifact A. Version 1.0 of artifact A is stored in the Central repository.

I have been debugging the code, and it seems that the problem is the DefaultArtifactCollector. 
- Initially, it finds that B depends on A version 1.0 and using the repository metadata, it determines that it can be found in the Central repository, hence the DefaultArtifact object has its repository property set with the Central repository. 
- Later on in the process, still inside DefaultArtifactCollector, it finds that the dependency is managed (because the parent POM defines the version to use) and calls the manageArtifact() method. The problem is that this call only sets the scope and version, it doesn't clear the repository property from the DefaultArtifact object. I am almost sure this is what causes Maven to then try to download version 2.1-SNAPSHOT artifact from Central repository, instead of getting it from the Local repository.

This may be related to MNG-2438, but in my case none of the repositories are legacy.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28sov:",9223372036854775807,,,,,,,,,,,,,,,,,,,"22/Jan/14 20:23;jvanzyl;Please refer to https://cwiki.apache.org/confluence/display/MAVEN/The+Great+JIRA+Cleanup+of+2014;;;","22/Jan/14 20:31;jvanzyl;Please refer to https://cwiki.apache.org/confluence/display/MAVEN/The+Great+JIRA+Cleanup+of+2014 if you're wondering why this issue was closed out.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
maven searches in wrong repos while resolving artifacts and their matadata and there by wastes lots of cycles,MNG-3727,12796700,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Duplicate,brettporter,hg2008,hg2008,24/Aug/08 17:56,17/Dec/08 18:48,03/Jan/22 13:13,17/Dec/08 18:48,2.0.9,,,,,,,,Artifacts and Repositories,,,,,0,,,,"In brief,  the way maven resolves artifacts by searching  across all the repos given in the parent pom seems like a 
very expensive operation.   For example, if a product (an assembly of various projects) uses  5-6 repos,  maven walks through each  repository  until it finds the needed metadata or the artifact itself.  This appears to be very expensive (to network resources and the time it spends in resolving an artifact)  operation.  

It is also interesting to note that, even if the repository  policy is set to never for SNAPSHOTS,  maven checks for updates  of that particular artifact  snapshot.  For the very first time while resolving the artifact this approach make sense.  But, not every time we resolve artifacts whose corresponding repos are already have update policy set to never.  Something fishy going on in the  maven-artifact-manager /src/main/java/org/apache/maven/artifact/repository/metadata/DefaultRepositoryMetadataManager.java",Any platform where JDK is supported :-),,,,,,,,,,,,,,,,,,,,,,,MNG-2608,MNG-1549,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i290db:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ExecutionProject not getting updated compile/test-compile/script roots in RC10,MNG-3724,12795138,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,jdcasey,jdcasey,22/Aug/08 23:05,03/Sep/08 16:57,03/Jan/22 13:13,25/Aug/08 12:17,2.0.10,,,,,2.1.0-M1,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28rin:",9223372036854775807,,,,,,,,,,,,,,,,,,,"22/Aug/08 23:05;jdcasey;fixed in SVN, just needs an integration test.;;;","25/Aug/08 09:53;paul4christ79;Is this issue missing a Fix Version of 2.0.10?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
${project.basedir} is not interpolated,MNG-3723,12795172,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,jdcasey,pbenedict,paul4christ79,21/Aug/08 06:55,07/Apr/15 19:22,03/Jan/22 13:13,22/Aug/08 18:05,2.0.10,,,,,2.0.10,2.1.0-M1,,Inheritance and Interpolation,,,,,3,,,,"Here is what I did. I do not know if all the steps are necessary to reproduce the bug, but the bug is reproducible:

1. Check out a multi-level project
2. Install the parent with -N
3. Go into one of the children projects and then run eclipse:eclipse
4. You will see a folder named ${project.basedir} when execution is finished.

Works fine in 2.0.9 and fails with 2.0.10. This is definitely a regression.","Maven 2.0.10-RC8, JDK 1.6.0._06, maven-eclipse-plugin 2.4",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28n0f:",9223372036854775807,,,,,,,,,,,,,,,,,,,"21/Aug/08 09:13;pnyheim;I get this on 2.0.10-RC9 as well.;;;","22/Aug/08 09:17;jdcasey;fixed in RC10;;;","22/Aug/08 13:41;jdcasey;it's still appearing intermittently.;;;","22/Aug/08 16:15;jdcasey;fixed, just needs an integration test.;;;","03/Sep/08 16:59;jdcasey;Adding fix-for for both 2.0.10 and 2.1.0-M1, since 2.1.0-M1 will actually be released first and may not incorporate all of the eventual issue fixes released in 2.0.10.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Qualified and unqualified actifact does not resolve dependencies identically,MNG-3721,12795170,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Cannot Reproduce,,fabdouglas,fabdouglas,18/Aug/08 13:06,29/Dec/09 19:07,03/Jan/22 13:13,29/Dec/09 19:07,2.0.9,,,,,,,,Bootstrap & Build,,,,,1,,,,">mvn org.codehaus.mojo:dashboard-maven-plugin:1.0.0-beta-1:dashboard
and
>mvn dashboard:dashboard

executions does not output same things :
First output :
Invalid class loader hierarchy.  You have more than one version of 'org.apache.commons.logging.Log' visible, which is not allowed.

Second output :
No error

This is not a plugin dependant issue, but a maven one.The dependencies are not resolved the same way.

Qualified as blocker since we are using two different dashbord plugins :
""org.codehaus.mojo:dashboard-maven-plugin"" and ""com.xebia.mojo:maven-dashboard-plugin""

So we need the qualified name to differenciate them, and also fails our site generation.
As attachment the two outputs in debug mode for offline and not offline versions and the pom to reproduce the error.
You'll see the ""commons-logging:commons-logging:jar:1.1:compile"" line in the ""[DEBUG] Plugin dependencies for:"" section, present in the unqualified output, but not in qualified output for offline/online version.

","2.0.9, JDK 1.6_07, Windows XPSP3",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Aug/08 13:06;fabdouglas;output-qualified-offline.txt;https://issues.apache.org/jira/secure/attachment/12712304/output-qualified-offline.txt","18/Aug/08 13:06;fabdouglas;output-qualified.txt;https://issues.apache.org/jira/secure/attachment/12712253/output-qualified.txt","18/Aug/08 13:07;fabdouglas;output-unqualified-offline.txt;https://issues.apache.org/jira/secure/attachment/12712305/output-unqualified-offline.txt","18/Aug/08 13:06;fabdouglas;output-unqualified.txt;https://issues.apache.org/jira/secure/attachment/12712779/output-unqualified.txt","18/Aug/08 13:07;fabdouglas;pom.xml;https://issues.apache.org/jira/secure/attachment/12712252/pom.xml",,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28p7b:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"18/Aug/08 13:09;fabdouglas;The way to reproduce this error is simple, even with an empty repository executing the these command with the given pom :
mvn org.codehaus.mojo:dashboard-maven-plugin:1.0.0-beta-1:dashboard
mvn dashboard:dashboard ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[regression] plugin execution ordering no longer POM ordered in 2.0.9,MNG-3719,12796600,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,jdcasey,gswduke,gswduke,15/Aug/08 13:03,29/Jun/16 00:04,03/Jan/22 13:13,10/Jun/09 11:06,2.0.10,2.0.9,2.1.0-M1,,,2.0.11,2.1.0,,POM,,,,,7,,,,"I extend my sincere apologies if there is a much easier way of doing this, but so far I haven't found any.

There should be some way to ensure order of plugin executions through dependencies on other executions. See attached project for example, or see below for the applicable example in a pom.xml. When plugins are defined in pom.xml in the following manner to ensure correct execution order, they are not executed sequentially and there is no way to indicate dependencies, as would be expected (note- I'm not expecting that it interpret the ""step 1..."", ..., ""step 5..."" IDs, I'm only suggesting that either the plugins be executed in order that they are found in the XML (most intuitive) or that there be some concept of priority/ordinal added, or even perhaps (this would be most ""ant-like"") that plugin executions (and maybe even plugin goal executions) be allowed to define prequisite execution IDs to be run (even if they are IDs not defined in the pom, but maybe a parent pom, even though I don't need that right now).

I know that this could be problematic if a plugin execution from one lifecycle phase depends on another from another lifecycle phase (and you could get into circular references that way that would have to be recognized during pom validation after loading/merging pom.xmls). However, not being able to at the very least define order of execution of different (or the same) plugin executions as noted below and in attached project makes it difficult to chain plugin executions that depend on each other, thereby reducing the practicality of the pom.xml and Maven 2.

For example, these plugin executions cannot be ordered properly in Maven 2.0.9, since there appears to be no way to indicate dependencies of one execution on another:
{code}
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.5</source>
                    <target>1.5</target>
                </configuration>
            </plugin>

            <plugin>
                <!-- backup original source web.xml in preparation for chaining of plugin modifications to it -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>step 1 - backup-original-web.xml-from-src</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <mkdir dir=""${pom.basedir}/target""/>
                                <mkdir dir=""${pom.basedir}/target/tmpwebxml""/>
                                <copy file=""${pom.basedir}/src/main/webapp/WEB-INF/web.xml"" todir=""${pom.basedir}/target/tmpwebxml/""/>
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- this plugin converts to ${basedir}/src/main/webapp/WEB-INF/web.xml to ${basedir}/target/jspweb.xml -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jspc-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>step 2 - jspc</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <injectString>&lt;!-- [INSERT JSPC FRAGMENT HERE] --&gt;</injectString>
                </configuration>
                <dependencies>
                    <!-- These dependencies are the portlet.tld is needed for JSP compilation -->
                    <dependency>
                        <groupId>org.apache.pluto</groupId>
                        <artifactId>pluto-taglib</artifactId>
                        <version>1.1.3</version>
                        <type>jar</type>
                    </dependency>
                    <dependency>
                        <groupId>javax.portlet</groupId>
                        <artifactId>portlet-api</artifactId>
                        <version>1.0</version>
                        <type>jar</type>
                    </dependency>
                    <dependency>
                        <groupId>javax.servlet</groupId>
                        <artifactId>jstl</artifactId>
                        <version>1.1.2</version>
                        <type>jar</type>
                    </dependency>
                    <dependency>
                        <groupId>taglibs</groupId>
                        <artifactId>standard</artifactId>
                        <version>1.1.2</version>
                        <type>jar</type>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <!-- copy modified web.xml file into source so it can be worked on by the another plugin. do this before each chained change to web.xml -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>step 3 - copy-jspc-web.xml-atop-web.xml-in-src</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <copy file=""${pom.basedir}/target/jspweb.xml"" todir=""${pom.basedir}/src/main/webapp/WEB-INF/""/>
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- bind 'pluto:assemble' goal to 'generate-resources' lifecycle -->
            <plugin>
                <!-- this plugin converts to ${basedir}/src/main/webapp/WEB-INF/web.xml to ${basedir}/target/pluto-resources/web.xml -->
                <groupId>org.apache.pluto</groupId>
                <artifactId>maven-pluto-plugin</artifactId>
                <version>${pluto.version}</version>
                <executions>
                    <execution>
                        <id>step 4 - pluto-modifications-to-web.xml</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>assemble</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <warName>NewsReaderPortlet</warName>
                    <!--<webXml>${basedir}/src/main/webapp/WEB-INF/web.xml</webXml>-->
                    <!--<webXml>${basedir}/target/jspweb.xml</webXml>-->
                    <webXml>${basedir}/target/pluto-resources/web.xml</webXml>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.pluto</groupId>
                        <artifactId>pluto-util</artifactId>
                        <version>${pluto.version}</version>
                        <scope>provided</scope>
                    </dependency>
                </dependencies>
            </plugin>

            
            <plugin>
                <!-- restore original web.xml file back into source after ""chained"" plugin modifications are complete -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>step 5 - restore-web.xml-to-src</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <copy file=""${pom.basedir}/target/tmpwebxml/web.xml"" todir=""${pom.basedir}/src/main/webapp/WEB-INF/""/>
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>            
        </plugins>
    </build>
{code}
","Maven 2.0.9, java version ""1.5.0_13"" Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_13-b05-241) Java HotSpot(TM) Client VM (build 1.5.0_13-120, mixed mode, sharing), OS X 10.4",,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-5987,,,,,,,,,MNG-2145,,,,,,MNG-2784,MNG-2258,,,,,,,,,,"31/Jan/09 14:14;MNG-3719-maven-project.patch;https://issues.apache.org/jira/secure/attachment/12712868/MNG-3719-maven-project.patch","15/Aug/08 13:03;gswduke;plugin-execution-order-cant-be-defined-maven-2.0.9.tar.gz;https://issues.apache.org/jira/secure/attachment/12712778/plugin-execution-order-cant-be-defined-maven-2.0.9.tar.gz",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,Patch,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i294u7:",9223372036854775807,,,,,,,,,,,,,,,,,,,"15/Aug/08 13:20;gswduke;Note: the fact that that associated project's pom.xml and plugin executions above are tied to the same lifecycle and yet do not execute in order seems to be a bug with Maven 2, since it states on the lifecycle page in the documentation http://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html that:
""Note: As of Maven 2.0.5, multiple goals bound to a phase are executed in the same order as they are declared in the POM.""

However, it appears that is not working in Maven 2.0.9, because if it were, then the above pom would execute in order as intended.

I think though that having executions be allowed to specify dependencies on other executions is probably the better way to do it, wouldn't it be?;;;","08/Dec/08 03:15;sandrab;Hi,
What about this issue ?
Do you have a release date ?
Thanks in advance ;;;","17/Dec/08 19:17;brettporter;confirmed, the order is correct in 2.0.8, but incorrect in 2.0.9/10;;;","31/Jan/09 14:14;torbengee;This patch should fix the execution ordering; all test cases still run as expected.;;;","04/Feb/09 07:10;torbengee;Since the patch won't make it into 2.0.10, the documentation at http://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html
should be updated in the meantime. To avoid any confusion, it should be mentioned that there's a problem. Or remove the comment altogether or change it to ""As of 2.0.11"".;;;","06/Feb/09 04:41;brettporter;I noted that this is only an issue when there is more than one declaration of a particular plugin.

Since MNG-2145, multiple declarations are grouped together as if there were executions in one plugin. This patch simply sorts those executions correctly.

I think the original poster wanted the old functionality back where plugins could be declared multiple times and run in order - however I'm not prepared to undo that on 2.0.x.

I've applied the patch to resolve the issue.
;;;","06/Feb/09 06:52;torbengee;Exactly, the problem came from from merging multiple plugin declarations into one. I still think the docs should be updated, though.
;;;","07/Feb/09 19:44;brettporter;Yep, I already updated the docs :);;;","10/Jun/09 09:24;brianf@infinity.nu;reportedly still broken in 2.1
;;;","10/Jun/09 09:37;brettporter;more details please - the IT passes. I would prefer we re-close this based on the successful IT and open a new issue if there is a variant use case that fails.;;;","10/Jun/09 11:06;jdcasey;The use case given in the examples on this issue have been resolved as well as can be expected. It's not a good idea to redeclare a plugin simply to get the execution ordering you want within a single lifecycle phase, since this can lead to a lot of confusion about the configuration of that plugin. It's better to cheat the phase binding a little bit on one of the executions to ensure it runs later/earlier than the rest. There is a linked issue here that may still be an outstanding problem. It's closed as a duplicate of this one.

I'll reopen that issue and try to track the problem there.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Aggregators that fork lifecycles don't have execution projects setup for all projects in the reactor.,MNG-3716,12795151,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,jdcasey,jdcasey,14/Aug/08 18:06,03/Sep/08 16:57,03/Jan/22 13:13,14/Aug/08 18:30,2.0.10,,,,,2.1.0-M1,,,Plugins and Lifecycle,,,,,0,,,,"{noformat}
java.lang.NullPointerException
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:431)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:651)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:540)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.forkProjectLifecycle(DefaultLifecycleExecutor.java:1183)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.forkLifecycle(DefaultLifecycleExecutor.java:1021)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:616)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeStandaloneGoal(DefaultLifecycleExecutor.java:553)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:523)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:371)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:268)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:183)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:336)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:129)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:302)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
	at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
{noformat}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i294vb:",9223372036854775807,,,,,,,,,,,,,,,,,,,"14/Aug/08 18:07;jdcasey;This problem happens when maven-javadoc-plugin is built using maven 2.0.10-RC7, and occurs in the MJAVADOC-194 integration test. Try:

{noformat}
mvn -Prun-its -Dmaven.test.skip=true clean verify
{noformat};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove all references to org.apache.maven:maven:2.04 - cvs.apache.org,MNG-3713,12796686,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Won't Fix,brettporter,nbeyer_cerner,nbeyer_cerner,14/Aug/08 12:06,01/Jul/09 12:00,03/Jan/22 13:13,01/Jul/09 12:00,2.0.5,2.0.6,2.0.7,2.0.8,2.0.9,,,,,,,,,2,,,,"I don't know the complete picture, but here is what I do know.

- maven-invoker-plugin + it tests pulls in maven-reporting-impl 2.0.4 during 'test:testCompile'
- maven-reporting-impl 2.0.4 [1] has the parent maven-reporting 2.0.4
- maven-reporting 2.0.4 [2] has the parent maven 2.0.4
- maven 2.0.4 contains a repository with the ID, apache.snapshots, and URL, http://cvs.apache.org/maven-snapshot-repository
- cvs.apache.org no longer exists

The result of this is that every time a build with integration tests is run, there are multiple pauses like cvs.apache.org is looked up and times out. Though this happens consistently, the server is never mentioned for blacklisting.

There are plenty of newer versions of maven-reporting, so it seems reasonable to just find these dependencies and upgrade them.

[1] http://repo1.maven.org/maven2/org/apache/maven/reporting/maven-reporting-impl/2.0.4/maven-reporting-impl-2.0.4.pom
[2] http://repo1.maven.org/maven2/org/apache/maven/reporting/maven-reporting/2.0.4/maven-reporting-2.0.4.pom
[3] http://repo1.maven.org/maven2/org/apache/maven/maven/2.0.4/maven-2.0.4.pom",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28v8f:",9223372036854775807,,,,,,,,,,,,,,,,,,,"14/Aug/08 12:07;nbeyer_cerner;A temporary work around for this is to setup the following mirror.

    <mirror>
      <id>people.apache.snapshots</id>
      <url>http://people.apache.org/repo/m2-snapshot-repository</url>
      <mirrorOf>apache.snapshots</mirrorOf>
    </mirror>;;;","07/Oct/08 09:31;brettporter;the DNS record for cvs.apache.org should now be fixed, but any outstanding uses of it should be repaired.;;;","01/Jul/09 12:00;brettporter;not a Maven issue, and old releases can't be changed. Since the record was fixed, there should be no issue here.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[regression] java.lang.NoClassDefFoundError in maven-jaxb-schemagen-plugin,MNG-3712,12795162,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Duplicate,bentmann,eu,eu,14/Aug/08 11:39,18/Oct/11 16:14,03/Jan/22 13:13,31/Dec/08 11:20,3.0-alpha-1,,,,,,,,,,,,,3,,,,"When running maven-jaxb-schemagen-plugin with Maven 2.1-SNAPSHOT and latest 3.0-SNAPSHOT from trunk it fails with java.lang.NoClassDefFoundError. See attached test project and debug log from the build.

{noformat}
Exception in thread ""main"" java.lang.NoClassDefFoundError: com/sun/mirror/apt/AnnotationProcessorFactory
	at com.sun.tools.jxc.maven2.SchemaGenMojo.execute(SchemaGenMojo.java:143)
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:638)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:521)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegmentForProject(DefaultLifecycleExecutor.java:288)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:214)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:172)
	at org.apache.maven.DefaultMaven.execute_aroundBody0(DefaultMaven.java:223)
	at org.apache.maven.DefaultMaven.execute_aroundBody1$advice(DefaultMaven.java:303)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:1)
	at org.apache.maven.embedder.MavenEmbedder.execute_aroundBody2(MavenEmbedder.java:904)
	at org.apache.maven.embedder.MavenEmbedder.execute_aroundBody3$advice(MavenEmbedder.java:303)
	at org.apache.maven.embedder.MavenEmbedder.execute(MavenEmbedder.java:1)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:176)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:63)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:408)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:351)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:31)
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,MNG-3586,,,,,,,,,,,,,,,,,,,MNG-5184,MNG-3715,,,,,,,,,,"14/Aug/08 11:39;eu;build.log;https://issues.apache.org/jira/secure/attachment/12712254/build.log","14/Aug/08 11:39;eu;generate-schema.zip;https://issues.apache.org/jira/secure/attachment/12712302/generate-schema.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28lc7:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"14/Aug/08 15:04;podenski;Resolving this bug would help my use case a lot since I need to work extensively with JAXB and this bug prevents me from using Maven 2.1 with m2eclipse.;;;","14/Aug/08 15:50;yann;I also raised an issue regarding this issue: MNG-3715
With this issue I provided a very simple plugin that try to use the class com/sun/mirror/apt/AnnotationProcessorFactory ;;;","13/Sep/08 06:32;yann;I did the test with maven  2.1.0-M1-RC17 and I haven't anymore the issue.
;;;","17/Dec/08 18:29;brettporter;needs verification on latest builds;;;","18/Dec/08 15:51;yann;I just did the test with the last 3.0 SNAPSHOT and I still get the ""java.lang.NoClassDefFoundError: com/sun/mirror/apt/AnnotationProcessorFactory""

I did another test:
In the plugin that uses the AnnotationProcessorFactory class, instead of using the dependency:
{code}
    <dependency>
	  <groupId>com.sun</groupId>
	  <artifactId>tools</artifactId>
	  <version>1.5.12</version>
	  <scope>system</scope>
	  <systemPath>${java.home}/../lib/tools.jar</systemPath>
</dependency>
{code}

I used the same dependency without the system scope :
{code}
    <dependency>
	  <groupId>com.sun</groupId>
	  <artifactId>tools</artifactId>
	  <version>1.5.12</version>
</dependency>
{code}
Of course, I deployed the artefact in my repository which is not a good practice for the tools.jar file...

Then this time it worked
So it seems the problem is linked to the system scope...;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ModelUtils.cloneModel() and .cloneBuild() pollute existing Plugin instances with merged information,MNG-3710,12795109,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,jdcasey,jdcasey,14/Aug/08 10:29,03/Sep/08 16:57,03/Jan/22 13:13,14/Aug/08 14:19,2.0.10,,,,,2.1.0-M1,,,Inheritance and Interpolation,,,,,0,,,,Plugin information that gets merged with handleAsInheritance == false results in pollution of the original Plugin instance by that from the new one. This means pluginManagement specified in a child POM can affect the Plugin instance that's actually declared in the parent POM.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-3700,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28xvb:",9223372036854775807,,,,,,,,,,,,,,,,,,,"14/Aug/08 10:31;jdcasey;The fix for this issue will probably influence the behavior of MNG-3700, since the same pieces of code are active in both.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in DefaultLIfecycleExecutor when run from within Hudson builds,MNG-3704,12795143,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,jdcasey,jdcasey,11/Aug/08 19:49,17/Apr/09 15:49,03/Jan/22 13:13,12/Aug/08 15:21,2.0.10,,,,,2.1.0-M1,,,Plugins and Lifecycle,,,,,0,,,,"{noformat}
[INFO] [clean:clean]
[HUDSON] Archiving /home/j2ee-hudson/.hudson/jobs/CXF/workspace/trunk/pom.xml to /home/j2ee-hudson/.hudson/jobs/CXF/modules/org.apache.cxf$cxf/builds/2008-08-11_16-49-47/archive/org.apache.cxf/cxf/2.1.2-SNAPSHOT/pom.xml
[INFO] ------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ------------------------------------------------------------------------
[INFO] null
[INFO] ------------------------------------------------------------------------
[INFO] Trace
java.lang.NullPointerException
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.restoreDynamicState(DefaultLifecycleExecutor.java:779)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:636)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:533)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:512)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:364)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:325)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:176)
	at org.apache.maven.lifecycle.LifecycleExecutorInterceptor.execute(LifecycleExecutorInterceptor.java:42)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:336)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:129)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:302)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
	at hudson.maven.agent.Main.launch(Main.java:133)
	at hudson.maven.MavenBuilder.call(MavenBuilder.java:135)
	at hudson.maven.MavenModuleSetBuild$Builder.call(MavenModuleSetBuild.java:536)
	at hudson.maven.MavenModuleSetBuild$Builder.call(MavenModuleSetBuild.java:482)
	at hudson.remoting.UserRequest.perform(UserRequest.java:69)
	at hudson.remoting.UserRequest.perform(UserRequest.java:23)
	at hudson.remoting.Request$2.run(Request.java:206)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
	at java.lang.Thread.run(Thread.java:619)
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-4137,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28li7:",9223372036854775807,,,,,,,,,,,,,,,,,,,"22/Oct/08 11:19;david@davidkarlsen.com;This is still the case, even with 2.1.0-M1:

http://davidkarlsen.com/hudson/job/WAS6%20plugin/74/console;;;","27/Feb/09 07:08;eric_t;I confirm, this is still the case.
I'm using 2.1.0-M1 with Hudson-1.285 and Cobertura Maven Plugin 2.2. When the plugin is not used, everything works well, but as soon as the {{<plugin>...</plugin>}} section is activated, I got the NullPointerException, which is slighlty different from the preceding (the method where it occurs was not {{restoreDynamicState}} but {{calculateConcreteConfiguration}}) :\\
\\
{code}
[INFO] Preparing cobertura:cobertura
[WARNING] Removing: jar from forked lifecycle, to prevent recursive invocation.
[WARNING] Removing: cobertura from forked lifecycle, to prevent recursive invocation.
[HUDSON] Archiving (...)\pom.xml to (...)\pom.xml
[HUDSON] Archiving (...)\target\sequoia-security-impl-2.4.0-SNAPSHOT.jar to (...)\sequoia-security-impl-2.4.0-SNAPSHOT.jar
[HUDSON] Archiving (...)\target\sequoia-security-impl-2.4.0-SNAPSHOT-sources.jar to (...)\sequoia-security-impl-2.4.0-SNAPSHOT-sources.jar
[INFO] ------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ------------------------------------------------------------------------
[INFO] null
[INFO] ------------------------------------------------------------------------
[INFO] Trace
java.lang.NullPointerException
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.calculateConcreteConfiguration(DefaultLifecycleExecutor.java:759)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:576)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:538)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.forkProjectLifecycle(DefaultLifecycleExecutor.java:1177)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.forkLifecycle(DefaultLifecycleExecutor.java:1018)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:625)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:538)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:517)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:369)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:330)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:181)
	at org.apache.maven.lifecycle.LifecycleExecutorInterceptor.execute(LifecycleExecutorInterceptor.java:65)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:336)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:129)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:302)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
	at hudson.maven.agent.Main.launch(Main.java:158)
{code};;;","17/Mar/09 12:06;lukewpatterson;I still see the same issue too, whenever I run to site with Clover reports.

Is this related to 
https://hudson.dev.java.net/issues/show_bug.cgi?id=2373 
?

I'm using Maven 2.1.0-M1 / Hudson 1.291 / Clover 2.4.3;;;","17/Apr/09 15:45;jonathan johnson;I'm still getting it.  See http://jira.codehaus.org/browse/MNG-4137;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ExecutionProject contains relative paths in compileSourceRoots,MNG-3703,12795131,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,jdcasey,jdcasey,11/Aug/08 19:47,10/Nov/08 14:06,03/Jan/22 13:13,12/Aug/08 17:36,2.0.10,,,,,2.1.0-M1,,,Inheritance and Interpolation,Plugins and Lifecycle,POM,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-3829,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28msn:",9223372036854775807,,,,,,,,,,,,,,,,,,,"11/Aug/08 22:23;jdcasey;added logic to calculate the concrete state on an executed project after a forked lifecycle completes, so real values are available to the bridging mojo that triggered the fork.;;;","12/Aug/08 16:03;jdcasey;This is still happening for reports that execute a forked lifecycle. The executedProject contains non-concrete values.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassCastException when building settings.xml with profiles that have activeByDefault set,MNG-3701,12796684,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,jdcasey,jdcasey,07/Aug/08 17:50,19/Feb/09 16:41,03/Jan/22 13:13,08/Aug/08 17:43,2.0.10,,,,,2.0.11,2.1.0-M1,,Settings,,,,,0,,,,"from Paul Benedict:

{noformat}
I tried RC5 and got this weird error.

> >c:\dev\apache-maven-2.0.10-RC5\bin\mvn.bat site:deploy
---------------------------------------------------
constituent[0]:
file:/c:/Dev/apache-maven-2.0.10-RC5/bin/../lib/maven-2.0.10-RC5-uber.jar
---------------------------------------------------
java.lang.ClassCastException: Settings.addActiveProfiles(string)
parameter must be instanceof java.lang.String
        at org.apache.maven.settings.Settings.addActiveProfile(Settings.java:112)
        at org.apache.maven.settings.DefaultMavenSettingsBuilder.activateDefaultProfiles(DefaultMavenSettingsBuilder.jav
a:198)
        at org.apache.maven.settings.DefaultMavenSettingsBuilder.buildSettings(DefaultMavenSettingsBuilder.java:178)
        at org.apache.maven.settings.DefaultMavenSettingsBuilder.buildSettings(DefaultMavenSettingsBuilder.java:154)
        at org.apache.maven.settings.DefaultMavenSettingsBuilder.buildSettings(DefaultMavenSettingsBuilder.java:142)
        at org.apache.maven.cli.MavenCli.buildSettings(MavenCli.java:345)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:201)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
{noformat}

Then, in a later message:

{noformat}
When I reinstalled 2.0.10-RC5, it ran fine. Then I realized my
reinstall didn't include my custom settings.xml, but once I put that
back into /conf, everything went bonkers again. So that's where the
problem is.

You can reproduce the problem by doing the following:
- Edit the original settings.xml that comes with Maven
- Within <profiles>, add this:

<profile>
  <activation>
    <activeByDefault>true</activeByDefault>
  </activation>
</profile>

The exception from my previous email should then be given:
java.lang.ClassCastException: Settings.addActiveProfiles(string)
parameter must be instanceof java.lang.String
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28ntz:",9223372036854775807,,,,,,,,,,,,,,,,,,,"08/Aug/08 17:43;jdcasey;fixed by assigning profile-id of 'default' when none is specified in a settings-sourced profile.;;;","03/Sep/08 16:59;jdcasey;Adding fix-for for both 2.0.10 and 2.1.0-M1, since 2.1.0-M1 will actually be released first and may not incorporate all of the eventual issue fixes released in 2.0.10.;;;","19/Feb/09 15:29;spdenne;I just installed 2.0.10 release version, and my first use had the same symptoms as this issue. I can work around it by adding an id element (with any value) to the single profile I had defined.;;;","19/Feb/09 16:41;bentmann;Fixed for 2.0.x in [r746038|http://svn.eu.apache.org/viewvc?view=rev&revision=746038].;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE at DefaultPluginManager line 700 (from Hudson CI),MNG-3697,12795047,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,jdcasey,jdcasey,06/Aug/08 10:41,03/Sep/08 16:57,03/Jan/22 13:13,08/Aug/08 17:41,2.0.10,,,,,2.1.0-M1,,,Plugins and Lifecycle,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Aug/08 10:46;bentmann;npe.log;https://issues.apache.org/jira/secure/attachment/12712251/npe.log",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28pcn:",9223372036854775807,,,,,,,,,,,,,,,,,,,"06/Aug/08 10:46;bentmann;The stack trace, just in case https://ci.sonatype.org/job/Maven-Plugins-CI/org.apache.maven.plugins$maven-plugins/22/console vanishes.;;;","08/Aug/08 17:41;jdcasey;added code to DefaultLifecycleExecutor (where the code from DefaultPluginManager migrated) to guard against this using the standalone super-POM in cases where the project instance is null.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
maven 2 fails to compile some projects (doesn't include any dependencies in classpath),MNG-3672,12795156,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,,ultranet,ultranet,21/Jul/08 12:01,21/Jul/08 12:37,03/Jan/22 13:13,21/Jul/08 12:37,2.0.9,3.0,,,,,,,Dependencies,,,,,0,,,,"Try to compile the trivial project attached (w/ possibly non-trivial dependencies).

Note: you may have to manually install some of the dependencies; pdf-box is probably the only one like that. But you removing it from pom doesn't appear to resolve the issue either, so you can probably just remove it.",Microsoft Windows XP [Version 5.1.2600],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Jul/08 12:30;ultranet;maven-2-bug-cleaner-with-pdfbox.zip;https://issues.apache.org/jira/secure/attachment/12712248/maven-2-bug-cleaner-with-pdfbox.zip","21/Jul/08 12:22;ultranet;maven-2-bug-cleaner.zip;https://issues.apache.org/jira/secure/attachment/12712246/maven-2-bug-cleaner.zip","21/Jul/08 12:01;ultranet;maven-2-bug.zip;https://issues.apache.org/jira/secure/attachment/12712244/maven-2-bug.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i297xb:",9223372036854775807,,,,,,,,,,,,,,,,,,,"21/Jul/08 12:16;ultranet;The project successfully builds from Eclipse w/ Q for Eclipse plugin.
It also successfully builds w/ maven 1, using project.xml in the attachment.;;;","21/Jul/08 12:22;ultranet;Use maven-2-bug-cleaner.zip instead of maven-2-bug.zip to reproduce, because it is a bit cleaner, and actually prints stuff from log4j, if executed.;;;","21/Jul/08 12:30;ultranet;maven-2-bug-cleaner-with-pdfbox.zip is the same as maven-2-bug-cleaner.zip, but has a pdfbox dependency.;;;","21/Jul/08 12:30;bentmann;Your POM states
{code:xml}
<dependency>
	<groupId>log4j</groupId>
	<artifactId>log4j</artifactId>
	<version>1.2.12</version>
	<scope>runtime</scope>
</dependency>
{code}
Note the {{<scope>}} element. You are effectively telling Maven that Log4J is only required for running (and testing) the project. However, you need it for compilation. So either change the affected dependencies to {{<scope>compile</scope>}} or simply remove the {{<scope>}} element.;;;","21/Jul/08 12:33;bentmann;bq. The project successfully builds from Eclipse w/ Q for Eclipse plugin.
Keep in mind that Eclipse has only one build path, i.e. does not distinguish between compile, runtime and test class path. As such, all dependencies end up on your Eclipse build path, obscuring the effect of a bad POM.;;;","21/Jul/08 12:36;ultranet;I was under mistaken assumption that runtime scope included compile scope. My bad. Closing...;;;","21/Jul/08 12:37;ultranet;Runtime scope doesn't include compile scope: bad pom, not a bug.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
plugin-level dependencies in POMs are not interpolated at correct time,MNG-3671,12795063,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,jdcasey,jdcasey,18/Jul/08 10:16,03/Sep/08 16:57,03/Jan/22 13:13,18/Jul/08 10:42,2.0.10,,,,,2.1.0-M1,,,Inheritance and Interpolation,,,,,0,,,,"I'm attaching a simple test case POM for this problem, but essentially the plugin-level dependency information isn't interpolated at the time that it's injected into the plugin descriptor for eventual resolution and addition to the plugin classpath. Later, when this plugin is executed, the custom dependency cannot be resolved, and the plugin classloader can't be created.

This is a result of not preserving the original interpolated values for plugin-level dependencies in the dynamic build section of the pom. Just like plugin groupId/artifactId/version, dependency information should not be subject to changes during the course of the build. Therefore, they should be made concrete before the project instance is returned from the project builder initially.

I have what I believe is the fix for this issue, but I need to take the attached test pom and transform it into a formal integration test before I can pronounce this one closed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Jul/08 10:16;jdcasey;pom.xml;https://issues.apache.org/jira/secure/attachment/12712729/pom.xml",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i297rz:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"18/Jul/08 10:42;jdcasey;fixed, and integration test included.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dependencies resolution is wrong in some cases (xfire-core:1.2.6 for example),MNG-3667,12795006,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,aheritier,aheritier,16/Jul/08 09:44,14/Aug/10 07:42,03/Jan/22 13:13,16/Jul/08 12:01,2.0.10,,,,,2.1.0-M1,,,Dependencies,,,,,0,,,,"With RC1, maven tries to download this dependency org/apache/ws/commons/XmlSchema/SNAPSHOT/XmlSchema-SNAPSHOT.jar whereas with 2.0.9 it retreives the version 1.1.
What I have is a project with a dependency to org.codehaus.xfire:xfire-core:1.2.6
In the xfire-core pom we have a dependency to org.apache.ws.commons:XmlSchema
The version 1.1 is set in the dependencyManagement of the parent.

A testcase is attached",2.0.10-RC1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jul/08 09:44;aheritier;xfire-maven-2.0.10.zip;https://issues.apache.org/jira/secure/attachment/12712536/xfire-maven-2.0.10.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i291cn:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"16/Jul/08 11:28;jdcasey;This is a quirk of a bad POM:

http://repo1.maven.org/maven2/org/apache/ws/commons/XmlSchema/1.1/XmlSchema-1.1.pom

Take a look at the version string inside that POM.

I'm adjusting the MavenMetadataSource to take groupId/artifactId/version from the (potentially relocated) artifact instead of the (potentially relocated) project instance, which should clear this up for consumers of this bad metadata.;;;","16/Jul/08 11:42;jdcasey;got it fixed, working on coding an integration test based on this test project (making it self-contained, of course).;;;","16/Jul/08 12:01;jdcasey;use groupId/artifactId/version from resolved/relocated POM artifact rather than POM content itself, which may be wrong (if the POM landed in the repository as a result of a non-Maven release process);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
REGRESSION: Batch mode is ignored (-B),MNG-3649,12795062,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jvanzyl,jdcasey,jdcasey,03/Jul/08 14:42,07/Apr/15 12:25,03/Jan/22 13:13,02/Oct/08 14:17,3.0-alpha-1,,,,,3.0-alpha-1,,,Command Line,,,,,0,,,,"Tried running the release plugin using the -B flag to avoid prompts for next version, etc. and it doesn't appear to have any effect in 2.1.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28vtb:",9223372036854775807,,,,,,,,,,,,,,,,,,,"03/Jul/08 20:12;brettporter;While this could be an independent bug, I've also seen related issues with the wrong value for the ""ignore failures"" switch, so the CLI might be broken entirely.;;;","02/Oct/08 12:53;jvanzyl;The release plugin depends on the interactive flag being set on the Settings object so I will see what I can do to mimic.;;;","02/Oct/08 13:50;jvanzyl;How is that a plugin that wants to use non-interactive mode, relies on a flag being set in the user settings.xml. Obviously we are mis-using the settings in 2.0.x. In this case you're purely interested in the command line flag. I'll rig something up to preserve this.;;;","02/Oct/08 14:17;jvanzyl;Tested a release works in batch mode.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
back-propagation of resources doesn't handle multiple resources with the same directory,MNG-3642,12795019,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,jdcasey,jdcasey,30/Jun/08 21:40,03/Sep/08 16:57,03/Jan/22 13:13,02/Jul/08 11:04,2.0.10,3.0-alpha-1,,,,2.1.0-M1,,,Plugins and Lifecycle,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i295p3:",9223372036854775807,,,,,,,,,,,,,,,,,,,"02/Jul/08 11:04;jdcasey;Added mergeId (marked for internal use only) to the Resource class generated by modello, to allow assignment of a unique identifier prior to calculating the concrete build section to feed into a plugin's execution. This mergeId is maintained in both the concrete and dynamic copies, to allow merging changed configurations back from the concrete version to the dynamic version (which is used to incorporate changes to the project state in successive plugin executions).

Also added an integration test to verify that two resource entries with the same directory and target path - but with differing include/exclude patterns -  are treated separately throughout the build, not consolidated as happened when resources were keyed by their directories (previously).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven tries to download artifacts while it runs in offline mode,MNG-3593,12796675,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Duplicate,brettporter,chawax,chawax,23/May/08 04:04,08/Mar/09 12:59,03/Jan/22 13:13,08/Mar/09 12:59,2.0.8,,,,,,,,Dependencies,,,,,1,,,,"I encounter a problem that has been filed before (http://jira.codehaus.org/browse/MNG-2433), then closed but actually I think it is not solved yet !

I run maven with -o option. All artifacts are in my local repository (I am totally sure about this !) so there should have been no downloads ... but Maven tries to download artifacts and I can't understand why.

I have the following error message :

{quote}[INFO] ------------------------------------------------------------------------
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Failed to resolve artifact.

Missing:
----------
1) org.andromda.profiles.uml14:andromda-profile-service:xml.zip:3.3-SNAPSHOT

Try downloading the file manually from the project website.

Then, install it using the command:
mvn install:install-file -DgroupId=org.andromda.profiles.uml14 -DartifactId=andromda-profile-service -Dversion=3.3-SNAPSHOT -Dpackaging=xml.zip -Dfile=/path/to/file

Alternatively, if you host your own repository you can deploy the file there:
mvn deploy:deploy-file -DgroupId=org.andromda.profiles.uml14 -DartifactId=andromda-profile-service -Dversion=3.3-SNAPSHOT -Dpackaging=xml.zip -Dfile=/path/to/file -Durl=[url] -DrepositoryId=[id]

Path to dependency:
1) fr.xxx.t4:t4-core-mda:pom:1.0-SNAPSHOT
2) org.andromda.cartridges:andromda-ejb3-cartridge:jar:1.0-SNAPSHOT
3) org.andromda.profiles.uml14:andromda-profile:xml.zip:3.3-SNAPSHOT
4) org.andromda.profiles.uml14:andromda-profile-service:xml.zip:3.3-SNAPSHOT

----------
1 required artifact is missing.

for artifact:
fr.xxx.t4:t4-core-mda:pom:1.0-SNAPSHOT

from the specified remote repositories:
central (http://10.11.4.108:8080/artifactory/repo),
andromda (http://10.11.4.108:8080/artifactory/repo),
snapshots (http://10.11.4.108:8080/artifactory/repo)

NOTE: Maven is executing in offline mode. Any artifacts not already in your local
repository will be inaccessible.{quote}

To help to reproduce the problem, note I use artifactory as a repository. I have the following config in pom.xml :

{code:xml}<repositories>
<repository>
<id>andromda</id>
<url>http://10.11.4.108:8080/artifactory/repo</url>
<snapshots>
<enabled>true</enabled>
<updatePolicy>daily</updatePolicy>
</snapshots>
</repository>
<repository>
<id>central</id>
<url>http://10.11.4.108:8080/artifactory/repo</url>
<snapshots>
<enabled>false</enabled>
</snapshots>
</repository>
<repository>
<id>snapshots</id>
<url>http://10.11.4.108:8080/artifactory/repo</url>
<releases>
<enabled>true</enabled>
<updatePolicy>daily</updatePolicy>
</releases>
</repository>
</repositories>
<pluginRepositories>
<pluginRepository>
<id>andromda</id>
<url>http://10.11.4.108:8080/artifactory/repo</url>
<snapshots>
<enabled>false</enabled>
</snapshots>
</pluginRepository>
<pluginRepository>
<id>central</id>
<url>http://10.11.4.108:8080/artifactory/repo</url>
<snapshots>
<enabled>false</enabled>
</snapshots>
</pluginRepository>
<pluginRepository>
<id>snapshots</id>
<url>http://10.11.4.108:8080/artifactory/repo</url>
<releases>
<enabled>false</enabled>
</releases>
</pluginRepository>
</pluginRepositories>{code}

I tried with updatePolicy as ""weekly"" or ""never"" but it changed nothing.

I also have the following mirrors in maven settings.xml, but removing them changed nothing :

{code:xml}<mirror>
<id>andromda</id>
<mirrorOf>andromda</mirrorOf>
<name>AndroMDA Repository</name>
<url>http://10.11.4.108:8080/artifactory/repo</url>
</mirror>

<mirror>
<id>apache-incubator</id>
<mirrorOf>apache-incubator</mirrorOf>
<name>Apache Incubator Repository</name>
<url>http://10.11.4.108:8080/artifactory/repo</url>
</mirror>{code}

I really think there is a bug somewhere, as we run maven with -o option, it should not try to download artifacts. Maybe a problem with transitive dependencies ? Or a problem with snapshots ?","Maven 2.0.8, Windows XP, Artifactory",,,,,,,,,,,,,,,,,,,,,,,MNG-2433,,,,,,,,,,,,,,,,,,,MNG-2883,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i295gf:",9223372036854775807,,,,,,,,,,,,,,,,,,,"08/Mar/09 09:43;paul4christ79;I think this issue should be closed since MNG-2883 has verified the network remains offline. It was verified in 2.0.10; this issue is reported against 2.0.8.;;;","08/Mar/09 12:59;brettporter;thanks Paul;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
stage:copy ClassCastException with maven 2.0.9,MNG-3581,12797351,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,brettporter,olamy,olamy,17/May/08 09:26,06/Apr/15 01:25,03/Jan/22 13:13,31/May/08 10:01,2.0.9,,,,,2.0.10,2.1.0-M1,,,,,,,0,,,,"Using stage:copy with maven 2.0.9 generates a ClassCastException. (works fine with 2.0.8)

The relevant part of the log say :

[INFO] ------------------------------------------------------------------------
[INFO] org.apache.maven.wagon.providers.ssh.jsch.ScpWagon
[INFO] ------------------------------------------------------------------------
[DEBUG] Trace
java.lang.ClassCastException: org.apache.maven.wagon.providers.ssh.jsch.ScpWagon
        at org.apache.maven.plugins.stage.DefaultRepositoryCopier.copy(DefaultRepositoryCopier.java:252)
        at org.apache.maven.plugins.stage.CopyRepositoryMojo.execute(CopyRepositoryMojo.java:93)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:451)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:558)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeStandaloneGoal(DefaultLifecycleExecuto 


See http://www.nabble.com/stage%3Acopy-ClassCastException-with-maven-2.0.9-to17292204.html

I add this issue in MNG as it looks more a core issue than a stage plugin issue.
",tested on cygwin and freebsd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MSTAGE-3,,,,,,MSTAGE-9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i291r3:",9223372036854775807,,,,,,,,,,,,,,,,,,,"03/Sep/08 16:59;jdcasey;Adding fix-for for both 2.0.10 and 2.1.0-M1, since 2.1.0-M1 will actually be released first and may not incorporate all of the eventual issue fixes released in 2.0.10.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
transitive dependency exclusion fails when classifier specified,MNG-3555,12797327,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Not A Problem,bentmann,trent,trent,28/Apr/08 12:26,05/Jan/10 11:57,03/Jan/22 13:13,05/Jan/10 11:57,2.0.9,,,,,,,,Dependencies,,,,,4,,,,"I have a profile like the one below.  When I enable that profile, maven refuses to exclude the dependencies as specified, unless I remove the classifier.  This is basically preventing us from using maven.  We will have to stick with ant until this is resolved.

A little bit of background.  We have an rmi module and a web module.  This profile is in the web module pom.  The rmi project creates two different types of jars.  One is the rmi server jar, the other the rmi client jar.  In the case of the rmi server jar, all the dependencies would be required.  And, we allow the rmi server to be run in process (under tomcat).  In a case like that, we require all the dependencies.  But, when running in standard RMI mode, and using the client jar, we do not need all those dependencies, nor do we want them to be there.
{code:xml}
<profile>
  <!-- use full rmi when doing development, even if inproc server -->
  <id>client</id>
  <build>
    <resources>
      <!-- Copy configurations over to webapp folder -->
      <resource>
        <filtering>true</filtering>
        <directory>${basedir}/src/main/resources</directory>
        <excludes>  <!-- Don't need these in production -->
          <exclude>server.properties</exclude>
          <exclude>response_codes.properties</exclude>
        </excludes>
      </resource>
    </resources>
  </build>
  <dependencies>
    <dependency>
      <groupId>ca.athabascau.banner.oros</groupId>
      <artifactId>rmi</artifactId>
      <version>1.1.23-SNAPSHOT</version>
      <scope>compile</scope>
      <classifier>client</classifier>
      <exclusions>
        <exclusion>
          <groupId>ca.athabascau</groupId>
          <artifactId>moneris-test</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.oracle.ojdbc</groupId>
          <artifactId>ojdbc14</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.novell</groupId>
          <artifactId>java-ldap</artifactId>
        </exclusion>
        <exclusion>
          <groupId>commons-dbcp</groupId>
          <artifactId>commons-dbcp</artifactId>
        </exclusion>
        <exclusion>
          <groupId>commons-collections</groupId>
          <artifactId>commons-collections</artifactId>
        </exclusion>
        <exclusion>
          <groupId>commons-pool</groupId>
          <artifactId>commons-pool</artifactId>
        </exclusion>
        <exclusion>
          <groupId>cas</groupId>
          <artifactId>casclient</artifactId>
        </exclusion>
        <exclusion>
          <groupId>xerces</groupId>
          <artifactId>xercesImpl</artifactId>
        </exclusion>
        <exclusion>
          <groupId>oro</groupId>
          <artifactId>oro</artifactId>
        </exclusion>
        <exclusion>
          <groupId>xml-apis</groupId>
          <artifactId>xml-apis</artifactId>
        </exclusion>
        <exclusion>
          <groupId>javax.activation</groupId>
          <artifactId>activation</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>
</profile>
{code}",Gentoo linux,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-1823,,,,,,,,,,,"30/Apr/08 11:35;trent;pom.xml;https://issues.apache.org/jira/secure/attachment/12711982/pom.xml",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28r8v:",9223372036854775807,,,,,,,,,,,,,,,,,,,"28/Apr/08 12:31;trent;Oh, one other thing.  I think this MAY be related to this other bug, but perhaps not quite the same?
http://jira.codehaus.org/browse/MNG-1823;;;","28/Apr/08 16:38;trent;On second thought, it's not a show stopper.  But, sure is annoying.;;;","30/Apr/08 11:35;trent;Note the ""rmi"" dependency in the main dependencies section with the ""provided"" scope.  Also note the ""client"" profile.

;;;","05/Jun/09 10:57;ra_axz;I can confirm this bug and suffering from it.;;;","25/Nov/09 04:03;ol;I confirm this bug;;;","05/Jan/10 11:57;bentmann;bq. Note the ""rmi"" dependency in the main dependencies section with the ""provided"" scope. Also note the ""client"" profile.

This is misconfiguration/misunderstanding. The relevant snippet from the effective POM when the profile ""client"" is activated:
{code:xml}
<dependencies>
  ...
  <dependency>
    <groupId>ca.athabascau.banner.oros</groupId>
    <artifactId>rmi</artifactId>
    <version>1.1.23-SNAPSHOT</version>
    <scope>provided</scope>
  </dependency>
  <dependency>
    <groupId>ca.athabascau.banner.oros</groupId>
    <artifactId>rmi</artifactId>
    <version>1.1.23-SNAPSHOT</version>
    <classifier>client</classifier>
    <scope>compile</scope>
    <exclusions>
      <exclusion>
        <artifactId>moneris-test</artifactId>
        <groupId>ca.athabascau</groupId>
      </exclusion>
      ...
  </dependency>
</dependencies>
{code}
i.e. the WAR project has two dependencies, one on {{ca.athabascau.banner.oros:rmi:1.1.23-SNAPSHOT:client}} and one on {{ca.athabascau.banner.oros:rmi:1.1.23-SNAPSHOT}} which are considered two different/distinct dependencies due to the classifier. And the exclusions defined on one dependency are only applied to this dependency. I.e. while the transitive dependencies of {{ca.athabascau.banner.oros:rmi:1.1.23-SNAPSHOT:client}} are excluded, those of {{ca.athabascau.banner.oros:rmi:1.1.23-SNAPSHOT}} are not.

So, simply define the exclusions on the main dependency as well.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cannot resolve dependency with scope import,MNG-3553,12796666,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Won't Fix,jdcasey,tdiesler,tdiesler,28/Apr/08 03:28,24/Jul/09 07:22,03/Jan/22 13:13,30/Apr/09 11:32,2.0.9,2.1.0,,,,,,,,,,,,17,,,,"This pom when added as a dependency of another project does not see repository http://snapshots.jboss.org/maven2

  <!-- DependencyManagement -->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.jboss.jbossas</groupId>
        <artifactId>jboss-as-component-matrix</artifactId>
        <version>${jboss.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

with effective settings

[tdiesler@tddell trunk]$ mvn help:effective-settings
[INFO] Scanning for projects...
[INFO] Reactor build order: 
[INFO]   JBoss Web Services - Stack CXF
[INFO]   JBoss Web Services - Stack CXF Management
[INFO]   JBoss Web Services - Stack CXF Runtime Server
[INFO]   JBoss Web Services - Stack CXF Runtime Client
[INFO] Searching repository for plugin with prefix: 'help'.
[INFO] ------------------------------------------------------------------------
[INFO] Building JBoss Web Services - Stack CXF
[INFO]    task-segment: [help:effective-settings] (aggregator-style)
[INFO] ------------------------------------------------------------------------
[INFO] [help:effective-settings]
[INFO] 
Effective settings:

<?xml version=""1.0""?><settings>
  <localRepository>/home/tdiesler/.m2/repository</localRepository>

  <profiles>
    <profile>
      <activation>
        <property>
          <name>!jboss.repository.off</name>
        </property>
      </activation>
      <repositories>
        <repository>
          <snapshots />
          <id>snapshots.jboss.org</id>
          <url>http://snapshots.jboss.org/maven2</url>
        </repository>
        <repository>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
          <id>repository.jboss.org</id>
          <url>http://repository.jboss.org/maven2</url>
        </repository>
      </repositories>
      <id>jboss.repository</id>
    </profile>
  </profiles>
  <activeProfiles>
    <activeProfile>user-profile</activeProfile>
  </activeProfiles>
  <pluginGroups>
    <pluginGroup>org.jboss.maven.plugins</pluginGroup>
  </pluginGroups>
</settings>
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-4148,,,,,,,,,,,"26/Oct/08 17:10;ryan.lea;mng-3553.zip;https://issues.apache.org/jira/secure/attachment/12712799/mng-3553.zip","30/Apr/09 08:23;aheritier;test-mng3553.zip;https://issues.apache.org/jira/secure/attachment/12712901/test-mng3553.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28lsn:",9223372036854775807,,,,,,,,,,,,,,,,,,,"28/Apr/08 03:29;tdiesler;When I build the project that contains the dependency with scope 'import' it works. However when I use that project as a dependency of another project, the import cannot be resolved;;;","28/Apr/08 03:37;tdiesler;In a more general way, it seem that project A cannot have a dependency on B if B defines a dependency with scope import that is deployed on a non-central snapshot repository.;;;","03/Jul/08 19:06;jdcasey;Pushing to 2.0.11 so we can have a smaller set of high-value issues to target for the next release (2.0.10).;;;","05/Sep/08 07:36;david@davidkarlsen.com;I have a slightly different problem.

Our super pom (artifact A) declares:

<dependencies>
    <dependency>
      <groupId>my.groupid</groupId>
      <artifactId>websphere-testenvironment</artifactId>
      <version>1.3-SNAPSHOT</version>
      <type>pom</type>
      <scope>import</scope>
    </dependency>
  </dependencies>

that is - in the dependencies section - not dep.management.



I then have an artifact B which have A as parent. The dependencies are not resolve, although to my surprise, if I run mvn help:effective-pom on artifact B, the dep is actually listed:

  <dependencies>
    <dependency>
      <groupId>my.groupid</groupId>
      <artifactId>websphere-testenvironment</artifactId>
      <version>1.3-SNAPSHOT</version>
      <type>pom</type>
      <scope>import</scope>
    </dependency>
  </dependencies>

All the dependencies in my.groupid:websphere-testenvironment:1.3-SNAPSHOT are declared as provided.

So there seems to be some inheritance problem.;;;","05/Sep/08 09:06;ralphgoers;import scope is not supported outside the dependencyManagement section. This is explicitly documented at http://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Dependency_Scope. ;;;","05/Sep/08 09:12;ralphgoers;Thomas, would it be possible to attach the projects to this issue that demonstration your problem?;;;","21/Sep/08 18:42;ryan.lea;Is there any workaround for this at all?

As far as I can see the only workarounds are:

a) remove the 'import' and use inheritance of parent projects.
b) remove the 'import' and copy/paste the dependencies of the imported project in thr importing project

I think importing is a great feature, although it feels like an unusable feature until this defect is resolved.  Is there any chance of this being pushed back into 2.0.10?

Possibly not the forum for this, but has anyone looked into where the issue might lie? 

Cheers.;;;","04/Oct/08 22:05;john-medio;I'm with you Ryan.  The ability to import a set of dependencyManagement dependencies is a great feature, and we'd like to use it in a number of places, but this problem is preventing it from being an attractive feature.  My company may have to stop using this feature for this reason.  I would think this definitely counts as a high-value issue.;;;","04/Oct/08 23:12;ralphgoers;John, as I said previously If someone could attach a zip file that demonstrates the problem I'd be happy to debug this.;;;","24/Oct/08 12:47;schumnana;I confirmed what Thomas Diesler said ""In a more general way, it seem that project A cannot have a dependency on B if B defines a dependency with scope import that is deployed on a non-central snapshot repository.""

I have the same problem in my enterprise.
;;;","26/Oct/08 17:10;ryan.lea;Attaching sample project.  Although I can't actually reproduce the issue (not sure why).  It definately exists.  Perhaps someone can this sample project as a starting point.;;;","27/Oct/08 23:01;ryan.lea;Have just realised how to reproduce this issue.  Using the project names from the attached zip:
- test-parent
- test-core
- test-importer
- test-depends-on-importer

Firstly you will need to setup an internal remote repository (one that you are able to deploy to).  Then run 'mvn deploy' for the following projects:
- test-parent
- test-core
- test-importer 

Then delete all 3 from your local repository.  Keep them in your remote one.

Then run mvn 'install' on the project 'test-depends-on-importer'.  You should find that you get an error regarding 'test-parent' not being able to be found.  This is despite the fact that it actually exists on your internal remote repository.

Hope this helps,

Ryan;;;","03/Nov/08 16:21;ralphgoers;I tried your test project and wasn't able to duplicate the problem.
1. I had to modify each project to add a maven repository to deploy to. I used my local file system.

          <repositories>
            <repository>
              <id>my-internal-site</id>
              <url>file:///home/rago2483/test-repo</url>
            </repository>
          </repositories>
          <distributionManagement>
            <!-- use the following if you're not using a snapshot version. -->
            <repository>
              <id>repo</id>
              <name>Repository Name</name>
              <url>file:///home/rago2483/test-repo</url>
            </repository>
            <!-- use the following if you ARE using a snapshot version. -->
            <snapshotRepository>
              <id>repo</id>
              <name>Repository Name</name>
              <url>file:///home/rago2483/test-repo</url>
            </snapshotRepository>
          </distributionManagement>
2. I then followed the instructions and got:
rago2483@rago2483:~/test/mng-3553/test-depends-on-importer$ mvn install
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] Building test-depends-on-importer
[INFO]    task-segment: [install]
[INFO] ------------------------------------------------------------------------
[INFO] [resources:resources]
[INFO] Using default encoding to copy filtered resources.
[INFO] snapshot mng-3553:test-importer:1.0-SNAPSHOT: checking for updates from apacheSnapshots
[INFO] snapshot mng-3553:test-importer:1.0-SNAPSHOT: checking for updates from my-internal-site
Downloading: file:///home/rago2483/test-repo/mng-3553/test-importer/1.0-SNAPSHOT/test-importer-1.0-20081103.220540-2.pom
1K downloaded
[INFO] snapshot mng-3553:test-parent:1.0-SNAPSHOT: checking for updates from my-internal-site
Downloading: file:///home/rago2483/test-repo/mng-3553/test-parent/1.0-SNAPSHOT/test-parent-1.0-20081103.220540-6.pom
1K downloaded
[INFO] snapshot mng-3553:test-core:1.0-SNAPSHOT: checking for updates from apacheSnapshots
[INFO] snapshot mng-3553:test-core:1.0-SNAPSHOT: checking for updates from my-internal-site
Downloading: file:///home/rago2483/test-repo/mng-3553/test-core/1.0-SNAPSHOT/test-core-1.0-20081103.220540-3.pom
1K downloaded
Downloading: file:///home/rago2483/test-repo/mng-3553/test-importer/1.0-SNAPSHOT/test-importer-1.0-20081103.220540-2.jar
1K downloaded
Downloading: file:///home/rago2483/test-repo/mng-3553/test-core/1.0-SNAPSHOT/test-core-1.0-20081103.220540-3.jar
1K downloaded
[INFO] [compiler:compile]
[INFO] No sources to compile
[INFO] [resources:testResources]
[INFO] Using default encoding to copy filtered resources.
[INFO] [compiler:testCompile]
[INFO] No sources to compile
[INFO] [surefire:test]
[INFO] No tests to run.
[INFO] [jar:jar]
[WARNING] JAR will be empty - no content was marked for inclusion!
[INFO] [install:install]
[INFO] Installing /home/rago2483/test/mng-3553/test-depends-on-importer/target/test-depends-on-importer-1.0-SNAPSHOT.jar to /home/rago2483/.m2/repository/mng-3553/test-depends-on-importer/1.0-SNAPSHOT/test-depends-on-importer-1.0-SNAPSHOT.jar
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESSFUL
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 6 seconds
[INFO] Finished at: Mon Nov 03 14:13:45 PST 2008
[INFO] Final Memory: 7M/13M
[INFO] ------------------------------------------------------------------------
;;;","09/Jan/09 14:01;john-medio;What we continue to see on this problem is:
* For scope:import dependencies, Maven only checks the local repository and the Maven-defined repository
* Repositories defined in settings.xml are not used for resolution.

We override central in our settings.xml to use archiva.  Yet when resolving our bom artifact (scope=import) we get:
{noformat}
Project ID: com.mycompany:bom

Reason: POM 'com.mycompany:bom' not found in repository: 
Unable to download the artifact from any repository

com.mycompany:bom:pom:1.17

from the specified remote repositories:
central (http://repo1.maven.org/maven2)
for project com.mycompany:bom
{noformat};;;","05/Feb/09 16:56;jacmorel;Can we get movement on this bug?
When is 2.0.10 supposed to be out? Do we have really to wait for that release to be out before this bug becomes active?
We invested significant time migrating our large ant based project into several multi-module projects heavily using import scope to provide encapsulated set of dependencies. While migrating our build seemed randomly flaky but since only a few were working on it they really didn't hit that much having installed all modules locally. So ironically, now that we are ready to roll it out to our larger audience, we realize the magnitude of this bug makes it impossible.
;;;","05/Feb/09 17:54;jvanzyl;No one has provided a sample project that Ralph can reproduce the problem. As Ralph has said he would be happy to help resolve the problem back in September. If you provide a complete example we can use an an integration test and we can help you. I know that Ralph uses this feature extensive with a large team so for our particular use we know that it works. If you want us to expand the parameters of expected or known use then please provide us with a complete test and/or integration tests.;;;","06/Feb/09 11:37;jacmorel;Jason,

Thanks for responding so fast. I would be more than happy to help in any way I can.
However have you guys looked at the attached project and the [associated steps|http://jira.codehaus.org/browse/MNG-3553?focusedCommentId=152108&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_152108] to reproduce the problem? 
I can reproduce it without problem. I get this output which matches John Crim [comment|http://jira.codehaus.org/browse/MNG-3553?focusedCommentId=160542&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_160542] and Thomas Diesler's the original reporter. 
This is the error message I get:
{noformat}
$ mvn install
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] Building test-depends-on-importer
[INFO]    task-segment: [install]
[INFO] ------------------------------------------------------------------------
[INFO] [resources:resources]
[INFO] Using default encoding to copy filtered resources.
[INFO] snapshot mng-3553:test-importer:1.0-SNAPSHOT: checking for updates from public
[INFO] snapshot mng-3553:test-importer:1.0-SNAPSHOT: checking for updates from public-snapshots
Downloading: http://liberty.sabre.com/nexus/content/groups/public-snapshots/mng-3553/test-importer/1.0-SNAPSHOT/test-importer-1.0-20090206.171302-2.pom
1K downloaded
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Error building POM (may not be this project's POM).


Project ID: mng-3553:test-parent

Reason: POM 'mng-3553:test-parent' not found in repository: Unable to download the artifact from any repository

  mng-3553:test-parent:pom:1.0-SNAPSHOT

from the specified remote repositories:
  central (http://repo1.maven.org/maven2)
 for project mng-3553:test-parent
 
{noformat}

I used our team nexus repository to deploy in so I had to add a distribution section in all pom files:
{code}
   <distributionManagement>
      <!-- use the following if you're not using a snapshot version. -->
      <repository>
         <id>nexus</id>
         <name>liberty nexus proxy</name>
         <url>http://liberty.sabre.com/nexus/content/repositories/releases</url>
      </repository>
      <!-- use the following if you ARE using a snapshot version. -->
      <snapshotRepository>
         <id>snapshot nexus</id>
         <name>liberty snapshot nexus proxy</name>
         <url>http://liberty.sabre.com/nexus/content/repositories/snapshots</url>
      </snapshotRepository>
   </distributionManagement>
{code}

My effective settings are
{code}
<settings xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.
org/xsd/settings-1.0.0.xsd"">
  <localRepository>C:\Documents and Settings\SG0426575\.m2\repository</localRepository>
  <interactiveMode>false</interactiveMode>
  <proxies>
    <proxy>
      <active>true</active>
      <username>sg0XXXXXX</username>
      <password />
      <port>80</port>
      <host>www-ad-proxy.sabre.com</host>
      <nonProxyHosts>*.sabre.com</nonProxyHosts>
    </proxy>
  </proxies>
  <mirrors>
    <mirror>
      <mirrorOf>public-snapshots</mirrorOf>
      <name>Liberty Nexus Mirror</name>
      <url>http://liberty.sabre.com/nexus/content/groups/public-snapshots</url>
      <id>nexus-public-snapshots</id>
    </mirror>
    <mirror>
      <mirrorOf>public</mirrorOf>
      <name>Liberty Nexus Mirror</name>
      <url>http://liberty.sabre.com/nexus/content/groups/public</url>
      <id>nexus</id>
    </mirror>
  </mirrors>
  <profiles>
    <profile>
      <repositories>
        <repository>
          <releases />
          <snapshots />
          <id>public</id>
          <url>http://public</url>
        </repository>
        <repository>
          <releases />
          <snapshots />
          <id>public-snapshots</id>
          <url>http://public-snapshots</url>
        </repository>
      </repositories>
      <pluginRepositories>
        <pluginRepository>
          <releases />
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
          <id>public</id>
          <url>http://public</url>
        </pluginRepository>
        <pluginRepository>
          <releases>
            <enabled>false</enabled>
          </releases>
          <snapshots />
          <id>public-snapshots</id>
          <url>http://public-snapshots</url>
        </pluginRepository>
      </pluginRepositories>
      <id>liberty-profile</id>
    </profile>
  </profiles>
  <activeProfiles>
    <activeProfile>liberty-profile</activeProfile>
  </activeProfiles>
</settings>
{code};;;","11/Feb/09 23:55;jacmorel;Do you need me to provide another test case?
We would really appreciate an eta on when someone could start to look at this.
Thanks in advance.;;;","04/Mar/09 17:12;ralphgoers;I apologize for not getting back to this. I have been underwater with things not related to Maven. I believe there is enough info here for me to look at this and will make every attempt to spend some time on it in the next few days.;;;","05/Mar/09 09:39;jacmorel;That is great news.
I have really be struggling with this. Apparently I found that if you have a local proxy server and it proxies central, you may be able to work around some of these problem here by explicitly mirroring 'central' in your settings.xml. So maybe it is why you haven't been able to reproduce it.
I am playing with it as we speak because I thought the mirroring central was working for both release and snapshots. But now I am trying to build on another machine it does not work anymore for at least snapshots. Very frustrating.
In any case, ask me anything to help you solve this. We really need this fixed as soon as possible.

Thanks again.

Jacques;;;","18/Mar/09 21:31;jacmorel;Ralph, have you been able to make progress here? Thxs;;;","20/Mar/09 01:14;ralphgoers;No, sorry. I can't believe 2 weeks has passed that quickly. Unfortunately I've been swamped at work. I will update this record when I am able to make some progress.;;;","02/Apr/09 11:15;aheritier;Same issue for me. 
PROJECT A --uses--> ARTIFACT 1 --dep Mgt import--> ARTIFACT 2
In my settings I have a profile which redefine the central repository to use the corporate proxy
There is no repository settings in my projects.
I have no problem to build ARTIFACT 1 project.
PROJECT 1 build fails because it tries to download ARTIFACT 2 from central repository instead of using our proxy.
My tests :
* If in PROJECT A I add a repository entry for our corporate proxy it changes nothing
* If in ARTIFACT 1 I add a repository entry for our corporate proxy I can build PROJECT A
* If in ARTIFACT 1 I add a repository entry for our corporate proxy using a property I cannot find ARTIFACT 2 because maven doesn't resolve this property
* If in my settings I add a mirror entry for the central repository to use our proxy  I can build PROJECT A

This issue affects 2.09, 2.0.10 and 2.1.0

Cheers;;;","17/Apr/09 09:05;sellersj;Hi all.

It wasn't clear to me when I read this ticket the first time, but there is a hack-ish work around.

Project_A  depends on LIB_B imports Bill_of_Materials_C

In LIB_B I added the ""repositories"" section to that pom that points to our corporate proxy.  Not ideal, but until this is addressed it's the only suitable work around that I found.

Hope that helps!;;;","23/Apr/09 13:23;jdcasey;If we import repository definitions along with dependencies through the scope == import feature, then this may throw off the snapshot resolution process for dependencies in the project that have nothing whatsoever to do with the imported dependencies.

This presents a dilemma: if we want to fix the problem above, we will most likely need to import custom repository definitions alongside dependencies; yet importing these repositories could change the way the rest of the dependencies resolve for that project. Also, changes in snapshot resolution coming from this sort of change would be pretty hard to track down, since there may be no trace in the POM listing the repository that supplies the latest snapshot version.

Since we cannot pin a particular dependency/artifact to a particular repository to make sure it's resolved there and there only, making this change will only make builds using scope == import harder to debug.

IMO, using the stated workaround (adding the custom repository to the POM that has the scope == import dependency) is probably the safest way to go, at least for Maven 2.x. Solving the problem in an automatic way results in the same basic approach...doing this manually only makes the step explicit and simpler to debug.;;;","29/Apr/09 17:21;jdcasey;Waiting for Arnaud to get back to me with a test case for his problem where the repository definition overrides central and is declared in the settings.xml. This repository override should apply globally, so I'm not sure what's going wrong here.

I've attempted to duplicate the scenario, but have had no success causing a failure based on his descriptions:

{noformat}
  I have this issue but in my case I don't define any repository in my
projects. I override the central definition in my user's settings to use our
corporate repo. This method always works to build projects except when I'm
using imports : Maven tries to download dependencies from the real central.
Why my settings doesn't override it ?
  To fix I had to use a proxy * to always use the corporate repo. Personnaly
I don't like that because I had to merge in the same group, releases and
snapshots.
  I have no idea to fix it but :
  - I don't want to define my corporate repository in all poms
  - It's really annoying today to have only this case which doesn't work
when we override the central repo definition.

...AND...

A default-profile in my activeProfiles
In this profil I have 2 repositories :
- one for releases with the id central
- one for snashots with the id snapshot

Each repository is an archiva / nexus group
{noformat};;;","30/Apr/09 08:23;aheritier;You'll find attached the testcase to reproduce my issue.
I installed locally a nexus server (1.3.3 Open Source) and I'm using maven 2.1.0 (I reproduced the issue with 2.0.10).
In the releases repository of nexus you upload all artifacts given in the {{toUpload}} directory :
* parent 1.0.0 pom
* dependencies 1.0.0 pom
* module 1.0.0 pom and jar

You'll find in the root of the archive my settings. It defines to use nexus for the central repository.
You launch a build of the project and you'll have :
{code}
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] Building Unnamed - org.apache.maven.it.mng3553:project:jar:1.0.0-SNAPSHOT
[INFO]    task-segment: [install]
[INFO] ------------------------------------------------------------------------
[INFO] [resources:resources]
[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory E:\jtb\workspaces\tests\test-mng3553\project\src\main\resources
Downloading: http://localhost:8081/nexus/content/groups/public//org/apache/maven/it/mng3553/module/1.0.0/module-1.0.0.pom
867b downloaded  (module-1.0.0.pom)
Downloading: http://repo1.maven.org/maven2/org/apache/maven/it/mng3553/dependencies/1.0.0/dependencies-1.0.0.pom
[WARNING] Unable to get resource 'org.apache.maven.it.mng3553:dependencies:pom:1.0.0' from repository central (http://repo1.maven.org/maven2): Authorization fai
led: Access denied to: http://repo1.maven.org/maven2/org/apache/maven/it/mng3553/dependencies/1.0.0/dependencies-1.0.0.pom
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Failed to resolve artifact.
GroupId: org.apache.maven.it.mng3553
ArtifactId: dependencies
Version: 1.0.0
Reason: Unable to download the artifact from any repository
  org.apache.maven.it.mng3553:dependencies:pom:1.0.0
from the specified remote repositories:
  central (http://repo1.maven.org/maven2)
[INFO] ------------------------------------------------------------------------
[INFO] For more information, run Maven with the -e switch
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 1 second
[INFO] Finished at: Thu Apr 30 15:19:47 CEST 2009
[INFO] Final Memory: 6M/254M
[INFO] ------------------------------------------------------------------------
{code}
You can see that the project downloads successfully the module-1.0.0 from nexus but it fails for depencencies which is an import. It tries to download it from the real central repository and not from the one I defined in my settings. 
The behavior is inconsistent...;;;","30/Apr/09 08:25;aheritier;To note : In my case I receive an authorization error because I'm behind a web proxy which isn't set in my settings.;;;","30/Apr/09 11:23;jdcasey;Arnaud,

The problem you're seeing here is that profiles from the settings.xml are not applied to POMs that are built out of the maven repository, only to those built from the project directory / reactor. We need a separate issue for this.;;;","30/Apr/09 11:32;jdcasey;We cannot fix the case where imported dependencies lose the repository definition they need from the imported POM into the new one. To add the custom repository definition to the importing POM could change the way the rest of that POMs dependencies resolve, especially in cases where snapshots are used. The workaround for this issue is to add the custom repository definition to the importing POM as well as the imported POM, so the dependencies may resolve even after they are imported.

Also, Arnaud's issue near the bottom of the page is separate from the main problem described here, and is captured in MNG-4148.;;;","30/Apr/09 16:34;aheritier;ok, John. Thanks a lot for MNG-4148.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
REGRESSION: pom.build.sourceDirectory in Maven 2.0.9: it doesn't work anymore,MNG-3536,12795079,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,jdcasey,sarbogast,sarbogast,21/Apr/08 12:42,03/Sep/08 16:57,03/Jan/22 13:13,16/Jul/08 17:36,2.0.9,,,,,2.1.0-M1,,,,,,,,2,,,,"On one of my projects, I have the following property:

 
<model.uri>file:${project.build.sourceDirectory}/myapp.xmi</model.uri>

 
Knowing that in the same POM, sourceDirectory is configured that way:

 
<sourceDirectory>${project.basedir}/src/main/uml</sourceDirectory>

 
With Maven 2.0.8, model.uri was correctly mapped to /Users/sarbogast/dev/myapp/src/main/uml/myapp.xmi
But with Maven 2.0.9, now it's mapped to /Users/sarbogast/dev/myapp/Users/sarbogast/dev/myapp/src/main/uml/myapp.xmi, which is not good at all.
 
I have attached a test project that builds with Maven 2.0.8 but not with Maven 2.0.9.
It's not the simplest project ever but it's a real AndroMDA skeleton project.
All the configuration is in mda/pom.xml","MacOSX, Java 6, Maven 2.0.9",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-3070,,,,,,MNG-3535,MNG-2562,,,,,,,,,,"15/May/08 17:09;sisbell;core-integration-testing-plugins.patch;https://issues.apache.org/jira/secure/attachment/12712294/core-integration-testing-plugins.patch","15/May/08 17:08;sisbell;interpolator.it.patch;https://issues.apache.org/jira/secure/attachment/12712522/interpolator.it.patch","21/Apr/08 12:42;sarbogast;test.zip;https://issues.apache.org/jira/secure/attachment/12712714/test.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i291kf:",9223372036854775807,,,,,,,,,,,,,,,,,,,"15/May/08 12:52;sisbell;Bug fix here: https://svn.apache.org/repos/asf/maven/sandbox/branches/MNG-3536

This is part of a rewrite of the interpolation code.;;;","15/May/08 17:08;sisbell;Interpolator patch containing IT tests. Apply to https://svn.apache.org/repos/asf/maven/core-integration-testing/trunk/core-integration-tests;;;","15/May/08 17:09;sisbell;Test mojo needed to verify patch. Apply to: https://svn.apache.org/repos/asf/maven/core-integration-testing/trunk/core-integration-testing-plugins;;;","15/May/08 17:43;jdcasey;We need to look into converging the interpolation code in this branch with the code in plexus-interpolation, which is a split-off of the interpolator code from plexus-utils. It can be found here:

http://svn.codehaus.org/plexus/plexus-sandbox/trunk/plexus-components/plexus-interpolation

I've already refactored the trunk project builder to use plexus-interpolation, and the assembly plugin is using the pre-split code in plexus-utils, but will be updated to use plexus-interpolation once it's released to avoid inconsistencies with forced versions of plexus-utils from mavens past.

In short, we have interpolation needs that go beyond the project builder, and need to handle other model class trees than maven-model. If we can use the same codebase to achieve this, it will help greatly in the consistency department.

We already have an interpolator in maven-project, one in plexus-utils that has moved into plexus-interpolation, another in plexus-expression-evaluator (not used in maven, afaik), and now this one...hopefully we can find a way to consolidate some of this work and realign all of our efforts to some extent...and maybe refocus on consistency regardless of the model (or file) being interpolated.;;;","16/Jul/08 14:19;jdcasey;plugin configuration that uses ${project.build.outputDirectory}/foo will still fail in the current 2.0.10-RC codebase, since this will resolve to:

${project.build.directory}/classes/foo

when delegated within the PathTranslatingValueSource. This translating value source will then attempt to align that value to the base directory, which is incorrect. Rather, the expression needs further recursion to resolve project.build.directory before attempting to align to the base directory.

I'll have to look into why out current unit/integration tests don't test for this problem.;;;","16/Jul/08 16:39;jdcasey;Okay, I've improved the integration test to take this new scenario into account. I've also added the concept of a post-processor that has access to format/change a value after all interpolation has occurred recursively for an expression, then shifted the PathTranslatingValueSource to be a PathTranslatingPostProcessor.

I've verified that this fixes the issue, and I'm going to release plexus-interpolation 1.1 so we can use it in 2.0.10-RC2. My maven changes for this new interpolator api should be committed soon.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Custom ArtifactHandler not resolved for project when an additional plugin with extensions is defined in parent pom,MNG-3506,12797585,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,cedricvidal,cedricvidal,07/Apr/08 13:54,31/Jul/09 13:33,03/Jan/22 13:13,23/Jul/09 16:26,2.0.7,2.0.8,,,,2.2.1,,,Artifacts and Repositories,Inheritance and Interpolation,Plugins and Lifecycle,,,5,,,,"Hi,

I've found an annoying bug regarding custom artifact handlers. A custom artifact handler provided by a plugin with extensions is not resolved when another plugin with extensions is defined in parent pom. Note that the behavior is the same whether the first plugin is defined in child project or parent project.

In order to illustrate the problem, I've used the maven-eclipse-plugin. It generates a .classpath only when the project's artifact handler's language is set to java. My child project's packaging is ""jboss-sar"" whose artifact handler is provided by jboss-packaging-maven-plugin. ""jboss-sar"" 's language is set to java, so whenever the jboss'sar artifact handler is properly resolved, the .classpath file should be generated.

I've used the nbm-maven-plugin as the second perturbing plugin in order to break the resolution.

I've attached a set of it tests which each illustrate a working or broken scenario. In order to test those, simply run the following command at the root of each parent project:
mvn clean eclipse:clean install eclipse:eclipse

If the file .classpath is properly generated in ""module1"" child project, then the test passes, else it fails. Attached it tests contain ""OK"" when they pass and ""KO"" when then fails.

I've tried hard to debug plexus component resolution internals but after a whole day of headackes I gave up and ended up posting this issue hoping that somebody more used to maven and plexus internals would find a solution.

Kind regards,

Cédric Vidal
http://proxiad.com
",Windows XP SP2,,,,,,,,,,,,,,,,MNG-2426,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-4270,,,,,,,,,,,"07/Apr/08 13:54;sample-01-OK-main-plugin-in-child-pom.zip;https://issues.apache.org/jira/secure/attachment/12712712/sample-01-OK-main-plugin-in-child-pom.zip","07/Apr/08 13:54;sample-02-OK-main-plugin-with-additional-plugin-in-child-pom.zip;https://issues.apache.org/jira/secure/attachment/12711975/sample-02-OK-main-plugin-with-additional-plugin-in-child-pom.zip","07/Apr/08 13:54;sample-03-OK-main-plugin-in-parent-pom.zip;https://issues.apache.org/jira/secure/attachment/12711977/sample-03-OK-main-plugin-in-parent-pom.zip","07/Apr/08 13:55;sample-04-KO-main-plugin-with-additional-plugin-in-parent-pom.zip;https://issues.apache.org/jira/secure/attachment/12712713/sample-04-KO-main-plugin-with-additional-plugin-in-parent-pom.zip","07/Apr/08 13:55;sample-05-KO-main-plugin-in-child-pom-with-additional-plugin-in-parent-pom.zip;https://issues.apache.org/jira/secure/attachment/12711775/sample-05-KO-main-plugin-in-child-pom-with-additional-plugin-in-parent-pom.zip",,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28nan:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"07/Jul/09 16:38;jdcasey;we may need to change the name of the next version from '2.2.1' but I'd really like to have this on the list.;;;","22/Jul/09 17:03;jdcasey;This is fixed in 2.2.1-SNAPSHOT, just needs an integration test. I'll probably be able to hack that out by tomorrow...;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE  at org.apache.maven.wagon.repository.Repository.hashCode(Repository.java:241),MNG-3495,12795055,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,brettporter,david@davidkarlsen.com,david@davidkarlsen.com,02/Apr/08 01:47,02/Apr/08 07:53,03/Jan/22 13:13,02/Apr/08 07:42,2.0.9,,,,,2.0.9,,,,,,,,0,,,,"[INFO] ------------------------------------------------------------------------
[INFO] Building portal-core
[INFO]    task-segment: [clean, install]
[INFO] ------------------------------------------------------------------------
[INFO] [clean:clean]
[INFO] Deleting directory /tmp/portal-trunks/portal-core/target
Downloading: http://repo.sandsli.dnb.no/px/repository/public/opensymphony/quartz/1.6.0/quartz-1.6.0.pom
[INFO] ------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ------------------------------------------------------------------------
[INFO] null
[INFO] ------------------------------------------------------------------------
[INFO] Trace
java.lang.NullPointerException
        at org.apache.maven.wagon.repository.Repository.hashCode(Repository.java:241)
        at java.util.HashMap.put(HashMap.java:418)
        at java.util.HashSet.add(HashSet.java:194)
        at java.util.AbstractCollection.addAll(AbstractCollection.java:318)
        at java.util.HashSet.<init>(HashSet.java:100)
        at org.apache.maven.artifact.resolver.AbstractArtifactResolutionException.constructMessageBase(AbstractArtifactResolutionException.java:188)
        at org.apache.maven.artifact.resolver.AbstractArtifactResolutionException.<init>(AbstractArtifactResolutionException.java:67)
        at org.apache.maven.artifact.resolver.ArtifactNotFoundException.<init>(ArtifactNotFoundException.java:55)
        at org.apache.maven.artifact.resolver.ArtifactNotFoundException.<init>(ArtifactNotFoundException.java:48)
        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:212)
        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:74)
        at org.apache.maven.project.DefaultMavenProjectBuilder.findModelFromRepository(DefaultMavenProjectBuilder.java:545)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository(DefaultMavenProjectBuilder.java:249)
        at org.apache.maven.project.artifact.MavenMetadataSource.retrieve(MavenMetadataSource.java:105)
        at org.apache.maven.artifact.resolver.DefaultArtifactCollector.recurse(DefaultArtifactCollector.java:380)
        at org.apache.maven.artifact.resolver.DefaultArtifactCollector.collect(DefaultArtifactCollector.java:76)
        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolveTransitively(DefaultArtifactResolver.java:300)
        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolveTransitively(DefaultArtifactResolver.java:288)
        at org.apache.maven.plugin.DefaultPluginManager.resolveTransitiveDependencies(DefaultPluginManager.java:1415)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:405)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:558)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:499)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:478)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:330)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:291)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:142)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:336)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:129)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:287)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 1 minute 42 seconds
[INFO] Finished at: Wed Apr 02 08:45:24 CEST 2008
[INFO] Final Memory: 24M/376M
[INFO] ------------------------------------------------------------------------

/tmp/portal-trunks $ java -version
java version ""1.5.0_06""
Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_06-b05)
Java HotSpot(TM) Server VM (build 1.5.0_06-b05, mixed mode)
","maven 2.0.9 RC6, ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i296lr:",9223372036854775807,,,,,,,,,,,,,,,,,,,"02/Apr/08 07:42;brettporter;fixed - though you should really add the missing <id> to settings.xml in <mirror>;;;","02/Apr/08 07:53;david@davidkarlsen.com;Sure - how does it work?
http://maven.apache.org/ref/2.0.8/maven-settings/settings.html#class_mirror isn't very informative.
Probably all mirror's which have the same url have the same id?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
maven-toolchains missing from final binary.. need to update the assembly,MNG-3464,12794996,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,mkleint,mkleint,mkleint,14/Mar/08 12:18,31/Oct/14 01:32,03/Jan/22 13:13,16/Mar/08 15:29,2.0.9,,,,,2.0.9,,,Command Line,Toolchains,,,,0,,,,the newly added toolchains components are not packaged in the final binary fo 2.0.9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28ts7:",9223372036854775807,,,,,,,,,,,,,,,,,,,"14/Mar/08 16:33;jdcasey;done, just needed to be added to the dependencyManagement in the maven top-level POM and the dependencies of the maven-core POM.;;;","14/Mar/08 16:46;jdcasey;adds a cyclic dependency when added to maven-core...I didn't realize this. I need to move the assembly stuff out to a new module.;;;","14/Mar/08 20:32;jdcasey;Milos, I have a working fix for this, but Brian mentioned you already had something you thought would work. If you have any trouble, let me know.;;;","15/Mar/08 00:41;mkleint;i have split the assembly into a separate module, it depends on core and toolchain. it seems to work. Is your fix along those lines?
;;;","15/Mar/08 09:47;jdcasey;Mine does the same thing, though there are also changes that need to be done for the integration-test executor, and the src/bin, src/conf, and NOTICE.txt, etc. files need to be moved as well.;;;","16/Mar/08 15:29;mkleint;http://svn.apache.org/viewvc?rev=637648&view=rev
;;;","16/Mar/08 16:17;mkleint;and
http://svn.apache.org/viewvc?rev=637657&view=rev;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
regression : <dependency> in plugin configuration doesn't override plugin classpath,MNG-3426,12794986,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,jdcasey,ndeloof,ndeloof,02/Mar/08 13:01,21/Mar/08 11:30,03/Jan/22 13:13,21/Mar/08 11:05,2.0.8,,,,,2.0.9,,,Plugin API,,,,,0,,,,"Many maven plugins are wrapper around other tools. The plugin is designed for a version of the tool, and in many case user will want to use a specific version without having to patch the plugin. The <dependency> element on plugin configuration is a common way to do this, by overriding the plugin POM dependency with another version. 

<plugin>
   <artifactId>castor-maven-plugin</artifactId>
   <dependencies>
       <dependency>
            <groupId>org.codehaus.castor</groupId>
            <artifactId>castor</artifactId>
            <version>VERSION OF CASTOR I WANT TO USE FOR CODE GENERATION</version>
       </dependency>
   </dependencies>
</plugin>

This used to work with maven < 2.0.8

In maven 2.0.8, this doesn't work anymore as the <dependency> set in plugin configuration is added to plugin classpath, as a duplicate for the one declared by the plugin but LATER in the classpath (but I may be wrong on this analysis).",,,,,,,,,,,,,,,,,MNG-2972,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-3119,MNG-3473,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28ven:",9223372036854775807,,,,,,,,,,,,,,,,,,,"02/Mar/08 14:55;brettporter;Hi nicolas - are you working on this yourself?

If you have a test case, I'd like to ensure we get this in to 2.0.9.
;;;","03/Mar/08 01:47;ndeloof;Yes, I plan to both provide a test case and investigate to fix this in 2.0.9.
;;;","03/Mar/08 03:52;ndeloof;testcase committed in maven\core-integration-testing\core-integration-tests
testcase uses castor-maven-plugin as castor codegen includes castor version in generated files header
on maven 2.0.8, generated code is always for 1.1.2.1, as specified by plugin dependencies, even when <dependency> is set on plugin configuration.

;;;","03/Mar/08 03:58;ndeloof;Use a LinkedHashSet to make plugin dependencies ordering predictable (same as maven 2.1) and place project.build.plugin.dependencies prior to plugin POM dependencies;;;","20/Mar/08 15:01;brianf@infinity.nu;This issue causes MNG-3473. Reverting the change in v633014 causes the tests to pass.;;;","20/Mar/08 23:10;paul4christ79;I know MNG-3473 was reverted, but why since 2.0.9 is all about increasing stability? It seems, in my opinion, that these two should be solved together. If this is about timing, I don't see a critical need to push out 2.0.9 soon. Just my 2 cents.;;;","21/Mar/08 11:05;jdcasey;The move to use LinkedHashSet was definitely correct IMO, but it led to some weird side effects for dependency ordering. I've gone back and added a pre-processing step using a LinkedHashMap to merge in the plugin-level dependencies and those from the plugin-POM itself. I kept the plugin-level deps as first to be added, which gives them precedence (so they can replace dependencies from the plugin POM), but added code to make sure any duplicates according to dependencyConflictId are avoided. This is consistent with dependencies in the POM, where duplicates there should lead to a model validation exception during project building.

I think this issue can safely be put to bed now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"got the error like(Searching repository for plugin with prefix: 'archetype',repository is black listed,The plugin 'org.apache.maven.plugins:maven-archetype-plugin' does not exits)",MNG-3411,12794975,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Duplicate,,rthenge,rthenge,19/Feb/08 05:05,05/Mar/08 20:23,03/Jan/22 13:13,05/Mar/08 20:23,2.0.8,,,,,,,,Artifacts and Repositories,Command Line,,,,0,,,,"I start maven to use in my project but I got the errors Please help to solve this.

C:\Documents and Settings\rahult4\Desktop>mvn archetype:create -DgroupId=com.myc
ompany.app -DartifactId=my-app
[INFO] Scanning for projects...
[INFO] Searching repository for plugin with prefix: 'archetype'.
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] The plugin 'org.apache.maven.plugins:maven-archetype-plugin' does not exi
st or no valid version could be found
[INFO] ------------------------------------------------------------------------
[INFO] For more information, run Maven with the -e switch
[INFO] ------------------------------------------------------------------------
[INFO] Total time: < 1 second
[INFO] Finished at: Tue Feb 19 16:27:14 IST 2008
[INFO] Final Memory: 1M/2M
[INFO] ------------------------------------------------------------------------",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-3415,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28vrb:",9223372036854775807,,,,,,,,,,,,,,,,,,,"05/Mar/08 20:23;brianf@infinity.nu;This is caused by junk metadata in your repo.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Plugin versions inherited via <pluginManagement> cannot be overriden by <build>.<plugins> section of sub modules,MNG-3394,12794946,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,jdcasey,bentmann,bentmann,09/Feb/08 07:41,07/Mar/08 13:42,03/Jan/22 13:13,07/Mar/08 13:42,2.0.8,,,,,2.0.9,,,Inheritance and Interpolation,,,,,0,,,,See the comments in the module POM of the attached demo project for more explanation.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-3395,,,"09/Feb/08 07:41;bentmann;plugin-management-version.zip;https://issues.apache.org/jira/secure/attachment/12712224/plugin-management-version.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29ce7:",9223372036854775807,,,,,,,,,,,,,,,,,,,"17/Feb/08 15:27;brettporter;I think this is intended behaviour - what if you change the pluginManagement of child modules?;;;","17/Feb/08 15:55;bentmann;bq. I think this is intended behaviour
Oh please not. What would be the rationale for that? If a user explicitly declares a {{<version>}} element under {{<build>.<plugins>}} isn't that a clear indication of this intention to use that version? Do you want to explain to users why that is ignored and they need to hassle with setting up a {{<pluginManagement>}} entry just for the fun of overriding a plugin version inherited from the parent? Do you want to clarify why the little sentence ""Plugin Management contains plugin elements in much the same way, except that *rather than configuring plugin information for this particular project* build, it is intended to configure project builds that inherit from this one."" that users learned from http://maven.apache.org/pom.html#Plugin_Management is not quite up with the reality?

Last but not least, the lack to override the version only manifest itself
a) for a lifecycle phase, not for a direct mojo invocation
b) only for the first lifecycle phase

bq. what if you change the pluginManagement of child modules?
As I already commented in the attached demo POMs, this successfully allows the childs to change the version.;;;","17/Feb/08 16:03;brettporter;right - I agree it makes sense - my main concern is inconsistency with the deendencyManagement. But if anything is ever given it should either be honoured or an error if it's incompatible. So changing the behaviour makes sense in this case.;;;","17/Feb/08 16:16;bentmann;bq. my main concern is inconsistency with the deendencyManagement
Is this to say a child module's {{<dependencies>.<dependency>}} cannot override an inherited dependency version from the parent? The child POM should always win over the parent POM since it is the most specific descriptor for a build.;;;","04/Mar/08 16:34;sisbell;I've look at the code. There is a problem in the DefaultPluginManager.verifyVersionedPlugin. The method correctly determines the version of the plugin but then it makes a last invocation of pluginCollector.getPluginDescriptor( plugin ), which over rides the correct version of the plugin. There is a comment in the code of pluginCollector.getPluginDescriptor, which seems to touch on this problem:

        // TODO: include version, but can't do this in the plugin manager as it is not resolved to the right version
        // at that point. Instead, move the duplication check to the artifact container, or store it locally based on
        // the unresolved version?

I'll keep digging to see how to fix it.
;;;","05/Mar/08 11:02;jdcasey;the *Management sections of the POM were originally designed to provide default values, not overrides. This behavior was changed for dependencies in MNG-1577 IIRC, but I don't know when the change was made for plugins. The behavior should probably be controlled in the class org.apache.maven.project.injection.DefaultModelDefaultsInjector.java (in maven-project). I've looked into this class in both 2.0.x and trunk, and they're the same...not sure whether that means the change happened before the split (unlikely) or was ported across (more likely), but in both cases it looks like it only uses the pluginManagement version if the main version is missing and the pluginManagement version is not.

I'm not really sure what's going on here, but hopefully that can shed a little light on the background for this.

;;;","06/Mar/08 11:37;jdcasey;The code on that ModelDefaultsInjector impl seems nearly identical between 2.0.x/HEAD and 2.1/HEAD (slight formatting diffs), but the two behave dramatically different on this point. 2.1-SNAPSHOT allows local override of plugin version (in the build/plugins section), where 2.0.9-SNAPSHOT does not. I'm not sure where else pluginManagement comes into play (it probably shouldn't be in play at all once the project instance is built), but the difference must lie outside of the defaults injector...

Sorry for the red herring.;;;","06/Mar/08 13:36;jdcasey;The problem seems to be coming from the DefaultLifecycleExecutor.getMojoDescriptor(..) method. After parsing or otherwise acquiring a Plugin object for the task being invoked, it blindly injects pluginManagement values without first checking the project for a matching non-pluginManagement plugin entry...then, it passes the plugin off to the DefaultPluginManager.verifyPlugin(..) method, which from what I can tell would have done this in the correct order (including  the project/build/plugins/plugin info over the pluginManagement info).

I'm currently trying to figure out whether we can remove the project.injectPluginManagementInfo(..) call from DefaultLifecycleExecutor.getMojoDescriptor(..), to simplify things and restore some semblance of sanity. ;-);;;","07/Mar/08 13:42;jdcasey;Fixed, and IT is in place to keep it from coming back.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StackOverflowError in DefaultMavenProjectBuilder,MNG-3391,12794937,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,bentmann,carlos,carlos,08/Feb/08 12:37,01/Sep/09 08:09,03/Jan/22 13:13,01/Sep/09 08:09,3.0,3.0-alpha-1,,,,3.0-alpha-3,,,Inheritance and Interpolation,,,,,7,,,,"checkout https://svn.apache.org/repos/asf/servicemix/smx3/trunk and try to run a goail in samples/cxf-wsdl-first 
if you checkout only https://svn.apache.org/repos/asf/servicemix/smx3/trunk/samples/cxf-wsdl-first  there's no problem, so it must be something to do with the parents

Revisions tested: 619946 and 609730

$ mvn process-test-resources
[WARNING] Deprecated expression: ${version} - missing prefix. Use ${pom.version} (model: org.apache.servicemix:servicemix:pom:3.3-SNAPSHOT)
[INFO] Attempting to resolve a version for plugin: org.apache.servicemix.tooling:jbi-maven-plugin using meta-version: LATEST
---------------------------------------------------
constituent[0]: file:/d:/apps/apache-maven-2.1-SNAPSHOT/lib/aspectjrt-1.5.3.jar
constituent[1]: file:/d:/apps/apache-maven-2.1-SNAPSHOT/lib/backport-util-concurrent-3.0.jar
constituent[2]: file:/d:/apps/apache-maven-2.1-SNAPSHOT/lib/commons-cli-1.0.jar
constituent[3]: file:/d:/apps/apache-maven-2.1-SNAPSHOT/lib/doxia-sink-api-1.0-alpha-9.jar
constituent[4]: file:/d:/apps/apache-maven-2.1-SNAPSHOT/lib/jsch-0.1.27.jar
constituent[5]: file:/d:/apps/apache-maven-2.1-SNAPSHOT/lib/jtidy-4aug2000r7-dev.jar
constituent[6]: file:/d:/apps/apache-maven-2.1-SNAPSHOT/lib/maven-artifact-3.0-20080208.175410-49.jar
constituent[7]: file:/d:/apps/apache-maven-2.1-SNAPSHOT/lib/maven-core-2.1-20080208.175921-35.jar
constituent[8]: file:/d:/apps/apache-maven-2.1-SNAPSHOT/lib/maven-embedder-2.1-SNAPSHOT-sources.jar
constituent[9]: file:/d:/apps/apache-maven-2.1-SNAPSHOT/lib/maven-embedder-2.1-SNAPSHOT.jar
constituent[10]: file:/d:/apps/apache-maven-2.1-SNAPSHOT/lib/maven-lifecycle-2.1-20080208.175921-36.jar
constituent[11]: file:/d:/apps/apache-maven-2.1-SNAPSHOT/lib/maven-model-2.1-20080208.175921-40.jar
constituent[12]: file:/d:/apps/apache-maven-2.1-SNAPSHOT/lib/maven-plugin-api-2.1-20080208.175921-35.jar
constituent[13]: file:/d:/apps/apache-maven-2.1-SNAPSHOT/lib/maven-profile-2.1-20080208.175921-37.jar
constituent[14]: file:/d:/apps/apache-maven-2.1-SNAPSHOT/lib/maven-project-2.1-20080208.175921-38.jar
constituent[15]: file:/d:/apps/apache-maven-2.1-SNAPSHOT/lib/maven-reporting-api-2.1-20080208.175921-19.jar
constituent[16]: file:/d:/apps/apache-maven-2.1-SNAPSHOT/lib/plexus-container-default-1.0-alpha-44.jar
constituent[17]: file:/d:/apps/apache-maven-2.1-SNAPSHOT/lib/plexus-interactivity-api-1.0-alpha-6.jar
constituent[18]: file:/d:/apps/apache-maven-2.1-SNAPSHOT/lib/plexus-utils-1.4.5.jar
constituent[19]: file:/d:/apps/apache-maven-2.1-SNAPSHOT/lib/retrotranslator-runtime-1.2.1.jar
constituent[20]: file:/d:/apps/apache-maven-2.1-SNAPSHOT/lib/wagon-file-1.0-beta-2.jar
constituent[21]: file:/d:/apps/apache-maven-2.1-SNAPSHOT/lib/wagon-http-lightweight-1.0-beta-2.jar
constituent[22]: file:/d:/apps/apache-maven-2.1-SNAPSHOT/lib/wagon-http-shared-1.0-beta-2.jar
constituent[23]: file:/d:/apps/apache-maven-2.1-SNAPSHOT/lib/wagon-provider-api-1.0-beta-2.jar
constituent[24]: file:/d:/apps/apache-maven-2.1-SNAPSHOT/lib/wagon-ssh-1.0-beta-2.jar
constituent[25]: file:/d:/apps/apache-maven-2.1-SNAPSHOT/lib/wagon-ssh-common-1.0-beta-2.jar
constituent[26]: file:/d:/apps/apache-maven-2.1-SNAPSHOT/lib/wagon-ssh-external-1.0-beta-2.jar
---------------------------------------------------
Exception in thread ""main"" java.lang.StackOverflowError
        at java.lang.Character.toUpperCase(Character.java:4278)
        at java.lang.String.regionMatches(String.java:1384)
        at java.lang.String.equalsIgnoreCase(String.java:1120)
        at sun.net.www.protocol.jar.Handler.parseURL(Handler.java:59)
        at java.net.URL.<init>(URL.java:596)
        at java.net.URL.<init>(URL.java:464)
        at sun.misc.URLClassPath$JarLoader.checkResource(URLClassPath.java:671)
        at sun.misc.URLClassPath$JarLoader.getResource(URLClassPath.java:756)
        at sun.misc.URLClassPath$JarLoader.findResource(URLClassPath.java:732)
        at sun.misc.URLClassPath.findResource(URLClassPath.java:145)
        at java.net.URLClassLoader$2.run(URLClassLoader.java:362)
        at java.security.AccessController.doPrivileged(Native Method)
        at java.net.URLClassLoader.findResource(URLClassLoader.java:359)
        at java.lang.ClassLoader.getResource(ClassLoader.java:977)
        at org.codehaus.plexus.classworlds.realm.ClassRealm.getRealmResource(ClassRealm.java:179)
        at org.codehaus.plexus.classworlds.strategy.DefaultStrategy.getResource(DefaultStrategy.java:94)
        at org.codehaus.plexus.classworlds.strategy.ForeignStrategy.getResource(ForeignStrategy.java:53)
        at org.codehaus.plexus.classworlds.realm.ClassRealm.getResource(ClassRealm.java:206)
        at java.lang.Class.getResource(Class.java:2074)
        at org.apache.maven.project.DefaultMavenProjectBuilder.getSuperModel(DefaultMavenProjectBuilder.java:1395)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildInternal(DefaultMavenProjectBuilder.java:630)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody2(DefaultMavenProjectBuilder.java:210)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody3$advice(DefaultMavenProjectBuilder.java:206)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository(DefaultMavenProjectBuilder.java:1)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody0(DefaultMavenProjectBuilder.java:199)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody1$advice(DefaultMavenProjectBuilder.java:206)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository(DefaultMavenProjectBuilder.java:1)
        at org.apache.maven.project.DefaultMavenProjectBuilder.mergeManagedDependencies(DefaultMavenProjectBuilder.java:1114)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildInternal(DefaultMavenProjectBuilder.java:745)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody2(DefaultMavenProjectBuilder.java:210)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody3$advice(DefaultMavenProjectBuilder.java:206)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository(DefaultMavenProjectBuilder.java:1)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody0(DefaultMavenProjectBuilder.java:199)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody1$advice(DefaultMavenProjectBuilder.java:206)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository(DefaultMavenProjectBuilder.java:1)
        at org.apache.maven.project.DefaultMavenProjectBuilder.mergeManagedDependencies(DefaultMavenProjectBuilder.java:1114)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildInternal(DefaultMavenProjectBuilder.java:745)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody2(DefaultMavenProjectBuilder.java:210)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody3$advice(DefaultMavenProjectBuilder.java:206)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository(DefaultMavenProjectBuilder.java:1)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody0(DefaultMavenProjectBuilder.java:199)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody1$advice(DefaultMavenProjectBuilder.java:206)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository(DefaultMavenProjectBuilder.java:1)
        at org.apache.maven.project.DefaultMavenProjectBuilder.mergeManagedDependencies(DefaultMavenProjectBuilder.java:1114)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildInternal(DefaultMavenProjectBuilder.java:745)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody2(DefaultMavenProjectBuilder.java:210)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody3$advice(DefaultMavenProjectBuilder.java:206)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository(DefaultMavenProjectBuilder.java:1)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody0(DefaultMavenProjectBuilder.java:199)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody1$advice(DefaultMavenProjectBuilder.java:206)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository(DefaultMavenProjectBuilder.java:1)
        at org.apache.maven.project.DefaultMavenProjectBuilder.mergeManagedDependencies(DefaultMavenProjectBuilder.java:1114)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildInternal(DefaultMavenProjectBuilder.java:745)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody2(DefaultMavenProjectBuilder.java:210)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody3$advice(DefaultMavenProjectBuilder.java:206)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository(DefaultMavenProjectBuilder.java:1)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody0(DefaultMavenProjectBuilder.java:199)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody1$advice(DefaultMavenProjectBuilder.java:206)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository(DefaultMavenProjectBuilder.java:1)
        at org.apache.maven.project.DefaultMavenProjectBuilder.mergeManagedDependencies(DefaultMavenProjectBuilder.java:1114)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildInternal(DefaultMavenProjectBuilder.java:745)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody2(DefaultMavenProjectBuilder.java:210)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody3$advice(DefaultMavenProjectBuilder.java:206)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository(DefaultMavenProjectBuilder.java:1)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody0(DefaultMavenProjectBuilder.java:199)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody1$advice(DefaultMavenProjectBuilder.java:206)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository(DefaultMavenProjectBuilder.java:1)
        at org.apache.maven.project.DefaultMavenProjectBuilder.mergeManagedDependencies(DefaultMavenProjectBuilder.java:1114)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildInternal(DefaultMavenProjectBuilder.java:745)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody2(DefaultMavenProjectBuilder.java:210)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody3$advice(DefaultMavenProjectBuilder.java:206)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository(DefaultMavenProjectBuilder.java:1)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody0(DefaultMavenProjectBuilder.java:199)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody1$advice(DefaultMavenProjectBuilder.java:206)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository(DefaultMavenProjectBuilder.java:1)
        at org.apache.maven.project.DefaultMavenProjectBuilder.mergeManagedDependencies(DefaultMavenProjectBuilder.java:1114)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildInternal(DefaultMavenProjectBuilder.java:745)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody2(DefaultMavenProjectBuilder.java:210)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody3$advice(DefaultMavenProjectBuilder.java:206)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository(DefaultMavenProjectBuilder.java:1)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody0(DefaultMavenProjectBuilder.java:199)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody1$advice(DefaultMavenProjectBuilder.java:206)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository(DefaultMavenProjectBuilder.java:1)
        at org.apache.maven.project.DefaultMavenProjectBuilder.mergeManagedDependencies(DefaultMavenProjectBuilder.java:1114)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildInternal(DefaultMavenProjectBuilder.java:745)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody2(DefaultMavenProjectBuilder.java:210)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody3$advice(DefaultMavenProjectBuilder.java:206)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository(DefaultMavenProjectBuilder.java:1)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody0(DefaultMavenProjectBuilder.java:199)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody1$advice(DefaultMavenProjectBuilder.java:206)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository(DefaultMavenProjectBuilder.java:1)
        at org.apache.maven.project.DefaultMavenProjectBuilder.mergeManagedDependencies(DefaultMavenProjectBuilder.java:1114)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildInternal(DefaultMavenProjectBuilder.java:745)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody2(DefaultMavenProjectBuilder.java:210)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody3$advice(DefaultMavenProjectBuilder.java:206)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository(DefaultMavenProjectBuilder.java:1)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody0(DefaultMavenProjectBuilder.java:199)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody1$advice(DefaultMavenProjectBuilder.java:206)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository(DefaultMavenProjectBuilder.java:1)
        at org.apache.maven.project.DefaultMavenProjectBuilder.mergeManagedDependencies(DefaultMavenProjectBuilder.java:1114)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildInternal(DefaultMavenProjectBuilder.java:745)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody2(DefaultMavenProjectBuilder.java:210)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody3$advice(DefaultMavenProjectBuilder.java:206)",,,,,,,,,,,,,,,,,MNG-3452,,,,,,,,,,,,,,,,,,,,MNG-3483,MNG-3220,,,,,MNG-3483,,,,,,,,,,,"14/Apr/08 08:41;nodens2k;pom.xml;https://issues.apache.org/jira/secure/attachment/12712715/pom.xml",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i299gn:",9223372036854775807,,,,,,,,,,,,,,,,,,,"28/Feb/08 15:42;brettporter;I actually get this instead:
Exception in thread ""main"" java.lang.OutOfMemoryError: Java heap space
	at java.lang.String.<init>(String.java:208)
	at org.codehaus.plexus.util.xml.pull.MXParser.getText(MXParser.java:746)
	at org.codehaus.plexus.util.xml.pull.MXParser.nextText(MXParser.java:1060)
	at org.apache.maven.model.io.xpp3.MavenXpp3Reader.parseRepository(MavenXpp3Reader.java:3961)
	at org.apache.maven.model.io.xpp3.MavenXpp3Reader.parseModel(MavenXpp3Reader.java:2436)
	at org.apache.maven.model.io.xpp3.MavenXpp3Reader.read(MavenXpp3Reader.java:4614)
	at org.apache.maven.project.DefaultMavenProjectBuilder.readModel(DefaultMavenProjectBuilder.java:1162)
	at org.apache.maven.project.DefaultMavenProjectBuilder.findModelFromRepository(DefaultMavenProjectBuilder.java:492)
	at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody2(DefaultMavenProjectBuilder.java:208)
	at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody3$advice(DefaultMavenProjectBuilder.java:206)
	at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository(DefaultMavenProjectBuilder.java:1)
	at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody0(DefaultMavenProjectBuilder.java:199)
	at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody1$advice(DefaultMavenProjectBuilder.java:206)
	at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository(DefaultMavenProjectBuilder.java:1)
	at org.apache.maven.project.DefaultMavenProjectBuilder.mergeManagedDependencies(DefaultMavenProjectBuilder.java:1114)
	at org.apache.maven.project.DefaultMavenProjectBuilder.buildInternal(DefaultMavenProjectBuilder.java:745)
	at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody2(DefaultMavenProjectBuilder.java:210)
	at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody3$advice(DefaultMavenProjectBuilder.java:206)
	at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository(DefaultMavenProjectBuilder.java:1)
	at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody0(DefaultMavenProjectBuilder.java:199)
	at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody1$advice(DefaultMavenProjectBuilder.java:206)
	at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository(DefaultMavenProjectBuilder.java:1)
	at org.apache.maven.project.DefaultMavenProjectBuilder.mergeManagedDependencies(DefaultMavenProjectBuilder.java:1114)
	at org.apache.maven.project.DefaultMavenProjectBuilder.buildInternal(DefaultMavenProjectBuilder.java:745)
	at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody2(DefaultMavenProjectBuilder.java:210)
	at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody3$advice(DefaultMavenProjectBuilder.java:206)
	at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository(DefaultMavenProjectBuilder.java:1)
	at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody0(DefaultMavenProjectBuilder.java:199)
	at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository_aroundBody1$advice(DefaultMavenProjectBuilder.java:206)
	at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository(DefaultMavenProjectBuilder.java:1)
	at org.apache.maven.project.DefaultMavenProjectBuilder.mergeManagedDependencies(DefaultMavenProjectBuilder.java:1114)
	at org.apache.maven.project.DefaultMavenProjectBuilder.buildInternal(DefaultMavenProjectBuilder.java:745)

When run with 2.0.9 I get this quickly:
Downloading: http://localhost:7777/archiva/repository/internal//org/apache/servicemix/tooling/jbi-maven-plugin/3.3-SNAPSHOT/jbi-maven-plugin-3.3-SNAPSHOT.pom
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Failed to resolve artifact.

GroupId: org.apache.servicemix.tooling
ArtifactId: jbi-maven-plugin
Version: 3.3-SNAPSHOT

Reason: Unable to download the artifact from any repository

  org.apache.servicemix.tooling:jbi-maven-plugin:pom:3.3-SNAPSHOT

from the specified remote repositories:
  servicemix-m2-repo (http://svn.apache.org/repos/asf/servicemix/m2-repo/),
  codehaus (http://repository.codehaus.org),
  apache-incubating (http://people.apache.org/repo/m2-incubating-repository),
  apache-releases (http://people.apache.org/repo/m2-ibiblio-rsync-repository),
  central (http://repo1.maven.org/maven2),
  apache.snapshots (http://people.apache.org/repo/m2-snapshot-repository),
  apache-snapshots (http://people.apache.org/repo/m2-snapshot-repository),
  apache.incubating (http://people.apache.org/repo/m2-incubating-repository)

Since this is a regression I think we need it in alpha-1.;;;","10/Mar/08 21:47;jdcasey;The problem comes when one of the managed dependencies is of type 'pom' and inherits from the current pom. This creates a situation where mergeManagedDependencies(..) tries to resolve the descendant project instance, which during it's construction has to construct its ancestor project instances...a set that contains the current one.

And round and round we go.

I've isolated this locally, and will try to put together an integration test to express it simply. Hopefully then I can figure out how to solve it, since it would seem to demand that module projects already exist, while the call to build a module projects actually happens after DefaultMaven gets an instance of the parent back. So, it would seem that some sort of prescanning or post-processing would be in order, to connect the merged dependency maps after all projects are built.

Ralph (or anyone): Is there a reason why the mergeManagedDependencies(..) call happens before processProjectLogic(..)? Also, the buildWithDependencies(..) call will complicate this, since it's really in the wrong place (it's over-extending the reach of the MavenProjectBuilder's design by adding artifact resolution beyond the POM in question and its ancestry). ;;;","26/Mar/08 20:08;jdcasey;MNG-3483 goes a long way to limiting the ugliness of this bug...it limits it to new builds only, where import scope is used.;;;","14/Apr/08 08:41;nodens2k;A different test case;;;","14/Apr/08 08:47;nodens2k;I have uploaded an additional test-case. This one does not use service-mix, but some libraries from a grid-service development framework called GRIA.

The test project compiles with no problem with Maven 2.0.8 and Maven 2.0.9, but it runs for ages with 2.1 snapshot, finally throwing a SOE or an OOM, depending on the JVM arguments used (-Xmx and -Xss).

Best regards,
Rodrigo;;;","01/Oct/08 09:01;jvanzyl;I'm pretty sure this is fixed, but validate and close.;;;","01/Oct/08 21:27;sisbell;DefaultMavenProjectBuilder.mergeManagedDependencies has been replaced with the new project builder. I have verified that the test case pom builds with 3.0.;;;","04/Nov/08 05:24;bentmann;This is marked fixed but the corresponding core IT is still disabled and fails for me with trunk. From the README John left, I can't tell whether these failures are expected, i.e. the tests need to be fixed, or whether these indicate unresolved bugs.;;;","04/Nov/08 16:33;bentmann;Maven 3.x isn't going to support ""import"" scope, so it's ""Won't fix"" for this branch. Unclear is, whether we can do something about this in 2.x.;;;","04/Nov/08 18:45;ralphgoers;Rather than just say 3.x isn't going to support import scope it would be better to identify what the mechanism that achieves the same result is. Does that mechanism pass a corresponding IT?;;;","01/Sep/09 08:09;bentmann;Cycles are now properly reported as a model error instead of crashing.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Repository entries with same id are ignored,MNG-3375,12794941,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Duplicate,bentmann,carlos,carlos,24/Jan/08 22:37,14/Jun/09 08:03,03/Jan/22 13:13,14/Jun/09 08:03,2.0.8,,,,,,,,Artifacts and Repositories,,,,,1,,,,"If two <repository> entries have the same id one of them is ignored with no warning or error.
IIRC this worked with previous versions of maven, giving the same id allowed you to share the configuration in the settings.xml file (it may have been for deployment only though)",,,,,,,,,,,,,,,,,,,,,,,,MNG-4193,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Feb/09 11:39;MNG-3375-IT.tar.gz;https://issues.apache.org/jira/secure/attachment/12712882/MNG-3375-IT.tar.gz","05/Feb/09 12:13;MNG-3375-maven-project.patch;https://issues.apache.org/jira/secure/attachment/12712872/MNG-3375-maven-project.patch",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i2924v:",9223372036854775807,,,,,,,,,,,,,,,,,,,"05/Feb/09 12:13;torbengee;With this patch, Maven will throw an {{InvalidRepositoryException}} if a repository's ID is not unique and the build will fail. I opted for the build to fail (instead of just issuing a warning) because running a build against a completely different repository can be a source of unnecessary build problems. A simple warning could easily be missed.;;;","05/Feb/09 12:20;torbengee;BTW: I didn't really manage to write a test, because testing the function involved would require a fully configured / working {{PlexusContainer}} and, quite frankly, I ran into some problems. ;-) Someone more experienced than me should be able to construct a working test. Here's what my current test would look like, maybe someone can make some use of it:

{code}
	public void testShouldNotAllowDuplicateRepositoryIds()
	{
		Repository repo1 = new Repository();
		repo1.setId( ""first"" );
		repo1.setUrl(""non-empty-url"");
		repo1.setLayout(""default"");
		
		Repository repo2 = new Repository();
		repo2.setId( ""second"" );
		repo2.setUrl(""non-empty-url"");
		repo2.setLayout(""default"");
		
		Repository dupeRepo = new Repository();
		dupeRepo.setId( ""second"" );
		dupeRepo.setUrl(""non-empty-url"");
		dupeRepo.setLayout(""default"");
		
		List repoList = new ArrayList();
		repoList.add(repo1);
		repoList.add(repo2);
		
		DefaultPlexusContainer container = null;
		
		try
		{
			// TODO: initialize a working PlexusContainer ...
//			String basedir = System.getProperty( ""basedir"" );
//			InputStream configurationStream = this.getClass().getClassLoader().getResourceAsStream( ""PlexusContainerTest.xml"" );
//			container = new DefaultPlexusContainer();
//	        container.addContextValue( ""basedir"", basedir );
//	        container.addContextValue( ""plexus.home"", basedir + ""/target/plexus-home"" );
//	        container.setConfigurationResource( ReaderFactory.newXmlReader( configurationStream ) );
//	        container.initialize();
//	        container.start();

			ProjectUtils.buildArtifactRepositories( repoList, new DefaultArtifactRepositoryFactory(), container );
		}
		catch ( InvalidRepositoryException e )
		{
			fail( e.getMessage() );
		}
		
		
		// MNG-3375: exception should be thrown if two repository IDs are equal  
		repoList.add(dupeRepo);

		try
		{
			ProjectUtils.buildArtifactRepositories( repoList, new DefaultArtifactRepositoryFactory(), container );
			fail();
		}
		catch ( InvalidRepositoryException e ) {
			// exception should be thrown
		}
		
	}
{code}
;;;","28/Feb/09 11:39;torbengee;Here's an IT to test the patch -- instead of a unit test. :D;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven 2 says host in unavailable while in browser I can download from that repository,MNG-3373,12794947,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Incomplete,,markus-karg,markus-karg,22/Jan/08 14:46,01/Jul/09 11:57,03/Jan/22 13:13,01/Jul/09 11:55,2.0.8,,,,,,,,,,,,,0,,,,"I am using the offical Glassfish repository on java.net.

Maven tells me that it cannot resolve one of the references pointing into that repository. The stack trace tells me that the host is not available (see below).

In fact, when I go to that same URL in the browser, it downloads the artifact without any problem!

Also that worked for weeks and now is broken, but my POM didn't change!

So I assume a bug in WAGON.

Here is the POM excerpt, below the POM is the stack trace.

	<repositories>
		<repository>
			<id>glassfish-repository.dev.java.net</id>
			<name>Java.net Repository for Glassfish</name>
			<url>http://download.java.net/maven/glassfish</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>javax.resource</groupId>
			<artifactId>connector-api</artifactId>
			<version>1.5</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

org.apache.maven.lifecycle.LifecycleExecutionException: Unable to get dependency
 information: Unable to read the metadata file for artifact 'javax.resource:conn
ector-api:jar': Cannot find parent: org.glassfish.api:api for project: javax.res
ource:connector-api:jar:1.5 for project javax.resource:connector-api:jar:1.5
  javax.resource:connector-api:jar:1.5

from the specified remote repositories:
  central (http://repo1.maven.org/maven2),
  glassfish-repository.dev.java.net (http://download.java.net/maven/glassfish)
Path to dependency:
        1) net.sourceforge.rafc:rafc:jar:1.1.1
...
Caused by: java.net.UnknownHostException: download.java.net
        at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:177)
        at java.net.Socket.connect(Socket.java:519)
        at java.net.Socket.connect(Socket.java:469)
        at sun.net.NetworkClient.doConnect(NetworkClient.java:157)
        at sun.net.www.http.HttpClient.openServer(HttpClient.java:394)
        at sun.net.www.http.HttpClient.openServer(HttpClient.java:529)
        at sun.net.www.http.HttpClient.<init>(HttpClient.java:233)
        at sun.net.www.http.HttpClient.New(HttpClient.java:306)
        at sun.net.www.http.HttpClient.New(HttpClient.java:323)
        at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLC
onnection.java:788)
        at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConne
ction.java:729)
        at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection
.java:654)
        at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLCon
nection.java:977)
        at org.apache.maven.wagon.providers.http.LightweightHttpWagon.fillInputD
ata(LightweightHttpWagon.java:83)
        ... 33 more",,,,,,,,,,,,,,,,,MNG-4183,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i2933z:",9223372036854775807,,,,,,,,,,,,,,,,,,,"22/Jan/08 15:26;dennisl@apache.org;The stack trace tells us this:

from the specified remote repositories:
  central (http://repo1.maven.org/maven2),
  glassfish-repository.dev.java.net (http://download.java.net/maven/glassfish)
Path to dependency:
        1) net.sourceforge.rafc:rafc:jar:1.1.1


Meaning that Maven cannot download net.sourceforge.rafc:rafc:jar:1.1.1 from either central or the glassfish repo. That seem correct to me, because I cannot find that artifact in either of the repos.

;;;","23/Jan/08 12:56;markus-karg;Then please explain why Maven is trying to download net.sourceforge.rafc:rafc:jar:1.1.1 from either central or the glassfish repo. I ask that question because actually what I currently try to do is to build exactly that RAFC jar. So Maven wants to download what it just is building? Weird.

Here is the complete pom, maybe there is fault in it?

<project>
	<modelVersion>4.0.0</modelVersion>
	<groupId>net.sourceforge.rafc</groupId>
	<artifactId>rafc</artifactId>
	<version>1.1.1</version>
	<name>RAFC</name>
	<url>http://rafc.sourceforge.net</url>
	<description>RA Foundation Classes is a framework that helps in implementing JCA 1.5 compliant resource adapters.</description>
	<licenses>
		<license>
			<name>GNU General Public License Version 2</name>
			<url>http://www.gnu.org/licenses/old-licenses/gpl-2.0.html</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<scm>
		<connection>scm:svn:https://rafc.svn.sourceforge.net/svnroot/rafc</connection>
		<url>http://rafc.svn.sourceforge.net/viewvc/rafc</url>
	</scm>

	<repositories>
		<repository>
			<id>glassfish-repository.dev.java.net</id>
			<name>Java.net Repository for Glassfish</name>
			<url>http://download.java.net/maven/glassfish</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>javax.resource</groupId>
			<artifactId>connector-api</artifactId>
			<version>1.5</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>
</project>

So what to do now?

I did MVN CLEAN INSTALL and get this result:

[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] Building RAFC
[INFO]    task-segment: [clean, install]
[INFO] ------------------------------------------------------------------------
[INFO] [clean:clean]
[INFO] [resources:resources]
[INFO] Using default encoding to copy filtered resources.
[INFO] snapshot org.glassfish.api:api:10.0-SNAPSHOT: checking for updates from g
lassfish-repository.dev.java.net
[WARNING] repository metadata for: 'snapshot org.glassfish.api:api:10.0-SNAPSHOT
' could not be retrieved from repository: glassfish-repository.dev.java.net due
to an error: Error transferring file
[INFO] Repository 'glassfish-repository.dev.java.net' will be blacklisted
[INFO] snapshot org.glassfish:glassfish-parent:10.0-SNAPSHOT: checking for updat
es from glassfish-repository
[WARNING] repository metadata for: 'snapshot org.glassfish:glassfish-parent:10.0
-SNAPSHOT' could not be retrieved from repository: glassfish-repository due to a
n error: Error transferring file
[INFO] Repository 'glassfish-repository' will be blacklisted
[INFO] [compiler:compile]
[INFO] Compiling 9 source files to C:\Dokumente und Einstellungen\Markus\workspa
ce\RAFC\target\classes
[INFO] [resources:testResources]
[INFO] Using default encoding to copy filtered resources.
[INFO] [compiler:testCompile]
[INFO] No sources to compile
[INFO] [surefire:test]
[INFO] No tests to run.
[INFO] [jar:jar]
[INFO] Building jar: C:\Dokumente und Einstellungen\Markus\workspace\RAFC\target
\rafc-1.1.1.jar
[INFO] [install:install]
[INFO] Installing C:\Dokumente und Einstellungen\Markus\workspace\RAFC\target\ra
fc-1.1.1.jar to C:\Dokumente und Einstellungen\Markus\.m2\repository\net\sourcef
orge\rafc\rafc\1.1.1\rafc-1.1.1.jar
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESSFUL
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 6 seconds
[INFO] Finished at: Wed Jan 23 19:55:29 CET 2008
[INFO] Final Memory: 6M/12M
[INFO] ------------------------------------------------------------------------

Then one second late I did the same again and get THAT result:

[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] Building RAFC
[INFO]    task-segment: [clean, install]
[INFO] ------------------------------------------------------------------------
[INFO] [clean:clean]
[INFO] Deleting directory C:\Dokumente und Einstellungen\Markus\workspace\RAFC\t
arget
[INFO] [resources:resources]
[INFO] Using default encoding to copy filtered resources.
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Error building POM (may not be this project's POM).


Project ID: javax.resource:connector-api:jar:1.5

Reason: Cannot find parent: org.glassfish.api:api for project: javax.resource:co
nnector-api:jar:1.5 for project javax.resource:connector-api:jar:1.5


[INFO] ------------------------------------------------------------------------
[INFO] For more information, run Maven with the -e switch
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 2 seconds
[INFO] Finished at: Wed Jan 23 19:55:52 CET 2008
[INFO] Final Memory: 4M/8M
[INFO] ------------------------------------------------------------------------

If I NOW apply the -e switch I will get the exception I already posted in the original bug report.

Any ideas?;;;","03/Jun/08 15:50;jdcasey;org.apache.maven.lifecycle.LifecycleExecutionException: Unable to get dependency
information: Unable to read the metadata file for artifact 'javax.resource:conn
ector-api:jar': Cannot find parent: org.glassfish.api:api for project: javax.res
ource:connector-api:jar:1.5 for project javax.resource:connector-api:jar:1.5
javax.resource:connector-api:jar:1.5
------

Actually, it looks to me like it's getting caught while trying to resolve javax.resource:connector-api:1.5, specifically because the parent:

org.glassfish.api:api 

can't be resolved for some reason. When I checked just now, javax.resource:connector-api:1.5 specified a parent version of 10.0-SNAPSHOT for the glassfish api parent-POM. 'm a little stumped as to why that would be the case, since it's in the java.net repository and that repository is obviously reachable from Maven, but that's definitely the sticking point:

Cannot find parent: org.glassfish.api:api for project: javax.resource:connector-api:jar:1.5

Maybe if you execute the build with the -X flag and capture the output to a file (`mvn -X clean install > build.log` or similar) it would shed more light on why it cannot download that parent POM.;;;","03/Jun/08 15:51;jdcasey;Also, can you verify that this is still broken in 2.0.9?;;;","03/Jul/08 19:06;jdcasey;Pushing to 2.0.11 so we can have a smaller set of high-value issues to target for the next release (2.0.10).;;;","01/Jul/09 11:55;brettporter;request for info wasn't followed up and this is no longer relevant in 2.2.0 (switched to httpclient);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MavenEmbedder can not be instanciated,MNG-3363,12796615,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,,baghira,baghira,14/Jan/08 04:24,14/Dec/08 06:03,03/Jan/22 13:13,13/Dec/08 18:30,3.0-alpha-1,,,,,3.0-alpha-1,,,Embedding,,,,,0,,,,"The embedder is throwing an error while calling its constructor [new MavenEmbedder(configuration);]
Version: maven-embedder-2.1-20080107.182656-29.jar (2.1-SNAPSHOT tree)

Code fragment:
import org.apache.maven.artifact.Artifact;
import org.apache.maven.artifact.repository.ArtifactRepository;
import org.apache.maven.artifact.repository.DefaultArtifactRepository;
import org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout;
import org.apache.maven.artifact.repository.layout.DefaultRepositoryLayout;
import org.apache.maven.artifact.repository.layout.LegacyRepositoryLayout;
import org.apache.maven.artifact.resolver.ArtifactNotFoundException;
import org.apache.maven.artifact.resolver.ArtifactResolutionException;
import org.apache.maven.embedder.Configuration;
import org.apache.maven.embedder.ConfigurationValidationResult;
import org.apache.maven.embedder.DefaultConfiguration;
import org.apache.maven.embedder.MavenEmbedder;
import org.apache.maven.settings.Profile;
import org.apache.maven.settings.Repository;
import org.apache.maven.settings.Settings;
import org.apache.maven.settings.SettingsUtils;
import org.apache.maven.settings.TrackableBase;
import org.apache.maven.settings.io.xpp3.SettingsXpp3Reader;
import org.codehaus.plexus.util.IOUtil;
import org.codehaus.plexus.util.xml.pull.XmlPullParserException;

...

DefaultConfiguration configuration = new DefaultConfiguration();
configuration.setLocalRepository(_localRepFile);
configuration.setGlobalSettingsFile(globalSettingsFiles);
ConfigurationValidationResult validationResult = MavenEmbedder.validateConfiguration( configuration );
  if ( validationResult.isValid() )
  {
    try
    {
       MavenEmbedder embedder = new MavenEmbedder(configuration);

Stack trace:
java.lang.UnsupportedOperationException: You cannot modify this list. This list is a requirement of role: 'org.apache.maven.artifact.transform.ArtifactTransformationManager', implementation: 'org.apache.maven.artifact.transform.DefaultArtifactTransformationManager', role hint: 'default' and managed by the container.
	at org.codehaus.plexus.component.collections.ComponentList.remove(ComponentList.java:91)
	at org.apache.maven.artifact.transform.DefaultArtifactTransformationManager.initialize(DefaultArtifactTransformationManager.java:45)
	at org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializePhase.execute(InitializePhase.java:33)
	at org.codehaus.plexus.lifecycle.AbstractLifecycleHandler.start(AbstractLifecycleHandler.java:97)
	at org.codehaus.plexus.component.manager.AbstractComponentManager.startComponentLifecycle(AbstractComponentManager.java:136)
	at org.codehaus.plexus.component.manager.AbstractComponentManager.createComponentInstance(AbstractComponentManager.java:126)
	at org.codehaus.plexus.component.manager.ClassicSingletonComponentManager.getComponent(ClassicSingletonComponentManager.java:96)
	at org.codehaus.plexus.DefaultComponentLookupManager.lookup(DefaultComponentLookupManager.java:147)
	at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:494)
	at org.codehaus.plexus.component.composition.AbstractComponentComposer.findRequirement(AbstractComponentComposer.java:204)
	at org.codehaus.plexus.component.composition.FieldComponentComposer.assignRequirementToField(FieldComponentComposer.java:72)
	at org.codehaus.plexus.component.composition.FieldComponentComposer.assignRequirement(FieldComponentComposer.java:62)
	at org.codehaus.plexus.component.composition.AbstractComponentComposer.assembleComponent(AbstractComponentComposer.java:101)
	at org.codehaus.plexus.component.composition.DefaultComponentComposerManager.assembleComponent(DefaultComponentComposerManager.java:76)
	at org.codehaus.plexus.personality.plexus.lifecycle.phase.CompositionPhase.execute(CompositionPhase.java:46)
	at org.codehaus.plexus.lifecycle.AbstractLifecycleHandler.start(AbstractLifecycleHandler.java:97)
	at org.codehaus.plexus.component.manager.AbstractComponentManager.startComponentLifecycle(AbstractComponentManager.java:136)
	at org.codehaus.plexus.component.manager.AbstractComponentManager.createComponentInstance(AbstractComponentManager.java:126)
	at org.codehaus.plexus.component.manager.ClassicSingletonComponentManager.getComponent(ClassicSingletonComponentManager.java:96)
	at org.codehaus.plexus.DefaultComponentLookupManager.lookup(DefaultComponentLookupManager.java:147)
	at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:494)
	at org.codehaus.plexus.component.composition.AbstractComponentComposer.findRequirement(AbstractComponentComposer.java:204)
	at org.codehaus.plexus.component.composition.FieldComponentComposer.assignRequirementToField(FieldComponentComposer.java:72)
	at org.codehaus.plexus.component.composition.FieldComponentComposer.assignRequirement(FieldComponentComposer.java:62)
	at org.codehaus.plexus.component.composition.AbstractComponentComposer.assembleComponent(AbstractComponentComposer.java:101)
	at org.codehaus.plexus.component.composition.DefaultComponentComposerManager.assembleComponent(DefaultComponentComposerManager.java:76)
	at org.codehaus.plexus.personality.plexus.lifecycle.phase.CompositionPhase.execute(CompositionPhase.java:46)
	at org.codehaus.plexus.lifecycle.AbstractLifecycleHandler.start(AbstractLifecycleHandler.java:97)
	at org.codehaus.plexus.component.manager.AbstractComponentManager.startComponentLifecycle(AbstractComponentManager.java:136)
	at org.codehaus.plexus.component.manager.AbstractComponentManager.createComponentInstance(AbstractComponentManager.java:126)
	at org.codehaus.plexus.component.manager.ClassicSingletonComponentManager.getComponent(ClassicSingletonComponentManager.java:96)
	at org.codehaus.plexus.DefaultComponentLookupManager.lookup(DefaultComponentLookupManager.java:147)
	at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:494)
	at org.codehaus.plexus.component.composition.AbstractComponentComposer.findRequirement(AbstractComponentComposer.java:204)
	at org.codehaus.plexus.component.composition.FieldComponentComposer.assignRequirementToField(FieldComponentComposer.java:72)
	at org.codehaus.plexus.component.composition.FieldComponentComposer.assignRequirement(FieldComponentComposer.java:62)
	at org.codehaus.plexus.component.composition.AbstractComponentComposer.assembleComponent(AbstractComponentComposer.java:101)
	at org.codehaus.plexus.component.composition.DefaultComponentComposerManager.assembleComponent(DefaultComponentComposerManager.java:76)
	at org.codehaus.plexus.personality.plexus.lifecycle.phase.CompositionPhase.execute(CompositionPhase.java:46)
	at org.codehaus.plexus.lifecycle.AbstractLifecycleHandler.start(AbstractLifecycleHandler.java:97)
	at org.codehaus.plexus.component.manager.AbstractComponentManager.startComponentLifecycle(AbstractComponentManager.java:136)
	at org.codehaus.plexus.component.manager.AbstractComponentManager.createComponentInstance(AbstractComponentManager.java:126)
	at org.codehaus.plexus.component.manager.ClassicSingletonComponentManager.getComponent(ClassicSingletonComponentManager.java:96)
	at org.codehaus.plexus.DefaultComponentLookupManager.lookup(DefaultComponentLookupManager.java:147)
	at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:494)
	at org.codehaus.plexus.component.composition.AbstractComponentComposer.findRequirement(AbstractComponentComposer.java:204)
	at org.codehaus.plexus.component.composition.FieldComponentComposer.assignRequirementToField(FieldComponentComposer.java:72)
	at org.codehaus.plexus.component.composition.FieldComponentComposer.assignRequirement(FieldComponentComposer.java:62)
	at org.codehaus.plexus.component.composition.AbstractComponentComposer.assembleComponent(AbstractComponentComposer.java:101)
	at org.codehaus.plexus.component.composition.DefaultComponentComposerManager.assembleComponent(DefaultComponentComposerManager.java:76)
	at org.codehaus.plexus.personality.plexus.lifecycle.phase.CompositionPhase.execute(CompositionPhase.java:46)
	at org.codehaus.plexus.lifecycle.AbstractLifecycleHandler.start(AbstractLifecycleHandler.java:97)
	at org.codehaus.plexus.component.manager.AbstractComponentManager.startComponentLifecycle(AbstractComponentManager.java:136)
	at org.codehaus.plexus.component.manager.AbstractComponentManager.createComponentInstance(AbstractComponentManager.java:126)
	at org.codehaus.plexus.component.manager.PerLookupComponentManager.getComponent(PerLookupComponentManager.java:45)
	at org.codehaus.plexus.DefaultComponentLookupManager.lookup(DefaultComponentLookupManager.java:147)
	at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:494)
	at org.codehaus.plexus.component.composition.AbstractComponentComposer.findRequirement(AbstractComponentComposer.java:204)
	at org.codehaus.plexus.component.composition.FieldComponentComposer.assignRequirementToField(FieldComponentComposer.java:72)
	at org.codehaus.plexus.component.composition.FieldComponentComposer.assignRequirement(FieldComponentComposer.java:62)
	at org.codehaus.plexus.component.composition.AbstractComponentComposer.assembleComponent(AbstractComponentComposer.java:101)
	at org.codehaus.plexus.component.composition.DefaultComponentComposerManager.assembleComponent(DefaultComponentComposerManager.java:76)
	at org.codehaus.plexus.personality.plexus.lifecycle.phase.CompositionPhase.execute(CompositionPhase.java:46)
	at org.codehaus.plexus.lifecycle.AbstractLifecycleHandler.start(AbstractLifecycleHandler.java:97)
	at org.codehaus.plexus.component.manager.AbstractComponentManager.startComponentLifecycle(AbstractComponentManager.java:136)
	at org.codehaus.plexus.component.manager.AbstractComponentManager.createComponentInstance(AbstractComponentManager.java:126)
	at org.codehaus.plexus.component.manager.ClassicSingletonComponentManager.getComponent(ClassicSingletonComponentManager.java:96)
	at org.codehaus.plexus.DefaultComponentLookupManager.lookup(DefaultComponentLookupManager.java:147)
	at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:494)
	at org.codehaus.plexus.component.composition.AbstractComponentComposer.findRequirement(AbstractComponentComposer.java:204)
	at org.codehaus.plexus.component.composition.FieldComponentComposer.assignRequirementToField(FieldComponentComposer.java:72)
	at org.codehaus.plexus.component.composition.FieldComponentComposer.assignRequirement(FieldComponentComposer.java:62)
	at org.codehaus.plexus.component.composition.AbstractComponentComposer.assembleComponent(AbstractComponentComposer.java:101)
	at org.codehaus.plexus.component.composition.DefaultComponentComposerManager.assembleComponent(DefaultComponentComposerManager.java:76)
	at org.codehaus.plexus.personality.plexus.lifecycle.phase.CompositionPhase.execute(CompositionPhase.java:46)
	at org.codehaus.plexus.lifecycle.AbstractLifecycleHandler.start(AbstractLifecycleHandler.java:97)
	at org.codehaus.plexus.component.manager.AbstractComponentManager.startComponentLifecycle(AbstractComponentManager.java:136)
	at org.codehaus.plexus.component.manager.AbstractComponentManager.createComponentInstance(AbstractComponentManager.java:126)
	at org.codehaus.plexus.component.manager.ClassicSingletonComponentManager.getComponent(ClassicSingletonComponentManager.java:96)
	at org.codehaus.plexus.DefaultComponentLookupManager.lookup(DefaultComponentLookupManager.java:147)
	at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:494)
	at org.codehaus.plexus.component.composition.AbstractComponentComposer.findRequirement(AbstractComponentComposer.java:204)
	at org.codehaus.plexus.component.composition.FieldComponentComposer.assignRequirementToField(FieldComponentComposer.java:72)
	at org.codehaus.plexus.component.composition.FieldComponentComposer.assignRequirement(FieldComponentComposer.java:62)
	at org.codehaus.plexus.component.composition.AbstractComponentComposer.assembleComponent(AbstractComponentComposer.java:101)
	at org.codehaus.plexus.component.composition.DefaultComponentComposerManager.assembleComponent(DefaultComponentComposerManager.java:76)
	at org.codehaus.plexus.personality.plexus.lifecycle.phase.CompositionPhase.execute(CompositionPhase.java:46)
	at org.codehaus.plexus.lifecycle.AbstractLifecycleHandler.start(AbstractLifecycleHandler.java:97)
	at org.codehaus.plexus.component.manager.AbstractComponentManager.startComponentLifecycle(AbstractComponentManager.java:136)
	at org.codehaus.plexus.component.manager.AbstractComponentManager.createComponentInstance(AbstractComponentManager.java:126)
	at org.codehaus.plexus.component.manager.ClassicSingletonComponentManager.getComponent(ClassicSingletonComponentManager.java:96)
	at org.codehaus.plexus.DefaultComponentLookupManager.lookup(DefaultComponentLookupManager.java:147)
	at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:494)
	at org.codehaus.plexus.component.composition.AbstractComponentComposer.findRequirement(AbstractComponentComposer.java:204)
	at org.codehaus.plexus.component.composition.FieldComponentComposer.assignRequirementToField(FieldComponentComposer.java:72)
	at org.codehaus.plexus.component.composition.FieldComponentComposer.assignRequirement(FieldComponentComposer.java:62)
	at org.codehaus.plexus.component.composition.AbstractComponentComposer.assembleComponent(AbstractComponentComposer.java:101)
	at org.codehaus.plexus.component.composition.DefaultComponentComposerManager.assembleComponent(DefaultComponentComposerManager.java:76)
	at org.codehaus.plexus.personality.plexus.lifecycle.phase.CompositionPhase.execute(CompositionPhase.java:46)
	at org.codehaus.plexus.lifecycle.AbstractLifecycleHandler.start(AbstractLifecycleHandler.java:97)
	at org.codehaus.plexus.component.manager.AbstractComponentManager.startComponentLifecycle(AbstractComponentManager.java:136)
	at org.codehaus.plexus.component.manager.AbstractComponentManager.createComponentInstance(AbstractComponentManager.java:126)
	at org.codehaus.plexus.component.manager.ClassicSingletonComponentManager.getComponent(ClassicSingletonComponentManager.java:96)
	at org.codehaus.plexus.DefaultComponentLookupManager.lookup(DefaultComponentLookupManager.java:147)
	at org.codehaus.plexus.DefaultComponentLookupManager.lookup(DefaultComponentLookupManager.java:69)
	at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:434)
	at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:428)
	at org.apache.maven.embedder.MavenEmbedder.start_aroundBody2(MavenEmbedder.java:605)
	at org.apache.maven.embedder.MavenEmbedder.start_aroundBody3$advice(MavenEmbedder.java:425)
	at org.apache.maven.embedder.MavenEmbedder.start(MavenEmbedder.java:1)
	at org.apache.maven.embedder.MavenEmbedder.<init>(MavenEmbedder.java:179)
	at de.myindexer.MavenArtefactIndexSearchDialog.resolveArtefactsFromMavenXars(MavenArtefactIndexSearchDialog.java:308)
	at de.myindexer.maven.MavenArtefactIndexSearchDialog.resolveArtefactsFromFileInfos(MavenArtefactIndexSearchDialog.java:227)
	at de.myindexer.maven.MavenArtefactIndexSearchDialog.addDependenciesFromTree(MavenArtefactIndexSearchDialog.java:201)
	at de.myindexer.maven.MavenArtefactIndexSearchDialog.access$4(MavenArtefactIndexSearchDialog.java:195)
	at de.myindexer.maven.MavenArtefactIndexSearchDialog$5.doRun(MavenArtefactIndexSearchDialog.java:785)
	",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i293dj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Multiple -Dkey=value command line options not handled correctly,MNG-3356,12794931,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Won't Fix,,ckoelle,ckoelle,10/Jan/08 07:43,12/Jan/10 10:47,03/Jan/22 13:13,12/Jan/10 10:47,2.0.8,,,,,,,,Command Line,,,,,1,,,,"After upgrading to 2.0.8 on Debian the handling of multiple (more than one) -Dkey=value cli options fail, i.e. something like:

mvn plugin:goal -Dkey1=value1 -Dkey2=value2

fails with:

Invalid task 'key2=value2': you must specify a valid lifecycle phase, or a goal in the format plugin:goal or pluginGroupId:pluginArtifactId:pluginVersion:goal
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jan/08 18:22;cager;command-line.patch;https://issues.apache.org/jira/secure/attachment/12712487/command-line.patch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28rj3:",9223372036854775807,,,,,,,,,,,,,,,,,,,"11/Jan/08 18:20;cager;This error will only affect the *Debian* Maven package, and happens because Debian are using commons-cli version 1.1 (rather than version 1.0 which standard  Maven uses).

Please see

 http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=458895
and
 http://issues.apache.org/jira/browse/CLI-137

for a full description of why this is happening. A revised Debian package is being prepared.

In summary:

version 1.1 of commons-cli introduced a more rigid interpretation of the API specification for the hasArg() method of OptionBuilder, such that hasArg() implies there can only be *one* instance of the argument (I think there is a remaining bug in the commons.cli package which I'll take up with them). This means that the second ""-D"" option is taken to be an argument, rather than an option. In version 1.0 of commons-cli this restriction was never enforced.

Maven should really be calling the hasArgs() method to indicate there can be unlimited ""-D"" arguments. I've attached the patch Debian is using for this problem.;;;","11/Jan/08 18:22;cager;Debian's patch to use hasArgs() method.;;;","21/Feb/08 06:14;ckoelle;OK, thanks. It works fine now with the updated Debian package. 

But is this not also a problem for the general Maven release? Is it necessary to apply this patch for Maven 2.0.9? Or are there no plans to upgrade to commons-cli 1.1?;;;","13/Jun/08 04:29;cager;I've investigated this further (see Apache's list: http://mail-archives.apache.org/mod_mbox/commons-user/200805.mbox/%3c483DC031.2090106@home.paulcager.org%3e). In summary I think version 1.1 is so broken that it is impossible to handle multiple ""-D"" type arguments. I think changing to use ""hasArgs()"" (plural) just makes cli 1.1 fall over in a different way.

Here's an extract of the email I sent to Apache:

As far as I can see it is simply not possible to use commons-cli to
parse repeating options, such as occur in ant:

      ant -Dproperty1=value1 -Dproperty2=value2 compile

Cli *does* have a junit test for ant-type options, but it unfortunately
doesn't catch the error because it tests the command line:

      ant -Dproperty1=value1 -Dproperty2=value2 -projecthelp

I attach a patch for the junit test (Cli-junit.patch) that will provoke 
the error, if you want to try it yourself.


_Here's what I think is happening:_

The unit test (and the work-around suggested in issue 137) creates the
""D"" option using ""hasArgs()"" [note the 's' on the end of the method
name]. Using hasArgs() for the ""D"" option causes cli to assume that all
arguments following the ""-D"" (until it encounters another option) belong
to the ""-D"" option. I've probably not explained that clearly so here's
an example:

      ant -Dproperty1=value1 -Dproperty2=value2 compile

will treat ""compile"" as though it was ""-Dcompile"". getArgs() will return
0 elements, rather than one (""compile"").

If instead you construct the ""D"" option using hasArg() [singular] then
it will *not* interpret the second ""-D"" as an option. getArgs() will
return 2 elements: ""property2=value2"" and ""compile"". getOptionValues()
will return only the first -D value.

This problem first came to light when Debian upgraded CLI from 1.0 to 
1.1, and caused Debian's Maven package to fail (the standard Maven 
package uses cli 1.0 of course). As part of the Debian packaging I have 
created a quick-and-dirty patch which allows Maven to work (see 
http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=469082 for the Debian 
bug report, and I have attached the patch (MultiOptions.patch). I would 
guess that a proper fix would be rather more elegant than my patch.

;;;","12/Jan/10 10:47;brettporter;this is exactly why we used commons-cli 1.0 instead of upgrading.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
mvn install failed due to build error : Cannot execute mojo: resources. See descr.,MNG-3338,12796605,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Incomplete,wsmoak,boris_feldman,boris_feldman,25/Dec/07 10:21,25/Dec/07 12:14,03/Jan/22 13:13,25/Dec/07 12:14,2.0.8,,,,,,,,,,,,,0,,,,"D:\apache-maven-2.0.8\bin>mvn.bat install
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] Building Maven Default Project
[INFO]    task-segment: [install]
[INFO] ------------------------------------------------------------------------
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Cannot execute mojo: resources. It requires a project with an existing po
m.xml, but the build is not using one.
[INFO] ------------------------------------------------------------------------
[INFO] For more information, run Maven with the -e switch
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 1 second
[INFO] Finished at: Tue Dec 25 16:04:59 GMT 2007
[INFO] Final Memory: 2M/6M
[INFO] ------------------------------------------------------------------------
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28qvz:",9223372036854775807,,,,,,,,,,,,,,,,,,,"25/Dec/07 12:14;wsmoak;> D:\apache-maven-2.0.8\bin>mvn.bat install 

You need to change into the project directory before executing 'mvn install'.

If you're still having trouble, please ask on the user list.  You can find subscription info here:  http://maven.apache.org/mail-lists.html;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Downloading plugins for an inhouse repository problem,MNG-3337,12794938,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Duplicate,,sedatcorbaci,sedatcorbaci,25/Dec/07 01:15,05/Mar/08 20:59,03/Jan/22 13:13,05/Mar/08 20:59,,,,,,,,,Plugins and Lifecycle,,,,,0,,,,"For an inhouse maven repository we can't find a way to download the plugins to local repo.
When we try to execute an initial archetype:create command encountered maven couldn't find the archetype plugin error. To deal with this we just copies org.apache folder to local repo and then everything fine. But again if i need any plugin that is not in copied to local repo manually maven couldn't download it from internal repository.",,,,,,,,,,,,,,,,,,,,,,,,MNG-3099,,,,,,,,,,,,,,,,,,,MNG-2716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28qtr:",9223372036854775807,,,,,,,,,,,,,,,,,,,"04/Jan/08 09:34;siveton;Did you overrided the central repo? Something like the following in your settings:

{noformat} 
<pluginRepositories>
  <pluginRepository>
    <id>central</id>
...
{noformat} 

Also, try to add the central repo (http://repo1.maven.org/maven2/ ) in your settings.;;;","08/Jan/08 00:55;sedatcorbaci; I stated that this bug occurs for an inhouse-internal-a network not connected to internet repository.
So there is no possibility to use central repo.
I also tried to override the central repo to internal repo but nothing changed. ;;;","05/Feb/08 04:34;seidler;It seems your problem is the same as MNG-2716;;;","05/Mar/08 20:59;brianf@infinity.nu;duplicate of MNG-3099;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Barfs at attribues named .*encoding,MNG-3316,12794914,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,hboutemy,david@davidkarlsen.com,david@davidkarlsen.com,11/Dec/07 07:16,23/Feb/08 03:34,03/Jan/22 13:13,23/Feb/08 03:34,2.0.8,,,,,2.0.9,,,POM::Encoding,,,,,3,,,,"With 2.0.8 a regression snuck in:

Please see attached pom for details.

In several of my project I use xdoclet-maven-plugin. In xdoclet-maven-plugin's configuration element there is an element, with an attribute xmlencoding=""${variable}"" (installed into my repository - NOT talking about building them).

If maven tries to read these pom's (from my repo) it barfs with an error message:
""
Project ID: some.group.id:myproject-war

Reason: Failed to build model from file 'c:\data\.m2\repository\some\group\id\myproject-war\1.3-SNAPSHOT\myproject-war-1.3-SNAPSHOT.pom'.
Error: '${ENCODING.DEFAULT}' for project some.group.id:myproject-war .
""

This did NOT happen before 2.0.8 - so it must be a regression.

What really puzzles me is why maven tries to parse these tags in the first place (as they are configurations for elements which should be of no value for this maven execution) - but I guess it was introduced when fixing MNG-2932, MNG-2025 and/or MNG-2254 without knowing any details.

As 2.0.8 fails the entire build (which works on 2.0.7) I'm rating this as Blocker.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Dec/07 07:16;david@davidkarlsen.com;examplepom.xml;https://issues.apache.org/jira/secure/attachment/12712113/examplepom.xml","08/Jan/08 18:50;david@davidkarlsen.com;pom.xml;https://issues.apache.org/jira/secure/attachment/12712507/pom.xml",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28pcv:",9223372036854775807,,,,,,,,,,,,,,,,,,,"11/Dec/07 07:16;david@davidkarlsen.com;It should also be noted that if I remote the element containing the xmlencoding attribute the build will succeed.;;;","08/Jan/08 17:30;hboutemy;can you attach pom.xml for some.group.id:myproject-war?
I suppose it starts with {code:xml}<?xml version=""1.0"" encoding=""${ENCODING.DEFAULT}""?>{code}, isn't it?;;;","08/Jan/08 18:50;david@davidkarlsen.com;Please see attached file for example.;;;","08/Jan/08 18:54;david@davidkarlsen.com;Se attachment number two (pom.xml) which is a cleanup of the one originally posted (examplepom.xml).

Parent pom has a correct and valid xml-header, I only refer to the encoding.default variable in configuration elements for plugins.

With 2.0.8
mvn clean should be sufficient to trigger:

zoidberg:/tmp# mvn clean
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Error building POM (may not be this project's POM).


Project ID: unknown

Reason: Failed to build model from file '/tmp/pom.xml'.
Error: '${ENCODING.DEFAULT}' for project unknown


[INFO] ------------------------------------------------------------------------
[INFO] Trace
org.apache.maven.reactor.MavenExecutionException: Failed to build model from file '/tmp/pom.xml'.
Error: '${ENCODING.DEFAULT}' for project unknown
        at org.apache.maven.DefaultMaven.getProjects(DefaultMaven.java:376)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:289)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:126)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:282)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.apache.maven.project.ProjectBuildingException: Failed to build model from file '/tmp/pom.xml'.
Error: '${ENCODING.DEFAULT}' for project unknown
        at org.apache.maven.project.DefaultMavenProjectBuilder.readModel(DefaultMavenProjectBuilder.java:1386)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromSourceFileInternal(DefaultMavenProjectBuilder.java:474)
        at org.apache.maven.project.DefaultMavenProjectBuilder.build(DefaultMavenProjectBuilder.java:197)
        at org.apache.maven.DefaultMaven.getProject(DefaultMaven.java:548)
        at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:458)
        at org.apache.maven.DefaultMaven.getProjects(DefaultMaven.java:362)
        ... 11 more
Caused by: java.io.UnsupportedEncodingException: ${ENCODING.DEFAULT}
        at sun.nio.cs.StreamDecoder.forInputStreamReader(StreamDecoder.java:52)
        at java.io.InputStreamReader.<init>(InputStreamReader.java:83)
        at hidden.org.codehaus.plexus.util.xml.XmlReader.prepareReader(XmlReader.java:479)
        at hidden.org.codehaus.plexus.util.xml.XmlReader.doRawStream(XmlReader.java:462)
        at hidden.org.codehaus.plexus.util.xml.XmlReader.<init>(XmlReader.java:179)
        at hidden.org.codehaus.plexus.util.xml.XmlReader.<init>(XmlReader.java:142)
        at hidden.org.codehaus.plexus.util.xml.XmlReader.<init>(XmlReader.java:123)
        at hidden.org.codehaus.plexus.util.xml.XmlStreamReader.<init>(XmlStreamReader.java:67)
        at hidden.org.codehaus.plexus.util.ReaderFactory.newXmlReader(ReaderFactory.java:113)
        at org.apache.maven.project.DefaultMavenProjectBuilder.readModel(DefaultMavenProjectBuilder.java:1376)
        ... 16 more
[INFO] ------------------------------------------------------------------------
[INFO] Total time: < 1 second
[INFO] Finished at: Wed Jan 09 01:52:31 CET 2008
[INFO] Final Memory: 1M/4M
[INFO] ------------------------------------------------------------------------
;;;","09/Jan/08 16:38;hboutemy;ok, I was able to reproduce the problem.
I opened PLXUTILS-60, since the problem is in XmlStreamReader class in plexus-utils (and in fact in XmlReader class from Rome, which is the library I got the class from :) );;;","23/Feb/08 03:34;hboutemy;fixed in r630415 in trunk and r630416 in 2.0.x branch;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"offline build not running, when having SNAPSHOT dependencies",MNG-3314,12794836,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,jdcasey,matzew,matzew,07/Dec/07 01:36,13/May/09 07:55,03/Jan/22 13:13,27/Oct/08 17:15,2.0.7,,,,,2.0.10,2.1.0,,General,,,,,25,,,,"am having troubles with
mvn ... -o
(with maven 2.0.7)

says not able to download (but, really, the file is in my local repo)
The dependency is a -SNAPSHOT (for what's worth)

Luckily, when traveling by train, I had maven 2.0.4 on my box as well.
A change to use 2.0.4 works fine.

So, is this an already know bug in 2.0.7 ?
To my understanding it is a bug, since offline just shouldn't try to get a newer
SNAPSHOT, perhaps I am wrong.

I know that relying on SNAPSHOTs can be dangerous, but from -o I would expect
just not checking for new stuff.

and... for some reasons, sometimes,
it just downloads a new SNAPSHOT.

That is a pain, when you are ""maintaining"" the same snapshot on your
box, but the build just goes ahead and actually downloads a version.",,,,,,,,,,,,,,,,,,,,,,,,MNG-2433,,,,,,,,,,,,,MNG-2695,,,,,,MNG-3628,,,,,,,,,,,"17/Jun/08 13:14;happyharris;maven-offline-snapshot-failure.log;https://issues.apache.org/jira/secure/attachment/12712722/maven-offline-snapshot-failure.log","17/Jun/08 13:13;happyharris;maven-offline-snapshot-problem.tar;https://issues.apache.org/jira/secure/attachment/12712530/maven-offline-snapshot-problem.tar","21/Oct/08 13:23;bentmann;offline-snapshots.patch;https://issues.apache.org/jira/secure/attachment/12712268/offline-snapshots.patch",,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28vv3:",9223372036854775807,,,,,,,,,,,,,,,,,,,"07/Dec/07 01:37;matzew;critical: well... that is I think only for traveling persons really critical :-);;;","07/Dec/07 11:29;azeckoski;It is also critical for people who are in countries with poor or very expensive internet access

This is still an issue in maven 2.0.8

azeckoski:test-runner azeckoski$ mvn -v
Maven version: 2.0.8
Java version: 1.5.0_13
OS name: ""mac os x"" version: ""10.5.1"" arch: ""i386"" Family: ""unix""
azeckoski:test-runner azeckoski$ mvn -o clean install
[INFO]  NOTE: Maven is executing in offline mode. Any artifacts not already in your local
repository will be inaccessible.

[INFO] Scanning for projects...
[INFO] Reactor build order: 
[INFO]   Sakai TestRunner
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Failed to resolve artifact.

GroupId: org.sakaiproject.maven.plugins
ArtifactId: sakai
Version: SNAPSHOT

Reason: System is offline.
  org.sakaiproject.maven.plugins:sakai:pom:SNAPSHOT

NOTE: Maven is executing in offline mode. Any artifacts not already in your local
repository will be inaccessible.

[INFO] ------------------------------------------------------------------------
[INFO] For more information, run Maven with the -e switch
[INFO] ------------------------------------------------------------------------
[INFO] Total time: < 1 second
[INFO] Finished at: Fri Dec 07 09:28:15 PST 2007
[INFO] Final Memory: 2M/254M
[INFO] ------------------------------------------------------------------------
;;;","31/Jan/08 10:53;jpollak;I can confirm this bug on maven versions 2.0.6, 2.0.7, and 2.0.8.

This is also a critical issue for corporate software teams with an internal Maven repository which is not available to developers who are working offline or at home where the internal repository is not available.;;;","03/Jun/08 12:16;jdcasey;I've added an integration test to the Maven suite, to try to capture this failure so I can debug/fix it. However, the test case doesn't fail with either 2.0.7 or 2.0.9...

The test case is here:  http://svn.apache.org/repos/asf/maven/core-integration-testing/trunk/core-integration-tests/src/test/resources/mng-3314-offlineSnapshots

and the JUnit controller class is here:

http://svn.apache.org/repos/asf/maven/core-integration-testing/trunk/core-integration-tests/src/test/java/org/apache/maven/integrationtests/MavenITmng3314OfflineSnapshotsTest.java

Can someone please let me know what I'm doing wrong here? In the comment two above this one, that output would seem to be correct, if the dependency weren't present in the local repository, and nobody else has given any concrete detail for this error in terms of console output or test-case projects.

Without more information, I'm going to close this bug as CANNOT_REPRODUCE.;;;","06/Jun/08 16:30;jdcasey;I haven't been able to reproduce this error. I've incorporated a series of integration tests, as noted in the previous comment. If this bug is still present, and you can provide more details - or even better, a test build that's failing - then reopen it and I'll take another look.;;;","17/Jun/08 13:11;happyharris;I too see this issue. It happens for me when attempting to depend on a snapshot version of a module downloaded from a repository. If the snapshot version of the module is built and installed locally, the problem goes away.

I will attach two projects (in a tar file) that have minimal external dependencies, and the debug output of trying to build. Here are the steps to reproduce:

Environment:
Maven 2.0.8
Linux 2.6.18
Artifactory 1.2.5 (rev. 1154)

Preliminary steps:
1) Modify the pom files to refer to your repository instead of http://localhost:8081/artifactory/jumptap-snapshots
2) Build maven-test-project1
3) Upload the pom and jar for maven-test-project1 to your repository.

Steps that cause the error to happen:
1) Delete maven-test-project1 from the local repository.
2) Build maven-test-project2 without the offline flag (mvn install). This build is successful (and downloads maven-test-project1 to the local repository).
3) Build maven-test-project2 with the offline flag (mvn -o install). This build fails, unable to resolve the maven-test-project1 artifact.

Steps that cause the error not to happen
1) Build maven-test-project1 locally. This build is successful.
2) Build maven-test-project2 without the offline flag (mvn install). This build is successful.
3) Build maven-test-project2 with the offline flag (mvn -o install). This build is successful. ;;;","17/Jun/08 13:13;happyharris;Contains two projects, maven-test-project1 and maven-test-project2. maven-test-project2 depends on maven-test-project1. maven-test-project2 offline unless maven-test-project1 has been built locally.;;;","17/Jun/08 13:14;happyharris;The debug log produced when trying to build maven-test-project2 offline when maven-test-project1 has not been built locally, but when maven-test-project1 has been previously downloaded due to an online build;;;","17/Jun/08 13:16;happyharris;Sorry about those two previous comments. I thought they were comments about the attachments, not comments about the bug. The first comment refers to maven-offline-snapshot-problem.tar and the second comment refers to maven-offline-snapshot-failure.log;;;","24/Jul/08 18:13;brianf@infinity.nu;There are new samples attached, so lets retry to reproduce for 2.0.11;;;","18/Aug/08 04:05;henrik242;The problem seems to be related to the ctime of the SNAPSHOT artifacts.

I have a hierarchal project where sub project B depend on subproject A.  A and B are modules in the root pom:
{code}
root-+--A
     |
     +--B
{code}

Here are the scenarios (with maven 2.0.9):

- If I build the full project offline from the root project, everything works fine.
- If I build project B immediately afterwards (offline), everything works fine.
- If I wait awhile (an hour? a day?  I can't remember) and build project B again (offline), it complains about a missing snapshot dependency to the A project.  Now for the fix:  If I touch the ""missing"" snapshot jars ({{touch ~/.m2/repository/myproject/A/1.0-SNAPSHOT/*}})  and build project B offline again, everything works fine again.

It seems that the snapshot artifacts have a maximum availability lifetime in offline mode.
;;;","10/Sep/08 11:36;joshbeitelspacher;I'm running Maven 2.0.8, and I see the same behavior that Henrik described.  Touching the files does fix the problem.

If the snapshot dependencies are coming from a remote repository, then setting the snapshot update policy of the remote repository to never also fixes the issue.  See http://maven.apache.org/settings.html#Repositories for an example.

The snapshot update policy does not seem to be applied to transitive dependencies.  Maven still complains about transitive snapshot dependencies if the files have a timestamp from a previous day.  I resolved this by including the transitive snapshots directly in my project dependencies.;;;","21/Oct/08 13:23;bentmann;IT for this has been updated to exhibit problem. The proposed patch (for the 2.0.x branch) simply skips the update checks for snapshots when Maven is in offline mode.;;;","27/Oct/08 17:15;brianf@infinity.nu;Patch applied, ITs pass.;;;","13/May/09 07:55;jtbrown;This is not fixed for me in maven 2.0.10.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Cached plugins are used, even when different versions are specifically declared ",MNG-3285,12794927,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Duplicate,,magnayn,magnayn,14/Nov/07 07:16,14/Nov/07 07:19,03/Jan/22 13:13,14/Nov/07 07:19,2.0.7,,,,,,,,Dependencies,Plugins and Lifecycle,,,,0,,,,"In the attached project, you can build module A, then build module B, but the top level aggregator project will fail at B.

The reason this happens is that maven seems to cache plugins. When B is built in isolation, all things are fine - but when built in aggregation, one of the plugins that it uses has already been instantiated, and so it uses that one. This is incorrect, since the declared version is different in B, and is relying on functionality not present in the version declared in A.

I have seen similar behaviour when a plugin relies on other plugins to get work done - all of a sudden a build mysteriously stops working, because of a completely unrelated plugin.

This is pretty painful because
- it's possible to get into a 'no solution', where one project relies on one behaviour so can't upgrade, and one project relies on new behaviour, so can't downgrade.
- you get builds that work OK in isolation, but not in their project. This is bad. Also builds tied together in bigger aggregator projects can fail in mysterious ways (mysterious because the user /has/ specified the plugin version, and maven has ignored them, or it's a plugin dependency that got there first)
- subtle build ordering changes can cause new failures (the example has B depend on A - but the bug might only manifest itself in certain build orders that change even when B and A don't).

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Nov/07 07:16;magnayn;pluginbug.tar;https://issues.apache.org/jira/secure/attachment/12711769/pluginbug.tar",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28srj:",9223372036854775807,,,,,,,,,,,,,,,,,,,"14/Nov/07 07:19;magnayn;sorry - jira obviously doesn't like safari. dup of MNG-3284;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Cached plugins are used, even when the specifically declared ",MNG-3284,12794474,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,bentmann,magnayn,magnayn,14/Nov/07 07:15,04/Mar/10 01:10,03/Jan/22 13:13,14/Feb/09 07:49,2.0.7,,,,,2.1.0,3.0-alpha-1,,Dependencies,Plugins and Lifecycle,,,,8,,,,"In the attached project, you can build module A, then build module B, but the top level aggregator project will fail at B.

The reason this happens is that maven seems to cache plugins. When B is built in isolation, all things are fine - but when built in aggregation, one of the plugins that it uses has already been instantiated, and so it uses that one. This is incorrect, since the declared version is different in B, and is relying on functionality not present in the version declared in A.

I have seen similar behaviour when a plugin relies on other plugins to get work done - all of a sudden a build mysteriously stops working, because of a completely unrelated plugin.

This is pretty painful because
- it's possible to get into a 'no solution', where one project relies on one behaviour so can't upgrade, and one project relies on new behaviour, so can't downgrade.
- you get builds that work OK in isolation, but not in their project. This is bad. Also builds tied together in bigger aggregator projects can fail in mysterious ways (mysterious because the user /has/ specified the plugin version, and maven has ignored them, or it's a plugin dependency that got there first)
- subtle build ordering changes can cause new failures (the example has B depend on A - but the bug might only manifest itself in certain build orders that change even when B and A don't).

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-1323,MNG-1024,MNG-3801,MNG-3013,MNG-3217,,MNG-4580,,,,,,,,,,,"23/Jan/08 06:10;magnayn;0001-Initial-fix-to-see-if-we-can-have-1-version-of-a-pl.patch;https://issues.apache.org/jira/secure/attachment/12711963/0001-Initial-fix-to-see-if-we-can-have-1-version-of-a-pl.patch","11/Mar/08 11:35;magnayn;0001-Initial-fix-to-see-if-we-can-have-1-version-of-a-pl.patch.svn;https://issues.apache.org/jira/secure/attachment/12711973/0001-Initial-fix-to-see-if-we-can-have-1-version-of-a-pl.patch.svn","11/Mar/08 13:47;MNG-3284.patch;https://issues.apache.org/jira/secure/attachment/12712577/MNG-3284.patch","23/Jan/08 06:04;magnayn;maven-bug-2.tar;https://issues.apache.org/jira/secure/attachment/12712510/maven-bug-2.tar","10/Mar/08 07:13;magnayn;mng3284-usingCachedPlugins.tar;https://issues.apache.org/jira/secure/attachment/12712376/mng3284-usingCachedPlugins.tar","12/Mar/08 09:51;magnayn;plugin.diff;https://issues.apache.org/jira/secure/attachment/12712707/plugin.diff","14/Nov/07 07:15;magnayn;pluginbug.tar;https://issues.apache.org/jira/secure/attachment/12712563/pluginbug.tar",,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i297jz:",9223372036854775807,,,,,,,,,,,,,,,,,,,"23/Jan/08 06:04;magnayn;This is an easy-to-reproduce test :

Build the module mojo
Build the module mojo2

then from top level do
mvn install

it should use 2 different versions, you can observe that it only uses one.

;;;","23/Jan/08 06:10;magnayn;This is my initial attempt at a fix, which seems to work for me.

The plugin coordinator  and manager change to always use versioned identifiers (rather than 'key' which doesn't include the version).

There's some mention of version not being included - but this was never an issue (fixed already?). If there is a counterexample of where this fix won't work, I'd be happy to work a bit further on it...;;;","10/Mar/08 05:19;brettporter;this looks good to me - if you have a chance could you turn the reproduction into the integration test format?;;;","10/Mar/08 05:24;brettporter;I'm not sure MNG-3217, MNG-3013 is related to this, but the other certainly is. I think this fix is going to be safe in the cases where it works and no worse in the cases where it doesn't. From what I remember, the plugin manager will still cache the containers based on a less comprehensive key so you might not get a complete solution with this.

I do think this would require some more comprehensive testing but is worth reviewing.;;;","10/Mar/08 07:13;magnayn;Convert JUnit test to maven integration test
;;;","10/Mar/08 20:55;brianf@infinity.nu;Identified as blocker to upgrading. Lets try to include this (even has an IT);;;","10/Mar/08 21:05;brianf@infinity.nu;any chance you can make that patch against svn?;;;","11/Mar/08 11:35;magnayn;I think this should apply with SVN (if that's what you meant?) - it's the same patch but with --no-prefix; I'm told tortoiseSVN is a bit picky about patch formats..

;;;","11/Mar/08 11:52;brianf@infinity.nu;perfect timing...i just finished merging in the IT.;;;","11/Mar/08 12:30;brianf@infinity.nu;patch doesn't work, it still has git junk in there. I'll try to do it manually;;;","11/Mar/08 13:47;brianf@infinity.nu;Attaching an svn patch (MNG-3284.patch) by hand applying these changes to 2.0.9. The IT is already committed to the core-its but with this patch there is a crash:

INFO] ------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ------------------------------------------------------------------------
[INFO] The PluginDescriptor for the plugin Plugin [org.apache.maven.plugins:maven-plugin-plugin] was not found.
[INFO] ------------------------------------------------------------------------
[INFO] Trace
java.lang.IllegalStateException: The PluginDescriptor for the plugin Plugin [org.apache.maven.plugins:maven-plugin-plugin] was not found.
	at org.apache.maven.plugin.DefaultPluginManager.addPlugin(DefaultPluginManager.java:329)
	at org.apache.maven.plugin.DefaultPluginManager.verifyVersionedPlugin(DefaultPluginManager.java:215)


If you can fix the patch and reattach, then we can include for 2.0.9;;;","12/Mar/08 09:51;magnayn;Ok - I've re-rolled the patch, and tried to execute it as an SVN diff.

I've run it against the current set of 2.0.9 ITs and it seems to work.
;;;","12/Mar/08 14:22;jdcasey;I've applied the latest patch, and everything (including the IT that Brian committed) seems happy.

I'd like to provide one caveat to all of this, though:

plugin-level dependencies still cannot vary for a single plugin version in the same build. This is a particular problem when using the ant-run plugin. I'll see if I can dig up the issue (I'm sure it's been logged), and link it here. I've also got a simple test project that I can attach to the issue, which is what I've used to verify that this is indeed fixed in the Maven 2.1 code.;;;","12/Mar/08 14:27;jdcasey;These two issues deal with subtly different aspects of plugin variance within a multimodule project, with MNG-3284 specifying variance of plugin versions, and MNG-1323 specifying variance of plugin-level dependencies.

I have a test case that I'll attach to MNG-1323 that displays the issue.;;;","12/Mar/08 14:28;jdcasey;Applied the latest patch, and everything seems good.;;;","13/Mar/08 19:41;brianf@infinity.nu;This is still causing problems. See the IT output here: https://ci.sonatype.org/job/Maven-2.0.x-freestyle/18/console;;;","14/Mar/08 04:41;magnayn;Hmm - that's confusing me.

On my machine, both trunk and trunk-1 (without and with the patch respectively) both only have 1 IT failure, in testitMNG2861 - I've updated the core-it tests and rebuilt, so I don't see why I get different results.

So I must be doing something wrong;  I'm currently re-running on my machine with the same commandline that I can see from the hudson build to see what happens.
;;;","14/Mar/08 05:14;magnayn;I've just executed the following:
svn co -r 636941 https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x /tmp/maven-2.0.x
cd /tmp/maven-2.0.x
mvn clean install -B -U -e -Dmaven.repo.local=/tmp/maven-2.0.x.repo -Pstrict,run-its -Dsurefire.useFile=false

And still things seem to be happy bar 2861..

?

;;;","14/Mar/08 11:03;jdcasey;I verified this also. I get the same result, except for me 2123 and 2861 are failing, but Brian tells me these are failing on his copy (with 3284 rolled back).;;;","14/Mar/08 19:57;brianf@infinity.nu;we will retry the patch once everything is stabilized. I know that as soon as I rolled it back, everything was ok, both on my machine and the hudson one and the error was the same as I saw when I applied it originally. ;;;","17/Mar/08 14:51;brianf@infinity.nu;Tried again. My test results locally are nearly identical to hudson:

Mine:
Tests in error:
  testitMNG2277(org.apache.maven.integrationtests.MavenITmng2277AggregatorAndResolutionPluginsTest)
  testit0104(org.apache.maven.integrationtests.MavenIT0104Test)
  testit0075(org.apache.maven.integrationtests.MavenIT0075Test)
  testit0074(org.apache.maven.integrationtests.MavenIT0074Test)
  testit0073(org.apache.maven.integrationtests.MavenIT0073Test)
  testit0071(org.apache.maven.integrationtests.MavenIT0071Test)
  testit0068(org.apache.maven.integrationtests.MavenIT0068Test)
  testit0064(org.apache.maven.integrationtests.MavenIT0064Test)
  testit0049(org.apache.maven.integrationtests.MavenIT0049Test)
  testit0046(org.apache.maven.integrationtests.MavenIT0046Test)
  testit0045(org.apache.maven.integrationtests.MavenIT0045Test)
  testit0041(org.apache.maven.integrationtests.MavenIT0041Test)
  testit0040(org.apache.maven.integrationtests.MavenIT0040Test)
  testit0027(org.apache.maven.integrationtests.MavenIT0027Test)
  testit0022(org.apache.maven.integrationtests.MavenIT0022Test)
  testit0018(org.apache.maven.integrationtests.MavenIT0018Test)
  testit0012(org.apache.maven.integrationtests.MavenIT0012Test)

Hudson:
https://ci.sonatype.org/job/Maven-2.0.x-ITs/30/console;;;","17/Mar/08 15:03;jdcasey;When I built this locally, then installed it and tried to build again with the version I just built, I got the following:

[INFO] Internal error in the plugin manager getting plugin 'org.apache.maven.plugins:maven-shade-plugin': Failed to create plugin container for plugin 'Plugin [org.apache.maven.plugins:maven-shade-plugin]': Cannot create child container, because child named 'maven-shade-plugin:org.apache.maven.plugins:1.0-beta-2-SNAPSHOT' already exists in parent 'app0'.

I haven't reproduced Brian's problem above, but this in itself signals that the patch is not careful enough to avoid duplication of plugin containers. We need to take some more time and build up a better test suite for this issue, to guard against all the different problems that can occur when you start changing the plugin classloading scheme.;;;","17/Mar/08 15:09;jdcasey;We simply cannot be certain of this patch without more tests to check that the plugin classloaders are being constructed correctly. We're seeing too many different problems that are hard to reproduce consistently. It also will probably be useful to look at the documentation for the plugin and extension classloading refactor that I did for 2.1, once I get those docs done (next on my TODO list once 2.0.9 is staged).;;;","17/Mar/08 15:28;magnayn;That's ok - I'll keep plugging away at getting the tests to pass..

Unfortunately - my tests seem to work. I must be doing something wrong.

I'm doing
mvn clean install
from maven-2.0.x

then mvn clean test (or mvn clean test -e -U -B -Prun-its)
from maven-2.0.x/maven-core-it-runner

I see the same tests running as in hudson, I see
mng2744checksumVerification
failing
but the testit* working.

Is there some external dependency I need to recompile? How come testitMNG2277 fails for Brian Fox but not for hudson ? Could there be some change /difference in the IT framework that I'm not picking up?
;;;","17/Mar/08 15:42;jdcasey;I'm not sure why this is failing in so many different ways, but I can say that the ITs were all passing in the three environments we tested: mine, hudson, and Brian's. When we applied the patch again (today, merged from Brian's rollback on Friday/Saturday/whenever it was), we got three different failure profiles on three different machines. Yours makes four where something is failing.

On my side, it seemed like all the ITs ran when I did the following:

1. svn up core-integration-testing
2. cd core-integration-testing && mvn clean install
3. cd maven-2.0.x && mvn -P run-its,strict clean install

Then, when I installed the newly-built copy of maven into my apps directory (just a local directory structure I have where things like Maven live), and tried to build the maven-2.0.x project once again (#3 above) using that newly-installed version, it failed with the error I gave above (two of my entries back, about the child container already existing when calling the shade plugin). To me, this is an indication that we don't have sufficient test coverage, if that error could slip by, regardless of whether all the ITs succeed or not.;;;","17/Mar/08 16:54;magnayn;Out of interest, what platform are you / hudson running ?

I've tried my build on linux and OS X (though both with maven 2.0.8 and 1.5.0_13) and get the same result - it seems there's something odd. I'll try some JVM variants and windows tomorrow and try and find why I get different test resutls;;;","03/Jul/08 19:06;jdcasey;Pushing to 2.0.11 so we can have a smaller set of high-value issues to target for the next release (2.0.10).;;;","14/Feb/09 07:49;bentmann;Fixed in [r591391|http://svn.eu.apache.org/viewvc?view=rev&revision=591391] and [r744497|http://svn.eu.apache.org/viewvc?view=rev&revision=744497], respectively.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
new URI( url.toString() ) when using a jar path with a space in it results in error,MNG-3272,12794886,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,jdcasey,jdcasey,05/Nov/07 12:31,30/May/08 18:22,03/Jan/22 13:13,05/Nov/07 15:42,3.0-alpha-1,,,,,3.0-alpha-1,,,POM,,,,,0,,,,"When maven.home contains a space, reading the super-POM from the maven-project jar results in:

Error stacktrace:
org.apache.maven.reactor.MavenExecutionException: Error scanning for extensions: Error building super-POM for retrieving the default remote repository list: Failed build model from URL 'jar:file:/c:/Program Files/maven2.1/bin/../lib/maven-project-2.1-SNAPSHOT.jar!/org/apache/maven/project/pom-4.0.0.xml'
Error: 'Illegal character in opaque part at index 20: jar:file:/c:/Program Files/maven2.1/bin/../lib/maven-project-2.1-SNAPSHOT.jar!/org/apache/maven/project/pom-4.0.0.xml' for project org.apache.maven:super-pom
	at org.apache.maven.DefaultMaven.getProjects(DefaultMaven.java:286)
	at org.apache.maven.DefaultMaven.createReactorManager(DefaultMaven.java:109)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:166)
	at org.apache.maven.embedder.MavenEmbedder.execute(MavenEmbedder.java:784)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:179)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:71)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:408)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:351)
Caused by: org.apache.maven.extension.ExtensionScanningException: Error building super-POM for retrieving the default remote repository list: Failed build model from URL 'jar:file:/c:/Program Files/maven2.1/bin/../lib/maven-project-2.1-SNAPSHOT.jar!/org/apache/maven/project/pom-4.0.0.xml'
Error: 'Illegal character in opaque part at index 20: jar:file:/c:/Program Files/maven2.1/bin/../lib/maven-project-2.1-SNAPSHOT.jar!/org/apache/maven/project/pom-4.0.0.xml' for project org.apache.maven:super-pom
	at org.apache.maven.extension.DefaultBuildExtensionScanner.getInitialRemoteRepositories(DefaultBuildExtensionScanner.java:357)
	at org.apache.maven.extension.DefaultBuildExtensionScanner.scanInternal(DefaultBuildExtensionScanner.java:109)
	at org.apache.maven.extension.DefaultBuildExtensionScanner.scanForBuildExtensions(DefaultBuildExtensionScanner.java:81)
	at org.apache.maven.DefaultMaven.getProjects(DefaultMaven.java:282)
	... 13 more
Caused by: org.apache.maven.project.ProjectBuildingException: Failed build model from URL 'jar:file:/c:/Program Files/maven2.1/bin/../lib/maven-project-2.1-SNAPSHOT.jar!/org/apache/maven/project/pom-4.0.0.xml'
Error: 'Illegal character in opaque part at index 20: jar:file:/c:/Program Files/maven2.1/bin/../lib/maven-project-2.1-SNAPSHOT.jar!/org/apache/maven/project/pom-4.0.0.xml' for project org.apache.maven:super-pom
	at org.apache.maven.project.DefaultMavenProjectBuilder.readModel(DefaultMavenProjectBuilder.java:1073)
	at org.apache.maven.project.DefaultMavenProjectBuilder.getSuperModel(DefaultMavenProjectBuilder.java:1281)
	at org.apache.maven.project.DefaultMavenProjectBuilder.buildStandaloneSuperProject(DefaultMavenProjectBuilder.java:228)
	at org.apache.maven.extension.DefaultBuildExtensionScanner.getInitialRemoteRepositories(DefaultBuildExtensionScanner.java:353)
	... 16 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 20: jar:file:/c:/Program Files/maven2.1/bin/../lib/maven-project-2.1-SNAPSHOT.jar!/org/apache/maven/project/pom-4.0.0.xml
	at java.net.URI$Parser.fail(URI.java:2809)
	at java.net.URI$Parser.checkChars(URI.java:2982)
	at java.net.URI$Parser.parse(URI.java:3019)
	at java.net.URI.<init>(URI.java:578)
	at org.apache.maven.project.DefaultMavenProjectBuilder.readModel(DefaultMavenProjectBuilder.java:1062)
	... 19 more

This is because URI instances cannot contain spaces, and the following code is used to translate this jar path into a URI:

            uri = new URI( url.toString() ); //DefaultMavenProjectBuilder.readModel(String, URL, boolean): Model (revId: 587777)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-3607,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28lzb:",9223372036854775807,,,,,,,,,,,,,,,,,,,"05/Nov/07 15:41;jdcasey;Changed:

new URI( url.toString() );

to:

new URI( url.toString().replaceAll( "" "", ""%20"" );

which should fix the most common problem related to paths (i.e. paths with spaces in them);;;","05/Nov/07 19:34;carlos;For more info

I was using the URL.toURI method but it's only available in java 5
http://java.sun.com/javase/6/docs/api/java/net/URL.html#toURI()

""This method functions in the same way as new URI (this.toString()).
Note, any URL instance that complies with RFC 2396 can be converted to a URI. However, some URLs that are not strictly in compliance can not be converted to a URI."";;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Regression: Maven drops dependencies in multi-module build,MNG-3259,12794883,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,joehni,joehni,26/Oct/07 06:52,15/Jan/21 11:46,03/Jan/22 13:13,22/Feb/08 15:12,2.0.7,2.0.8,3.0-alpha-1,,,2.0.9,,,Dependencies,,,,,6,,,,"Under some circumstances Maven ""forgets"" about test dependencies in multi-module builds. The affected module can be build only if the build is started from its local project directory. If the build is run from a parent directory, the test fails because of missing classes. This issue applies to M207 and recent M208-RC1, the project can be build without problems with M205 (M206 is completely bogus). The problem was for us already the show stopper for M207 and I thought with some of the now resolved issues it has been gone, but I was wrong. I did not report it earlier, because I was never able to reproduce the problem with a minimal build ... until now and it took me about 3 days to create a demonstrating multi module project.",,";30/Oct/07 22:37;;18000",,,0,18000,,,0,18000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-2962,,,,,,,,MNG-3829,,,"29/Oct/07 04:25;joehni;MNG-3259-2.zip;https://issues.apache.org/jira/secure/attachment/12712109/MNG-3259-2.zip","26/Oct/07 07:22;joehni;MNG-3259.zip;https://issues.apache.org/jira/secure/attachment/12712633/MNG-3259.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28utz:",9223372036854775807,,,,,,,,,,,,,,,,,,,"26/Oct/07 07:22;joehni;Attachment with zipped demo project.

Build instructions:
- extract ZIP
- go into extracted root directory
- install parent pom first: mvn -f parent/pom.xml
- install multi-module: mvn install

The build should fail (*).

Go into module5 and build from there: mvn install

This time it should succeed.


*) Before I've zipped the project I tried to replace any occurrence of ""XXX"" with ""3259"" in the 7 pom.xml files, but after that action M208 can suddenly build this! Therefore I've added also an ""install.log"" to the project root that demonstrates the problem. This means additionally that this build might behave differently on different JDKs. I highly assume that there are still some  HashMaps used internally that have influence about the sequence the dependencies are processed, therefore I'd expect Maven to behave differently, e.g. this sequence is different for HashMaps in JDK 6 and the project can be build running M208 with JDK 6! See also first lines of install.log for my environment:

Maven version: 2.0.8-SNAPSHOT
Java version: 1.4.2_13
OS name: ""windows xp"" version: ""5.1"" arch: ""x86"" Family: ""windows""
;;;","28/Oct/07 09:22;brianf@infinity.nu;This project depends on an ejb jar that isn't on repo. Any way we can use something else? This will make it impossible to make an IT for this since we can't redistribute the jar.;;;","28/Oct/07 20:48;brianf@infinity.nu;I installed the jar and I can't reproduce this so far.;;;","28/Oct/07 21:06;brianf@infinity.nu;I verified this on 2.0.7/8 and 2.1 using java 1.5. It seems ok with 1.6;;;","28/Oct/07 21:59;brianf@infinity.nu;I noticed that you had exclusions in various places for the artifact that is missing (xstream). Why are those exclusions there? If I remove them, then everything builds fine, but the order of resolution is slightly different. ;;;","29/Oct/07 04:25;joehni;Improved demo project.

 > This project depends on an ejb jar that isn't on repo. Any way we can use something else?
 > This will make it impossible to make an IT for this since we can't redistribute the jar.

I replaced javax.ejb:ejb with an old version of jboss:jboss-j2ee and the problem still occurs - so far so good. Also removed the unnecessary parent pom of the root.

 > I installed the jar and I can't reproduce this so far.
 > I verified this on 2.0.7/8 and 2.1 using java 1.5. It seems ok with 1.6

As I said, fails with JDK 1.4.2 and 1.5.0, works for 1.6.0 - therefore I assume that a HashMap is involved when processing the sequence of the deps, since some internals of the HashMap changed in JDK 1.6 causing this effect - which should not make any difference for any algorithm using a HashMap, since it is an expected behaviour.

 > I noticed that you had exclusions in various places for the artifact that is missing (xstream).
 > Why are those exclusions there? If I remove them, then everything builds fine, but the 
 > order of resolution is slightly different.

This is typical for artifacts containing business delegates. Those artifacts are used in web clients and they may not include all dependencies used to implement the business logic on the server. The coincidence here is, that the excluded deps are not used at the client, should not be included in the resulting war and should not even be available as transitive dep. However, the excluded artifact is necessary for running  the tests (or compiling, simply add a refernce to the missing class into the test code and the build fails earlier). With M205 Maven still provides this artifact as test dependency, while with M207 and M208 the dependency is suddenly gone.

Module 1 is in the real world basically a test framework on top of jMock and JUnit where we do not really care about all the deps it needs, since it *is* for test only.

You are also able to use a workaround by declaring the missing dependency explicitly in the POM to be used for test scope, but in our real build it does not really help, since then surefire in M207/M208 is missing the next class from a different artifact that should be available as transitive dep from the test framework.

Point is, that the algorithm calculating the deps and the classpaths in M207/M208 provides different results when run locally or from a parent.

BTW: Thanks for looking at this, it drives us really crazy.;;;","30/Oct/07 22:40;brianf@infinity.nu;This is related to natural set ordering as assumed. The problem seems to be that the testClasspathElements is missing these artifacts (xstream etc) but they are present when running dependency:resolve or tree. The case that works, sets xstream to compile first then test, the case that doesn't sets it to test then compile. Somewhere in the artifact collector, the scope is getting slammed and then I think the tree is being trimmed for a closer dependency that is excluded. It's a complex example that has dependencyMgt, exclusions and reactor siblings all involved. Could you have found a more complex case ;-)

I'm getting close...;;;","31/Oct/07 03:37;joehni;Guess, I have to apologize now ... ;-);;;","01/Nov/07 08:01;asgeirn;I am unable to reproduce the error.

Steps:

- Used MNG-3259-2.zip 
- Installed parent pom
- Installed multiproject

Maven versions: 2.0.7 and 2.0.8-SNAPSHOT

OS name: ""sunos"" version: ""5.10"" arch: ""x86"" Family: ""unix""

Java versions: 
Java HotSpot(TM) Server VM (build 1.6.0_03-b05, mixed mode)
Java HotSpot(TM) Server VM (build 1.5.0_13-b05, mixed mode)
Java HotSpot(TM) Client VM (build 1.4.2_15-b02, mixed mode)

Expected result:
- Multiproject build should fail

Actual result:
- Multiproject build passes.;;;","01/Nov/07 10:27;brianf@infinity.nu;There is definately an issue. I think though that there are plenty of workarounds and this is a far edge case. I think the best thing is to bump this to 2.0.9 because any fix we make is likely to break something and we should have plenty of time to flush it out.;;;","01/Nov/07 12:59;joehni;Oh, please don't. I already reported the problem as regression for 2.0.7, but was not able to find a test case to reproduce the effect:
http://mail-archives.apache.org/mod_mbox/maven-dev/200706.mbox/<F0D7281DAB048B438E8F5EC4ECEFBDDC0173C7E3%40esmail.elsag.de>. I follow all the issues about dependency problems quite close and I really thought that the causing issue has been fixed - unless I tried the new RC.

And, no, we're stuck to 2.0.5, because we don't have a workaround. As said, if we add the missing artifact directly with scope test, the test fails with another missing class. IMHO it is quite scary, that Maven drops dependencies under some circumstances. And staying with M205 starts to be a real pain, since quite some new versions of plugins require now newer versions.

I can also confirm Asgeir's comment, the build does not fail for me on Linux, so it seems to be bound to a Windows installation - for whatever weird reason, but see also:
MNG-2962
MNG-3061

At least the natural order should not make any difference, then we would have a chance of sorting the deps accordingly. Can you simply replace the usage of the involved ordinary HashMaps with LinkedHashMaps?;;;","01/Nov/07 13:08;asgeirn;If it appears only on Windows -- could it be related to Windows' weird case-insensitive, but case-preserving file naming?

I would guess that the strings c:\Windows and C:\WINDOWS have different hashcodes (and thus ordering could change), but are considered equal by the file system.

Furthermore, the backslash \ vs forward slash / in file system paths could also cause equivalent paths to be treated different in a HashMap.;;;","01/Nov/07 14:16;brianf@infinity.nu;Its not as scary as you think. It seems to be related to the fact that you are excluding the same artifacts in some places, but want them in test scope in others. I think this is a rare occurance. You should be able to just add the ones you want as test scope.

I'll try to look some more, but if it's not an easy fix then we have to bump it. The chances of it breaking other behavior is probably greater.

Also, this isn't a windows only issue, i have reproduced it on solaris. For me it only happens on jdk 1.5 or less.;;;","13/Nov/07 02:33;brianf@infinity.nu;I think we need to bump this to 2.0.9. After looking at it for a while, I have a general idea of the problem, but the fix has a high probability of breaking things further. There are several ways to work around this particular issue and from what I've seen, it occurs only in a very specific case: you are excluding a dependency from being pulled in transitively but then need the same dependency in the test scope. ;;;","13/Nov/07 03:30;joehni;For us it simply means that M2 is non-usable since 2.0.6.;;;","13/Nov/07 03:52;brianf@infinity.nu;Add the missing dependencies to your pom and it should be fine right?;;;","13/Nov/07 05:27;joehni;As I already said, if I add that particular dep in my real project, Maven complains about the next one missing. We miss a complete tree of transitive runtime deps. And you can recognize that only if you have actually tests that use the missing class indirectly. Without 100% test coverage you may easily end up with a broken ear or web app. Also see the linked issue, we are not the only ones suffering from this problem. If at least there was no natural order of a HashMap involved, then we might be able to ""sort"" our dependencies in a way where nothing gets lost, but currently it is pure coincidence, if it works.;;;","15/Nov/07 16:29;brianf@infinity.nu;2.0.8 should provide the ability to sort your dependencies by rearranging them in your pom...

http://www.nabble.com/moving-forward-with-2.0.8-tf4796513s177.html;;;","16/Nov/07 10:52;joehni;I tried it. But I can shuffle the sequence of the dependencies how I like, those transitive deps are missing in my real project.;;;","16/Feb/08 00:27;brianf@infinity.nu;The issue is in the maven-artifact resolver.DefaultArtifactCollector in this vicinity of this line:

{noformat}
                           // Also, we need to ensure that any exclusions it presents are
                            // added to the artifact before we retrive the metadata
                            // for the artifact; otherwise we may end up with unwanted
                            // dependencies.
                            Artifact ma = (Artifact) managedVersions.get( childKey );
                            ArtifactFilter managedExclusionFilter = ma.getDependencyFilter();
                            if ( null != managedExclusionFilter )
                            {
                                System.out.println(""Adding Exclusion Filter:""+ma);
                                if ( null != artifact.getDependencyFilter() )
                                {
                                    AndArtifactFilter aaf = new AndArtifactFilter();
                                    aaf.add( artifact.getDependencyFilter() );
                                    aaf.add( managedExclusionFilter );
                                    artifact.setDependencyFilter( aaf );
                                }
                                else
                                {
                                    artifact.setDependencyFilter( managedExclusionFilter );
                                }
                            }
                        }

{noformat}

I believe the scope transformation is taking place before the exclusion is processed, thus the artifact is first dumped out of the compile classpath and then erroneously excluded.;;;","19/Feb/08 01:48;ralphgoers;I downloaded MNG-3259-2.zip.  I updated maven-2.0.x to the latest code. I ran the build from my ubuntu VM on Windows. It worked. The output from mvn -v there is: 
Maven version: 2.0.9-SNAPSHOT
Java version: 1.5.0_14
OS name: ""linux"" version: ""2.6.22-14-generic"" arch: ""i386"" Family: ""unix""

I then ran the test in cygwin on Windows. It worked. mvn -v shows 
Maven version: 2.0.9-SNAPSHOT
Java version: 1.5.0_09
OS name: ""windows xp"" version: ""5.1"" arch: ""x86"" Family: ""windows""

I then went to a ""normal"" Windows command shell and ran mvn clean and then mvn install. It completed successfully. The output from mvn -v was
Maven version: 2.0.9-SNAPSHOT
Java version: 1.5.0_09
OS name: ""windows xp"" version: ""5.1"" arch: ""x86"" Family: ""windows"";;;","19/Feb/08 01:58;joehni;Is there anywhere a M209-SNAPSHOT available? I am happy to test it myself. I am really eager to get rid of this issue, since it forces us to uses M205 still.;;;","19/Feb/08 08:49;ralphgoers;No. You have to build it your self. To do this you need subversion installed. Then do 
1. Create a directory named apache-maven-2.0.9-SNAPSHOT somewhere
2. set M2_HOME to point to the apache-maven-2.0.9-SNAPSHOT directory
3. From a directory where you want the maven source do svn co https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x/
4  cd to maven-2.0.x
5  run ./bootstrap.sh
6  add M2_HOME/bin to the beginning of your path
7  do mvn -v and verify that your version is 2.0.9-SNAPSHOT.

Note that I am not claiming that anything was fixed. I just couldn't duplicate the problem on Windows with Java 5.;;;","20/Feb/08 17:00;brianf@infinity.nu;Hi Ralph, you need 1.4 to duplicate it.;;;","22/Feb/08 15:12;jdcasey;I just tested this on OS X and WinXP, using maven 2.0.7, 2.0.8, and 2.0.9-SNAPSHOT from revId: 630321. All of my tests used JDK 1.4. 

In the cases of 2.0.8 and 2.0.9-SNAPSHOT on OS X, it didn't fail.

In the cases of 2.0.7 and 2.0.8 on WinXP, it failed.

In the case of 2.0.9-SNAPSHOT on WinXP, it didn't fail.

I'm not sure, but it looks like it has been fixed inadvertently...not a great thing to say, but there you go. I'd welcome some more eyes on this issue, to see if you can prove me wrong/crazy/something.

I built a distro from that revision, and parked it here:

http://people.apache.org/~jdcasey/maven-drops/2.0.9-SNAPSHOT

Please reopen this issue if you can't replicate my success.;;;","25/Feb/08 03:06;joehni;Although I feel a bit uncomfortable, if such a problem suddenly vanished without identification of the originating reason, I have to confirm that this SNAPSHOT is the first version since M205 that builds our complete project tree without any problem:

=========== %< =========
[SNIP]
...
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO] ------------------------------------------------------------------------
...
[SNIP]289 projects
...
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESSFUL
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 44 minutes 3 seconds
[INFO] Finished at: Mon Feb 25 09:59:29 CET 2008
[INFO] Final Memory: 160M/254M
[INFO] ------------------------------------------------------------------------
=========== %< =========

This is really such a great relief! Thanks to all of you looking into this! 
BTW John, when did you claim, M209 is gonna released? ;-) GO GO GO GO :D;;;","11/Dec/17 16:34;hudson;Build unstable in Jenkins: Maven TLP (wip) » maven » pre-reset-master #3

See https://builds.apache.org/job/maven-wip/job/maven/job/pre-reset-master/3/;;;","22/Dec/20 17:14;hudson;Build succeeded in Jenkins: Maven » Maven TLP » maven » master #72

See https://ci-builds.apache.org/job/Maven/job/maven-box/job/maven/job/master/72/;;;","24/Dec/20 17:16;hudson;Build succeeded in Jenkins: Maven » Maven TLP » maven » MNG-6888 #16

See https://ci-builds.apache.org/job/Maven/job/maven-box/job/maven/job/MNG-6888/16/;;;","24/Dec/20 22:26;hudson;Build unstable in Jenkins: Maven » Maven TLP » maven » MNG-6114 #2

See https://ci-builds.apache.org/job/Maven/job/maven-box/job/maven/job/MNG-6114/2/;;;","14/Jan/21 20:35;hudson;Build unstable in Jenkins: Maven » Maven TLP » maven » MNG-6268 #2

See https://ci-builds.apache.org/job/Maven/job/maven-box/job/maven/job/MNG-6268/2/;;;","14/Jan/21 20:42;hudson;Build unstable in Jenkins: Maven » Maven TLP » maven » MODELTESTS_IMPROVEMENT #16

See https://ci-builds.apache.org/job/Maven/job/maven-box/job/maven/job/MODELTESTS_IMPROVEMENT/16/;;;","14/Jan/21 20:47;hudson;Build unstable in Jenkins: Maven » Maven TLP » maven » MNG-6113 #3

See https://ci-builds.apache.org/job/Maven/job/maven-box/job/maven/job/MNG-6113/3/;;;","14/Jan/21 20:57;hudson;Build unstable in Jenkins: Maven » Maven TLP » maven » MNG-6169/MNG-6554 #15

See https://ci-builds.apache.org/job/Maven/job/maven-box/job/maven/job/MNG-6169%252FMNG-6554/15/;;;","14/Jan/21 21:04;hudson;Build unstable in Jenkins: Maven » Maven TLP » maven » MNG-6169/MNG-6552 #15

See https://ci-builds.apache.org/job/Maven/job/maven-box/job/maven/job/MNG-6169%252FMNG-6552/15/;;;","14/Jan/21 21:19;hudson;Build unstable in Jenkins: Maven » Maven TLP » maven » MNG-6169/MNG-6550 #15

See https://ci-builds.apache.org/job/Maven/job/maven-box/job/maven/job/MNG-6169%252FMNG-6550/15/;;;","14/Jan/21 21:34;hudson;Build unstable in Jenkins: Maven » Maven TLP » maven » MNG-6169/MNG-6555 #15

See https://ci-builds.apache.org/job/Maven/job/maven-box/job/maven/job/MNG-6169%252FMNG-6555/15/;;;","14/Jan/21 21:36;hudson;Build unstable in Jenkins: Maven » Maven TLP » maven » MNG-6169/MNG-6553 #15

See https://ci-builds.apache.org/job/Maven/job/maven-box/job/maven/job/MNG-6169%252FMNG-6553/15/;;;","14/Jan/21 21:44;hudson;Build unstable in Jenkins: Maven » Maven TLP » maven » MNG-6169/MNG-6556 #15

See https://ci-builds.apache.org/job/Maven/job/maven-box/job/maven/job/MNG-6169%252FMNG-6556/15/;;;","14/Jan/21 21:55;hudson;Build unstable in Jenkins: Maven » Maven TLP » maven » MNG-6889 #15

See https://ci-builds.apache.org/job/Maven/job/maven-box/job/maven/job/MNG-6889/15/;;;","14/Jan/21 22:13;hudson;Build unstable in Jenkins: Maven » Maven TLP » maven » MNG-6909 #15

See https://ci-builds.apache.org/job/Maven/job/maven-box/job/maven/job/MNG-6909/15/;;;","14/Jan/21 22:31;hudson;Build unstable in Jenkins: Maven » Maven TLP » maven » Bananeweizen-MNG-6907 #16

See https://ci-builds.apache.org/job/Maven/job/maven-box/job/maven/job/Bananeweizen-MNG-6907/16/;;;","14/Jan/21 22:37;hudson;Build failed in Jenkins: Maven » Maven TLP » maven » MNG-6829 #15

See https://ci-builds.apache.org/job/Maven/job/maven-box/job/maven/job/MNG-6829/15/;;;","14/Jan/21 22:51;hudson;Build unstable in Jenkins: Maven » Maven TLP » maven » MRESOLVER-94 #15

See https://ci-builds.apache.org/job/Maven/job/maven-box/job/maven/job/MRESOLVER-94/15/;;;","14/Jan/21 23:07;hudson;Build unstable in Jenkins: Maven » Maven TLP » maven » MNG-6952 #15

See https://ci-builds.apache.org/job/Maven/job/maven-box/job/maven/job/MNG-6952/15/;;;","14/Jan/21 23:24;hudson;Build unstable in Jenkins: Maven » Maven TLP » maven » MNG-5567 #15

See https://ci-builds.apache.org/job/Maven/job/maven-box/job/maven/job/MNG-5567/15/;;;","14/Jan/21 23:53;hudson;Build unstable in Jenkins: Maven » Maven TLP » maven » mng-5668-poc #15

See https://ci-builds.apache.org/job/Maven/job/maven-box/job/maven/job/mng-5668-poc/15/;;;","15/Jan/21 00:16;hudson;Build unstable in Jenkins: Maven » Maven TLP » maven » REMOVE_DEPRECATED #15

See https://ci-builds.apache.org/job/Maven/job/maven-box/job/maven/job/REMOVE_DEPRECATED/15/;;;","15/Jan/21 00:29;hudson;Build unstable in Jenkins: Maven » Maven TLP » maven » MNG-6012-Missing-Profile-At-End #15

See https://ci-builds.apache.org/job/Maven/job/maven-box/job/maven/job/MNG-6012-Missing-Profile-At-End/15/;;;","15/Jan/21 11:46;hudson;Build unstable in Jenkins: Maven » Maven TLP » maven-studies » maven-metrics #15

See https://ci-builds.apache.org/job/Maven/job/maven-box/job/maven-studies/job/maven-metrics/15/;;;",,,,,,,,,,,
SNAPSHOTS: updatePolicy always gets ignored,MNG-3252,12794901,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,maurotalevi,aldana,aldana,24/Oct/07 02:47,25/Oct/07 06:49,03/Jan/22 13:13,24/Oct/07 12:07,2.0.7,,,,,,,,General,POM,Settings,,,0,,,,"i am working with snapshots and therefore i am setting the <updatePolicy>always</updatePolicy> of internal repository. This is not working and basically makes working with SNAPSHOTS impossible, which is highly severe in many maven development processes.

for details see attached files. the setting is that project A is depending on project B. when a new SNAPSHOT version of project B gets deployed and a 'mvn compile' of project A gets executed, maven does not look up for a fresh version of project B. 

in my view it ignores the always snapshot setting and uses the default daily flag. the reason for this assumption is that the day after executing 'mvn compile', it checked for a new version.

please advice what i can do to have this issue fixed (this is a total blocker with working with maven in our development). if this cannot be fixed for 2.0.7 quickly, please tell which version i can use, maybe it has been fixed already (though could not find a matching bug report).

when trying to reproduce with attached files watch out, that the url of internal repository needs to be adjusted.

thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Oct/07 12:03;maurotalevi;maven-update-policy-test.zip;https://issues.apache.org/jira/secure/attachment/12711966/maven-update-policy-test.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28wyf:",9223372036854775807,,,,,,,,,,,,,,,,,,,"24/Oct/07 10:26;aldana;this bug has somewhere already been fixed:

i tried version of release candiate 2.0.8 (see http://www.nabble.com/2.0.8-Release-Candidate-tf4681576s177.html) and with this snapshot downloading works.;;;","24/Oct/07 12:02;maurotalevi;Actually, it works with 2.0.7 as well.

I'm attaching a modified version of your test case, which demostrates it. 

To reproduce:
- unzip maven-update-policy-test.zip
- add the profile called always-update-policy (specified in settings.xml) to your ~/.m2/settings.xml
- cd B; mvn deploy
- cd ../A; mvn install  -Palways-update-policy

Now if you do another mvn install -Palways-update-policy you'll notice the INFO message 

[INFO] snapshot org.apache.maven.issues:artifact-b:1.0-SNAPSHOT: checking for updates from internal

while if you do a mvn install (without activating the always-update-policy profile) you will not see this message.

;;;","24/Oct/07 12:03;maurotalevi;Attaching test files that demostrate the abiility to use the always update policy on snapshots.;;;","24/Oct/07 12:07;maurotalevi;Closing as not reproduceable.  

Please re-open if you still have problems with the test files provided.;;;","25/Oct/07 04:18;aldana;it is a complete miracle.

after downloading and installing a fresh maven-2.0.7.bin.zip it worked. still my not working maven installation with 'mvn -version' showed version 2.0.7. 

just weird! indeed the contents of my not working maven showed a different checksum, maybe transimission errors or similar, though i assumed that file corruptions are already handled by the unpack programm through checksums...;;;","25/Oct/07 06:49;maurotalevi;Good!  Yes - checksum validation is always a good practice.

I've removed the original files attached, now superceded for future reference by the refactored ones in the attachment uploaded, which can be among other things be used on any platform out-of-the-box (it uses java.io.tmpdir to create the internal-repo).


;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven Reporting API is binary incompatible in 2.0.8-SNAPSHOT by r579987,MNG-3245,12797618,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,siveton,jameswdumay,jameswdumay,17/Oct/07 23:44,05/Apr/15 23:17,03/Jan/22 13:13,20/Oct/07 07:19,2.0.8,,,,,2.0.8,,,Sites & Reporting,,,,,0,,,,"See example exception file attached.

I tracked the problem down to this change:

r579987 | vsiveton | 2007-09-27 22:31:07 +1000 (Thu, 27 Sep 2007) | 2 lines
o bumped to the release doxia-sink-api
o used org.apache.maven.doxia.sink.Sink instead of the deprecated org.codehaus.doxia.sink.Sink

Ill attempt a rollback locally of the change and report back.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,DOXIA-146,,,,,,,,,,,,,,,,,"18/Oct/07 20:28;atlassian-user-latest.tar.gz;https://issues.apache.org/jira/secure/attachment/12712482/atlassian-user-latest.tar.gz","18/Oct/07 00:24;maven-doxia-rollback.patch;https://issues.apache.org/jira/secure/attachment/12712279/maven-doxia-rollback.patch","17/Oct/07 23:44;sample-exception-report.txt;https://issues.apache.org/jira/secure/attachment/12712565/sample-exception-report.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28lxz:",9223372036854775807,,,,,,,,,,,,,,,,,,,"18/Oct/07 00:24;jameswdumay;Patch fixes binary compatibility issue.

Ive tested this against the latest site plugin and all seems well.;;;","18/Oct/07 10:08;siveton;org.codehaus.doxia.sink.Sink will be removed in Doxia 1.0 so we will break the binary compatible in the futur.;;;","18/Oct/07 13:00;siveton;I cannot reproduce your error with both maven and checkstyle snapshot.  If you use 2.0.8-SNAPSHOT,  try with 2.0.7.

FYI, no change in the API had been reported in 2.0.5, 2.0.6 and 2.0.7.
;;;","18/Oct/07 19:14;brettporter;Vincent, the problem is that it won't work with non-snapshot versions of everything (which is what most people are using :). If you use maven 2.0.8-SNAPSHOT with a released version of the checkstyle plugin, can you reproduce the problem?;;;","18/Oct/07 19:27;siveton;Brett, I try these steps:

Clean my repo
Install maven 2.0.8-SNAPSHOT (r586191) 
Call mvn checkstyle:checkstyle (so using maven-checkstyle-plugin:2.1)

no error here...;;;","18/Oct/07 20:13;jameswdumay;Vincent, checkout a project that uses site docs.

then generate the site using:

mvn clean site

You should get the exception.

Ill upload a testcase for you in a moment.;;;","18/Oct/07 20:28;jameswdumay;Unpack and run with maven 2.0.8-SNAPSHOT from trunk:

mvn clean site;;;","19/Oct/07 06:54;siveton;Thanks, I will revert.

Brett, any suggestions to solve DOXIA-146 and doesn't break builds?;;;","19/Oct/07 07:08;brettporter;I think we can only cycle it over time - but certainly not an urgent problem - I would leave it in for 1.0.;;;","20/Oct/07 07:19;siveton;done;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"On call with full name Plugin groupId:artifatcId:version:goal , the ArtifactResolver is unable to resolve Plugins",MNG-3211,12796564,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Cannot Reproduce,brettporter,kaamelot.fr,kaamelot.fr,17/Sep/07 09:40,06/Apr/10 20:39,03/Jan/22 13:13,06/Apr/10 19:35,2.0.7,,,,,,,,,,,,,0,,,,"It appears that if Plugin is called using its full name Plugin groupId:artifactId:version:goal , the ArtifactResolver try to resolve Dependency Plugins only on central (http://repo1.maven.org/maven2).

Detailed explanation :
- I developped a Plugin identified as follow :
  > groupId : my.company
  > artifactId : maven-my-plugin
  > version : 1.0
  > available goal : goal

1) 1st Case :

   - With a  pom.xml as follow 
   <project >
   	<modelVersion>4.0.0</modelVersion>
   
   	<groupId>my.company</groupId>
   	<artifactId>my-project</artifactId>
   	<packaging>pom</packaging>
   	<name>My Project</name>
   	<version>1.0</version>
   
   	<build>
   
   		<plugins>
   			<plugin>
   				<groupId>my.company</groupId>
   				<artifactId>maven-my-plugin</artifactId>
   
   				<configuration>
   				   ...
   				</configuration>
   
   			</plugin>
   		</plugins>
   	</build>
   </project>
   
   - Executing ""mvn my:goal"" with new Maven Installation with empty local repository, from the directory where is stored locally this pom.xml ...
   My plugin is correctly downloaded from my Remote Maven Repository, and the goal successfully executed.
   
2) 2nd Case
   - Executing ""mvn my.company:maven-my-plugin:1.0:goal"" with new Maven Installation with empty local repository, from any directory ...
   My plugin is correctly downloaded from my Remote Maven Repository, and but its dependencies are not downloaded.
   It appears that Resolver try only to download dependencies from central (http://repo1.maven.org/maven2).
   pluginRepositories declared in settings.xml are ignored.
   
Rgds
V.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29a3j:",9223372036854775807,,,,,,,,,,,,,,,,,,,"17/Sep/07 09:40;kaamelot.fr;Please ... activate the Wiki Renderer on description and comments.;;;","06/Apr/10 19:35;brettporter;Using the follow settings.xml and your scenario, it worked for me in 2.2.1 and 3.0-alpha-7
{code:xml}
<settings>
  <localRepository>/Users/brett/test-runs/MNG-3211/local-repo</localRepository>
  <profiles>
    <profile>
      <id>profile</id>
      <pluginRepositories>
        <pluginRepository>
          <id>plugin</id>
          <url>http://localhost:7777/archiva/repository/test</url>
        </pluginRepository>
      </pluginRepositories>
    </profile>
  </profiles>
  <activeProfiles>
    <activeProfile>profile</activeProfile>
  </activeProfiles>
</settings>
{code:xml};;;","06/Apr/10 20:39;kaamelot.fr;Thanks for update, Brett !

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Changes to MavenSettingsBuilder breaks backward compatibility,MNG-3206,12796568,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,jdcasey,jdcasey,12/Sep/07 10:16,05/Nov/07 10:12,03/Jan/22 13:13,05/Nov/07 10:12,3.0-alpha-1,,,,,3.0-alpha-1,,,Settings,,,,,0,,,,"When I tried to run a the component-it-plugin from maven sandbox during an integration-test run on the assembly plugin with a Maven build from Sept. 10, 2007, I got the following:

Exception in thread ""main"" java.lang.NoSuchMethodError: org.apache.maven.settings.MavenSettingsBuilder.buildSettings()Lorg/apache/maven/settings/Settings;
        at org.apache.maven.shared.test.plugin.RepositoryTool.findLocalRepositoryDirectory(RepositoryTool.java:100)
        at org.apache.maven.shared.test.plugin.ProjectTool.manglePomForTesting(ProjectTool.java:301)
        at org.apache.maven.shared.test.plugin.ProjectTool.packageProjectArtifact(ProjectTool.java:168)
        at org.apache.maven.shared.test.plugin.ComponentTestTool.prepareForTesting(ComponentTestTool.java:180)
        at org.apache.maven.shared.test.plugin.ComponentTestTool.prepareComponentForUnitTestingWithMavenBuilds(ComponentTestTool.java:121)
        at org.apache.maven.plugin.componentit.StagingBuildMojo.execute(StagingBuildMojo.java:90)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:650)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:419)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:293)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:150)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:219)
        at org.apache.maven.embedder.MavenEmbedder.execute(MavenEmbedder.java:819)
        at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:418)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:85)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
        at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:408)
        at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:351)

This is a backward compatibility issue, and should be addressed in order to ensure smooth migrations from 2.0.x to 2.1-alpha-1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28mpz:",9223372036854775807,,,,,,,,,,,,,,,,,,,"05/Nov/07 10:12;jdcasey;handled by the backward compat aspect now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
logging changes prevent compilation failures from being shown (in the reactor),MNG-3194,12794796,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,brettporter,brettporter,06/Sep/07 14:21,10/Oct/07 10:17,03/Jan/22 13:13,10/Oct/07 10:17,3.0-alpha-1,,,,,3.0-alpha-1,,,Errors,Logging,,,,0,,,,"The Maven build is failing today due to a compilation error, and the output looks like:

{code}
     [java] [INFO] [compiler:testCompile]
     [java] [INFO] Compiling 36 source files to /Users/brett/scm/maven/components/maven-project/target/test-classes
     [java] [INFO] 
     [java] [INFO] 
     [java] [INFO] ------------------------------------------------------------------------
     [java] [INFO] Reactor Summary:
     [java] [INFO] ------------------------------------------------------------------------
     [java] [INFO] Apache Maven .......................................... SUCCESS [19.247s]
     [java] [INFO] Maven Build Context ................................... SUCCESS [7.503s]
     [java] [INFO] Maven Model ........................................... SUCCESS [8.808s]
     [java] [INFO] Maven Local Settings Model ............................ SUCCESS [1.960s]
     [java] [INFO] Maven Profile Model ................................... SUCCESS [1.031s]
     [java] [INFO] Maven Lifecycle Model ................................. SUCCESS [1.659s]
     [java] [INFO] Maven Project Builder ................................. FAILED [9.732s]
     [java] [INFO] Maven Plugin API ...................................... NOT BUILT
     [java] [INFO] Maven Core ............................................ NOT BUILT
     [java] [INFO] Maven Reporting API ................................... NOT BUILT
     [java] [INFO] Maven Embedder ........................................ NOT BUILT
     [java] [INFO] ------------------------------------------------------------------------
     [java] [INFO] Error for project: Maven Project Builder (during org.apache.maven.plugins:maven-compiler-plugin:2.0.2:testCompile)
     [java] [INFO] ------------------------------------------------------------------------
     [java] [INFO] BUILD ERRORS
     [java] [INFO] ------------------------------------------------------------------------
     [java] [INFO] Total time: 50 seconds
     [java] [INFO] Finished at: Fri Sep 07 05:13:55 EST 2007
     [java] [INFO] Final Memory: 17M/42M
     [java] [INFO] ------------------------------------------------------------------------
{code}

The compilation errors are missing before the summary.

I haven't tested this outside the reactor.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i296nb:",9223372036854775807,,,,,,,,,,,,,,,,,,,"10/Oct/07 10:17;jdcasey;It's fixed, but because of the fact that it's in the CLI (triggered by a main method, which is the only entry point for the class), and that main method constructs a concrete MavenEmbedder instance, it's not reasonable to setup a unit test for logging output. Maybe we can do something in the ITs.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Several integration tests have been disabled,MNG-3160,12796563,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,bentmann,brettporter,brettporter,21/Aug/07 00:36,14/Nov/08 16:50,03/Jan/22 13:13,25/Oct/08 17:21,2.0.8,3.0-alpha-1,,,,,,,Integration Tests,,,,,1,,,,"[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Failed to resolve artifact.
Missing:
----------
1) org.apache.maven.its.it0126:model:test-jar:tests:1.0-SNAPSHOT
  Try downloading the file manually from the project website.
  Then, install it using the command: 
      mvn install:install-file -DgroupId=org.apache.maven.its.it0126 -DartifactId=model \
          -Dversion=1.0-SNAPSHOT -Dclassifier=tests -Dpackaging=test-jar -Dfile=/path/to/file
Alternatively, if you host your own repository you can deploy the file there: 
      mvn deploy:deploy-file -DgroupId=org.apache.maven.its.it0126 -DartifactId=model \
          -Dversion=1.0-SNAPSHOT -Dclassifier=tests -Dpackaging=test-jar -Dfile=/path/to/file \
           -Durl=[url] -DrepositoryId=[id]
  Path to dependency: 
        1) org.apache.maven.its.it0126:client:jar:1.0-SNAPSHOT
        2) org.apache.maven.its.it0126:model:test-jar:tests:1.0-SNAPSHOT
----------
1 required artifact is missing.
for artifact: 
  org.apache.maven.its.it0126:client:jar:1.0-SNAPSHOT
from the specified remote repositories:
  central (http://repo1.maven.org/maven2)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-2322,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i299pr:",9223372036854775807,,,,,,,,,,,,,,,,,,,"02/Sep/07 23:33;ptabor;This bug is caused by not released version of Maven Jar Plugin. 
The sufficient patch (Connected to MJAR-75) was applied, by 
Maven Jar Plugin has not been released.  

It will work with maven-jar-plugin-2.2(-snapshot). 

If it tests can depend on SNAPSHOT version of plugins
to correct the problem you need to add:
<pluginManagement>
<plugin>
    <groupId>org.apache.maven.plugins</groupId>
     <artifactId>maven-jar-plugin</artifactId>
     <version>2.2-SNAPSHOT</version>
</plugin>
<pluginManagement>

to core-integration-testing/core-integration-tests/src/test/resources/it0126-testJarDependency/pom.xml;;;","25/Oct/08 17:21;bentmann;The only test mentioned here, it0126, has been migrated over to the Maven JAR Plugin in [r707892|http://svn.eu.apache.org/viewvc?view=rev&revision=707892] where it belongs and happily passes.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven2 hangs at [INFO] Retrieving previous metadata from...,MNG-3153,12794833,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Won't Fix,,ddoll,ddoll,16/Aug/07 09:44,29/Oct/07 17:43,03/Jan/22 13:13,29/Oct/07 17:43,2.0.4,2.0.7,,,,,,,General,,,,,0,,,,"Every time when I upload a snapshot or a release version of my project to my company repository it can occure that m2 hangs on one of the
[INFO] Retrieving previous metadata from SomeInternalRepositoryName
messages for hours.
It hangs not always on the same projects (it is a mulit-project) but every time m2 shows ""Retrieving previous metadata from SomeInternalRepositoryName"" it can hang !
Is it possible that maven2 have problem with eventually high network traffic ?

I have tested it with Maven 2.0.4 and 2.0.7.

Here is a memory dump:

    [INFO] Retrieving previous metadata from SomeInternalRepositoryName
2007-08-16 16:24:51
Full thread dump Java HotSpot(TM) Client VM (1.6.0_01-b06 mixed mode, sharing):

""Thread-3"" prio=6 tid=0x02f7d400 nid=0x944 runnable [0x0363f000..0x0363fa14]
   java.lang.Thread.State: RUNNABLE
        at java.io.FileInputStream.readBytes(Native Method)
        at java.io.FileInputStream.read(FileInputStream.java:199)
        at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:264)
        at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:306)
        at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:158)
        - locked <0x229f2110> (a java.io.InputStreamReader)
        at java.io.InputStreamReader.read(InputStreamReader.java:167)
        at java.io.BufferedReader.fill(BufferedReader.java:136)
        at java.io.BufferedReader.readLine(BufferedReader.java:299)
        - locked <0x229f2110> (a java.io.InputStreamReader)
        at java.io.BufferedReader.readLine(BufferedReader.java:362)
        at org.codehaus.plexus.util.cli.StreamPumper.run(StreamPumper.java:139)

""Thread-2"" prio=6 tid=0x02f7d000 nid=0xb60 runnable [0x035ef000..0x035efa94]
   java.lang.Thread.State: RUNNABLE
        at java.io.FileInputStream.readBytes(Native Method)
        at java.io.FileInputStream.read(FileInputStream.java:199)
        at java.io.BufferedInputStream.read1(BufferedInputStream.java:256)
        at java.io.BufferedInputStream.read(BufferedInputStream.java:317)
        - locked <0x229f37c0> (a java.io.BufferedInputStream)
        at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:264)
        at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:306)
        at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:158)
        - locked <0x229f3220> (a java.io.InputStreamReader)
        at java.io.InputStreamReader.read(InputStreamReader.java:167)
        at java.io.BufferedReader.fill(BufferedReader.java:136)
        at java.io.BufferedReader.readLine(BufferedReader.java:299)
        - locked <0x229f3220> (a java.io.InputStreamReader)
        at java.io.BufferedReader.readLine(BufferedReader.java:362)
        at org.codehaus.plexus.util.cli.StreamPumper.run(StreamPumper.java:152)

""Low Memory Detector"" daemon prio=6 tid=0x02af9c00 nid=0x5bc runnable [0x00000000..0x00000000]
   java.lang.Thread.State: RUNNABLE

""CompilerThread0"" daemon prio=10 tid=0x02af8400 nid=0x794 waiting on condition [0x00000000..0x02daf698]
   java.lang.Thread.State: RUNNABLE

""Attach Listener"" daemon prio=10 tid=0x02af7000 nid=0xce0 runnable [0x00000000..0x00000000]
   java.lang.Thread.State: RUNNABLE

""Signal Dispatcher"" daemon prio=10 tid=0x02af6400 nid=0xd7c waiting on condition [0x00000000..0x00000000]
   java.lang.Thread.State: RUNNABLE

""Finalizer"" daemon prio=8 tid=0x02aee400 nid=0xc2c in Object.wait() [0x02cbf000..0x02cbfa94]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x22e0d7e8> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:116)
        - locked <0x22e0d7e8> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:132)
        at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)

""Reference Handler"" daemon prio=10 tid=0x02aed400 nid=0xe50 in Object.wait() [0x02c6f000..0x02c6fb14]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x22e0d878> (a java.lang.ref.Reference$Lock)
        at java.lang.Object.wait(Object.java:485)
        at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:116)
        - locked <0x22e0d878> (a java.lang.ref.Reference$Lock)

""main"" prio=6 tid=0x00266400 nid=0xd78 runnable [0x0095f000..0x0095fe54]
   java.lang.Thread.State: RUNNABLE
        at java.lang.ProcessImpl.waitFor(Native Method)
        at org.codehaus.plexus.util.cli.CommandLineUtils.executeCommandLine(CommandLineUtils.java:98)
        at org.codehaus.plexus.util.cli.CommandLineUtils.executeCommandLine(CommandLineUtils.java:60)
        at org.apache.maven.shared.release.exec.ForkedMavenExecutor.executeGoals(ForkedMavenExecutor.java:99)
        at org.apache.maven.shared.release.DefaultReleaseManager.perform(DefaultReleaseManager.java:434)
        at org.apache.maven.shared.release.DefaultReleaseManager.perform(DefaultReleaseManager.java:281)
        at org.apache.maven.shared.release.DefaultReleaseManager.perform(DefaultReleaseManager.java:273)
        at org.apache.maven.plugins.release.PerformReleaseMojo.execute(PerformReleaseMojo.java:96)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:412)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:534)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeStandaloneGoal(DefaultLifecycleExecutor.java:488)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:458)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:306)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:219)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:140)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:322)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:115)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:256)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)

""VM Thread"" prio=10 tid=0x02ae4000 nid=0xd88 runnable

""VM Periodic Task Thread"" prio=10 tid=0x02afb000 nid=0xd18 waiting on condition

JNI global references: 721

Heap
 def new generation   total 960K, used 106K [0x22910000, 0x22a10000, 0x22df0000)
  eden space 896K,   6% used [0x22910000, 0x2291ed18, 0x229f0000)
  from space 64K,  73% used [0x229f0000, 0x229fbc38, 0x22a00000)
  to   space 64K,   0% used [0x22a00000, 0x22a00000, 0x22a10000)
 tenured generation   total 10316K, used 6402K [0x22df0000, 0x23803000, 0x26910000)
   the space 10316K,  62% used [0x22df0000, 0x23430a30, 0x23430c00, 0x23803000)
 compacting perm gen  total 12288K, used 2820K [0x26910000, 0x27510000, 0x2a910000)
   the space 12288K,  22% used [0x26910000, 0x26bd13b0, 0x26bd1400, 0x27510000)
    ro space 8192K,  66% used [0x2a910000, 0x2ae5c5d0, 0x2ae5c600, 0x2b110000)
    rw space 12288K,  52% used [0x2b110000, 0x2b758c98, 0x2b758e00, 0x2bd10000)



",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28zbj:",9223372036854775807,,,,,,,,,,,,,,,,,,,"29/Oct/07 17:43;brettporter;please post this to the users list - you will need to provide the distributionManagement repository URL you are deploying to. It looks like scpexe, which may just be prompting for input.

If you are able to narrow it down to something reproducible, feel free to reopen the issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Snapshots not updated when using uniqueVersion false,MNG-3144,12794831,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Incomplete,brettporter,nickysandhu,nickysandhu,09/Aug/07 15:48,06/Apr/10 20:00,03/Jan/22 13:13,06/Apr/10 20:00,2.0.7,,,,,,,,Artifacts and Repositories,,,,,0,,,,"The particular scenario here is

1.) Deploy snapshot using uniqueVersion false in distribution management
2.) Verify repository has latest snapshot and metadata is updated in build number and timestamp
3. ) Goto a developer's machine (not the same as from which it was deployed) and do mvn -U or specify updates to be always in pom
4.) Local cache shows the maven metadata xml file is updated but the snapshot artifact (jar  in this case) is not


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-1908,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29avj:",9223372036854775807,,,,,,,,,,,,,,,,,,,"29/Oct/07 17:37;brettporter;why does the metadata have a buildnumber and timestamp if uniqueVersion is false?

mixing the two types of deployments will certainly cause problems.;;;","05/Mar/08 20:24;brianf@infinity.nu;I'm sure this is working as we are using uniqueVersion=false. Are you using some kind of proxy?;;;","28/May/08 15:28;mkwhitacre;A similar issue was resolved in version 2.0.5;;;","06/Apr/10 20:00;brettporter;please let us know if you have answers to the questions;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DefaultModelInheritence::assembleDistributionInheritence should be childPathAdjustment aware,MNG-3134,12796468,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,jdcasey,skaze,skaze,05/Aug/07 10:58,05/Apr/15 14:53,03/Jan/22 13:13,14/Aug/07 09:58,2.0.7,,,,,2.0.8,3.0-alpha-1,,Inheritance and Interpolation,,,,,0,,,,"In the same way that the URL, and SCM inheritance assembly is 'childPathAdjustment' aware, so should the site distribution URL. 

The childPathAdjustment value takes into account a child's relative location to its parent, such that 'children' (modules) that are declared via <module>../../foo/bar</module> end up with paths that are accurate for their location within the external namespaces (ie the SCM namespace or the URL namespace). However this is not being done for the site distribution URL which is obviously a bug as the project URL, which remember is childPathAdjustment aware, has a direct coupling to the distroManagement.site.URL.

Patch against maven-project 2.0.7 attached.",,,,,,,,,,,,,,,,,MNG-2209,,,,,,,,,,,,,,,,,,,,MNG-2006,MNG-2290,,,,,MNG-4994,MNG-5000,MNG-3848,,,,,,,,,"05/Aug/07 10:58;skaze;patch.txt;https://issues.apache.org/jira/secure/attachment/12712488/patch.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,Patch,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i290qv:",9223372036854775807,,,,,,,,,,,,,,,,,,,"14/Aug/07 09:58;jdcasey;Applied. Thanks, John.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DefaultModelInheritence::appendPath assumes it is operating on interpolated/literal paths,MNG-3133,12794829,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,bentmann,skaze,skaze,05/Aug/07 10:24,02/Apr/10 17:09,03/Jan/22 13:13,02/Apr/10 17:09,2.0.7,,,,,3.0-beta-1,,,POM,,,,,1,,,,"Used by all the assembleXXXInheritance methods within assembleModelInheritance, the appendPath method assumes that its dealing with literal paths which is not a documented restriction. Thus having ${expressions} in any of the paths being operated on (e.g. project URL, distroManagement site, SCM, etc etc), the results will not be valid.

This whole area of Maven's core requires a specification so it can be coded too and maintained.

",,,,,,,,,,,,,,,,,MNG-3315,,,,,,,,,,,,,,,,,,,,MNG-3244,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28nuf:",9223372036854775807,,,,,,,,,,,,,,,,,,,"02/Apr/10 17:09;bentmann;Fixed in [r930411|http://svn.apache.org/viewvc?view=revision&revision=930411].;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
goal specified in execution but not found in plugin,MNG-3121,12796552,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Won't Fix,,gvsg,gvsg,26/Jul/07 06:27,06/Sep/07 21:43,03/Jan/22 13:13,06/Sep/07 21:43,2.0.7,,,,,,,,,,,,,0,,,,"Hi all;

I want to run the XML-MAVEN-Plugin when 'mvn site:run' goal has been executed.
Whien doing this I receive the following exception:

org.apache.maven.lifecycle.LifecycleExecutionException: 'run' was specified in an execution, but not found in the plugin
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.bindExecutionToLifecycle(DefaultLifecycleExecutor.java:1342)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.bindPluginToLifecycle(DefaultLifecycleExecutor.java:1243)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.constructLifecycleMappings(DefaultLifecycleExecutor.java:987)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:458)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:311)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:278)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:143)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:334)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:125)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:280)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)

Here is a partial example of my pom.xml  file

	<build>        
        <plugins>
		<plugin>
	            <groupId>org.codehaus.mojo</groupId>
	            <artifactId>xml-maven-plugin</artifactId>
	            <version>1.0-beta-2-patched</version>
				<dependencies>
					<dependency>
			           <groupId>org.codehaus.mojo</groupId>
			            <artifactId>xml-maven-plugin</artifactId>
			            <version>1.0-beta-2-patched</version>
			            <scope>provided</scope>
					</dependency>
				</dependencies>
				<executions>
				  <execution>
					<id>execution1</id>
					<phase>site</phase>
					<goals>
						<goal>run</goal>
					</goals>
		            <configuration>
		                <forceCreation>true</forceCreation>
		                <transformationSets>
		                    <transformationSet>
		                        <dir>target</dir>
		                        <stylesheet>./target/site/pmd-report-per-class.xslt</stylesheet>
		                        <fileMappers>
		                            <fileMapper implementation=""org.codehaus.plexus.components.io.filemappers.FileExtensionMapper"">
		                                <targetExtension>.html</targetExtension>
		                            </fileMapper>
		                        </fileMappers>
		                        <includes>
		                            <include>pmd.xml</include>
		                        </includes>
		                        <outputDir>target/site</outputDir>
		                    </transformationSet>
		                </transformationSets>
		            </configuration>
							  
				</execution>
				</executions>
	        </plugin>

Note:: If I try to set this for other plugins this will also fail.

Kind regards,

Guy
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28qnz:",9223372036854775807,,,,,,,,,,,,,,,,,,,"06/Sep/07 21:43;brianf@infinity.nu;The problem is you are specifying the phase you defined in your execution. The correct way to do this is put the configuration outside the executions block and then execute ""mvn xml:run"";;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven2 issues with Filter ,MNG-3112,12794761,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Duplicate,brettporter,deepal,deepal,18/Jul/07 06:13,29/Oct/07 17:48,03/Jan/22 13:13,29/Oct/07 17:48,2.0.7,,,,,,,,,,,,,0,,,,"Apache Axis2 moved to maven2 completely and now we have faced few issues with maven2. Axis2 is a multi modules bit complex projects and we had no issues with maven1 other than the performance. But once we moved to maven2 we realized that we have issues with filters and we uses a number of filters as well. Specially we have filters in the top most pom.xml and others extend form that , once we change the filter value others get changed but the uploaded one has the filter name not the value.

It will be great we can get a fix or path for this since this is bit critical for us. We can edit them manually and do the release but that is not that good.",,,,,,,,,,,,,,,,,,,,,,,,MNG-1958,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28x1r:",9223372036854775807,,,,,,,,,,,,,,,,,,,"23/Aug/07 18:28;william_ferguson_au@yahoo.com;Deepal, your description of the problem is a little vague.
But perhaps this issue sums up what you need? http://jira.codehaus.org/browse/MRESOURCES-47
If so, please vote for it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"artifact of packaging 'tar.gz' / dependency of type 'tar.gz downloaded, but not saved to local repository",MNG-3078,12797135,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Duplicate,,plynch,plynch,29/Jun/07 12:40,06/Apr/15 01:53,03/Jan/22 13:13,12/Jan/10 10:23,2.0.6,2.0.7,,,,,,,Artifacts and Repositories,Dependencies,,,,2,,,,"Using mvn deploy:deploy-file you can successfully upload a 'tar.gz' artifact to a repository.

Example without classifier:

mvn deploy:deploy-file -DgroupId=org.apache.tomcat -DartifactId=apache-tomcat -Dversion=6.0.13 -Dpackaging=tar.gz -DrepositoryId=repo-central -Durl=dav:http://repo.example.com:4000/maven-repos/repo-central/ -Dfile=apache-tomcat-6.0.13.tar.gz

Example with classifier
mvn deploy:deploy-file -DgroupId=org.apache.tomcat -DartifactId=apache-tomcat -Dversion=6.0.13 -Dpackaging=tar.gz -Dclassifier=bin -DrepositoryId=repo-central -Durl=dav:http://repo.example.com:4000/maven-repos/repo-central/ -Dfile=apache-tomcat-6.0.13.tar.gz

Once uploaded define a dependency in your pom to it.

Example without classifier

<project>
<packaging>pom</packaging>
...
<dependencies>
  ...
  <dependency>
      <groupId>org.apache.tomcat</groupId>
      <artifactId>apache-tomcat</artifactId>
      <version>6.0.13</version>
      <type>tar.gz</type>
      <optional>true</optional>
    </dependency>
  ...
</dependencies>
...
</project>

Example with classifier

<project>
<packaging>pom</packaging>
...
<dependencies>
  ...
  <dependency>
      <groupId>org.apache.tomcat</groupId>
      <artifactId>apache-tomcat</artifactId>
      <version>6.0.13</version>
      <type>tar.gz</type>
      <classifier>bin</classifier>
      <optional>true</optional>
    </dependency>
  ...
</dependencies>
...
</project>


Now to reproduce the problem you could either do

mvn dependency:resolve

or 

mvn assembly:assembly
(if the maven assembly plugin is configured with a dependency set that unpacks this dependency for example)

----

The reason I think this is a core bug and not an maven assembly plugin or maven-dependency-plugin bug is because the problem happens in both of these independent plugins.

When you run 'mvn dependency:resolve'  you'll see that the dependency appears downloaded but then the build fails with :

[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Failed to resolve artifact.

Missing:
----------
1) org.apache.tomcat:apache-tomcat:tar.gz:bin:6.0.13

  Try downloading the file manually from the project website.

  Then, install it using the command: 
      mvn install:install-file -DgroupId=org.apache.tomcat -DartifactId=apache-tomcat \
          -Dversion=6.0.13 -Dclassifier=bin -Dpackaging=tar.gz -Dfile=/path/to/file
Alternatively, if you host your own repository you can deploy the file there:       mvn deploy:deploy-file -DgroupId=org.apache.tomcat -DartifactId=apache-tomcat \
          -Dversion=6.0.13 -Dclassifier=bin -Dpackaging=tar.gz -Dfile=/path/to/file \
           -Durl=[url] -DrepositoryId=[id]

  Path to dependency: 
        1) com.example:core:pom:1.0.0-A1-SNAPSHOT
        2) org.apache.tomcat:apache-tomcat:tar.gz:bin:6.0.13

----------
1 required artifact is missing.
...

... and even stranger here is the log which proves the dependency was found in the repo and downloaded, but NOT saved to local repository.

...
[DEBUG] Trying repository repo-central
Downloading: http://repo.example.com:4000/maven-repos/repo-central/org/apache/tomcat/apache-tomcat/6.0.13/apache-tomcat-6.0.13-bin.tar.gz
5826K downloaded
[DEBUG] Unable to get resource 'org.apache.tomcat:apache-tomcat:tar.gz:bin:6.0.13' from repository repo-central (http://repo.example.com:4000/maven-repos/repo-central)
[DEBUG] Unable to download the artifact from any repository




..and YOU MAY GET FOOLED into thinking all is well. mvn deploy:deploy-file also installs the same artifact into your local repo. So if you follow above steps and don't get an error it is because the deploy-file goal installed it in your local repo. However when someone else tries to use your project they will get above error.

So, first delete from your local repo. example:

rm -rf ~/.m2/repository/org/apache/tomcat/apache-tomcat

and then try to execute mvn dependency:resolve and it should fail as described.


...and finally I'll mention that doing the same thing with a 'zip' type/packaging there is NO PROBLEM.

Ultimately when using the maven assembly plugin I should be able to specify any type of dependency type supported by the maven assembly archiver.


",,,,,,,,,,,,,,,,,,,,,,,,WAGON-299,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i294fj:",9223372036854775807,,,,,,,,,,,,,,,,,,,"29/Jun/07 23:27;brianf@infinity.nu;You are correct this is a core issue. Dependency:resolve doesn't actually do any resolving itself. It just declares to Maven that it requires all dependencies resolved before execution. Only after everything is resolved does the mojo execute, and then it just prints out what was resolved.

Have you tried to unpack this artifact using dependency:unpack? You can specify the type etc in the configuration and it should be able to go retrieve and unpack the file.;;;","29/Oct/07 17:45;brettporter;this will warrant some investigation, as I actually use this in my own build without a problem (though I think that I may not have a classifier in all instances);;;","06/Feb/08 15:52;ips;I'm seeing this same issue w/ Maven 2.0.8 and an artifact with type ""tgz"" (rather than ""tar.gz""). Here's a snippet from the mvn output:

[INFO] ------------------------------------------------------------------------
Downloading: http://repository.jboss.org/maven2//org/hyperic/sigar-dist/1.5.0.1/sigar-dist-1.5.0.1.pom
1K downloaded
Downloading: http://repository.jboss.org/maven2//org/hyperic/sigar-dist/1.5.0.1/sigar-dist-1.5.0.1.tgz
2659K downloaded
Downloading: http://repo1.maven.org/maven2/org/hyperic/sigar-dist/1.5.0.1/sigar-dist-1.5.0.1.tgz
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Failed to resolve artifact.

Missing:
----------
1) org.hyperic:sigar-dist:tgz:1.5.0.1
...
;;;","05/Mar/08 20:26;brianf@infinity.nu;can you make a sample IT for this?;;;","12/Mar/09 10:02;jbousque;Having exactly this problem with Maven 2.0.10, trying to use org.apache.maven:apache-maven, classifier:bin, version:2.0.10 and packaging tar.gz or tar.bz2. Maven used to download it last week, but can't anymore after deleting from my local repository. I checked in repository central existence of these different packages.
I'm using archiva as repository manager, proxifying maven central. All other dependencies download well.
Changing packaging to zip unblocks the situation ...

Dependency declared in my pom in <dependencies> :
{noformat}
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>apache-maven</artifactId>
			<version>2.0.10</version>
			<type>tar.gz</type>
			<classifier>bin</classifier>
			<scope>compile</scope>
		</dependency>
{noformat}

... And used in my assembly in <dependencySets>  :
{noformat}
		<dependencySet>
			<unpack>true</unpack>
			<unpackOptions>
				<excludes>
					<exclude>**/settings.xml</exclude>
				</excludes>
			</unpackOptions>
			<includes>
				<include>org.apache.maven:apache-maven</include>
			</includes>
			<useProjectArtifact>false</useProjectArtifact>
		</dependencySet>
{noformat}

I tried to bypass archiva and directly connect to central, but the same error occurs.;;;","12/Jan/10 10:23;brettporter;I believe this is a duplicate - if that is not the same problem, please reopen with a small test project. tar.gz works in my environment.;;;","13/Jan/10 11:07;plynch;I did create an integration test but using Maven 2.2.9 and Maven 3 i could not reproduce the problem. Files get downloaded and stored in local repo no problem. Somewhere along the line it seems fixed - so I agree - close it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Circular dependencyManagement excludes all classpath dependencies,MNG-3061,12797116,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Cannot Reproduce,,hugopalma,hugopalma,18/Jun/07 18:02,11/Jan/10 21:35,03/Jan/22 13:13,11/Jan/10 21:35,2.0.6,,,,,,,,Dependencies,,,,,2,,,,"It seems that if in the parent pom you have something like:

....
<dependencyManagement>
<dependency>
        <groupId>org.apache.tapestry</groupId>
        <artifactId>tapestry-test</artifactId>
        <version>${project.version}</version>
        <scope>test</scope>
</dependency>
</dependencyManagement>
....

when you try to compile the child tapestry-test sub-project it fails because it can't find any dependencies. In fact doing ""mvn dependency:build-classpath"" confirms this. As soon as the dependencyManagement entry is removed the sub-project compiles just fine.

This works fine in Maven 2.0.5, it just stopped working in 2.0.6.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i299av:",9223372036854775807,,,,,,,,,,,,,,,,,,,"20/Jun/07 21:26;brettporter;needs to be reviewed for 2.0.x as a regression, or closed if this is 'by design';;;","11/Jan/10 21:35;brettporter;can't reproduce in 2.0.6, let alone a recent version. Please attach a project showing the issue if it is still a problem;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[regression] maven reports build success even on error.,MNG-3054,12796540,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Duplicate,brettporter,brettporter,brettporter,13/Jun/07 20:52,02/Sep/07 19:12,03/Jan/22 13:13,02/Sep/07 19:12,3.0-alpha-1,,,,,,,,Errors,,,,,0,,,,"See linked issue for an example.

The output is something like this:
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Failed to construct build plan for: test:exec-phase-binding-test:jar:1.0-SNAPSHOT (  task-segment: [install] ). Reason: No phase specified for goal: aspectj-report in plugin: org.codehaus.mojo:aspectj-maven-plugin from POM: test:exec-phase-binding-test:jar:1.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] For more information, run Maven with the -e switch
[INFO] ------------------------------------------------------------------------
[INFO] Total time: < 1 second
[INFO] Finished at: Thu Jun 14 11:50:42 EST 2007
[INFO] Final Memory: 2M/5M
[INFO] ------------------------------------------------------------------------
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESSFUL
[INFO] ------------------------------------------------------------------------
[INFO] Total time: < 1 second
[INFO] Finished at: Thu Jun 14 11:50:42 EST 2007
[INFO] Final Memory: 2M/5M
[INFO] ------------------------------------------------------------------------

In addition, the exit code is 0, instead of 1 as desired.",,,,,,,,,,,,,,,,,,,,,,,,MNG-2938,,,,,,,,,,,,,MNG-3040,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i2929b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Transitive Dependency not found when repo is not listed,MNG-3052,12794756,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,jdcasey,mkwhitacre,mkwhitacre,13/Jun/07 13:09,04/Nov/08 13:32,03/Jan/22 13:13,27/Jun/08 11:43,2.0.5,,,,,2.0.10,2.1.0-M1,,Artifacts and Repositories,,,,,2,,,,"I have seen the situation where a build fails because a project has a transitive dependency that only exists in a repository not listed by my project.  An example of this is I have Projects A, B, and C.  Where A depends on B, and B on C.  B has been released to remote repo 1, and C has been released to remote repo 2.  Since A just directly depends on B it only lists remote repo 1 in its POM.  However when I try to build project A the build fail because it can't resolve its transitive dependency C in any of the dependencies it is checking (repo 1 only).  

It is my understanding that for project A I shouldn't have to list the remote repos to resolve transitive dependencies.  I should only have to list the repos to get to B and Maven then should use the POM of B to resolve C.

Is that not correct?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-3056,,,,,,,,,,,,,,,,,"18/Mar/08 22:45;InheritLegacyRepo.zip;https://issues.apache.org/jira/secure/attachment/12711979/InheritLegacyRepo.zip","25/Mar/08 14:11;mkwhitacre;mng_3052.zip;https://issues.apache.org/jira/secure/attachment/12712119/mng_3052.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i296c7:",9223372036854775807,,,,,,,,,,,,,,,,,,,"14/Jun/07 23:18;jvanzyl;Incomplete provide a sample build to illustrate the problem.;;;","18/Mar/08 22:45;dirk@xanthippe.ping.de;This example does not exactly reproduce the described setup but illustrates the same effect. The toplevel pom defines a repository, module 'foo' defines two other repositories and module 'bar' depends on 'foo' and on artifacts that can be resolved from bar's repository.

The point is here that if you define a dependency you should be able to resolve transient dependencies through the inherited repositories.;;;","25/Mar/08 14:11;mkwhitacre;I hacked up Dirk's example (thanks for giving me a starting point) and created an example that illustrates my point.  Inside the zip file you will find three projects, foo, bar, and wombat.  Wombat depends on Bar which depends on Foo.  Using the projects in the zip file, run ""mvn clean deploy"" on foo and then bar.  After that is completed clear out your local repository and try and run ""mvn clean compile"" on wombat.  It will have an issue being able to resolve foo and I get the following output:

Missing:
----------
1) org.mule:mule-foo:jar:1.0-SNAPSHOT

  Try downloading the file manually from the project website.

  Then, install it using the command:
      mvn install:install-file -DgroupId=org.mule -DartifactId=mule-foo -Dversio
n=1.0-SNAPSHOT -Dpackaging=jar -Dfile=/path/to/file

  Alternatively, if you host your own repository you can deploy the file there:

      mvn deploy:deploy-file -DgroupId=org.mule -DartifactId=mule-foo -Dversion=
1.0-SNAPSHOT -Dpackaging=jar -Dfile=/path/to/file -Durl=[url] -DrepositoryId=[id
]

  Path to dependency:
        1) org.mule:mule-wombat:jar:1.0-SNAPSHOT
        2) org.mule:mule-bar:jar:1.0-SNAPSHOT
        3) org.mule:mule-foo:jar:1.0-SNAPSHOT

----------
1 required artifact is missing.

for artifact:
  org.mule:mule-wombat:jar:1.0-SNAPSHOT

from the specified remote repositories:
  central (http://repo1.maven.org/maven2),
  example2-repo (file://c:/test/repo2)


You'll notice that it never lists example1-repo as a repository it checked to find foo.;;;","25/Mar/08 14:11;mkwhitacre;reopening because I provided a complete example that illustrates the issues we are seeing.;;;","14/Apr/08 10:40;lukewpatterson;In 2.0.8, it only worked for me after I modified  <distributionManagement> to include <uniqueVersion>false</uniqueVersion>.

In 2.0.9, it seems to work ok without modifications.;;;","03/Jun/08 15:53;jdcasey;Need to incorporate an integration test for this issue to verify that it's fixed.;;;","27/Jun/08 10:05;jdcasey;The problem is that the DefaultArtifactCollector is not using the repository list aggregated and associated with each dependency is read via the MavenMetadataSource...instead, it's using the repository list that was used to resolve the declaring POM (the one that listed those dependencies).

I've corrected it and verified by hand that it works with the attached test project, but I still need to convert the attached test project into a self-contained integration-test project before I close this issue.;;;","27/Jun/08 11:32;jdcasey;It appears that this problem is NOT expressed unless the dependencies are snapshots (not sure whether they both have to be, but when they both are, the problem happens)...if I change them both to non-snapshot versions, the problem disappears...;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
mvn.bat fails,MNG-3039,12794749,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jvanzyl,markh,markh,07/Jun/07 06:47,08/Feb/20 15:40,03/Jan/22 13:13,07/Jun/07 20:37,2.0.6,,,,,2.0.7,,,Command Line,,,,,0,,,,"2.0.7-SNAPSHOT fails to launch under Windows:

[mark@mark My Documents]$ mvn.bat --version
Exception in thread ""main"" java.lang.NoClassDefFoundError: org/codehaus/classworlds/Launcher

Caused by MNG-2503 being merged from trunk into 2.0.x.  Attached patch fixes this.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Jun/07 06:47;markh;patch.txt;https://issues.apache.org/jira/secure/attachment/12712045/patch.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,Patch,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28ydj:",9223372036854775807,,,,,,,,,,,,,,,,,,,"07/Jun/07 08:26;jvanzyl;Patch applied.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
forked execution does not get configuration from the POM,MNG-3027,12794743,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,jdcasey,jdcasey,31/May/07 12:57,13/Aug/08 04:52,03/Jan/22 13:13,31/May/07 18:13,,,,,,3.0-alpha-1,,,,,,,,0,,,,"steps to reproduce:

1. go into maven/components/trunk/maven-project
2. run `mvn -P reporting site:run`
3. notice that checkstyle first reports 216 errors, then when it forks and re-checks (for some reason), it reports 7513 errors. This is because it isn't configured with the settings in the POM.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28zh3:",9223372036854775807,,,,,,,,,,,,,,,,,,,"31/May/07 18:13;jdcasey;pulling configuration for mojos forked from reports using the <reporting/> section in addition to the build section. Also, improved the detection of reports when no report-set is defined (when we just iterate through all MojoDescriptors in a plugin).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
it0108 fails in trunk,MNG-3022,12796532,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,jdcasey,jdcasey,30/May/07 11:13,31/May/07 18:15,03/Jan/22 13:13,31/May/07 18:15,,,,,,,,,,,,,,0,,,,"testSnapshotUpdatedWithMetadata(org.apache.maven.integrationtests.MavenIT0108SnapshotUpdateTest) Time elapsed: 3.435 sec <<< FAILURE!
junit.framework.ComparisonFailure: expected:<updated...> but was:<original...>
at junit.framework.Assert.assertEquals(Assert.java:81)
at junit.framework.Assert.assertEquals(Assert.java:87)
at org.apache.maven.it.Verifier.assertArtifactContents(Verifier.java:1499)
at org.apache.maven.integrationtests.MavenIT0108SnapshotUpdateTest.assertArtifactContents(MavenIT0108SnapshotUpdateTest.java:255)
at org.apache.maven.integrationtests.MavenIT0108SnapshotUpdateTest.testSnapshotUpdatedWithMetadata(MavenIT0108SnapshotUpdateTest.java:113)
at org.apache.maven.integrationtests.MavenIT0108SnapshotUpdateTest.testSnapshotUpdatedWithMetadata(MavenIT0108SnapshotUpdateTest.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:324)
at junit.framework.TestCase.runTest(TestCase.java:154)
at org.apache.maven.integrationtests.AbstractMavenIntegrationTestCase.runTest(AbstractMavenIntegrationTestCase.java:75)
at junit.framework.TestCase.runBare(TestCase.java:127)
at junit.framework.TestResult$1.protect(TestResult.java:106)
at junit.framework.TestResult.runProtected(TestResult.java:124)
at junit.framework.TestResult.run(TestResult.java:109)
at junit.framework.TestCase.run(TestCase.java:118)
at junit.framework.TestSuite.runTest(TestSuite.java:208)
at junit.framework.TestSuite.run(TestSuite.java:203)
at junit.framework.TestSuite.runTest(TestSuite.java:208)
at junit.framework.TestSuite.run(TestSuite.java:203)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:324)
at org.apache.maven.surefire.junit.JUnitTestSet.execute(JUnitTestSet.java:213)
at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:138)
at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:125)
at org.apache.maven.surefire.Surefire.run(Surefire.java:132)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:324)
at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:290)
at org.apache.maven.surefire.booter.SurefireBooter.run(SurefireBooter.java:198)
at org.apache.maven.plugin.surefire.SurefirePlugin.execute(SurefirePlugin.java:398)
at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:638)
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:354)
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:255)
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:141)
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:304)
at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:124)
at org.apache.maven.embedder.MavenEmbedder.execute(MavenEmbedder.java:906)
at org.apache.maven.cli.MavenCli.main(MavenCli.java:367)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:324)
at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:408)
at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:351) 
testSnapshotUpdatedWithMetadataUsingFileTimestamp(org.apache.maven.integrationtests.MavenIT0108SnapshotUpdateTest) Time elapsed: 3.391 sec <<< FAILURE!
junit.framework.ComparisonFailure: expected:<updated...> but was:<original...>
at junit.framework.Assert.assertEquals(Assert.java:81)
at junit.framework.Assert.assertEquals(Assert.java:87)
at org.apache.maven.it.Verifier.assertArtifactContents(Verifier.java:1499)
at org.apache.maven.integrationtests.MavenIT0108SnapshotUpdateTest.assertArtifactContents(MavenIT0108SnapshotUpdateTest.java:255)
at org.apache.maven.integrationtests.MavenIT0108SnapshotUpdateTest.testSnapshotUpdatedWithMetadataUsingFileTimestamp(MavenIT0108SnapshotUpdateTest.java:195)
at org.apache.maven.integrationtests.MavenIT0108SnapshotUpdateTest.testSnapshotUpdatedWithMetadataUsingFileTimestamp(MavenIT0108SnapshotUpdateTest.java:195)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:324)
at junit.framework.TestCase.runTest(TestCase.java:154)
at org.apache.maven.integrationtests.AbstractMavenIntegrationTestCase.runTest(AbstractMavenIntegrationTestCase.java:75)
at junit.framework.TestCase.runBare(TestCase.java:127)
at junit.framework.TestResult$1.protect(TestResult.java:106)
at junit.framework.TestResult.runProtected(TestResult.java:124)
at junit.framework.TestResult.run(TestResult.java:109)
at junit.framework.TestCase.run(TestCase.java:118)
at junit.framework.TestSuite.runTest(TestSuite.java:208)
at junit.framework.TestSuite.run(TestSuite.java:203)
at junit.framework.TestSuite.runTest(TestSuite.java:208)
at junit.framework.TestSuite.run(TestSuite.java:203)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:324)
at org.apache.maven.surefire.junit.JUnitTestSet.execute(JUnitTestSet.java:213)
at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:138)
at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:125)
at org.apache.maven.surefire.Surefire.run(Surefire.java:132)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:324)
at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:290)
at org.apache.maven.surefire.booter.SurefireBooter.run(SurefireBooter.java:198)
at org.apache.maven.plugin.surefire.SurefirePlugin.execute(SurefirePlugin.java:398)
at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:638)
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:354)
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:255)
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:141)
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:304)
at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:124)
at org.apache.maven.embedder.MavenEmbedder.execute(MavenEmbedder.java:906)
at org.apache.maven.cli.MavenCli.main(MavenCli.java:367)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:324)
at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:408)
at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:351)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29d1r:",9223372036854775807,,,,,,,,,,,,,,,,,,,"31/May/07 18:15;jdcasey;apparently, this is only a sporadic problem in my (and others') environments. We should try to improve this test to be a little more stable, but I'm not interested in putting too much time into this test until the artifact resolution subsystem is refactored.

Reopen if this becomes a more persistent problem.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
it0114 is failing in trunk,MNG-3021,12794746,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Cannot Reproduce,jdcasey,jdcasey,jdcasey,30/May/07 11:11,31/May/07 12:43,03/Jan/22 13:13,31/May/07 12:43,,,,,,,,,,,,,,0,,,,it's not finding the plugin resource in the plugin classloader/realm.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29cfj:",9223372036854775807,,,,,,,,,,,,,,,,,,,"30/May/07 11:14;jdcasey;output in surefire-reports is:

org.apache.maven.it.VerificationException: Exit code was non-zero: 1; log = 
+ Error stacktraces are turned on.
[INFO] Scanning for projects...
[INFO] Searching repository for plugin with prefix: 'clean'.
[INFO] ----------------------------------------------------------------------------
[INFO] Building it0114 - plugin runner
[INFO]    task-segment: [clean:clean, verify]
[INFO] ----------------------------------------------------------------------------
[INFO] [clean:clean]
[INFO] Deleting directory /Users/jdcasey/workspace/maven/core-integration-testing/core-integration-tests/target/test-classes/it0114-extensionThatProvidesResources/test-project/target
[INFO] Deleting directory /Users/jdcasey/workspace/maven/core-integration-testing/core-integration-tests/target/test-classes/it0114-extensionThatProvidesResources/test-project/target/classes
[INFO] Deleting directory /Users/jdcasey/workspace/maven/core-integration-testing/core-integration-tests/target/test-classes/it0114-extensionThatProvidesResources/test-project/target/test-classes
[INFO] Deleting directory /Users/jdcasey/workspace/maven/core-integration-testing/core-integration-tests/target/test-classes/it0114-extensionThatProvidesResources/test-project/target/site
[INFO] [site:attach-descriptor]
[INFO] [it0114:test]
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Can't find it0114_rule_set.xml on classpath!!
[INFO] ------------------------------------------------------------------------
[INFO] Trace
org.apache.maven.BuildFailureException: Can't find it0114_rule_set.xml on classpath!!
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:308)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:124)
	at org.apache.maven.embedder.MavenEmbedder.execute(MavenEmbedder.java:906)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:367)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:408)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:351)
Caused by: org.apache.maven.lifecycle.LifecycleExecutionException: Can't find it0114_rule_set.xml on classpath!!
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:379)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:255)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:141)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:304)
	... 11 more
Caused by: org.apache.maven.plugin.MojoExecutionException: Can't find it0114_rule_set.xml on classpath!!
	at org.apache.maven.plugin.It0014Mojo.execute(It0014Mojo.java:26)
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:638)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:354)
	... 14 more
[INFO] ------------------------------------------------------------------------
[INFO] Total time: < 1 second
[INFO] Finished at: Wed May 30 12:00:46 EDT 2007
[INFO] Final Memory: 4M/8M
[INFO] ------------------------------------------------------------------------
[INFO] Error for project: it0114 - plugin runner (during org.apache.maven.its.it0114:it0114-plugin:1.0:test)
[INFO] ------------------------------------------------------------------------
[INFO] Can't find it0114_rule_set.xml on classpath!!
[INFO] ------------------------------------------------------------------------
[INFO] Trace
org.apache.maven.lifecycle.LifecycleExecutionException: Can't find it0114_rule_set.xml on classpath!!
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:379)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:255)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:141)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:304)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:124)
	at org.apache.maven.embedder.MavenEmbedder.execute(MavenEmbedder.java:906)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:367)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:408)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:351)
Caused by: org.apache.maven.plugin.MojoExecutionException: Can't find it0114_rule_set.xml on classpath!!
	at org.apache.maven.plugin.It0014Mojo.execute(It0014Mojo.java:26)
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:638)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:354)
	... 14 more
[INFO] ------------------------------------------------------------------------
[INFO] BUILD ERRORS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: < 1 second
[INFO] Finished at: Wed May 30 12:00:46 EDT 2007
[INFO] Final Memory: 4M/8M
[INFO] ------------------------------------------------------------------------
FATAL ERROR: Unable to configure the Maven application
Error stacktrace:
org.apache.maven.reactor.MavenExecutionException: Some builds failed
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:165)
	at org.apache.maven.embedder.MavenEmbedder.execute(MavenEmbedder.java:906)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:367)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:408)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:351)
	at org.apache.maven.it.Verifier.executeGoals(Verifier.java:941)
	at org.apache.maven.it.Verifier.executeGoal(Verifier.java:807)
	at org.apache.maven.it.Verifier.executeGoal(Verifier.java:802)
	at org.apache.maven.integrationtests.MavenIT0114ExtensionThatProvidesResources.testit0114(MavenIT0114ExtensionThatProvidesResources.java:38)
	at org.apache.maven.integrationtests.MavenIT0114ExtensionThatProvidesResources.testit0114(MavenIT0114ExtensionThatProvidesResources.java:38)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at junit.framework.TestCase.runTest(TestCase.java:154)
	at org.apache.maven.integrationtests.AbstractMavenIntegrationTestCase.runTest(AbstractMavenIntegrationTestCase.java:75)
	at junit.framework.TestCase.runBare(TestCase.java:127)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.apache.maven.surefire.junit.JUnitTestSet.execute(JUnitTestSet.java:213)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:138)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:125)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:290)
	at org.apache.maven.surefire.booter.SurefireBooter.run(SurefireBooter.java:198)
	at org.apache.maven.plugin.surefire.SurefirePlugin.execute(SurefirePlugin.java:398)
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:638)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:354)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:255)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:141)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:304)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:124)
	at org.apache.maven.embedder.MavenEmbedder.execute(MavenEmbedder.java:906)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:367)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:408)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:351)

;;;","31/May/07 12:43;jdcasey;The issue may have been specific to my environment, as it seems to be passing now. Will reopen if things start failing again...;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassCastException due to plexus-utils NOT being filtered during plugin loading,MNG-3012,12794736,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,jdcasey,jdcasey,26/May/07 22:15,13/Aug/08 04:51,03/Jan/22 13:13,31/May/07 12:31,3.0-alpha-1,,,,,3.0-alpha-1,,,Plugins and Lifecycle,,,,,0,,,,"The eclipse:eclipse mojo was a perfect example of this. It needs to read the plugin configurations from the POM to look for things like maven-compiler-plugin's source/target values, so it can setup the .classpath appropriately. 

When the IdeUtils (line 345) calls execution.getConfiguration(), it assumes the result will be an Xpp3Dom instance, and tries to cast it accordingly. Because Maven now has its own ""shaded"" or internal copy of plexus-utils that it doesn't share, the eclipse plugin loads the Xpp3Dom class from a different classloader, and the result is a ClassCastException. Admittedly, exposing plugin.getConfiguration() as a java.lang.Object doesn't help plugin developers very much, and that they need to ""just know"" that it's of type Xpp3Dom (and cast accordingly) has gotten us into some trouble here. 

It's important to note that all plugins that deal directly with plugin.getConfiguration() or execution.getConfiguration() will have a problem here, meaning older versions of the eclipse plugin (including all released versions) and many others will immediately suffer if we leave this as-is. 

Ideally, plugin.getConfiguration() should just return some object (okay, maybe it's a java.lang.Object, but that's *not* an elegant solution) that contains structured arbitrary data...so, perhaps a good solution would be to make the assumption that the object's toString() method will render it into XML. Working from an assumption like that, one could do the following: 

String str = String.valueOf( plugin.getConfiguration() ); 
Xpp3DomBuilder.build( new StringReader( str ) ); 

and proceed as if the plugin.getConfiguration() method had returned a type Xpp3Dom, even if we later change it to return something from javax.xml (thinking DOM). This is a more resilient approach than simply casting to Xpp3Dom, and it's the one I've implemented for the eclipse plugin in revId 541953. This is a problem in the current trunk, and any solution will likely take some design time to fix, so I don't want this plugin to become non-functional for developers working with trunk in the meantime (like anyone using m2eclipse).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28x2n:",9223372036854775807,,,,,,,,,,,,,,,,,,,"31/May/07 12:31;jdcasey;added importFrom(..) to new plugin realms, to bring in Xpp3Dom from the version of plexus-utils used by maven itself. This should prevent ClassCastExceptions in the plugins when they call plugin.getConfiguration().

I've verified this in the maven-eclipse-plugin by reverting mine and Kenney's changes to IdeUtils, and re-running.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven 2.0.5+ fails to resolve ${project.version} on deployment,MNG-3009,12794741,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Duplicate,,sbehnel,sbehnel,24/May/07 05:16,17/Dec/08 22:06,03/Jan/22 13:13,16/Jun/07 04:55,2.0.5,2.0.6,,,,,,,Deployment,,,,,0,,,,"Starting with version 2.0.5, Maven fails to resolve the ${project.version} variable in poms on (SNAPSHOT?) deployment. This results in corrupted repositories, as Maven will (sporadically) fail to resolve transitive dependencies that involve these references.

The symptom is that Maven will start searching for a magical version ""2.4.1"" of an artifact, although such a version never existed and was never written in any POM. Dependent builds therefor fail as this version cannot be resolved.

The deploy plugin should *always* resolve all involved versions when it uploads POMs.
",,,,,,,,,,,,,,,,,,,,,,,,MNG-2339,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i292y7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven2 does not resolve version ranges correctly [PATCH INCLUDED],MNG-3001,12797571,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Duplicate,markh,markh,dhoffer@xrite.com,22/May/07 05:30,08/Feb/20 15:41,03/Jan/22 13:13,17/Jul/07 07:41,2.0.4,2.0.6,,,,,,,Artifacts and Repositories,,,,,2,,,,"Maven does not properly handle version ranges when the high end is unbounded.  The spec clearly states that it should not resolve to a SNAPSHOT unless included as an explicit boundary.  Currently maven2 does resolve to a SNAPSHOT which makes usage of version ranges to control versions of dependencies unworkable.  (We currently use a local build of maven with this fix else we could not use version ranges.  This is a major issue can you please include in the next release?)

Code fix and unit tests are included.

Example:

<dependency>
<groupId>myGroup</groupId>
<artifactId>myArtifact</artifactId>
<version>[1.0,)</version>
</dependency>

This version range can resolve to the latest development 1.0-SNAPSHOT. All artifact dependencies should ignore SNAPSHOTS as that is not intended by the unbounded high end of the version range. This should resolve to any released version of 1.1 or higher.

This document:
http://docs.codehaus.org/display/MAVEN/Dependency+Mediation+and+Conflict+Resolution#DependencyMediationandConflictResolution-DependencyVersionRanges
addressed the requirements for version ranges and stated that ""Resolution of dependency ranges should not resolve to a snapshot (development version) unless it is included as an explicit boundary"". I think this requirement was forgotten when version ranges were implemented.

I have included a patch for this bug. The fix is in the containsVersion method of VersionRange. I have added tests in VersionRangeTest and DefaultArtifactCollectorTest. All tests in maven pass with this fix.",Windows.  Affects versions 2.04 & 2.06 minimum.,,,,,,,,,,,,,,,,,,,,,,,MNG-2978,MNG-3092,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/May/07 05:30;dhoffer;VersionRangeSnapshotFix.patch;https://issues.apache.org/jira/secure/attachment/12712436/VersionRangeSnapshotFix.patch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29byv:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"22/May/07 05:31;dhoffer@xrite.com;The title is wrong in MNG-2978 else it is the same bug.;;;","16/Jun/07 02:21;kenney;I think the specificiation is wrong.

[1.0,) should resolve to 1.0, 1.0.1-SNAPSHOT, 1.1-SNAPSHOT, 1.1 and higher (but not 1.0-SNAPSHOT).

Wheter snapshots are included in resolution shouldn't be specified in the version range, but wheter a snapshot repository is
declared or not. [1.0,) is a minimum version requirement, so this states that any version higher than or equal to 1.0 should work.

[1.0,) cannot resolve to 1.0-SNAPSHOT. I added 2 tests in trunk to verify that.

;;;","05/Jul/07 10:50;dhoffer@xrite.com;Kenney,

I do not think your description of how this should work is correct.  The problem is that your solution is too broad (global) it does not give the user fine enough control over inclusion/exclusion of snapshots.

Your explanation that 1.1-SNAPSHOT, should be included is the exact problem we need to avoid.  Since during the maven release process it will auto generate this version after performing the release of 1.0 the 1.1-SNAPSHOT version is often auto generated and will mistakenly be resolved to in the current maven releases.

What if I have a project with 10 dependencies all of which use set notation and I want the latest released version.  Now I am in active development and I want to include a snapshot of one of these dependencies.  With your solution I will need the snapshot repository declared because I do need one snapshot.  However I do not want the other 9 to resolve to snapshots.  This is unworkable (but I have a solution).

BTW, the way we use maven it would not offer any benefit to ever resolve to snapshots and it seems dangerous because you could never do a release if it did resolve to a snapshot; it is not clear to me that others would benefit.  To me [1.0,) does not imply any snapshots should be found.  If you want a snapshot I think you should declare this in the version.

My proposed solutions are:
1. Always exclude snapshots, as previously stated and patch/test submitted.
2. Or, make the inclusion/exclusion of snapshots configurable per dependency.  This is the only solution I see if we cannot always exclude snapshots.  In the following:

<dependency>
  <groupId>com.xrite</groupId> 
  <artifactId>xrite-colorlib-api</artifactId> 
  <version>[1.0,)</version> 
  <includeSnapshotsInVersionRange>false</includeSnapshotsInVersionRange>
</dependency>

I suggest adding the includeSnapshotsInVersionRange (something like this) tag which will allow me to specify the inclusion/exclusion of snapshots when using set notation. 

3. I suppose this could be a global setting in Settings.xml instead as I do always want the same behavior for all dependencies.

If we cannot do one if these solutions the set notation version of maven is broken and is not usable for our company.  This greatly increases the dependency management complexity as we would have to use fixed versions and rely on other techniques to handle dependency management.

Dave






;;;","17/Jul/07 07:12;baerrach;Also, snapshots can be in your local repository and will be resolved that way, regardless of whether a remote snapshot repository was declared in the build proces.

Since they are in the loca repo, if they are included as Kenney suggests, then there is no way to not include them.

I am happy with the spec only included released versions (which is generally what you want)
If you want a snapshot version you would be not specifying the version information at all and just pick up the latest from a snapshot repo.
;;;","17/Jul/07 07:42;markh;Closed as duplicate of MNG-3092 - see comments in that issue.;;;","16/Aug/07 11:50;dhoffer@xrite.com;Since this issue has been closed you might want to watch/vote for MNG-3092 which replaces it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing dependencies in classpath,MNG-2993,12794700,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Won't Fix,carlos,carlos,carlos,17/May/07 12:45,17/May/07 13:43,03/Jan/22 13:13,17/May/07 13:43,2.0.6,3.0-alpha-1,,,,,,,Dependencies,,,,,0,,,,"Since 2.0.6 wagon-ssh-common-test doesn't compile anymore, the compiler plugin classpath is missing a good number of dependencies

https://svn.apache.org/repos/asf/maven/wagon/trunk/wagon-providers/wagon-ssh-common-test #539006 

2.0.4 and 2.0.5 work correctly",java 1.5 maven 2.0.6 and 2.1-20050516,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/May/07 12:47;carlos;2.0.5.log;https://issues.apache.org/jira/secure/attachment/12712434/2.0.5.log","17/May/07 12:47;carlos;2.0.6.log;https://issues.apache.org/jira/secure/attachment/12712039/2.0.6.log","17/May/07 12:47;carlos;2.1.log;https://issues.apache.org/jira/secure/attachment/12712178/2.1.log",,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28ynz:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"17/May/07 12:47;carlos;Output of  mvn clean compile -X in several versions;;;","17/May/07 13:43;carlos;Seems that dependencyManagement was incorrect and with this change it works now

http://svn.apache.org/viewvc/maven/wagon/trunk/wagon-providers/pom.xml?r1=539058&r2=539057&pathrev=539058;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Strange behavior with folder named null,MNG-2980,12794718,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Incomplete,,f.tinti,f.tinti,04/May/07 16:30,06/Jun/07 01:12,03/Jan/22 13:13,06/Jun/07 01:12,3.0,,,,,,,,,,,,,0,,,,"To reproduce this issue follow these steps:
1. create a multi-project POM with at least 1 module
2. go to module folder
3. create an empty folder named null
4. launch mvn clean install from module folder as you want to build only that module.

Maven will fail and the given reason is ""Failed to resolve artifact"" with a list of missing artifacts. 
And this is wrong because all artifacts are already in repository.",Windows Vista 64bit - Sun JDK 1.6.0_01 64bit - Maven2 based on svn trunk 534974 version ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29307:",9223372036854775807,,,,,,,,,,,,,,,,,,,"04/May/07 16:42;f.tinti;Better info for this bug. 
It occurs only when you're using the surefire plugin for tests. This is, for example, the output error for the Open Source openutils-usermanagement

[INFO] Failed to resolve artifact.

Missing:
----------
1) javax.transaction:jta:jar:1.0.1B

  Try downloading the file manually from:
      http://java.sun.com/products/jta

  Then, install it using the command:
      mvn install:install-file -DgroupId=javax.transaction -DartifactId=jta \
          -Dversion=1.0.1B -Dpackaging=jar -Dfile=/path/to/file

  Path to dependency:
        1) net.sourceforge.openutils:openutils-usermanagement:jar:1.1.2-SNAPSHOT

        2) net.sourceforge.openutils:openutils-bshd5:jar:1.0.2
        3) org.hibernate:hibernate:jar:3.2.0.cr5
        4) javax.transaction:jta:jar:1.0.1B

----------
1 required artifact is missing.

for artifact:
  net.sourceforge.openutils:openutils-usermanagement:jar:1.1.2-SNAPSHOT;;;","04/May/07 17:41;carlos;that error is normal, you are missing javax.transaction:jta i don't see anything wrong;;;","05/May/07 04:21;f.tinti;I'm afraid but according to the fact that jta war already in maven repository the problem is still here for two reasons:

First because I add to pom this:
    <dependency>
      <groupId>javax.transaction</groupId>
      <artifactId>jta</artifactId>
      <version>1.0.1B</version>
      <scope>compile</scope>
    </dependency>
compiler continue to give 
Missing:
----------
1) javax.transaction:jta:jar:1.0.1B

  Try downloading the file manually from:
      http://java.sun.com/products/jta

  Then, install it using the command:
      mvn install:install-file -DgroupId=javax.transaction -DartifactId=jta \
          -Dversion=1.0.1B -Dpackaging=jar -Dfile=/path/to/file

  Path to dependency:
        1) net.sourceforge.openutils:openutils-usermanagement:jar:1.1.2-SNAPSHOT

        2) javax.transaction:jta:jar:1.0.1B

----------

Second because if I remove the ""null"" folder -with or without the jta depedency in POM-  I can build the jar without problems. 

;;;","05/Jun/07 16:25;jvanzyl;Provide a POM so we can reproduce the error. I don't see anything wrong either but I'm not going to recreate POMs to find it.;;;","06/Jun/07 01:12;brettporter;would also need to know what version of MAven you are using, since you claimed 2.1 which doesn't exist yet.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignores version of plugin dependency specified in my pom,MNG-2972,12796542,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,brianf,derek,derek,01/May/07 17:56,08/Feb/20 15:41,03/Jan/22 13:13,11/Mar/08 16:21,2.0.6,,,,,2.0.9,,,Dependencies,,,,,5,,,,"xmlbeans-maven-plugin declares a dependency on xmlbeans-2.0.0

I want to use xmlbeans-2.2.0

So in my pom I put:

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>xmlbeans-maven-plugin</artifactId>
        <executions>
           <execution>
              <goals>
                 <goal>xmlbeans</goal>
              </goals>
           </execution>
        </executions>
        <configuration>
		...
        </configuration>
	  <dependencies>
	    <dependency>
	      <groupId>xmlbeans</groupId>
	      <artifactId>xbean</artifactId>
	      <version>2.2.0</version>
	    </dependency>
	  </dependencies>
      </plugin

But it still downloads 2.0.0. (as well as 2.2.0). Haven't got a clue which it is using as it doesn't seem to output stuff like that. Couldn't see a verbose or debug switch mentioned in the docs. Anyway I think it is still using 2.0.0.

Seems like I'm not the first to experience this:
http://www.nabble.com/Override-plugin-dependency-version-tf2357806s177.html#a6568092

Apparently this should be possible: http://maven.apache.org/pom.html#plugins

""dependencies: Dependencies are seen a lot within the POM, and are an element under all plugins element blocks. The dependencies have the same structure and function as under that base build. The major difference in this case is that instead of applying as dependencies of the project, they now apply as dependencies of the plugin that they are under. The power of this is to alter the dependency list of a plugin, perhaps by removing an unused runtime dependency via exclusions, or by altering the version of a required dpendency. See above under Dependencies for more information.""","maven 2.0.6, java version ""1.5.0_07""",,,,,,,,,,,,,,,,,,,,,,,MNG-3426,MNG-3059,,,,,,,,,,,,,,,,,,MNG-3725,MNG-2163,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i294a7:",9223372036854775807,,,,,,,,,,,,,,,,,,,"26/May/07 10:28;bszabo;I also ran into this issue a couple months back. See my post on the Users list http://www.nabble.com/-Maven2--xmlbeans-maven-plugin-Issue----StAX-transitive-dependencies-t3359711s177.html

One issue that I discovered which is related to the overriding behavior in question is that if I added a few more dependencies to the POM, all of a sudden the dependency version that I specified in my plugin declaration DID successfully override the plugin version. 
I could consistently get the plugin override to work after adding 5 or 6 more seemingly random jars to my dependency list. 
;;;","16/Jun/07 16:35;jvanzyl;This is not how plugin dependencies work. You actually specify the dependencies inside the plugin element. Try this and if that doesn't work then it's a bug and open a new issue.;;;","18/Jun/07 06:14;markh;The POM snippet above does specify the dependencies block within the plugin element.  I've encountered this problem before myself, so would have thought this should be reopened.;;;","18/Jun/07 06:25;derek;> You actually specify the dependencies inside the plugin element.

Yes, that's what I was doing.

OK to just reopen this issue I hope.;;;","07/Mar/08 19:57;brianf@infinity.nu;I think this was fixed already. Check in 2.0.9;;;","11/Mar/08 16:21;brianf@infinity.nu;This is confirmed fixed in 2.0.9, an additional IT was created to be sure.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Version defined in dependencyManagement section of parent pom overwrites version of current artifact,MNG-2959,12794714,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Incomplete,,felixk,felixk,24/Apr/07 09:23,15/Jun/07 00:41,03/Jan/22 13:13,15/Jun/07 00:41,2.0.6,,,,,,,,Dependencies,,,,,1,,,,"If the parent pom dependencyManagement contains also the current artifact with a version, this version will overwrite the version of the current project.

Problem: If that artifact is build with M206, the current project (artifact) will be deployed with the version coming from the parents pom dependencyManagement insted of the current projects version.
","linux, java 1.5",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-2871,MNG-2921,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28ydz:",9223372036854775807,,,,,,,,,,,,,,,,,,,"14/Jun/07 23:55;jvanzyl;Incomplete. Provide a sample project to demonstrate.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
profiles.xml doesn't have a public schema url,MNG-2951,12794716,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,mkleint,mkleint,mkleint,17/Apr/07 02:39,20/Apr/07 15:05,03/Jan/22 13:13,20/Apr/07 15:05,2.0.6,,,,,3.0-alpha-1,,,Profiles,,,,,0,,,,the schema for profiles.xml should be put next to the ones for pom.xml and settings.xml at http://maven.apache.org/xsd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28wfj:",9223372036854775807,,,,,,,,,,,,,,,,,,,"17/Apr/07 02:41;mkleint;raising priority. prohibits me from creating a correct template within the IDE support that would automatically get schema based completion.;;;","20/Apr/07 15:05;mkleint;done, uploaded the latest trunk version to the site.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in DefaultArtifactCollector.recurse,MNG-2929,12796522,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Duplicate,carlos,9gaqfk802@sneakemail.com,9gaqfk802@sneakemail.com,04/Apr/07 12:55,19/Nov/07 13:26,03/Jan/22 13:13,04/Apr/07 13:08,2.0.6,,,,,,,,Artifacts and Repositories,,,,,0,,,,"Running ""mvn eclipse:clean eclipse:eclipse"" on the attached project results in the following output:
[INFO] Scanning for projects...
[INFO] Searching repository for plugin with prefix: 'eclipse'.
[INFO] ----------------------------------------------------------------------------
[INFO] Building Unnamed - com.mycompany.test:com.mycompany.test:jar:1.0.0-SNAPSHOT
[INFO]    task-segment: [eclipse:clean, eclipse:eclipse]
[INFO] ----------------------------------------------------------------------------
[INFO] [eclipse:clean]
[INFO] Deleting file: .project
[INFO] Deleting file: .classpath
[INFO] Deleting file: .wtpmodules
[INFO] Deleting file: .component
[INFO] Deleting file: org.eclipse.wst.common.component
[INFO] Deleting file: org.eclipse.wst.common.project.facet.core.xml
[INFO] Deleting file: org.eclipse.jdt.core.prefs
[INFO] Preparing eclipse:eclipse
[INFO] No goals needed for project - skipping
[INFO] [eclipse:eclipse]
[INFO] ------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ------------------------------------------------------------------------
[INFO] null
[INFO] ------------------------------------------------------------------------
[INFO] Trace
java.lang.NullPointerException
	at org.apache.maven.artifact.resolver.DefaultArtifactCollector.recurse(DefaultArtifactCollector.java:164)
	at org.apache.maven.artifact.resolver.DefaultArtifactCollector.recurse(DefaultArtifactCollector.java:334)
	at org.apache.maven.artifact.resolver.DefaultArtifactCollector.collect(DefaultArtifactCollector.java:75)
	at org.apache.maven.plugin.ide.AbstractIdeSupportMojo.doDependencyResolution(AbstractIdeSupportMojo.java:447)
	at org.apache.maven.plugin.ide.AbstractIdeSupportMojo.execute(AbstractIdeSupportMojo.java:398)
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:443)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:539)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeStandaloneGoal(DefaultLifecycleExecutor.java:493)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:463)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:311)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:278)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:143)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:334)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:125)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:272)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
	at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 3 seconds
[INFO] Finished at: Wed Apr 04 12:49:21 CDT 2007
[INFO] Final Memory: 3M/7M
[INFO] ------------------------------------------------------------------------
","Windows XP, maven 2.0.6",,,,,,,,,,,,,,,,,,,,,,,MNG-2923,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Apr/07 12:55;9gaqfk802@sneakemail.com;com.mycompany.test.zip;https://issues.apache.org/jira/secure/attachment/12712105/com.mycompany.test.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i297t3:",9223372036854775807,,,,,,,,,,,,,,,,,,,"19/Nov/07 13:26;ddewolf;This occurs in the idea:idea goal as well.

org.apache.maven.lifecycle.LifecycleExecutionException: Unable to build project dependencies.
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:564)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeStandaloneGoal(DefaultLifecycleExecutor.java:493)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:463)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:311)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:278)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:143)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:334)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:125)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:272)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.apache.maven.plugin.MojoExecutionException: Unable to build project dependencies.
        at org.apache.maven.plugin.idea.IdeaMojo.execute(IdeaMojo.java:196)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:443)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:539)
        ... 16 more
Caused by: java.lang.NullPointerException
        at org.apache.maven.artifact.resolver.DefaultArtifactCollector.recurse(DefaultArtifactCollector.java:164)
        at org.apache.maven.artifact.resolver.DefaultArtifactCollector.recurse(DefaultArtifactCollector.java:334)
        at org.apache.maven.artifact.resolver.DefaultArtifactCollector.recurse(DefaultArtifactCollector.java:334)
        at org.apache.maven.artifact.resolver.DefaultArtifactCollector.recurse(DefaultArtifactCollector.java:334)
        at org.apache.maven.artifact.resolver.DefaultArtifactCollector.collect(DefaultArtifactCollector.java:75)
        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolveTransitively(DefaultArtifactResolver.java:284)
        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolveTransitively(DefaultArtifactResolver.java:272)
        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolveTransitively(DefaultArtifactResolver.java:253)
        at org.apache.maven.plugin.idea.AbstractIdeaMojo.doDependencyResolution(AbstractIdeaMojo.java:257)
        at org.apache.maven.plugin.idea.IdeaMojo.execute(IdeaMojo.java:192)
        ... 18 more;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ejb-client dependency no longer resolved in reactor build,MNG-2921,12796755,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jvanzyl,fcorneli,fcorneli,03/Apr/07 07:04,07/Apr/15 12:25,03/Jan/22 13:13,31/May/07 17:26,2.0.6,,,,,2.0.7,,,Dependencies,,,,,14,,,,"When running 'mvn clean install' on the test project (see attachment) under Maven 2.0.5 every builds as expected. On Maven 2.0.6 it no longer compiles. On Maven 2.0.5 I get in the log:
[DEBUG] be.frankcornelis.maven:client:jar:1.0-SNAPSHOT (selected for null)
[DEBUG]   be.frankcornelis.maven:model:ejb-client:client:1.0-SNAPSHOT:compile (selected for compile)

Under Maven 2.0.6 I get:
[DEBUG] be.frankcornelis.maven:client:jar:1.0-SNAPSHOT (selected for null)
[DEBUG]   be.frankcornelis.maven:model:ejb-client:client:1.0-SNAPSHOT (selected for null)
and an error message saying it cannot find the required interfaces defined in Model.
When I remove type:ejb-client in the Client pom.xml it compiles again.",Fedora Core 6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-2877,MNG-2871,MNG-249,,,,MNG-2959,,,,,,,,,,,"12/Apr/07 19:47;ptabor;MNG-2921.diff;https://issues.apache.org/jira/secure/attachment/12712431/MNG-2921.diff","03/Apr/07 07:04;fcorneli;test.zip;https://issues.apache.org/jira/secure/attachment/12712362/test.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,Patch,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i2943r:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"12/Apr/07 05:41;richard.li@cherubim.com.hk;I have encounter this same problem as well.;;;","12/Apr/07 06:08;fcorneli;What bothers me most about this is that such a major feature of Maven (it's even documented in the Maven2 book) breaks without big 'community notice'. I really wonder how people actually build their J2EE applications...;;;","12/Apr/07 09:51;klaus.brunner;I don't know about the 'community', but I've certainly noticed it as well. This is a major problem for us and I hope it's fixed very quickly.;;;","12/Apr/07 19:47;ptabor;Patch proposition;;;","12/Apr/07 20:32;carlos;Added test to it0119
https://svn.apache.org/repos/asf/maven/core-integration-testing/trunk/core-integration-tests/src/test/resources/it0119-ejbClientDependency;;;","12/Apr/07 20:48;carlos;actually it's in it0120
https://svn.apache.org/repos/asf/maven/core-integration-testing/trunk/core-integration-tests/src/test/resources/it0120-ejbClientDependency;;;","24/Apr/07 12:54;skaze;agreed this is not the kind of failure you expect in a minor release however with the patch one hopes we'll might see a 2.0.7 soon;;;","31/May/07 17:26;jvanzyl;Patch applied. Works with trunk and the branch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Scope defined in dependencyManagement section of parent pom overwrites scope of current artifact,MNG-2919,12794668,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,pschneider,joehni,joehni,02/Apr/07 07:13,30/Jun/07 12:32,03/Jan/22 13:13,06/Jun/07 11:48,2.0.6,,,,,2.0.7,,,Dependencies,,,,,3,,,,"If the dependencyManagement contains also the current artifact with a scope, this scope will overwrite the scope of the current project.

Use case: A global parent POM that defines the released versions of all artifacts. Those artifacts are all defined with ""runtime"" scope to enforce projects to declare compile time deps (workaround for MNG-2589) or some are declared with scope ""test"" since they should only be used in unit or it tests.

Problem: If that artifact is build with M206, it does no longer compile.

Reason: The declaration in the dependencyManagement section overwrites also the scope of the current artifact itself i.e. all the declared dependencies are suddenly also no longer in the compile scope.

Solution: The dependencyManagement may not overwrite the scope of the current artifact.

Workaround: Add for the current artifact in its own POM a dependencyManagement section where it is itself declared again with compile scope.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-2931,,,,,,,,,,,"02/Apr/07 07:27;joehni;MNG-2919.zip;https://issues.apache.org/jira/secure/attachment/12712168/MNG-2919.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28pgf:",9223372036854775807,,,,,,,,,,,,,,,,,,,"02/Apr/07 07:27;joehni;Simple setup to demonstrate the problem.;;;","04/Jun/07 13:26;jvanzyl;I'm not really sure from your explanation with your example what you are trying to say is happening. I'm using ""mvn help:effective-pom"" on the child POM and seeing the behavior I expect where the junit dependency in the child overrides the scope of what is stated in the parent's depMan element. The child wins as it should. The scope in the child is not overwritten in your sample project. You need to explain better what you want me to look at or what the result should be instead of describing the general and then giving me concrete example that is working as expected.;;;","04/Jun/07 13:27;jvanzyl;I'm not really sure from your explanation with your example what you are trying to say is happening. I'm using ""mvn help:effective-pom"" on the child POM and seeing the behavior I expect where the junit dependency in the child overrides the scope of what is stated in the parent's depMan element. The child wins as it should. The scope in the child is not overwritten in your sample project. You need to explain better what you want me to look at or what the result should be instead of describing the general and then giving me concrete example that is working as expected.;;;","05/Jun/07 11:08;pschneider;I am able to reproduce the problem using the sample that Joerg attached.  The issue is not with junit, but with the child project itself (issue/pom.xml).

I believe this is an ArtifactCollector problem, probably introduced in the fix to MNG-1577.  It may take me a bit of time to figure it out, so maybe we can slate this for 2.0.8?;;;","05/Jun/07 11:54;jvanzyl;Is this something we can squeeze into 2.0.7?
;;;","05/Jun/07 13:38;pschneider;I will start work on it this afternoon.  Like I said, I'm pretty sure where it's being caused, but I can't say for sure when I'll be done.  I guess it depends on when you're looking to ship 2.0.7.;;;","06/Jun/07 11:42;pschneider;The interim fix in DefaultArtifactCollector that was submitted against MNG-2931 fixes the version overwriting problem, but not the scope overwriting problem, as in this issue.;;;","06/Jun/07 11:48;pschneider;See MNG-2931 for more information.  Fixing this bug was a matter of removing the version check from that fix.  Basically we don't want to alter the originatingArtifact at all when it's being built.  Added unit test the mimics the attached example project.;;;","06/Jun/07 12:01;pschneider;Still need to port this up to the trunk -- will do so this evening or tomorrow.;;;","30/Jun/07 12:32;pschneider;Added fix to the trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ant classpath issue in maven 2.0.6,MNG-2917,12794660,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Incomplete,,yuri,yuri,02/Apr/07 05:54,05/Sep/07 08:51,03/Jan/22 13:13,02/Apr/07 08:02,2.0.6,,,,,,,,,,,,,0,,,,"This was working in 2.0.5.  Unfortunately I'm guessing its related to the woefully bad xdoclet-maven-plugin

The main error is that the xdoclet-maven-plugin can't find one of the ant classes

Caused by: java.lang.NoClassDefFoundError: org/apache/tools/ant/PropertyHelper

-----------------------------------------------------
this realm = app0.child-container[org.codehaus.mojo:xdoclet-maven-plugin]
urls[0] = file:/C:/Docume~1/nbk7xsp/.m2/repository/org/codehaus/mojo/xdoclet-maven-plugin/1.0-alpha-2/xdoclet-maven-plugin-1.0-alpha-2.jar
urls[1] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-wsee-module/1.2.3/xdoclet-wsee-module-1.2.3.jar
urls[2] = file:/C:/Docume~1/nbk7xsp/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar
urls[3] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-jboss-module/1.2.3/xdoclet-jboss-module-1.2.3.jar
urls[4] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-xdoclet-module/1.2.3/xdoclet-xdoclet-module-1.2.3.jar
urls[5] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-orion-module/1.2.3/xdoclet-orion-module-1.2.3.jar
urls[6] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-jmx-module/1.2.3/xdoclet-jmx-module-1.2.3.jar
urls[7] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-ibm-module/1.2.3/xdoclet-ibm-module-1.2.3.jar
urls[8] = file:/C:/Docume~1/nbk7xsp/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar
urls[9] = file:/C:/Docume~1/nbk7xsp/.m2/repository/commons-collections/commons-collections/2.1/commons-collections-2.1.jar
urls[10] = file:/C:/Docume~1/nbk7xsp/.m2/repository/ant/ant/1.5.2/ant-1.5.2.jar
urls[11] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-apache-module/1.2.3/xdoclet-apache-module-1.2.3.jar
urls[12] = file:/C:/Docume~1/nbk7xsp/.m2/repository/ant/ant-launcher/1.6.5/ant-l
auncher-1.6.5.jar
urls[13] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-fr_FR-locale/1.2.3/xdoclet-fr_FR-locale-1.2.3.jar
urls[14] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-objectweb-module/1.2.3/xdoclet-objectweb-module-1.2.3.jar
urls[15] = file:/C:/Docume~1/nbk7xsp/.m2/repository/org/apache/maven/plugins/maven-antrun-plugin/1.0/maven-antrun-plugin-1.0.jar
urls[16] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-java-module/1.2.3/xdoclet-java-module-1.2.3.jar
urls[17] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-exolab-module/1.2.3/xdoclet-exolab-module-1.2.3.jar
urls[18] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-bea-module/1.2.3/xdoclet-bea-module-1.2.3.jar
urls[19] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-mvcsoft-module/1.2.3/xdoclet-mvcsoft-module-1.2.3.jar
urls[20] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-sun-module/1.2.3/xdoclet-sun-module-1.2.3.jar
urls[21] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-spring-module/1.2.3/xdoclet-spring-module-1.2.3.jar
urls[22] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-de-locale/1.2.3/xdoclet-de-locale-1.2.3.jar
urls[23] = file:/C:/Docume~1/nbk7xsp/.m2/repository/jboss/jboss-j2ee/3.2.1/jboss-j2ee-3.2.1.jar
urls[24] = file:/C:/Docume~1/nbk7xsp/.m2/repository/javax/servlet/servlet-api/2.3/servlet-api-2.3.jar
urls[25] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-web-module/1.2.3/xdoclet-web-module-1.2.3.jar
urls[26] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-caucho-module/1.2.3/xdoclet-caucho-module-1.2.3.jar
urls[27] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-jdo-module/1.2.3/xdoclet-jdo-module-1.2.3.jar
urls[28] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-tjdo-module/1.2.3/xdoclet-tjdo-module-1.2.3.jar
urls[29] = file:/C:/Docume~1/nbk7xsp/.m2/repository/org/codehaus/plexus/plexus-utils/1.1/plexus-utils-1.1.jar
urls[30] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-openejb-module/1.2.3/xdoclet-openejb-module-1.2.3.jar
urls[31] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-oracle-module/1.2.3/xdoclet-oracle-module-1.2.3.jar
urls[32] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-hp-module/1.2.3/xdoclet-hp-module-1.2.3.jar
urls[33] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-webwork-module/1.2.3/xdoclet-webwork-module-1.2.3.jar
urls[34] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-mx4j-module/1.2.3/xdoclet-mx4j-module-1.2.3.jar
urls[35] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-solarmetric-module/1.2.3/xdoclet-solarmetric-module-1.2.3.jar
urls[36] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet/1.2.3/xdoclet-1.2.3.jar
urls[37] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-jsf-module/1.2.3/xdoclet-jsf-module-1.2.3.jar
urls[38] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-pt_BR-locale/1.2.3/xdoclet-pt_BR-locale-1.2.3.jar
urls[39] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-pramati-module/1.2.3/xdoclet-pramati-module-1.2.3.jar
urls[40] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-borland-module/1.2.3/xdoclet-borland-module-1.2.3.jar
urls[41] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-ejb-module/1.2.3/xdoclet-ejb-module-1.2.3.jar
urls[42] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-hibernate-module/1.2.3/xdoclet-hibernate-module-1.2.3.jar
urls[43] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-sybase-module/1.2.3/xdoclet-sybase-module-1.2.3.jar
urls[44] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-libelis-module/1.2.3/xdoclet-libelis-module-1.2.3.jar
urls[45] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-mockobjects-module/1.2.3/xdoclet-mockobjects-module-1.2.3.jar
urls[46] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-portlet-module/1.2.3/xdoclet-portlet-module-1.2.3.jar
urls[47] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xjavadoc/1.1/xjavadoc-1.1.jar
urls[48] = file:/C:/Docume~1/nbk7xsp/.m2/repository/xdoclet/xdoclet-macromedia-module/1.2.3/xdoclet-macromedia-module-1.2.3.jar
Number of imports: 4
import: org.codehaus.classworlds.Entry@4891bb28
import: org.codehaus.classworlds.Entry@f8e44ca4
import: org.codehaus.classworlds.Entry@c51bc9e7
import: org.codehaus.classworlds.Entry@bece5185
this realm = plexus.core
urls[0] = file:/c:/java/maven-2.0.6/lib/maven-core-2.0.6-uber.jar
Number of imports: 4
import: org.codehaus.classworlds.Entry@4891bb28
import: org.codehaus.classworlds.Entry@f8e44ca4
import: org.codehaus.classworlds.Entry@c51bc9e7
import: org.codehaus.classworlds.Entry@bece5185
-----------------------------------------------------
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Internal error in the plugin manager executing goal 'org.codehaus.mojo:xdoclet-maven-plugin:1.0-alpha-2:xdoclet': Unable to find the mojo 'org.codehaus.mojo:xdoclet-maven-plugin:1.0-alpha-2:xdoclet' in the plugin 'org.codehaus.mojo:xdoclet-maven-plugin'
org/apache/tools/ant/PropertyHelper
[INFO] ------------------------------------------------------------------------
[INFO] Trace
org.apache.maven.lifecycle.LifecycleExecutionException: Internal error in the plugin manager executing goal 'org.codehaus.mojo:xdoclet-maven-plugin:1.0-alpha-2:xdoclet': Unable to find the mojo 'org.codehaus.mojo:xdoclet-maven-plugin:1.0-alpha-2:xdoclet' in the plugin 'org.codehaus.mojo:xdoclet-maven-plugin'
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:543)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:480)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:459)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:311)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:278)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:143)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:334)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:125)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:272)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.apache.maven.plugin.PluginManagerException: Unable to find the mojo 'org.codehaus.mojo:xdoclet-maven-plugin:1.0-alpha-2:xdoclet' in the plugin 'org.codehaus.mojo:xdoclet-maven-plugin'
        at org.apache.maven.plugin.DefaultPluginManager.getConfiguredMojo(DefaultPluginManager.java:571)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:421)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:539)
        ... 16 more
Caused by: org.codehaus.plexus.component.repository.exception.ComponentLookupException: Unable to lookup component 'org.apache.maven.plugin.Mojoorg.codehaus.mojo:xdoclet-maven-plugin:1.0-alpha-2:xdoclet', it could not be created
        at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:335)
        at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:440)
        at org.apache.maven.plugin.DefaultPluginManager.getConfiguredMojo(DefaultPluginManager.java:562)
        ... 18 more
Caused by: org.codehaus.plexus.component.factory.ComponentInstantiationException: Could not instanciate component: role: 'null', implementation: 'org.codehaus.mojo.xdoclet.XDocletMojo'
        at org.codehaus.plexus.component.factory.java.JavaComponentFactory.makeException(JavaComponentFactory.java:77)
        at org.codehaus.plexus.component.factory.java.JavaComponentFactory.newInstance(JavaComponentFactory.java:62)
        at org.codehaus.plexus.DefaultPlexusContainer.createComponentInstance(DefaultPlexusContainer.java:1464)
        at org.codehaus.plexus.component.manager.AbstractComponentManager.createComponentInstance(AbstractComponentManager.java:93)
        at org.codehaus.plexus.component.manager.PerLookupComponentManager.getComponent(PerLookupComponentManager.java:48)
        at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:331)
        ... 20 more
Caused by: java.lang.NoClassDefFoundError: org/apache/tools/ant/PropertyHelper
        at java.lang.Class.getDeclaredConstructors0(Native Method)
        at java.lang.Class.privateGetDeclaredConstructors(Class.java:2357)
        at java.lang.Class.getConstructor0(Class.java:2671)
        at java.lang.Class.newInstance0(Class.java:321)
        at java.lang.Class.newInstance(Class.java:303)
        at org.codehaus.plexus.component.factory.java.JavaComponentFactory.newInstance(JavaComponentFactory.java:44)
        ... 24 more
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 4 seconds
[INFO] Finished at: Mon Apr 02 11:46:23 BST 2007
[INFO] Final Memory: 5M/10M
[INFO] ------------------------------------------------------------------------
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29b7z:",9223372036854775807,,,,,,,,,,,,,,,,,,,"02/Apr/07 08:02;yuri;I'm closing this one because after making some cleanups of our POMs etc, the issue has gone away.

I think the maven 2.0.6 was just triggering some latent issue. ;;;","05/Apr/07 04:17;yuri;This seems like the most appropriate solution

http://www.nabble.com/Re%3A-maven-2.0.6-and-xdoclet-maven-plugin-p9839377s177.html

<plugin>
                <artifactId>xdoclet-maven-plugin</artifactId>
                <groupId>org.codehaus.mojo</groupId>
                <executions>
                    <execution>
                        <id>xdoclet</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>xdoclet</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <tasks>
                        <hibernatedoclet
                            destdir=""${project.build.outputDirectory}""
                            mergeDir=""${basedir}/src/main/merge"">
                            <fileset dir=""${basedir}/src/main/java""
                                includes=""**/domain/*.java"" />
                            <hibernate version=""3.0"" />
                        </hibernatedoclet>
                    </tasks>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>ant</groupId>
                        <artifactId>ant</artifactId>
                        <version>1.6.5</version>
                    </dependency>
                </dependencies>
            </plugin> ;;;","05/Sep/07 08:51;pkozelka;I just want to confirm that this really helped to me too.
In particular, adding the explicit ant-1.6.5 dependency made the difference.
There must be some magic, because the maven-antrun-plugin, used by xdoclet-maven-plugin, itself depends on ant-1.6.5, but I didn't bother to explore it deeper.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
neither site lifecycle phase nor site:run mojo triggers surefire tests to run when surefire-report is configured ,MNG-2913,12794637,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,jdcasey,jdcasey,29/Mar/07 15:39,31/May/07 18:18,03/Jan/22 13:13,31/May/07 18:18,3.0-alpha-1,,,,,3.0-alpha-1,,,Plugins and Lifecycle,,,,,0,,,,it looks like the BuildPlanner is not taking into account forked lifecycles/executions when it injects report mojos into the mix.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28zrb:",9223372036854775807,,,,,,,,,,,,,,,,,,,"31/May/07 18:18;jdcasey;reports now trigger forking properly.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Snapshots are being packaged with datestamps in their filename instead of ""SNAPSHOT"", ",MNG-2903,12794681,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Incomplete,,tch,tch,26/Mar/07 17:24,02/Jul/14 08:44,03/Jan/22 13:13,22/Jan/14 20:32,2.0.5,,,,,,,,Artifacts and Repositories,,,,,7,,,,"When I run mvn package on a project, it collects all the correct and most recent
jar files for me in the lib directory, however in the zip file instead
of naming them <project>-3.0-SNAPSHOT.jar (for example) it will name
them <project>-20070318.080720-37.jar.  

Meanwhile in the project's own jar file, the manifest will point to
./lib/<project>-3.0-SNAPSHOT.jar.  This means the packaged project does
not run.

It doesn't do this for every single dependency snapshot, and I can't
seem to work out a pattern as to which get named correctly and which
don't.

I have two repositories in my pom file:

<repositories>
	<repository>
		<id>common-repository</id>
		<name> Common Repository</name>
		<url>http://repository/common-repository</url>
	</repository>
	<repository>
		<id>snapshot-repository</id>
		<name>Trovix Snapshot Repository</name>
		<url>http://repository/snapshots</url>
		<snapshots>
			<enabled>true</enabled>
			<updatePolicy>always</updatePolicy>
		</snapshots>
	</repository>
</repositories>

If I try to disable them manually (and use only the local repository),
the problem persists.  However, this is where it gets weird.  If I
unplug my network cable - my package file is created perfectly!

However - if I unplug my network cable with the snapshot repository
removed, it creates the package incorrectly once again!

This seems to be the key part of what is making it work (blacklisting
the snapshot-repository):

[INFO]    task-segment: [package]
[INFO]
---------------------------------------------------------------------
[INFO] [resources:resources]
[INFO] Using default encoding to copy filtered resources.
[INFO] snapshot com:com.benchmark:3.0-SNAPSHOT: checking for updates
from snapshot-repository
[WARNING] repository metadata for: 'snapshot
com:com.benchmark:3.0-SNAPSHOT' could not be retrieved from repository:
 snapshot-repository due to an error: Error transferring file
[INFO] Repository 'snapshot-repository' will be blacklisted
[INFO] [compiler:compile]
[INFO] Nothing to compile - all classes are up to date
[INFO] [resources:testResources]
[INFO] Using default encoding to copy filtered resources.
[INFO] [compiler:testCompile]
[INFO] No sources to compile
[INFO] [surefire:test]
[INFO] No tests to run.
[INFO] [jar:jar]

I have also run mvn -X package, and the debug log shows that it thinks
it is collecting all the correct SNAPSHOT named jars, even though it
then stores the date-stamped ones.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28ozz:",9223372036854775807,,,,,,,,,,,,,,,,,,,"23/Nov/11 05:44;mcamou;This problem is affecting us, we're using the copy-resources plugin which copies the resource with the -SNAPSHOT name, but the JAR plugin adds the timestamped name to the Manifest. For the moment I've manually added the -SNAPSHOT to the classpath with the manifestEntries/Class-Path tag but it would be excellent to have the plugin work correctly.;;;","23/Nov/11 05:46;mcamou;I forgot to indicate that we're using Maven 3.0.3.;;;","23/Nov/11 06:51;joehni;The difference is based on the fact, how the snapshot artifact was added to your local repository. If it was downloaded from a remote repository, you get the time stamped version, if it was installed locally, you get the snapshot. And yes - this behavior is very annoying, because it actually breaks applications.;;;","24/Nov/11 04:02;hamsterready;Hi, I am using Maven 3.0.1 and experiencing same issue.;;;","22/Jan/14 20:23;jvanzyl;Please refer to https://cwiki.apache.org/confluence/display/MAVEN/The+Great+JIRA+Cleanup+of+2014;;;","22/Jan/14 20:32;jvanzyl;Please refer to https://cwiki.apache.org/confluence/display/MAVEN/The+Great+JIRA+Cleanup+of+2014 if you're wondering why this issue was closed out.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
plugin configuration issue (DefaultPluginManager.mergeMojoConfiguration),MNG-3028,12797570,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Cannot Reproduce,jvanzyl,cresnick,cresnick,02/Mar/07 10:32,07/Apr/15 12:24,03/Jan/22 13:13,29/Dec/09 20:38,3.0,,,,,,,,Embedding,,,,,2,,,,"The embedder is throwing an error while configuring the xdoclet-maven-plugin. 
The error message I get is: 
    ""on the command line, specify: '-DdummyExpression=VALUE'                  Cause: Class 'org.codehaus.classworlds.ClassRealm' cannot be instantiated""
In debugging, I noticed that the ""dummyExpression"" is being introduced in DefaultPluginManager.mergeMojoConfiguration, which takes two parameters (pomConfiguration, mojoDescriptor)
pomConfiguration (DOM)= 
<configuration>
 <tasks>
  <ejbdoclet excludedtags=""@version,@author"" destdir=""${project.build.directory}/generated-sources/xdoclet"" ejbspec=""2.0"">
   <fileset dir=""src/main/java"">
    <include name=""**/*Bean.java""/>
   </fileset>
   <utilobject destdir=""${project.build.directory}/generated-sources/xdoclet""></utilobject>
   <mdb destdir=""${project.build.directory}/generated-sources/xdoclet""></mdb>
   <localinterface destdir=""${project.build.directory}/generated-sources/xdoclet""/>
   <localhomeinterface destdir=""${project.build.directory}/generated-sources/xdoclet""/>
   <remoteinterface destdir=""${project.build.directory}/generated-sources/xdoclet""/>
   <homeinterface destdir=""${project.build.directory}/generated-sources/xdoclet""/>
   <deploymentdescriptor destdir=""${project.build.directory}/classes/META-INF""></deploymentdescriptor>
   <jboss destdir=""${project.build.directory}/classes/META-INF"" version=""4.0""></jboss>
  </ejbdoclet>
 </tasks>
 <classRealm/>
 <generatedSourcesDirectory/>
 <project/>
 <sourceDirectory/>
</configuration>

mojoDescriptor = 
org.apache.maven.plugin.descriptor.MojoDescriptor [role: 'org.apache.maven.plugin.Mojo', hint: 'org.codehaus.mojo:xdoclet-maven-plugin:1.0-alpha-2:xdoclet' realm: 'org.codehaus.mojo:xdoclet-maven-plugin']


what is returned is:
<?xml version=""1.0"" encoding=""UTF-8""?>
<configuration>

 <!-- where did this come from?: -->

  <classRealm implementation=""org.codehaus.classworlds.ClassRealm"">${dummyExpression}</classRealm> 


  <generatedSourcesDirectory implementation=""java.lang.String"">${project.build.directory}/generated-sources/xdoclet</generatedSourcesDirectory>
  <project implementation=""org.apache.maven.project.MavenProject"">${project}</project>
  <sourceDirectory implementation=""java.lang.String"">${basedir}/src/main/java</sourceDirectory>
  <tasks implementation=""org.apache.tools.ant.Target"">
    <ejbdoclet excludedtags=""@version,@author"" destdir=""${project.build.directory}/generated-sources/xdoclet"" ejbspec=""2.0"">
      <fileset dir=""src/main/java"">
        <include name=""**/*Bean.java""/>
      </fileset>
      <utilobject destdir=""${project.build.directory}/generated-sources/xdoclet""></utilobject>
      <mdb destdir=""${project.build.directory}/generated-sources/xdoclet""></mdb>
      <localinterface destdir=""${project.build.directory}/generated-sources/xdoclet""/>
      <localhomeinterface destdir=""${project.build.directory}/generated-sources/xdoclet""/>
      <remoteinterface destdir=""${project.build.directory}/generated-sources/xdoclet""/>
      <homeinterface destdir=""${project.build.directory}/generated-sources/xdoclet""/>
      <deploymentdescriptor destdir=""${project.build.directory}/classes/META-INF""></deploymentdescriptor>
      <jboss destdir=""${project.build.directory}/classes/META-INF"" version=""4.0""></jboss>
    </ejbdoclet>${tasks}</tasks>
</configuration>

The top-level stack trace is kind of misleading:

org.apache.maven.lifecycle.LifecycleExecutionException: Error configuring: org.codehaus.mojo:xdoclet-maven-plugin. Reason: Unable to parse the created DOM for plugin configuration


If it helps, here is the original plugin config from my pom:

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>xdoclet-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>xdoclet</goal>
						</goals>
						<configuration>
							<tasks>
								<ejbdoclet excludedtags=""@version,@author"" destdir=""${project.build.directory}/generated-sources/xdoclet"" ejbspec=""2.0"">
									<fileset dir=""src/main/java"">
										<include name=""**/*Bean.java"" />
									</fileset>
									<utilobject destdir=""${project.build.directory}/generated-sources/xdoclet"">
									</utilobject>
									<mdb destdir=""${project.build.directory}/generated-sources/xdoclet"">
									</mdb>
									<localinterface destdir=""${project.build.directory}/generated-sources/xdoclet"" />
									<localhomeinterface destdir=""${project.build.directory}/generated-sources/xdoclet"" />
									<remoteinterface destdir=""${project.build.directory}/generated-sources/xdoclet"" />
									<homeinterface destdir=""${project.build.directory}/generated-sources/xdoclet"" />
									<deploymentdescriptor destdir=""${project.build.directory}/classes/META-INF"">
									</deploymentdescriptor>
									<jboss destdir=""${project.build.directory}/classes/META-INF"" version=""4.0"">
									</jboss>
								</ejbdoclet>
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Mar/07 12:18;cresny;sample-ejb-config.zip;https://issues.apache.org/jira/secure/attachment/12712026/sample-ejb-config.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28uav:",9223372036854775807,,,,,,,,,,,,,,,,,,,"02/Mar/07 10:53;jvanzyl;Give me a sample project and I'll start fixing it.;;;","02/Mar/07 12:39;cresnick;I attached a sample project (actually just a pom.xml since the error occurs during configuration)

I also noticed that  ${dummyExpression} is introduced by xdoclet mojo, passes empty string test and so is included for population even though the parameter does not resolve to anything.;;;","24/Mar/07 09:19;vmassol;I'm getting the same problem but I'm not calling the embedder. It looks more like a core maven issue or rather a xdoclet one:

{noformat}
[INFO] Error for project: Maven Clover Plugin XDoclet Sample (during org.codehaus.mojo:xdoclet-maven-plugin:1.0-alpha-2:xdoclet)
[INFO] ------------------------------------------------------------------------
[INFO] Failed to configure plugin parameters for: org.codehaus.mojo:xdoclet-maven-plugin:1.0-alpha-2

on the command line, specify: '-DdummyExpression=VALUE'

Cause: Class 'org.codehaus.classworlds.ClassRealm' cannot be instantiated
[INFO] ------------------------------------------------------------------------
[INFO] Trace
org.apache.maven.lifecycle.LifecycleExecutionException: Error configuring: org.codehaus.mojo:xdoclet-maven-plugin. Reason: Unable to parse the created DOM for plugin configuration
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:388)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:260)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:146)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:304)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:124)
        at org.apache.maven.embedder.MavenEmbedder.execute(MavenEmbedder.java:906)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:369)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
        at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:408)
        at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:351)
Caused by: org.apache.maven.plugin.PluginConfigurationException: Error configuring: org.codehaus.mojo:xdoclet-maven-plugin. Reason: Unable to parse the created DOM for plugin configuration
        at org.apache.maven.plugin.DefaultPluginManager.populatePluginFields(DefaultPluginManager.java:1180)
        at org.apache.maven.plugin.DefaultPluginManager.getConfiguredMojo(DefaultPluginManager.java:822)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:590)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:359)
        ... 14 more
Caused by: org.codehaus.plexus.component.configurator.ComponentConfigurationException: Class 'org.codehaus.classworlds.ClassRealm' cannot be instantiated
        at org.codehaus.plexus.component.configurator.converters.AbstractConfigurationConverter.instantiateObject(AbstractConfigurationConverter.java:133)
        at org.codehaus.plexus.component.configurator.converters.composite.ObjectWithFieldsConverter.fromConfiguration(ObjectWithFieldsConverter.java:86)
        at org.codehaus.plexus.component.configurator.converters.ComponentValueSetter.configure(ComponentValueSetter.java:247)
        at org.codehaus.plexus.component.configurator.converters.composite.ObjectWithFieldsConverter.processConfiguration(ObjectWithFieldsConverter.java:135)
        at org.codehaus.plexus.component.configurator.BasicComponentConfigurator.configureComponent(BasicComponentConfigurator.java:56)
        at org.apache.maven.plugin.DefaultPluginManager.populatePluginFields(DefaultPluginManager.java:1174)
        ... 17 more
Caused by: java.lang.InstantiationException: org.codehaus.classworlds.ClassRealm
        at java.lang.Class.newInstance0(Class.java:335)
        at java.lang.Class.newInstance(Class.java:303)
        at org.codehaus.plexus.component.configurator.converters.AbstractConfigurationConverter.instantiateObject(AbstractConfigurationConverter.java:123)
        ... 22 more
[INFO] ------------------------------------------------------------------------
[INFO] BUILD ERRORS
[INFO] ------------------------------------------------------------------------
{noformat};;;","16/Apr/07 11:23;cresnick;It appears this problem was in Plexus and has been fixed. Anny chance there can be a new drop of Maven Embedder that contains the Plexus fix?;;;","01/Jun/07 20:54;jvanzyl;This is not an MNGECLIPSE problem but a general Maven problem and is a result of the xdoclet plugin extending the antrun plugin which I will have to look into. I will move this issue to MNG.;;;","29/Dec/09 20:38;jvanzyl;Reopen if this is still an issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OutOfMemoryError when using profiles and pom inheritance,MNG-2813,12796503,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,,werbung@kuhnle.net,werbung@kuhnle.net,07/Feb/07 01:34,05/Apr/15 14:53,03/Jan/22 13:13,31/May/07 22:12,2.0.4,,,,,3.0-alpha-1,,,Profiles,,,,,0,,,,"When using profiles and POM inheritance, Maven grows out of heap space. This especially happens when using Xpp3Dom's combine.children=""append"" on plugin configurations in the POMs.

The cause of this is the DefaultProfileInjector in maven-project. It calls Xpp3Dom.mergeXpp3Dom with the profile's configuration as dominant DOM, and the models configuration as recessive DOM to merge the dominant DOM into the recessive one. However, mergeXpp3Dom directly changes the dominant DOM, instead of creating a merged copy. Therefor the profiles DOM is changed. If this profile is injected a second time, e.g. because of a reactor build, the original DOM is gone. Since the changed profile is also saved in the model, this often results in the profile DOM (changed by earlier merge) being merged into itself (saved in model from earlier merge). Boom -- we get an OutOfMemoryError.

The attached patch changes DefaultProfileInjector by ensuring that dominant DOMs are copied before they are passed to Xpp3Dom.mergeXpp3Dom.",maven-2.0.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Feb/07 01:35;MNG-2813-maven-project.patch;https://issues.apache.org/jira/secure/attachment/12712023/MNG-2813-maven-project.patch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,Patch,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28to7:",9223372036854775807,,,,,,,,,,,,,,,,,,,"31/May/07 22:03;jvanzyl;Applying and trying on the trunk.;;;","31/May/07 22:12;jvanzyl;Patch applied to trunk and branch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
 issue description: 'Plugin dependencies override maven core artifacts causing NoClassDefFoundErrors',MNG-2811,12796494,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Cannot Reproduce,brettporter,david@davidkarlsen.com,david@davidkarlsen.com,06/Feb/07 16:57,28/Jan/09 22:22,03/Jan/22 13:13,28/Jan/09 22:22,2.0.4,,,,,,,,Plugins and Lifecycle,,,,,0,,,,"Usecase:

wipe the local .m2 repo totally away. (rm -rf ~/.m2/repository)
do a:
mvn -X clean deploy site-deploy.

Attached is the output from two different projects (one is a 4 artifact project - including the top pom, the other is a multibuild of 17 artifacts, also including top-pom).

If I just re-run the ""mvn -X clean deploy site-deploy"" the builds will eventually succeed.

I'll try to narrow down the pom's to pin down the failure with as little dependencies and plugins in action as possible - but this will take some time.

I can be pinged at david@codehaus.org or david@davidkarlsen.com for re-running builds if needed.

The logs are a little anonymized.","OS agnostic, maven 2.0.4, jdk1.5",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Feb/07 16:57;david@davidkarlsen.com;17artifactmultibulid.run1.log;https://issues.apache.org/jira/secure/attachment/12712360/17artifactmultibulid.run1.log","06/Feb/07 16:57;david@davidkarlsen.com;4artifact.filtered.log;https://issues.apache.org/jira/secure/attachment/12712164/4artifact.filtered.log",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28wgv:",9223372036854775807,,,,,,,,,,,,,,,,,,,"06/Feb/07 17:03;kenney;It looks like the dependencies brought in by the plugin (maven-model, plexus-utils) are not filtered out the plugin's classrealm.

Since the conflict resolution in 2.0.4 bugs ('nearer found' is reported even for dependencies at the same level, sometimes
causing older versions to replace newer onces), older versions of maven-model etc. could be used, but these should've
been filtered out using the artifact filters since they're core artifacts.
This normally works but maybe the downloading of plugins disrupts this.;;;","25/Feb/07 10:23;david@davidkarlsen.com;It should be added that this also happens with maven 2.0.5 - could somebody with edit credentials update the issue?;;;","25/Feb/07 12:35;david@davidkarlsen.com;and this only happens when calling the site goal;;;","18/Dec/08 05:14;brettporter;David, do you still see this in recent versions of Maven?;;;","28/Jan/09 22:22;brettporter;closing as cannot reproduce in recent versions. David is looking for a test project - however, I'm confident the shading changes in more recent versions of Maven would have already addressed it;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Snapshot plugins cannot be resolved correctly with java6,MNG-2793,12794633,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,jvanzyl,dkulp,dkulp,25/Jan/07 09:15,07/Apr/15 12:24,03/Jan/22 13:13,10/Mar/07 19:26,2.0.4,2.0.5,,,,2.0.6,,,Artifacts and Repositories,Dependencies,,,,3,,,,"With java 6, builds that use snapshot repositories are consistently failing if the snapshots are not available in the local repository.  The error is something like:
[INFO] ----------------------------------------------------------------------------
[DEBUG] Retrieving parent-POM: org.apache.maven.plugins:maven-plugins::1 for project: null:maven-site-plugin:maven-plugin:2.0-beta-5 from the repository.
[DEBUG] Retrieving parent-POM: org.apache.maven:maven-parent::1 for project: org.apache.maven.plugins:maven-plugins:pom:1 from the repository.
[DEBUG] Retrieving parent-POM: org.apache:apache::1 for project: org.apache.maven:maven-parent:pom:1 from the repository.
[DEBUG] maven-install-plugin: using locally installed snapshot
[DEBUG] maven-install-plugin: resolved to version 2.2-SNAPSHOT from repository central
[DEBUG] Skipping disabled repository central
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Error building POM (may not be this project's POM).


Project ID: org.apache.maven.plugins:maven-install-plugin

Reason: Error getting POM for 'org.apache.maven.plugins:maven-install-plugin' from the repository: Failed to resolve artifact, possibly due to a repository list that is not appropriately equipped for this artifact's metadata.
  org.apache.maven.plugins:maven-install-plugin:pom:2.2-SNAPSHOT

from the specified remote repositories:
  apache.snapshots (http://people.apache.org/repo/m2-snapshot-repository),
  central (http://repo1.maven.org/maven2)




If the artifacts are first downloaded by building with JDK 1.5, everything works fine.


After investigating, the problem is in the transforms that the maven-artifact-manager.   With JDK 1.5, the order they run is:
org.apache.maven.artifact.transform.LatestArtifactTransformation
org.apache.maven.artifact.transform.ReleaseArtifactTransformation
org.apache.maven.artifact.transform.SnapshotTransformation

but with Java 6, for some reason, the order is:

org.apache.maven.artifact.transform.SnapshotTransformation
org.apache.maven.artifact.transform.LatestArtifactTransformation
org.apache.maven.artifact.transform.ReleaseArtifactTransformation

The LatestArtifactTransform is what uses to the metadata to determine 
the ""actual"" version number (for the install plugin, 2.2-SNAPSHOT).  The 
SnapshotTransform then converts that to 2.2-20061118.060401-2 which is what 
is then downloaded.   However, in the java 6 case, the SnapshotTransform is 
run first and since the version is not a ""SNAPSHOT"" version number, it 
doesn't do any processing so then the downloading ends up looking for 
2.2-SNAPSHOT, not the full version, which then fails.


I chatted with brett_ on IRC about this:
[09:46:35] <dkulp> OK.  I'm trying to track down why  my builds are failing with JDK 1.6
[09:46:53] <dkulp> The issue is the transforms are in a different order with 1.6 than 1.5
[09:47:17] <brett_> yikes
[09:47:42] <dkulp> With 1.5, its Latest/Release/Snapshot.
[09:47:46] <brett_> not sure why that would matter. But I guess sorting the transforms consistently would help.
[09:47:50] <dkulp> With 1.6, it's Snapshot/Latest/Release
[09:48:06] <brett_> ok, fairly simple to fix in Maven.
[09:48:10] <dkulp> The Latest needs to be before Snapshot.
[09:49:08] <dkulp> I tried changing the order of things in the components.xml.   Didn't seem to change anything.   But this is plexus stuff which I don't know anything about.
[09:49:22] <brett_> hmm, it should be populated as a list
[09:49:28] <brett_> but maybe the list is backed by a map
[09:49:35] <dkulp> Yep.   Verified it's and ArrayList
[09:49:51] <brett_> s/backed/populated by/
[09:50:48] <dkulp> That would definitely do it.
[09:51:21] <dkulp> Any hints on where to look?
[09:51:48] <brett_> oh, I would go into plexus
[09:51:52] <dkulp> (or how to debug)?
[09:51:58] <brett_> sorry, wouldn't
[09:52:13] <brett_> it's changing too much
[09:52:18] <brett_> 2.0.5 will be stuck with alpha-10
[09:52:24] <brett_> so, need to work around it in Maven
[09:53:00] <brett_> perhaps just hack the order in the code, and then fix plexus to honour the order in components.xml in trunk
[09:54:57] <dkulp> Hmm..    ok.    Is there something plexus will call after setting the List field so I can resort it?
[09:55:30] <dkulp> Or will adding a ""setArtifactTransformations(List)"" work?
[09:55:40] <dkulp> (again, not familiar with plexus)
[09:56:25] <brett_> no, it sets it using private field injection
[09:57:04] <dkulp> No  optional ""init"" methods or anything that are called after everything is done?
[09:57:42] <brett_> you can implement Initializable and modify them then
[09:57:50] <brett_> but you could just as easily do that inside the method using it
[09:58:08] <dkulp> There are 4 methods using it that are called to resolve every artifact.
[09:58:24] <dkulp> Sorry, 3.
[09:58:37] <dkulp> Kind of just wanted to sort once, not for each artifact.
[09:58:46] <brett_> but the transformations should just exist in one class, and only used in one place, IIRC
[10:06:46] <dkulp> brett_: thanks.   That actually works.


The attached patch forces the ""Snapshot"" transform to the end of the list.   It's definitely not ideal.   Ideally, plexus would be fixed to honor ordering, but if plexus is in a state of flux, that might not be doable.





",,,,,,,,,,,,,,,,,MNG-2792,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Jan/07 09:15;dkulp;maven-artifact-manager.patch;https://issues.apache.org/jira/secure/attachment/12712420/maven-artifact-manager.patch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28tfz:",9223372036854775807,,,,,,,,,,,,,,,,,,,"25/Jan/07 10:19;mbeerman;I don't know that this issue affects snapshot _plugins_ only... we've encountered it with snapshot dependencies in general.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When Maven runs Java 6, maven-metadata.xml file is ""corrupted""",MNG-2792,12794609,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Duplicate,,mbeerman,mbeerman,24/Jan/07 16:59,24/Apr/07 17:42,03/Jan/22 13:13,24/Apr/07 17:15,2.0.4,,,,,2.0.6,,,Artifacts and Repositories,,,,,4,,,,"When you run Maven under Java 6, the ""maven-metadata.xml"" file that gets written to the remote repository is markedly different from the one generated under Java 5 and earlier. This file is ""corrupted"" in the sense that Maven reports errors about it, and might not be able to locate snapshots as a result. See attachment for an example file; you'd expect to see build numbers or -SNAPSHOTs, but not both at once.

This issue is described further at http://www.nabble.com/Maven-and-JDK-1.6-t3060866s177.html (originally message only, not the followups). This might be related to MNG-2709, but I don't think it's a duplicate, as it has nothing to do with testing or parents.",,,,,,,,,,,,,,,,,,,,,,,,MNG-2793,,,,,,,,,,,,,,,,,,,MNG-2709,,,,,,,,,,,"24/Jan/07 16:59;mbeerman;maven-metadata.xml;https://issues.apache.org/jira/secure/attachment/12711848/maven-metadata.xml",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28naf:",9223372036854775807,,,,,,,,,,,,,,,,,,,"25/Jan/07 09:19;mbeerman;Daniel Kulp adds:

No.   It's really not corrupted despite the error.   I've been tracing through 
the maven code and there are a series of ""transforms"" (not xml transforms) 
that an artifact goes through to be resolved.   With Java 5, the order is:

org.apache.maven.artifact.transform.LatestArtifactTransformation
org.apache.maven.artifact.transform.ReleaseArtifactTransformation
org.apache.maven.artifact.transform.SnapshotTransformation

but with Java 6, for some reason, the order is:

org.apache.maven.artifact.transform.SnapshotTransformation
org.apache.maven.artifact.transform.LatestArtifactTransformation
org.apache.maven.artifact.transform.ReleaseArtifactTransformation

The LatestArtifactTransform is what uses to the metadata to determine 
the ""actual"" version number (for the install plugin, 2.2-SNAPSHOT).  The 
SnapshotTransform then converts that to 2.2-20061118.060401-2 which is what 
is then downloaded.   However, in the java 6 case, the SnapshotTransform is 
run first and since the version is not a ""SNAPSHOT"" version number, it 
doesn't do any processing so then the downloading ends up looking for 
2.2-SNAPSHOT, not the full version, which then fails.

I'm not sure why the order of the transforms is different yet.  

Dan;;;","01/Mar/07 12:47;jnorris10@gmail.com;Are there any workarounds for this without reverting to java 5?;;;","24/Apr/07 17:15;mbeerman;Duplicate of MNG-2793.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Multiple executions of the same plugin at the same life cycle phase in a multi-module profile mixed up,MNG-2784,12796640,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,jvanzyl,maik,maik,18/Jan/07 07:57,07/Apr/15 12:25,03/Jan/22 13:13,01/Jun/07 15:36,2.0.4,2.0.5,,,,2.0.7,,,Bootstrap & Build,Plugins and Lifecycle,Profiles,Reactor and Workspace,,0,,,,"I use the latest Maven 2.0.5 build found at 
http://people.apache.org/~jvanzyl/maven-2.0.5/org/apache/maven/maven-core/2.0.5/

I have multiple executions of the same plugin at the same life cycle phase in a multi-module parent POM. There was a bug regarding the order of this executions. This was fixed at 2.0.5.

Now I needed to extract these plugin executions to a profile in this parent POM. Now the executions are not ordered correctly anymore :-(

Before (works fine):
parent\pom.xml <= multiple executions of the same plugin at the same life 
cycle phase in the default build element
parent \child1\pom.xml
parent \child2\pom.xml
Calling mvn install in parent works fine.

After (fails):
parent\pom.xml <= multiple executions of the same plugin at the same life 
cycle phase in the build element of a profile
parent \child1\pom.xml
parent \child2\pom.xml
Calling mvn install in parent mixed up the execution order in the childs.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-3719,,,,,,MNG-2258,,,,,,,,,,,"14/Aug/08 15:55;gswduke;MNG-2784-issue-with-maven-2.0.9.tar.gz;https://issues.apache.org/jira/secure/attachment/12712775/MNG-2784-issue-with-maven-2.0.9.tar.gz","19/Feb/07 08:24;maik;MNG-2784.patch;https://issues.apache.org/jira/secure/attachment/12712365/MNG-2784.patch",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,Patch,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28wb3:",9223372036854775807,,,,,,,,,,,,,,,,,,,"18/Jan/07 07:59;maik;Maybe MNG-2784 does not fix this special configuration.;;;","19/Feb/07 08:20;maik;I digged further into this problem.

MNG-1891 does fix some of these problems, but there is still the following problem:

The order of executions of a plugin in a profile are disarranged when they are merged into a model.

I patched Maven 2.0.5 to fix this issue. It added some reordering in DefaultProfileInjector.injectPluginDefinition().;;;","19/Feb/07 08:24;maik;I added the patch file.;;;","13/Apr/07 08:11;maik;This issue still exists in Maven 2.0.6.;;;","14/Aug/08 15:55;gswduke;Attaching a project that gives example of mix of different and same plugin with different execution ids in same phase not being executed in order that they appear in pom.xml (and it isn't in reverse order either).

Could this issue please be re-opened or explanation given for whether this will be fixed? The other bug referenced was supposedly fixed in 2.0.7, but I am seeing this behavior in 2.0.9.

Thanks in advance for your help!;;;","15/Aug/08 13:15;gswduke;Nevermind attachment MNG-2784-issue-with-maven-2.0.9.tar.gz and my comment - I created another bug: MNG-3719 (""Need to have a way to either define plugin execution dependencies on other plugin executions having executed first (at least within same lifecycle phase"");;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
trunk needs to support passing system properties and environment variables through the CLI into the embedder,MNG-2753,12794619,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jvanzyl,brettporter,brettporter,09/Jan/07 22:31,07/Apr/15 12:24,03/Jan/22 13:13,02/Sep/07 18:21,3.0,,,,,3.0-alpha-1,,,Command Line,,,,,0,,,,"handling was wisely removed from maven-project itself, but for backwards compatibility we need to still support the population of properties from system properties and environment variables at the CLI level. These variables should be passed in to the embedder.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i299gv:",9223372036854775807,,,,,,,,,,,,,,,,,,,"09/Jan/07 22:35;brettporter;Jason has said that the system properties are already passed in, so only need to restore backwards compat for env vars;;;","02/Sep/07 18:21;jvanzyl;Support turned back on, IT reactivated for 2.1.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
extensions stopped working in 2.0.5-SNAPSHOT,MNG-2749,12794605,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,brettporter,brianf,brianf@infinity.nu,09/Jan/07 12:09,10/Mar/16 13:54,03/Jan/22 13:13,09/Jan/07 20:46,2.0.5,,,,,2.0.5,,,Artifacts and Repositories,,,,,0,,,,"We're testing our build with the latest 2.0.5-SNAPSHOT. We use the checkstyle config described here http://people.apache.org/%7Eoching/maven-checkstyle-plugin/examples/multi-module-config.html
and it works perfectly in 2.0.4. Switching to 2.0.5 causes this to not be available on the classpath anymore.",,,,,,,,,,,,,,,,,MNG-2795,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-3281,,,,,,,,,,,"09/Jan/07 15:27;checkstyle-demo.zip;https://issues.apache.org/jira/secure/attachment/12712097/checkstyle-demo.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29clj:",9223372036854775807,,,,,,,,,,,,,,,,,,,"09/Jan/07 15:27;brianf@infinity.nu;The attached builds successfully when run with maven 2.0.4
but fails when run with 2.0.5-SNAPSHOT

[ERROR] BUILD ERROR
[INFO] ---------------------------------------------------------------
[INFO] An error has occurred in Checkstyle report generation.

Embedded error: Unable to find configuration file location.
Unable to find location 'stc_checks.xml' as URL, File or Resource.;;;","09/Jan/07 20:02;brettporter;this works if you use a plugin dependency instead, however I will try and provide a workaround for the old behaviour;;;","09/Jan/07 20:20;brianf@infinity.nu;The extension was chosen because the dependency won't be found if the plugin repo is separate from the regular artifact repo.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dependency poms not timely merged with parents,MNG-2743,12797101,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Incomplete,,kenney,kenney,06/Jan/07 09:49,02/Jul/14 08:44,03/Jan/22 13:13,22/Jan/14 20:31,2.0.4,2.0.6,,,,,,,Artifacts and Repositories,Dependencies,,,,2,,,,"POM's of dependencies are not properly merged with their parents.
It could be that they're not merged at all, or only partly. Since the code to merge poms is the same
everywhere, and <repository> tags are merged for local poms, I fear that they're not merged at all.

With this setup:

* local workspace:
** project A
*** depends on remote artifact B, residing in 'central'

* repository central:
** artifact B (cocoon-core)
*** has parent P (cocoon), also here at central
*** declares a dependency on D, residing in repo R (not a standard repository)
** pom P, declares repository R

* repository R:
** artifact D (avalon-framework-impl)
*** declares dependency on lib L, also here at repository R
** artifact L (avalon-framework-api)

When running mvn install on local project A, observe the following log:
{noformat}
....
// cocoon-core has been resolved, now it's dependency poms are resolved:
[DEBUG] Trying repository central
Downloading: http://repo1.maven.org/maven2/org/apache/avalon/framework/avalon-framework-impl/4.3/avalon-framework-impl-4.3.pom
[WARNING] Unable to get resource from repository central (http://repo1.maven.org/maven2)
[DEBUG] Artifact not found - using stub model: Unable to download the artifact from any repository
 
  org.apache.avalon.framework:avalon-framework-impl:pom:4.3
 
from the specified remote repositories:
  central (http://repo1.maven.org/maven2)
 
[DEBUG] Using defaults for missing POM org.apache.avalon.framework:avalon-framework-impl:pom:4.3:compile

// note: above, the parent of cocoon-core (B) (which is cocoon (P)), is not merged, as the repo R is not
// visible in B to resolve D
....

// now, the artifacts themselves are downloaded 
 
[DEBUG] Trying repository central
Downloading: http://repo1.maven.org/maven2/org/apache/avalon/framework/avalon-framework-impl/4.3/avalon-framework-impl-4.3.jar
[WARNING] Unable to get resource from repository central (http://repo1.maven.org/maven2)
// Here, repo R _is_ used to search, which means that the parent P is merged with B and the repo is available
[DEBUG] Trying repository apache.snapshot
Downloading: http://people.apache.org/maven-snapshot-repository/org/apache/avalon/framework/avalon-framework-impl/4.3/avalon-framework
-impl-4.3.jar
2/56K^M3/56K^M7/56K^M8/56K^M9/56K^M13/56K^M17/56K^M19/56K^M20/56K^M24/56K^M28/56K^M32/56K^M36/56K^M40/56K^M42/56K^M43/56K^M44/56K^M46/
56K^M47/56K^M49/56K^M50/56K^M52/56K^M53/56K^M54/56K^M56/56K^M56K downloaded
[DEBUG]   Artifact resolved
{noformat}

The problem here is that the jar is now available in the local repo, but the pom is not, and the dependencies of D aren't downloaded.

It seems pom B is only merged with P _after_ all dependency poms for B have been resolved.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28v5b:",9223372036854775807,,,,,,,,,,,,,,,,,,,"03/Jun/07 09:36;wsmoak;Also affects 2.0.6 per Grzegorz Kossakowski on #maven.;;;","27/Jun/11 18:58;bmargulies;This issue has been sitting for a long time with no test case. If no one can provide one in a week or two, I will close it.;;;","22/Jan/14 20:23;jvanzyl;Please refer to https://cwiki.apache.org/confluence/display/MAVEN/The+Great+JIRA+Cleanup+of+2014;;;","22/Jan/14 20:31;jvanzyl;Please refer to https://cwiki.apache.org/confluence/display/MAVEN/The+Great+JIRA+Cleanup+of+2014 if you're wondering why this issue was closed out.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Regression: new container handling cannot locate resources properly,MNG-2731,12797337,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jvanzyl,brettporter,brettporter,31/Dec/06 19:04,07/Apr/15 12:25,03/Jan/22 13:13,20/Jan/07 14:48,3.0-alpha-1,,,,,3.0-alpha-1,,,Plugins and Lifecycle,,,,,0,,,,"Run: mvn project-info-reports:scm on any Maven project.

[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Can't find bundle for base name project-info-report, locale en_AU
[INFO] ------------------------------------------------------------------------
[INFO] Trace
org.apache.maven.BuildFailureException: Can't find bundle for base name project-info-report, locale en_AU
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:315)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:141)
        at org.apache.maven.embedder.MavenEmbedder.execute(MavenEmbedder.java:550)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:346)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
        at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:408)
        at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:351)
Caused by: java.util.MissingResourceException: Can't find bundle for base name project-info-report, locale en_AU
        at org.codehaus.plexus.i18n.DefaultI18N.cacheBundle(DefaultI18N.java:394)
        at org.codehaus.plexus.i18n.DefaultI18N.getBundle(DefaultI18N.java:157)
        at org.codehaus.plexus.i18n.DefaultI18N.getString(DefaultI18N.java:206)
        at org.apache.maven.report.projectinfo.ScmReport.getName(ScmReport.java:68)
        at org.apache.maven.report.projectinfo.AbstractProjectInfoReport.execute(AbstractProjectInfoReport.java:158)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:435)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:534)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeStandaloneGoal(DefaultLifecycleExecutor.java:488)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:458)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:306)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:273)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:140)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:311)
        ... 11 more

This works in Maven 2.0.4/2.0.5-SNAPSHOT, but not on trunk.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MPIR-60,,,,,,,,,,,,,,,,,"10/Jan/07 11:00;siveton;doxia-site-renderer-MNG-2731.diff;https://issues.apache.org/jira/secure/attachment/12712357/doxia-site-renderer-MNG-2731.diff","10/Jan/07 11:00;siveton;maven-project-info-reports-plugin-MNG-2731.diff;https://issues.apache.org/jira/secure/attachment/12712020/maven-project-info-reports-plugin-MNG-2731.diff",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28q93:",9223372036854775807,,,,,,,,,,,,,,,,,,,"09/Jan/07 16:37;siveton;I tried {{mvn site}} with 2.0.x and 2.1-SNAPSHOT and I got the NPE.
The pb seems to come in plexus (maybe plexus-container-default) when we upgraded plexus-i18n from 1.0.6 to 1.0-beta-7-SNAPSHOT in doxia-site-renderer

It is the same, if we used in doxia-site-renderer:
plexus-i18n:1.0.6
plexus-velocity:1.1.4


;;;","09/Jan/07 16:48;brettporter;Vincent - I get this too, but it's a bug in the MPIR plugin so should be filed there. Thanks.;;;","10/Jan/07 11:00;siveton;This issue seems to be related to plexus, via doxia. These patches excludes some plexus artifacts in doxia.
Works *only* for maven 2.0.x. With maven 2.1-snap, I got another exception:

{noformat} 
org.apache.maven.BuildFailureException: Can't find bundle for base name project-info-report, locale en
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:276)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:109)
        at org.apache.maven.embedder.MavenEmbedder.execute(MavenEmbedder.java:520)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:341)
...
{noformat} 
;;;","20/Jan/07 14:48;handyande;This issue is now fixed with the latest plexus and maven;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven does not comply to XML rules regarding prefixes.,MNG-2715,12796497,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Won't Fix,,safris,safris,26/Dec/06 20:38,05/Jun/16 06:58,03/Jan/22 13:13,30/Dec/09 12:43,,,,,,,,,POM,,,,,0,,,,"I am new to Maven and have been trying to learn how to create a simple project.
Let me walk through my scenario of creating a pom.xml file:
1. I bind the {http://maven.apache.org/POM/4.0.0} namespace (defined at ""http://maven.apache.org/maven-v4_0_0.xsd"") to Java classes using an XML Binding solution.
2. I use the bound classes to create a simple <project/> as one would expect to see in a pom.xml file.
3. I marshal the bound Java objects into xml and write it into pom.xml. Here is the xml I use:
<ns1:project
	xmlns:ns1=""http://maven.apache.org/POM/4.0.0"">
	<ns1:modelVersion>4.0.0</ns1:modelVersion>
	<ns1:groupId>com.myapp</ns1:groupId>
	<ns1:artifactId>sample-project</ns1:artifactId>
	<ns1:name>Sample Maven Project</ns1:name>
	<ns1:version>1.0</ns1:version>
	<ns1:developers>
		<ns1:developer>
			<ns1:id>ssafris</ns1:id>
			<ns1:name>Seva Safris</ns1:name>
		</ns1:developer>
	</ns1:developers>
	<ns1:build>
		<ns1:sourceDirectory>${basedir}/src/java</ns1:sourceDirectory>
	</ns1:build>
</ns1:project>
4. I run mvn, and am promptly given a ""Not a v4.0.0 POM."" exception.

Tracing through Maven's source, I went to the exact location of the exception in DefaultMavenProjectBuilder.java. On line 1297 it has:

if ( modelSource.indexOf( ""<modelVersion>4.0.0"" ) < 0 )
{
    throw new InvalidProjectModelException( projectId, pomLocation, ""Not a v4.0.0 POM."" );
}

Since modelSource is checked explicitly for <modelVersion[...], my <project/> xml as shown above will fail this test because it has: <ns1:modelVersion[...].

This is most definitely a bug in Maven and should be fixed as soon as possible. The workaround is to use a xmlns=""http://maven.apache.org/POM/4.0.0"" and define all elements without a prefix. However, my use of xmlns:ns1=""http://maven.apache.org/POM/4.0.0"" should not break Maven as it is not merely legal by xml conventions, but is also a better practice for xml documents.

I hope you see the importance of getting this bug fixed: My use of a XML Binding solution to bind Maven's xml to Java allows me a strongly-typed level of indirection that will deterministically create proper xml that will validate successfully. If this bug is not fixed, then this level of indirection is not possible (or very very very difficult because the XML Binding solution would have to be hacked to use the xmlns=""[...]"" convention). I have only found this one instance of where the bug is obvious, but perhaps there are more locations in Maven where the same kind of error can occur.

Thank you for your time, and I hope you consider this issue as seriously as I do.

Sincerely,

Seva Safris","Ubuntu 6.10
Maven 2.0.4",,,,,,,,,,,,,,,,MNG-2714,MNG-4708,,,,,,,,,,,,,MNG-6036,,,,,,MNG-2769,,,,,,,,,,,MNG-2255,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i298mn:",9223372036854775807,,,,,,,,,,,,,,,,,,,"28/Mar/07 09:48;jvanzyl;We intentionally don't support namespaces. And definitely won't in 2.0.x.;;;","21/Apr/07 23:51;safris;It's one thing to not support namespaces, but it's another to deliberately prevent compatibility with xml that uses prefixed names.

Maven does not need to support namespaces to be able to read xml that does. Instead of supporting namespaces, Maven can be made to respect, but ignore prefixes. This can be done with the existing codebase by applying a simple modification to how maven reads the name of xml elements. It has to respect the possible existence of a prefix by looking for the ':' character:

int prefix = nameOfElement.indexOf(':');
nameOfElement = nameOfElement.substring(prefix + 1);

This bug may get promptly closed again, but I think this point is worth mentioning nonetheless as there is a clear and simple way to resolve this bug (and I still think it's a bug despite the fact that maven will ""never support namespaces"").;;;","22/Apr/07 03:37;arikkfir;Seva,

I don't think Jason meant Maven will *never* support namespaces; only the 2.0.x branch won't. I'm quite sure Maven 2.1 will support it (by moving to a standard XML parser) - I think work has already began on the matter. 

Jason, please correct me if I'm mistaken.

Best regards, 
  Arik.;;;","01/Oct/08 23:31;sisbell;We will be able to get this supported pretty soon in trunk. For most parsing, it's now using woodstox, which can handle the namespaces. There are still a few spots that still use the modello reader that we are going to clean out.;;;","31/May/16 07:24;rhuss;Sorry to revive this old issue, but unfortunately it seems that I'm not allowed to create new issues ;(

I still have this very same problem with

{code}
Apache Maven 3.3.9 (bb52d8502b132ec0a5a3f4c09453c07478323dc5; 2015-11-10T17:41:47+01:00)
Maven home: /usr/local/Cellar/maven/3.3.9/libexec
Java version: 1.8.0_40, vendor: Oracle Corporation
Java home: /Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home/jre
Default locale: en_US, platform encoding: UTF-8
OS name: ""mac os x"", version: ""10.11.4"", arch: ""x86_64"", family: ""mac""
{code}

When I use this pom.xml in order to allow an XSD for my custom plugin configuration:

{code:xml}
<project xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
         xmlns=""http://maven.apache.org/POM/4.0.0""
         xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/POM/4.0.0"">

....
    <plugin>
         ....
         <m:configuration xmlns:m=""http://maven.apache.org/POM/4.0.0"" xmlns=""http://fabric8.io/fabric8-maven-plugin"">
             <myConfig>.....</myConfig>
         </m:configuration>
    </plugin>
    ....
</project>
{code}

I get this error:

{code}
[INFO] Scanning for projects...
[ERROR] [ERROR] Some problems were encountered while processing the POMs:
[ERROR] Malformed POM /Users/roland/Development/docker/docker-maven-plugin/samples/data-jolokia-demo/pom.xml: Unrecognised tag: 'm:configuration' (position: START_TAG seen ...che.org/POM/4.0.0"" xmlns=""http://fabric8.io/fabric8-maven-plugin"">... @91:117)  @ /Users/roland/Development/docker/docker-maven-plugin/samples/data-jolokia-demo/pom.xml, line 91, column 117
 @
[ERROR] The build could not read 1 project -> [Help 1]
[ERROR]
[ERROR]   The project io.fabric8:docker-jolokia-demo:0.15-SNAPSHOT (/Users/roland/Development/docker/docker-maven-plugin/samples/data-jolokia-demo/pom.xml) has 1 error
[ERROR]     Malformed POM /Users/roland/Development/docker/docker-maven-plugin/samples/data-jolokia-demo/pom.xml: Unrecognised tag: 'm:configuration' (position: START_TAG seen ...che.org/POM/4.0.0"" xmlns=""http://fabric8.io/fabric8-maven-plugin"">... @91:117)  @ /Users/roland/Development/docker/docker-maven-plugin/samples/data-jolokia-demo/pom.xml, line 91, column 117 -> [Help 2]
{code}

Except for https://cwiki.apache.org/confluence/display/MAVEN/Moving+forward+with+the+POM+data+model I couldn't find any statement when namespaces are supported or tolerated. Are there any plans for this (and maybe also to relax the schema constraints on the {{<configuration>}} tag  ?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven does not comply to XML rules regarding prefixes.,MNG-2714,12794516,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Incomplete,,safris,safris,26/Dec/06 20:25,22/Apr/07 11:34,03/Jan/22 13:13,26/Dec/06 20:27,,,,,,,,,,,,,,0,,,,"I am new to Maven and have been trying to learn how to create a simple project.
Let me walk through my scenario of creating a pom.xml file:
1. I bind the {http://maven.apache.org/POM/4.0.0} namespace (defined at ""http://maven.apache.org/maven-v4_0_0.xsd"") to Java classes using an XML Binding solution.
2. I use the bound classes to create a simple <project/> as one would expect to see in a pom.xml file.
3. I marshal the bound Java objects into xml and write it into pom.xml. Here is the xml I use:
<ns1:project
	xmlns:ns1=""http://maven.apache.org/POM/4.0.0"">
	<ns1:modelVersion>4.0.0</ns1:modelVersion>
	<ns1:groupId>com.myapp</ns1:groupId>
	<ns1:artifactId>sample-project</ns1:artifactId>
	<ns1:name>Sample Maven Project</ns1:name>
	<ns1:version>1.0</ns1:version>
	<ns1:developers>
		<ns1:developer>
			<ns1:id>ssafris</ns1:id>
			<ns1:name>Seva Safris</ns1:name>
		</ns1:developer>
	</ns1:developers>
	<ns1:build>
		<ns1:sourceDirectory>${basedir}/src/java</ns1:sourceDirectory>
	</ns1:build>
</ns1:project>
4. I run mvn, and am promptly given a ""Not a v4.0.0 POM."" exception.

Tracing through Maven's source, I went to the exact location of the exception in DefaultMavenProjectBuilder.java. On line 1297 it has:
","Ubuntu 6.10
Maven 2.0.4",,,,,,,,,,,,,,,,,,,,,,,MNG-2715,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29brb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Exception in thread ""main"" java.lang.NoClassDefFoundError: org/codehaus/plexus/classworlds/launcher/Launcher",MNG-2700,12794515,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Duplicate,,f.tinti,f.tinti,12/Dec/06 09:45,03/Jan/07 01:15,03/Jan/22 13:13,03/Jan/07 01:15,2.0-alpha-1,,,,,,,,Bootstrap & Build,,,,,0,,,,trying to use mvn give the exception message reported in summay. after a bootstrap build of code with Ant (subversion revision number 486140).,Windows XP - Sun JDK 1.5.09,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-2692,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28rsv:",9223372036854775807,,,,,,,,,,,,,,,,,,,"30/Dec/06 07:15;f.tinti;Could you fix in mvn.bat, line 125, ""classworld*"" with the ""plexus-classworld*""
It's quite annoying change it by hand after each build of maven
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
2.1 mvn.bat is broken because classworlds was renamed (patch attached),MNG-2699,12794580,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,brettporter,brianf,brianf@infinity.nu,11/Dec/06 22:21,10/Mar/16 13:54,03/Jan/22 13:13,03/Jan/07 01:16,2.0-alpha-1,,,,,,,,Command Line,,,,,0,,,,"No karma in core, only plugins so here's the patch. The line was looking for classworlds-* when it's now plexus-classworlds-*",,,,,,,,,,,,,,,,,,,,,,,,MNG-2692,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Dec/06 22:21;mvnbat.patch;https://issues.apache.org/jira/secure/attachment/12712221/mvnbat.patch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28lbz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
POM dependency scope auto-downgrades from provided to test,MNG-2686,12796473,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,bentmann,fcorneli,fcorneli,04/Dec/06 08:57,08/Feb/20 15:41,03/Jan/22 13:13,24/Aug/10 18:25,2.0.4,,,,,3.0-beta-3,,,Dependencies,,,,,0,,,,"My project has a dependency on:
XXX:YYY:jar:1.0-SNAPSHOT (selected for null)
with transitive dependency:
commons-logging:commons-logging:jar:1.1:test
and again triggering a transitive dependency on:
javax.servlet:servlet-api:jar:2.3:test (selected for test)

Later on the project also has a dependency:
AAA:BBB-container:pom:1.0-SNAPSHOT:provided (selected for provided)
I use this to represent the dependencies provided by the J2EE container in which the application will be deployed.
This triggers via:
tomcat:catalina:jar:5.5.15:provided (selected for provided)
the following funny thing:
javax.servlet:servlet-api:jar:2.4:provided (removed - nearer found: 2.3)

Leaving me without servlet-api for the compile scope.",,,,,,,,,,,,,,,,,MNG-2101,,,,,,,,,,,,,,,,,,,,MNG-1895,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i296u7:",9223372036854775807,,,,,,,,,,,,,,,,,,,"04/Aug/08 09:38;markh;This sounds similar to a question I posted to maven-dev:
http://www.nabble.com/Incomplete-classpath-due-to-scope-resolution-for-test-provided-td18591702.html;;;","18/Dec/08 05:16;brettporter;still seems to be an issue then;;;","11/Jan/10 21:21;brettporter;as of 2.0.9, Mark's example works.

I cannot reproduce the original poster's situation. If you still experience the problem, please create a small test project and reopen.;;;","23/Aug/10 13:33;bentmann;Reproduced and IT for MNG-1895 extended. Maven doesn't do anything special to resolve a conflict between provided and test scope, it just picks the scope from the nearest dependency.;;;","24/Aug/10 18:25;bentmann;Fixed by [r988749|http://svn.apache.org/viewvc?view=revision&revision=988749].;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Execution order of report plugins is arbitrary if inheritance is involved,MNG-3808,12794295,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,brettporter,dvicente72,dvicente72,03/Nov/06 01:48,06/Apr/15 01:19,03/Jan/22 13:13,06/Feb/09 04:47,2.0.9,,,,,2.0.11,2.1.0,,Inheritance and Interpolation,Plugins and Lifecycle,Sites & Reporting,,,32,,,,"I have created a maven 2 report : Dashboard report which aggregate all reports results in one report.

My plugin must be executed as the last one even if i can't bind the ""post-site"" phase or use the ""aggregator"" annotation.

I declare my report plugin as the last one in the reporting section of my POM.

When i run  mvn site on a single project, it's ok, my plugin has been executed as the last one.

The reports list has been ordered as declared in my  POM.

But if i run ""mvn site"" on a multi-project POM, the reports list isn't ordered as before.

I think, it's the same problem as http://jira.codehaus.org/browse/MNG-1994?page=all","maven 2.0.4, windows 2000",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MSITE-402,,,,,,MNG-1994,MSITE-402,,,,,,,,,,"29/Oct/08 00:01;carlos;MNG-3808.patch;https://issues.apache.org/jira/secure/attachment/12712796/MNG-3808.patch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,Patch,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28tjj:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"07/Nov/06 09:00;benoitx;We have exactly the same problem here....
Where does Maven determine the order for reports?;;;","23/Jul/07 12:36;skaze;Execution order of plugin's is something that has had quite a bit of discussion about but I'm afraid I have no specific URLs to let you catch up with the current thinking re this.;;;","12/Feb/08 14:23;dseki;I noticed something strange and made a test. I suspected plugins/reports were being executed in *alphabetic order* (first by groupId, then by artifactId) and so they are!

For example, I have a problem generating QALab reports in child projects, because QALab plugin was always executed before the reports that generate data. Then I noticed the reports were generated *almost* in the order I specify them (I use the above alphabetic order, expept for the QALab plugin, that is the last one). Then I imagined that maybe that happens because all my reports are from {{org.*}} groups while QALab belongs to {{net.*}}.

I tested it by creating a dummy plugin by renaming the groupId of a QALab report plugin to {{zzz.net.objectlab}} and deploying it to my local repository. Then I changed my root dependency to this new one and magic, *IT WORKS*.

I suspect someone is using a sorted collection (tree set, etc). Some display-beautifuly-list is messing things up.;;;","29/Oct/08 00:01;carlos;Patch against 2.1.x with unit test

mergeReportPluginLists behavior copied from mergePluginLists which was fixed in related issues
;;;","29/Oct/08 00:03;carlos;also for some reason, as commented in the unit test, the configurations of reports don't seem to be merged;;;","06/Feb/09 04:47;brettporter;applied;;;","27/Mar/09 07:24;lucadistefano;using 2.1 the order is still not respected, I define in the parent a couple of report plugins and when the site phase is executed on the child, the order is not respected;;;","29/Mar/09 20:48;paul4christ79;Carlos, was this patch properly applied to 2.1?;;;","29/Mar/09 20:52;brettporter;I applied it, and created an IT. Please compare your use case to the IT, and file a new issue against 2.1.0 with a sample project if there is a problem.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
System scope dependencies in parent POM cause validation warnings for most plugins and errors in assembly plugin,MNG-2626,12794545,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Duplicate,brettporter,topping,topping,20/Oct/06 19:34,01/Jul/09 12:44,03/Jan/22 13:13,01/Jul/09 12:44,2.0-alpha-1,,,,,,,,Errors,,,,,16,,,,"When system scope dependencies are in a parent POM and the systemPath for those variables contain a variable to be interpolated as a root path, maven throws off a lot of spurious warnings that the POM does not validate because system paths need to be absolute.  An example of this in a parent POM (where ${jboss.home} is defined in ~/.m2/settings.xml):

{code:xml}
		<dependency>
			<groupId>jboss</groupId>
			<artifactId>activation</artifactId>
			<version>4.0.4.GA</version>
			<scope>system</scope>
			<systemPath>${jboss.home}/server/default/lib/activation.jar</systemPath>
		</dependency>
{code}

In discussing this with John and Jason online, both apparently have generic implementations that can go in at some point, but this is something I would like to get into 2.0.5.  The patch is ~25 lines of new code with one replaced.  

It's marked as blocker because we use the assembly plugin, which fails the build on the validation problem where most other plugins just enumerate every system scope dependency.  For now, I will distribute the patched version around the company though :-)

thanks",,,,,,,,,,,,,,,,,MNG-2694,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-4148,,,,,MNG-4148,,,CONTINUUM-997,,,"02/Nov/06 13:23;topping;MNG-2626it.tgz;https://issues.apache.org/jira/secure/attachment/12712011/MNG-2626it.tgz","07/Nov/06 17:29;topping;interpolation-good.patch;https://issues.apache.org/jira/secure/attachment/12712211/interpolation-good.patch","20/Oct/06 19:34;topping;interpolation.patch;https://issues.apache.org/jira/secure/attachment/12711913/interpolation.patch",,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29dbb:",9223372036854775807,,,,,,,,,,,,,,,,,,,"20/Oct/06 19:35;topping;Hmm, that XML was supposed to be as follows:

{code:xml}
		<dependency>
			<groupId>jboss</groupId>
			<artifactId>activation</artifactId>
			<version>4.0.4.GA</version>
			<scope>system</scope>
			<systemPath>${jboss.home}/server/default/lib/activation.jar</systemPath>
		</dependency>
{code};;;","20/Oct/06 19:51;latchkey;Please accept this patch as soon as possible as I really don't feel like having to install Brian's hacked version on my box. Who knows what sort of crazy shit backdoors he included in it. ;-)

Thank you.

jon
;;;","02/Nov/06 13:23;topping;integration test basis;;;","07/Nov/06 17:29;topping;I LOVE PATCHES!  They are especially lovely when you don't realize for weeks that all of the files did not get included. grr...

File #3 is the correct patch.  The first patch does not have the projectBuilder.setSettings( request.getSettings() ); call in DefaultMaven.java;;;","22/Oct/07 21:25;brianf@infinity.nu;Can we get updated patches and ITs for this? I can try to get it into 2.0.8;;;","31/Jan/09 08:49;torbengee;Has this been fixed? I can't reproduce the problem; works perfectly with 2.0.11-SNAPSHOT.;;;","17/Apr/09 11:48;cimballi;On my side, the problem is still present.
I have a main POM, and one of the modules as a system dependency, and it generates the ""system-scoped dependency must specify an absolute path systemPath."" error.
The dependency is not present in the main POM, only in the POM of the module.

I tested with versions ""apache-maven-2.0.11-20090213.232410-1"" and ""apache-maven-2.1.0"".
;;;","17/Apr/09 13:14;bentmann;Cimballi, can you provide a test project to easily demonstrate your issue?;;;","17/Apr/09 13:51;cimballi;Well, sorry guys, it was a false alarm. I was using a property in the path and the property was not well setted. It works well with 2.0.9, 2.0.11 and 2.1.0.;;;","11/May/09 20:04;gabrielmoreira;Has any accepted solution for this bug or another related open bug?


Im trying to create these maven projects:
 - WebSphere 6.1 Runtime Libraries (using system scoped dependency path ${was61.home}/lib/XXXX.jar from developer machine settings.xml)
 - WebSphere 5.1 Runtime Libraries (using system scoped dependency path ${was51.home}/lib/YYYY.jar from developer machine settings.xml)
 - JBoss 4 Runtime Libraries ... (using system scoped dependency ...)
 - JBoss 5 Runtime Libraries ..(using system scoped dependency ...)
 - ""My Framework"" Libraries ... 
 - ""My Portal"" Runtime Libraries ... 

to use with our corporate applications:
  
  MyApp01 depends 'WebSphere 6.1 Runtime Libraries' and 'My Framework Libraries'
  MyApp02 depends 'WebSphere 5.1 Runtime Libraries' and 'My Portal Runtime Libraries'

but with maven (2.0 and 2.1)  we are getting error:

""system-scoped dependency must specify an absolute path systemPath.""  for every system scoped dependency on imported POM.xml

;;;","01/Jul/09 11:40;brettporter;Gabriel, do you have a test project? Like Torben, I can't reproduce using the original example provided.;;;","01/Jul/09 11:47;bentmann;Looks related to MNG-4148. When the parent POM is resolved from the local repo, the profiles from the settings are not applied, thereby leaving jboss.home undefined.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
mvn -U does NOT update/download the latest SNAPSHOT version,MNG-2601,12796461,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Duplicate,brettporter,jimisola,jimisola,11/Oct/06 08:37,03/Jan/07 02:07,03/Jan/22 13:13,03/Jan/07 02:07,2.0.4,,,,,,,,Command Line,,,,,7,,,,"I stumbled on this issue (again) with a new snapshot release of Apache's XMLRPC library (3.1-SNAPSHOT).
For background information see here: http://www.nabble.com/3.1-SNAPHOT-tf2411158.html

The bug is that mvn -U doesn't download the new 3.1-SNAPSHOT version when there is one. I had (actually we as in our team) manually have to delete the existing 3.1-SNAPSHOT in my local repository.
The xmlrpc library consists of three modules (common, server and client) this problems applies to all three but I've make an example using the server modules.

It can be found here: http://people.apache.org/maven-snapshot-repository/org/apache/xmlrpc/xmlrpc-server/3.1-SNAPSHOT/

The SNAPSHOTs generated does not use uniqueVersion (and filenames are hence not created with a timestamp). Is that necessary for mvn -U to work?

If that is the case then

 1) this needs to be documented better. It is NOT how one expects it to work. As a user I don't care how the SNAPSHOT was deployed - just that it is there.
 2) one should be able to force mvn to RE-download all SNAPSHOT (don't check for update or anything just download). perhaps mvn -F (force redownload of snapshots)",,,,,,,,,,,,,,,,,,,,,,,,MNG-1908,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28z6v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven 2 stumbels upon non ASCII characters in the value of a <localRepository> value in the $HOME/.m2/settings.xml,MNG-2593,12794517,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,hboutemy,bwellhoefer,bwellhoefer,06/Oct/06 08:31,17/Oct/07 16:17,03/Jan/22 13:13,17/Oct/07 16:17,2.0.4,,,,,2.0.8,,,Settings,,,,,0,,,,"I use a German Windows XP and my home folder is ""C:\Dokumente und Einstellungen\Wellhöfer"".

When my ""C:\Dokumente und Einstellungen\Wellhöfer\.m2\settings.xml"" settings file contains the line

    <localRepository>C:\Dokumente und Einstellungen\Wellhöfer\.m2</localRepository>

downloaded artifacts are not put under ""C:\Dokumente und Einstellungen\Wellhöfer\.m2"". Maven2 creates a folder ""C:\Dokumente und Einstellungen\WellhÃfer\.m2"" and puts the artifacts into this folder.

When I remove the line 

    <localRepository>C:\Dokumente und Einstellungen\Wellhöfer\.m2</localRepository>

from settings.xml the artifacts are put into the correct directory.
","Windows XP
Maven 2.0.4",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-2255,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29cwn:",9223372036854775807,,,,,,,,,,,,,,,,,,,"06/Oct/06 10:29;mkleint;these two are related. (MNG-2593 and MNG-449).
I suppose when the file contains the <?xml version=""1.0"" encoding=""ENCODING""?> header, the parser should use it. It seems to me that the current pull parsers read only UTF-8?

org.codehaus.plexus.util.xml.pull.MXParser:2651
            // TODO reconcile with setInput encodingName
            inputEncoding = newString(buf, encodingStart, encodingEnd - encodingStart);
;;;","06/Oct/06 10:46;mkleint;it's MEVENIDE-449, not MNG-449;;;","17/Oct/07 16:17;hboutemy;fixed in MNG-2254;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Plugins are merged incorrectly,MNG-2591,12797349,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,9gaqfk802@sneakemail.com,9gaqfk802@sneakemail.com,05/Oct/06 09:47,06/Apr/15 00:47,03/Jan/22 13:13,07/Jun/07 16:23,2.0.4,,,,,2.0.8,,,,,,,,0,,,,"This bug is similar to http://jira.codehaus.org/browse/MANTRUN-57;jsessionid=awtyLFBPEQN6vVmwu4 - the difference being the plugins are not correctly merged.

In the parent's POM, the following was defined:
{code:xml}<build>
  <pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <configuration>
          <downloadSources>true</downloadSources>
          <additionalBuildcommands>
            <buildcommand>
              parentBuildCommand
            </buildcommand>
          </additionalBuildcommands>
        </configuration>
      </plugin>
    </plugins>
  </pluginManagement>
</build>{code}


in the child's POM, the following was defined.
{code:xml}<build>
  <pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <configuration>
          <additionalBuildcommands>
            <buildcommand>
              childBuildCommand
            </buildcommand>
          </additionalBuildcommands>
        </configuration>
      </plugin>
    </plugins>
  </pluginManagement>
</build>{code}

I expect the effective POM to look like this:
{code:xml}<build>
  <pluginManagement>
    <plugins>
      <plugin>
        <artifactId>maven-eclipse-plugin</artifactId>
        <configuration>
          <additionalBuildcommands>
            <buildcommand>
              parentBuildCommand
            </buildcommand>
            <buildcommand>
              childBuildCommand
            </buildcommand>
          </additionalBuildcommands>
          <downloadSources>true</downloadSources>
        </configuration>
      </plugin>
    </plugins>
  </pluginManagement>
</build>{code}

Outside of the common problem of the <plugin> element being duplicated, here's the issue this bug is trying to address:
In the effective pom, the the <downloadSources> element was correctly merged, however, the <buildCommand> element was not. It seems like the merging only correctly happens down to a given level.

I noticed that http://jira.codehaus.org/browse/MNG-2297;jsessionid=awtyLFBPEQN6vVmwu4 has a patch attached, so this may be fixed in 2.0.5, I just wanted to raise the use case in case that patch did not address this specific problem.

I'm attaching the POMs needed to reproduce the problem and the effective POM for the child.",Windows XP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-732,,,,,,MNG-3836,MNGSITE-99,,,,,,,,,,"05/Oct/06 09:47;9gaqfk802@sneakemail.com;effective-child-pom.xml;https://issues.apache.org/jira/secure/attachment/12711912/effective-child-pom.xml","05/Oct/06 09:47;9gaqfk802@sneakemail.com;test-poms.zip;https://issues.apache.org/jira/secure/attachment/12712147/test-poms.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i299en:",9223372036854775807,,,,,,,,,,,,,,,,,,,"07/Jun/07 16:23;jdcasey;I'll add a new FAQ entry for this, but essentially it's doing the right thing by default. Since plugin configurations are handled as XML DOM instances by the core, there is an ever-present struggle between when to merge child elements' values with one another (when the child's <source> overrides the parent's, for example), and when you want to append new child elements to the existing list (as in the example above, or any time you have a list of items to aggregate during inheritance).

We've solved this problem using an attribute, 'combine.children'. You simply specify this attribute, with the value of ""append"" at the parent element where such aggregation should occur, and Maven will switch its merge behavior for that element's children.

NOTE: I fixed this behavior in Maven's trunk; previously, it had been putting the parent POM's sub-elements AFTER those of the child. This is inconsistent with other inheritance functions, so I've reversed the ordering to truly append the child's elements.

So, to recap:

parent:

{code:xml}
<configuration>
  <items>
      <item>one</item>
      <item>two</item>
  </items>
</configuration>
{code}

child:

{code:xml}
<configuration>
  <items combine.children=""append"">
    <item>three</item>
  </items>
</configuration>
{code}

result:

{code:xml}
<configuration>
  <items>
    <item>one</item>
    <item>two</item>
    <item>three</item>
  </items>
</configuration>
{code}

(If you're using an earlier version of Maven than the present trunk, order will be three, one, two.)

Revision IDs affecting this change are:

plexus-utils: revId 6546
maven-project: revId 513038

I also added a couple unit tests to org.apache.maven.project.ModelUtilsTest in maven-project/src/test/java to cover these cases.
;;;","07/Jun/07 16:45;jdcasey;See http://docs.codehaus.org/display/MAVENUSER/FAQs-1#FAQs-1-HowdoImergealistofconfigurationitemsinaparentPOMwiththoseinachildPOM%3F;;;","07/Jun/07 17:01;jdcasey;sorry, that maven-project revId should be 545315.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UNC in MAVEN_HOME not working,MNG-2580,12796470,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Duplicate,bentmann,remcoq,remcoq,28/Sep/06 10:46,05/Jan/10 11:11,03/Jan/22 13:13,05/Jan/10 11:11,2.0.4,,,,,,,,Command Line,,,,,0,,,,"Maven2 is installed in a corporate server : SERVER
From my computer, this installation is accesible on a network share : \\SERVER\MAVEN2

From a command line I setup MAVEN_HOME with this UNC:
> set MAVEN_HOME=\\SERVER\MAVEN2
And put it in the PATH
> set PATH=%MAVEN_HOME%\bin;%PATH%
When I try to build any projects, maven is unable to acces my global settings which is stored in %MAVEN_HOME%\conf\settings.xml

But when I mount a network share to this UNC:
> net use Z: \\SERVER\MAVEN2
...Setup MAVEN_HOME ...
> set MAVEN_HOME=Z:\
...And put it in the PATH ...
> set PATH=%MAVEN_HOME%\bin;%PATH%
The global settings.xml is read.

This useCase seems OK with Maven 1.


mvn -X doesn't give too any informations about the final %MAVEN_HOME%\conf which is used.
But it prints the plugin-registry.xml locations which are based on the %MAVEN_HOME% 
In this case \\SERVER\MAVEN2 is badly transformed in C:\SERVER\MAVEN2 :

>set MAVEN_HOME=\\frmlefsi20\inet_dev\DEVPLATFORM\maven-2.0.4
>mvn clean -X
(...)
[DEBUG] Building Maven global-level plugin registry from: 'C:\frmlefsi20\inet_dev\DEVPLATFORM\maven-2.0.4\bin\..\conf\plugin-registry.xml'
(...)

Thanks for your support and this great tool !

",Windows XP,,,,,,,,,,,,,,,,,,,,,,,MNG-2662,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29a4n:",9223372036854775807,,,,,,,,,,,,,,,,,,,"27/Dec/09 15:13;jvanzyl;Should be fixed. Validate.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
plugin version aren't taken from pluginManagement in a sub-sub-modules,MNG-2565,12794268,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Cannot Reproduce,brettporter,evenisse,evenisse,18/Sep/06 04:40,18/Dec/08 05:13,03/Jan/22 13:13,18/Dec/08 05:13,2.0.5,,,,,,,,Inheritance and Interpolation,,,,,0,,,,It works only for the first inheritence level,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28vd3:",9223372036854775807,,,,,,,,,,,,,,,,,,,"20/Dec/06 09:58;kenney;I didn't find that - running mvn eclipse:eclipse in maven-trunks/continuum works,
but running mvn eclipse:eclipse in maven-trunks (where I added a grouping pom with <module>continuum</module)
yields this:

{noformat}
[INFO] Building Continuum Model
[INFO]    task-segment: [eclipse:clean, eclipse:eclipse]
[INFO] ----------------------------------------------------------------------------
[INFO] [eclipse:clean]
[INFO] Deleting .project file...
[INFO] Deleting .classpath file...
[INFO] Deleting .wtpmodules file...
[INFO] Deleting .component file...
[INFO] Deleting org.eclipse.wst.common.project.facet.core.xml file...
[INFO] Preparing eclipse:eclipse
Downloading: http://repo1.maven.org/maven2/org/codehaus/modello/modello-maven-plugin/1.0-alpha-13/modello-maven-plugin-1.0-alpha-13.pom
2K downloaded
Downloading: http://repo1.maven.org/maven2/org/codehaus/modello/modello/1.0-alpha-13/modello-1.0-alpha-13.pom
9K downloaded
Downloading: http://repo1.maven.org/maven2/org/codehaus/modello/modello-maven-plugin/1.0-alpha-13/modello-maven-plugin-1.0-alpha-13.jar
13K downloaded
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Goal 'jpox-metadata-class' was specified in an execution, but not found in plugin org.codehaus.modello:modello-maven-plugin:1.0-alpha-8
{noformat}

Note the alpha-13 is downloaded but alpha-8 is used.

This is because the wrong parent-pom is used from the local repo. When i remove continuum-parent from the local repo,
and run from:

* continuum:  works.
* continuum/continuum-security: (leaf) works
* continuum/continuum-notifiers: (packaging pom, has modules) fails during scanning for projects; cannot find continuum-parent (for one of continuum/continuum-notifiers' children, but the error doesn't say which one)
* . (maven-trunks, packaging pom, modules): reactor construction works, but build fails on eclipse:eclipse while creating a forked lifecycle for generate-sources (i think, logs don't say).


;;;","20/Dec/06 10:23;kenney;I explicitly set the version for modello to 1.0-alpha-13 in the continuum-model/pom.xml, and it still
used 1.0-alpha-8.

I think this is a different issue alltogether: there can be no 2 different plugin versions used in 1 reactor.
If some other project uses an older version of a plugin, then that one is used on the second instance too.
That would explain why running from top level doesn't work - there's probably another project under top level
that uses another version of the plugin.

my 3rd point above is another issue though.;;;","16/Jun/07 16:50;jvanzyl;Is this an issue? Or can this be closed?;;;","19/Jun/07 14:57;evenisse;I think we can close it, I can't reproduce it with 2.0.6.
I don't have tested the issue described by kenney;;;","18/Dec/08 05:13;brettporter;the multiple-versions-of-a-plugin question is addressed in other issues;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When building a multiproject build, maven2 may incorrectly store output files in the repository with a wrong extension. It does not do this if the project is built on its own. ",MNG-2534,12794469,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Duplicate,brettporter,ojauze,ojauze,29/Aug/06 10:07,29/Aug/06 19:34,03/Jan/22 13:13,29/Aug/06 19:34,2.0.4,,,,,,,,,,,,,0,,,,"I have created two new maven plugins to customize the way war et ejb projects are built (i.e. maven 2 default plugins are not compliant with my requirements). In order to use these custom plugins, I have also creating two new packaging (named xnet-ejb and xnet-war) but output files I want to store in the maven repository must have .war and .jar extensions. So I have added plexus components descriptor in order to change the extension (by default, the role-hint will be the extension of the file). 

In a multiproject build, if I use only one of my plugin, it works well; the file install in the repository has the correct extension. But if I use both plugin, only one works and for project manage by the other one plugin, the file install in the repository will have a wrong extension (i.e. the role-hint). 

This problem seems to be known (see http://cargo.codehaus.org/Merging+WAR+files) but I haven't found any fix.

Thanks for your help

Attached are my both plugin jar files.",Windows XP SP2,,,,,,,,,,,,,,,,,,,,,,,MNG-1682,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Aug/06 10:08;ojauze;log.txt;https://issues.apache.org/jira/secure/attachment/12711829/log.txt","29/Aug/06 10:09;ojauze;plugins.zip;https://issues.apache.org/jira/secure/attachment/12711707/plugins.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i291en:",9223372036854775807,,,,,,,,,,,,,,,,,,,"29/Aug/06 10:08;ojauze;Log when I get the error;;;","29/Aug/06 10:09;ojauze;Custom maven plugins jars;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SNAPSHOT dependencies aren't found when repository has 'release' disabled and a version range is used,MNG-2525,12797551,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Duplicate,brettporter,nbeyer,nbeyer,22/Aug/06 22:37,13/Aug/09 05:33,03/Jan/22 13:13,18/Dec/08 05:18,2.0.4,,,,,,,,Dependencies,,,,,5,,,,"When a repository is configured (POM, profiles, etc), 'releases' is disabled, 'snapshots' is enabled and a dependency uses a version range, the dependency fails to resolve. The dependency is found when an explicit version is used. The following can be used to recreate the issue.

Setup the maven snapshot repository in an active profile like this:

        <repository>
          <id>apache.snapshots</id>
          <name>Maven Snapshots</name>
          <url>http://people.apache.org/maven-snapshot-repository</url>
          <releases>
            <enabled>false</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </repository>

Check out the maven-install-plugin at revision 427494 (or any revision or other plugin that has a dependency that's a SNAPSHOT). Run a build (mvn package) and all dependencies should download. Modify the dependency in the POM to use a version range, instead of an explict version. For example, change the version ""1.0-SNAPSHOT"" to ""[0,1)"", which includes the same version. Run another build (mvn package) and the dependency will fail to download.","Windows XP, Sun JDK 5.0 Update 7",,,,,,,,,,,,,,,,,,,,,,,MNG-2994,,,,,,,,,,,,,,,,,,,MNG-3376,MNG-2126,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29cmn:",9223372036854775807,,,,,,,,,,,,,,,,,,,"22/Aug/06 22:47;brettporter;I'm sure that this has been filed elsewhere - would be worth checking for dupes.
;;;","22/Aug/06 22:55;nbeyer;I scanned and searched the issues under ""Dependencies"" and didn't find anything that seemed similar. I'll do another search and see if I find something.;;;","22/Aug/06 23:01;nbeyer;MNG-2126 seems similiar and there's a comment about it being a duplicate, but I didn't see any indication of the original issue.;;;","30/Jun/08 23:36;john-medio;We have a similar problem - this is the only issue I could find that mostly describes the symptoms we're seeing:

* We have internal corporate snapshot and release repositories for our internal projects.  The snapshot repository only contains snapshots, and the release repository only contains releases.  Both repositories contain the same internal projects (groupIds and artifactIds).
* In our default profile, the release repository is listed before the snapshot repository - hence the release repository is always searched first.
* Project B depends on project A like so:
{code:xml}
<dependency>
  <artifactId>A</artifactId>
  <groupId>com.company</groupId>
  <version>[1.7-SNAPSHOT,)</version>
</dependency>
{code}
* Project C depends on project B (normal non-range dependency):
{code:xml}
<dependency>
  <artifactId>B</artifactId>
  <groupId>com.company</groupId>
  <version>1.2-SNAPSHOT</version>
</dependency>
{code}

# Project B fails to build when {{A:1.7-SNAPSHOT}} is not in the local repository.  The error message is:
{noformat}
Couldn't find a version in [1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6] to match range [1
.7-SNAPSHOT,)
  com.company:A:jar:null

from the specified remote repositories:
  internal.snapshots (http://build01-hq:8082/snapshots),
  central (http://build01-hq:8080/archiva/repository/proxy),
  internal.release (http://build01-hq:8082/releases)
{noformat}
# Project C fails to build when project A is not in the local repository.  The error message is the same.
# Both (1) and (2) work correctly when {{A:1.7-SNAPSHOT}} is in the local repository.
# This result for (2) doesn't change even if project C defines an explicit dependency on A that matches the range restriction, like:
{code:xml}
<dependency>
  <artifactId>A</artifactId>
  <groupId>com.company</groupId>
  <version>1.7-SNAPSHOT</version>
</dependency>
{code}

* It appears that the metadata in our snapshot repository is never searched when the range is resolved.
* If the version range is changed to a release version, the range is correctly resolved.  In other words, if project B's dependency on project A is changed to:
{code:xml}
<dependency>
  <artifactId>A</artifactId>
  <groupId>com.company</groupId>
  <version>[1.6,)</version>
</dependency>
{code}
it builds correctly using {{A:1.6}} - but obviously the fixes in 1.7-SNAPSHOT are missing.;;;","21/Oct/08 06:21;keesvandieren;Ranges should not lead to snapshot dependencies, unless a snapshot is explicit specified in the version range.
See: http://docs.codehaus.org/display/MAVEN/Dependency+Mediation+and+Conflict+Resolution
Quote: ""Resolution of dependency ranges should not resolve to a snapshot (development version) unless it is included as an explicit boundary"";;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
${project.version} evaluated to timestamped version if referring to SNAPSHOT,MNG-2486,12794446,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,bentmann,jdcasey,jdcasey,04/Aug/06 13:31,06/Apr/15 01:36,03/Jan/22 13:13,18/Mar/10 08:23,2.0.4,2.0.5,2.0.6,2.0.7,3.0-alpha-1,2.0.5,,,Dependencies,Inheritance and Interpolation,POM,,,12,,,,"when projects specify dependencyManagement sections with a shorthand version notation using the current project version (using ${project.version}) the version resolved will be that of the POM in which the dependencyManagement section is specified. If this POM is a snapshot, these dependency specifications will get the timestamp/buildnumber of that POM, instead of the actual one used when the dependency it references gets deployed.

We should look at strategies for limiting or eliminating this practice, or else (somehow) pulling the real timestamp/buildnumber for that artifact from the reactor...in order to make these deps transitively resolvable for users.",,,,,,,,,,,,,,,,,MNG-2647,MNG-2796,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,SUREFIRE-218,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29dbz:",9223372036854775807,,,,,,,,,,,,,,,,,,,"06/Aug/06 19:26;brettporter;is this a duplicate of MNG-2339?;;;","11/Sep/06 14:06;brianf@infinity.nu;doht. I got burned on this one. Isn't it possible when a pom is deployed to resolve the property to the actual version? Then it would be safe to use the ${project.version} in dependencies.;;;","05/Nov/06 02:00;olamy;Due to MNG-2651 ?
This issue will be fix with 2.0.5 ?;;;","16/Jun/07 04:10;kenney;This issue deals with the fact that whenever ${project.version} or ${pom.version} is evaluated to a POM <version> tag (be it parent,
or project, present in a dependency or dependencyManagement or anywhere else in the POM),
and that version is a SNAPSHOT version, then the timestamped version is used, instead of the literal string.

This causes problems with multimodule builds that share versions but aren't always deployed as a whole.
Even if they are deployed as a whole, this could cause problems since the timestamps might not be the same for all artifacts.;;;","06/Aug/07 04:28;jason@planet57.com;Copying my comments from MNG-2796

IMO, maven should *never* change the value of ${pom.version} ... if a pom says:

{code}
<project>
    ...
    <version>1.2-SNAPSHOT</version>
    ...
</project>
{code}

Then ${pom.version} should *always* resolve to {{1.2-SNAPSHOT}}. If you need to know what the _timestamp-build_ version is then I suggest adding ${pom.effectiveVersion} which can change dynamically.

Also, I can hear this coming... ""why don't you use <dependencyManagement>..."". This feature of Maven is great for managing _external_ dependencies, but for internal module management it becomes unmanageable quickly.

For Geronimo, we have ~200+ modules and to enumerate each one of those in a <dependencyManagement> is unruly, and tends to become unmaintained quickly. Its much easier to use <version>${pom.version}</version> in poms when defining dependencies sibling modules.

But, as noted by David, this won't work when dealing with snapshots as when deploying a snapshot, the module being deployed will have its ${pom.version} changed magically to the _timestamp-build_ version which is going to produce invalid dependencies, since the dependencies using <version>${pom.version}</version> now have invalid versions (using the deployed modules _timestamp-build_ version not the _timestamp-build_ version of the dependency.

I really think the best way to handle this is to never change the value of ${pom.version} and introduce a ${pom.effectiveVersion} which will dynamically change.

 * * *

I'd really, really really really, really like to see this get fixed sooner rather than later.  I think a pom.version that doesn't change and a pom.effectiveVersion that does change (to reflect the SNAPSHOT's timestamp-buildnumber) would be a fine solution... *hint* *hint*

;;;","19/Aug/08 11:26;wconroy;Are there any known workarounds for this?  We have a pretty large project that is running into this issue often.  We are using maven-2.0.9.  ;;;","30/Dec/09 13:56;brianf@infinity.nu;I'm pretty sure this is already fixed even in 2.x.;;;","18/Mar/10 08:23;bentmann;This is already fixed in 2.0.5. The reason this might have shown up with later versions as well is that the actual issue is caused by badly deployed POMs, which would make newer Maven versions fail as well.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
resursive build - modules using always using pom.xml,MNG-2466,12794435,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Won't Fix,,jaganp76,jaganp76,27/Jul/06 12:27,17/Jun/07 18:48,03/Jan/22 13:13,17/Jun/07 18:48,,,,,,,,,POM,,,,,1,,,,"
When we run a multi project build with an alternative pom file, the modules its still using pom.xml.
Shouldn't the modules use the same alternative pom file which we passed. 

Could someone fix at the earliest as its a showstopper for our development.

Thanks
",software ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28x0n:",9223372036854775807,,,,,,,,,,,,,,,,,,,"16/Jun/07 16:32;jvanzyl;Won't fix. You should use profiles to use different sets of dependencies and behavior. Encouraging multipe hierarchies of POMs is a bad practice.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven looks for snapshots in offline mode,MNG-2433,12794144,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Duplicate,bentmann,cziegeler,cziegeler,11/Jul/06 07:59,16/Jul/09 19:17,03/Jan/22 13:13,27/Oct/08 18:05,2.0.5,,,,,,,,Dependencies,,,,,6,,,,"It seems that sometimes Maven2 is looking for snapshots in offline mode (this happens for example in the Cocoon project). here is an output that might help:
:\dev\workspace\cocoon-2.2\core\cocoon-webapp>mvn -o -Dmaven.test.skip=true coc
oon:deploy
[INFO]
NOTE: Maven is executing in offline mode. Any artifacts not already in your loca
l
repository will be inaccessible.

[INFO] Scanning for projects...
[INFO] Searching repository for plugin with prefix: 'cocoon'.
[INFO] org.apache.maven.plugins: checking for updates from snapshots
[INFO] org.apache.maven.plugins: checking for updates from mortbay-repo
[INFO] org.codehaus.mojo: checking for updates from snapshots
[INFO] org.codehaus.mojo: checking for updates from mortbay-repo
[INFO] snapshot org.apache.cocoon:cocoon-deployer-plugin:1.0.0-SNAPSHOT: checkin
g for updates from snapshots
[INFO] snapshot org.apache.cocoon:cocoon-deployer-plugin:1.0.0-SNAPSHOT: checkin
g for updates from mortbay-repo
[INFO] snapshot org.apache.cocoon:cocoon-deployer-plugin:1.0.0-SNAPSHOT: checkin
g for updates from central
[INFO] snapshot org.apache.cocoon:cocoon-deployer-plugin:1.0.0-SNAPSHOT: checkin
g for updates from apache.snapshot
[INFO] snapshot org.apache.cocoon:cocoon-deployer-plugin:1.0.0-SNAPSHOT: checkin
g for updates from apache-cvs
[INFO] snapshot org.apache.cocoon:cocoon-deployer-plugin:1.0.0-SNAPSHOT: checkin
g for updates from apache.snapshots
[INFO] snapshot org.apache.cocoon:cocoon-deployer:1-SNAPSHOT: checking for updat
es from snapshots
[INFO] snapshot org.apache.cocoon:cocoon-deployer:1-SNAPSHOT: checking for updat
es from mortbay-repo
[INFO] snapshot org.apache.cocoon:cocoon-deployer:1-SNAPSHOT: checking for updat
es from central
[INFO] snapshot org.apache.cocoon:cocoon-deployer:1-SNAPSHOT: checking for updat
es from apache.snapshot
[INFO] snapshot org.apache.cocoon:cocoon-deployer:1-SNAPSHOT: checking for updat
es from apache-cvs
[INFO] snapshot org.apache.cocoon:cocoon-deployer:1-SNAPSHOT: checking for updat
es from apache.snapshots
[INFO] snapshot org.apache.cocoon:cocoon-tools-modules:1-SNAPSHOT: checking for
updates from snapshots
[INFO] snapshot org.apache.cocoon:cocoon-tools-modules:1-SNAPSHOT: checking for
updates from mortbay-repo
[INFO] snapshot org.apache.cocoon:cocoon-tools-modules:1-SNAPSHOT: checking for
updates from central
[INFO] snapshot org.apache.cocoon:cocoon-tools-modules:1-SNAPSHOT: checking for
updates from apache.snapshot
[INFO] snapshot org.apache.cocoon:cocoon-tools-modules:1-SNAPSHOT: checking for
updates from apache-cvs
[INFO] snapshot org.apache.cocoon:cocoon-tools-modules:1-SNAPSHOT: checking for
updates from apache.snapshots
[INFO] snapshot org.apache.cocoon:cocoon:1-SNAPSHOT: checking for updates from s
napshots
[INFO] snapshot org.apache.cocoon:cocoon:1-SNAPSHOT: checking for updates from m
ortbay-repo
[INFO] snapshot org.apache.cocoon:cocoon:1-SNAPSHOT: checking for updates from c
entral
[INFO] snapshot org.apache.cocoon:cocoon:1-SNAPSHOT: checking for updates from a
pache.snapshot
[INFO] snapshot org.apache.cocoon:cocoon:1-SNAPSHOT: checking for updates from a
pache-cvs
[INFO] snapshot org.apache.cocoon:cocoon:1-SNAPSHOT: checking for updates from a
pache.snapshots",,,,,,,,,,,,,,,,,MNG-3593,MNG-3314,,,,,,,,,,,,,,,,,,,,,,,,,MNG-2883,MNG-3628,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i2994v:",9223372036854775807,,,,,,,,,,,,,,,,,,,"29/Nov/06 09:15;davsva;Does fail also when offline set to true in settings.xml (which is kind of critical for us behind firewalls...):

[INFO] artifact org.apache.maven.plugins:maven-scm-plugin: checking for updates from central

[WARNING] repository metadata for: 'artifact org.apache.maven.plugins:maven-scm-plugin' could not be retrieved from repository: central due to an error: Error transferring file
[INFO] Repository 'central' will be blacklisted
;;;","14/Mar/07 16:32;jvanzyl;I'm  not seeing this locally with a test and I'm using TPIMon on Windows and truss in Linux and see no network activity. Torsten, you still seeing this?

;;;","18/Mar/07 17:55;jvanzyl;I cannot reproduce this at all on Linux, Windows, or MAC so I'll give this a day or two and then consider it closed.;;;","18/Mar/07 19:49;jvanzyl;There is no network traffic, it's a logging problem. Created MNG-2881.;;;","14/Jun/07 20:31;alexander.klimetschek;I often see the problem that Maven actually *does* check for new snapshot POMs in offline mode. It does not download artifacts though.

Once I got the problem (running Maven 2.0.5 or 2.0.6) that I ran mvn -o install, it downloaded new snapshot POMs, but then failed because it ""could"" not download the artifacts referenced by the new POMs.

Maven should not download anything in offline mode.;;;","10/Mar/08 02:16;joerg.hohwiller@sdm.de;can someone reopen this issue?

I am using maven 2.0.8
mvn -o site

...
[INFO] Error building POM (may not be this project's POM).
Project ID: org.codehaus.mojo:cobertura-maven-plugin
Reason: POM 'org.codehaus.mojo:cobertura-maven-plugin' not found in repository: System is offline.
  org.codehaus.mojo:cobertura-maven-plugin:pom:2.2-SNAPSHOT
 for project org.codehaus.mojo:cobertura-maven-plugin;;;","10/Mar/08 10:42;paul4christ79;Do you not have 2.2-SNAPSHOT already present on your system? I imagine that if it isn't there the first time, it cannot possibly build with a plugin that's absent. That is different than trying to update a plugin that already is installed.;;;","22/Mar/08 04:35;joerg.hohwiller@sdm.de;Yes, I do!
I run ""mvn site"" online and it works fine. Then I call ""mvn -o site"" and it fails!;;;","29/Mar/08 06:16;joerg.hohwiller@sdm.de;When I am offline and dont tell maven (omitt -o): ""mvn site"" proceeds past this point but fails with
...
[ERROR] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] The skin does not exist: Unable to determine the release version

Try downloading the file manually from the project website.

Then, install it using the command:
    mvn install:install-file -DgroupId=org.apache.maven.skins -DartifactId=maven-classic-skin -Dvers
ion=RELEASE -Dpackaging=jar -Dfile=/path/to/file

Alternatively, if you host your own repository you can deploy the file there:
    mvn deploy:deploy-file -DgroupId=org.apache.maven.skins -DartifactId=maven-classic-skin -Dversio
n=RELEASE -Dpackaging=jar -Dfile=/path/to/file -Durl=[url] -DrepositoryId=[id]


  org.apache.maven.skins:maven-classic-skin:jar:RELEASE;;;","23/May/08 03:14;chawax;I have the same problem with Maven 2.0.8. It happened to me while doing a demonstration, so I had to improvise, not very comfortable lol
I ran maven with -o option because I had no network at the place where I did the demo, so I did not want to check artifacts. All artifacts are in my local repository so there should have been no problem ... but it tried to download artifacts and I can't understand why.

I had the following error message :

[INFO] ------------------------------------------------------------------------
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Failed to resolve artifact.

Missing:
----------
1) org.andromda.profiles.uml14:andromda-profile-service:xml.zip:3.3-SNAPSHOT

  Try downloading the file manually from the project website.

  Then, install it using the command: 
      mvn install:install-file -DgroupId=org.andromda.profiles.uml14 -DartifactId=andromda-profile-service -Dversion=3.3-SNAPSHOT -Dpackaging=xml.zip -Dfile=/path/to/file

  Alternatively, if you host your own repository you can deploy the file there: 
      mvn deploy:deploy-file -DgroupId=org.andromda.profiles.uml14 -DartifactId=andromda-profile-service -Dversion=3.3-SNAPSHOT -Dpackaging=xml.zip -Dfile=/path/to/file -Durl=[url] -DrepositoryId=[id]

  Path to dependency: 
  	1) fr.xxx.t4:t4-core-mda:pom:1.0-SNAPSHOT
  	2) org.andromda.cartridges:andromda-ejb3-cartridge:jar:1.0-SNAPSHOT
  	3) org.andromda.profiles.uml14:andromda-profile:xml.zip:3.3-SNAPSHOT
  	4) org.andromda.profiles.uml14:andromda-profile-service:xml.zip:3.3-SNAPSHOT

----------
1 required artifact is missing.

for artifact: 
  fr.xxx.t4:t4-core-mda:pom:1.0-SNAPSHOT

from the specified remote repositories:
  central (http://10.11.4.108:8080/artifactory/repo),
  andromda (http://10.11.4.108:8080/artifactory/repo),
  snapshots (http://10.11.4.108:8080/artifactory/repo)


NOTE: Maven is executing in offline mode. Any artifacts not already in your local
repository will be inaccessible.

To help to reproduce the problem, note I use artifactory as a repository. I have the following config in pom.xml :

    <repositories>
          <repository>
                <id>andromda</id>
                <url>http://10.11.4.108:8080/artifactory/repo</url>
                <snapshots>
                	<enabled>true</enabled>
                	<updatePolicy>daily</updatePolicy>
                </snapshots>
          </repository>
          <repository>
                <id>central</id>
                <url>http://10.11.4.108:8080/artifactory/repo</url>
                <snapshots>
                	<enabled>false</enabled>
                </snapshots>
          </repository>
          <repository>
                <id>snapshots</id>
                <url>http://10.11.4.108:8080/artifactory/repo</url>
                <releases>
                	<enabled>true</enabled>
                	<updatePolicy>daily</updatePolicy>
                </releases>
          </repository>
    </repositories>
    <pluginRepositories>
           <pluginRepository>
                <id>andromda</id>
                <url>http://10.11.4.108:8080/artifactory/repo</url>
                <snapshots>
                      <enabled>false</enabled>
                </snapshots>
          </pluginRepository>
          <pluginRepository>
                <id>central</id>
                <url>http://10.11.4.108:8080/artifactory/repo</url>
                <snapshots>
                      <enabled>false</enabled>
                </snapshots>
          </pluginRepository>
          <pluginRepository>
                <id>snapshots</id>
                <url>http://10.11.4.108:8080/artifactory/repo</url>
                <releases>
                      <enabled>false</enabled>
                </releases>
          </pluginRepository>
    </pluginRepositories>

I tried with updatePolicy as ""weekly"" or ""never"" but it changed nothing.

I also have the following mirrors in maven settings.xml, but removing them changed nothing :

<mirror>
<id>andromda</id>
<mirrorOf>andromda</mirrorOf>
<name>AndroMDA Repository</name>
<url>http://10.11.4.108:8080/artifactory/repo</url>
</mirror>

<mirror>
<id>apache-incubator</id>
<mirrorOf>apache-incubator</mirrorOf>
<name>Apache Incubator Repository</name>
<url>http://10.11.4.108:8080/artifactory/repo</url>
</mirror>

I really think there is a bug somewhere, as we run maven with -o option, it should not try to download artifacts. Maybe a problem with transitive dependencies ?;;;","28/May/08 03:21;abendt;we're also seeing the problem with maven 2.0.9. so please re-open the issue!
Note we're using a company wide maven repository (artifactory)

$ mvn --version
Maven version: 2.0.9
Java version: 1.5.0_13
OS name: ""mac os x"" version: ""10.5.2"" arch: ""i386"" Family: ""unix""

$ mvn -o test
[INFO] 
NOTE: Maven is executing in offline mode. Any artifacts not already in your local
repository will be inaccessible.

[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] Building Embedded JBoss Tests
[INFO]    task-segment: [test]
[INFO] ------------------------------------------------------------------------
[INFO] [resources:resources]
[INFO] Using default encoding to copy filtered resources.
[INFO] [compiler:compile]
[INFO] Nothing to compile - all classes are up to date
[INFO] [resources:testResources]
[INFO] Using default encoding to copy filtered resources.
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Failed to resolve artifact.

Missing:
----------
1) org.jboss.embedded:jboss-embedded:jar:beta3-SNAPSHOT

  Try downloading the file manually from the project website.

  Then, install it using the command: 
      mvn install:install-file -DgroupId=org.jboss.embedded -DartifactId=jboss-embedded -Dversion=beta3-SNAPSHOT -Dpackaging=jar -Dfile=/path/to/file

  Alternatively, if you host your own repository you can deploy the file there: 
      mvn deploy:deploy-file -DgroupId=org.jboss.embedded -DartifactId=jboss-embedded -Dversion=beta3-SNAPSHOT -Dpackaging=jar -Dfile=/path/to/file -Durl=[url] -DrepositoryId=[id]

  Path to dependency: 
  	1) akquinet:embedded-tests:jar:1.7-SNAPSHOT
  	2) org.jboss.embedded:jboss-embedded-all:jar:beta3
  	3) org.jboss.embedded:jboss-embedded:jar:beta3-SNAPSHOT

----------
1 required artifact is missing.

for artifact: 
  akquinet:embedded-tests:jar:1.7-SNAPSHOT

from the specified remote repositories:
  akquinet (http://192.168.1.1:8080/artifactory/akquinet),
  akquinet.snapshots (http://192.168.1.1:8080/artifactory/libs-snapshots)


NOTE: Maven is executing in offline mode. Any artifacts not already in your local
repository will be inaccessible.


[INFO] ------------------------------------------------------------------------
[INFO] For more information, run Maven with the -e switch
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 2 seconds
[INFO] Finished at: Wed May 28 10:13:47 CEST 2008
[INFO] Final Memory: 7M/13M
[INFO] ------------------------------------------------------------------------


the artifact maven complains about 
seems to be existing in the local repository:

$ ls ~/.m2/repository/org/jboss/embedded/jboss-embedded/beta3-SNAPSHOT/
jboss-embedded-beta3-SNAPSHOT.jar       
jboss-embedded-beta3-SNAPSHOT.pom.sha1        
maven-metadata-repository.jboss.org.xml
jboss-embedded-beta3-SNAPSHOT.jar.sha1  
maven-metadata-cellactive.snapshots.xml       
maven-metadata-snapshots.jboss.org.xml
jboss-embedded-beta3-SNAPSHOT.pom       
maven-metadata-cellactive.snapshots.xml.sha1  
maven-metadata-snapshots.jboss.org.xml.sha1
;;;","03/Jun/08 00:54;jmbeas;We have the same problem here. We are migrating from an old environment (with direct connection to the central repositories) to a new one that uses artifactory to proxy all the repositories. We were using Maven 2.0.7 in the old environment and Maven 2.0.8 in the new one. By the way, all the default plugins appear in:

http://svn.apache.org/viewvc/maven/components/tags/maven-2.0.9/maven-project/src/main/resources/org/apache/maven/project/pom-4.0.0.xml?view=markup

but not in 

http://svn.apache.org/viewvc/maven/components/tags/maven-2.0.8/maven-project/src/main/resources/org/apache/maven/project/pom-4.0.0.xml?view=markup

Please, reopen the bug.

Best regards,
JMB
;;;","13/Jun/08 18:55;phillycheese;I have maven version 2.0.9 and I am having the same issue.

doing ""mvn install -Dmaven.test.skip"" works fine, but when I use
""mvn install -Dmaven.test.skip -o"" (the offline mode) it doesn't work and I double checked that the jar is in my local repo!
It's painfully slow to do a build trying to download all the dependencies and POM files everytime!;;;","19/Sep/08 11:14;francisoud;I have the same issue with apache rampart and it's related to some invalid version describe in the pom.xml (https://issues.apache.org/jira/browse/RAMPART-195)

Might be the same problem here.

as a side note: I don't think maven handle this kind of situation gracefully :(;;;","27/Oct/08 18:04;bentmann;IT for MNG-3314 confirms issue was still existent.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"[PATCH] Maven fresh checkout does not compile (JavaMojoDescriptorExtractorTest error, source2 folder)",MNG-2427,12796586,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Cannot Reproduce,,simonegianni,simonegianni,09/Jul/06 08:22,05/Apr/15 14:53,03/Jan/22 13:13,31/May/07 22:09,2.0.5,,,,,,,,,,,,,0,,,,"The JavaMojoDescriptorExtractorTest contains an import for source2.MyBla . Sources for this classes are in the src/test/resources but not in src/test/java, so the test does not compile and gives the following error :

[INFO] ----------------------------------------------------------------------------
[INFO] Building Maven Plugin Tools for Java
[INFO]    task-segment: [install]
[INFO] ----------------------------------------------------------------------------
[INFO] [resources:resources]
[INFO] Using default encoding to copy filtered resources.
[INFO] [compiler:compile]
[INFO] Nothing to compile - all classes are up to date
[INFO] [resources:testResources]
[INFO] Using default encoding to copy filtered resources.
[INFO] [compiler:testCompile]
Compiling 1 source file to /home/sym/workspaces/Apache/maven/components/maven-plugin-tools/maven-plugin-tools-java/target/test-classes
[INFO] ----------------------------------------------------------------------------
[ERROR] BUILD FAILURE
[INFO] ----------------------------------------------------------------------------
[INFO] Compilation failure
 
/home/sym/workspaces/Apache/maven/components/maven-plugin-tools/maven-plugin-tools-java/src/test/java/org/apache/maven/tools/plugin/extractor/java/JavaMojoDescriptorExtractorTest.java:[30,19] package source2.sub does not exist
 
/home/sym/workspaces/Apache/maven/components/maven-plugin-tools/maven-plugin-tools-java/src/test/java/org/apache/maven/tools/plugin/extractor/java/JavaMojoDescriptorExtractorTest.java:[94,22] cannot resolve symbol
symbol  : class MyBla
location: class org.apache.maven.tools.plugin.extractor.java.JavaMojoDescriptorExtractorTest

Copying the source2 directory to src/test/java solved the problem, but I'm not sure this is the correct behaviour.","Linux Gentoo 2.6.12, JDK blackdown 1.4.2",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jul/06 05:47;simonegianni;MNG-2427-2.patch;https://issues.apache.org/jira/secure/attachment/12711905/MNG-2427-2.patch","09/Jul/06 08:22;simonegianni;MVN1.patch;https://issues.apache.org/jira/secure/attachment/12711756/MVN1.patch",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,Patch,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28lrj:",9223372036854775807,,,,,,,,,,,,,,,,,,,"09/Jul/06 08:56;simonegianni;Under eclipse my patch causes an error. This is because eclipse does not have a notion of ""resources"" folder, so the src/test/resources folder is simply configured as a source folder. 

This means that under eclipse current trunk seems to complile correctly : .java under src/test/resources are compiled. While adding them to src/test/java causes eclipse to complain : the same .java are in two source folders now, from an eclipse point of view. 

IIUC, maven does not compile .java inside src/test/resources, and this is why the test was not compiling from maven.

So, the patch still solves the problem, but creates some errors in eclipse due to the fact that the src/test/resources is interpreted in a different way in maven than in eclipse.;;;","11/Jul/06 02:24;brettporter;it seems javac will compile the dependant java files from the outputDirectory. I need to take a closer look at why it is setup such that it needs to compile those java files since they should just be used to extract javadocs from in the test case.

The patch isn't very helpful - but that's ok because it should be done with svn operations anyway (svn mv the files), if that's the correct solution.;;;","11/Jul/06 05:45;simonegianni;Yep, the patch is not useful. BUT to have a working test, the source2 folder must be BOTH in the resource directory and in the src/main/java directory. This is because the test case uses the java classes in the resources dir to load them at runtime, AND the compiled version is needed to build the test case since at a certain point it does MyBla.class (and thus imports MyBla). So svn mv is not a solution, there must be two copies.

Maybe all this could simply be resolved not using MyBla.class.getName() but hardcoding the class name :);;;","11/Jul/06 05:47;simonegianni;Patch that hardcodes the MyBla classname so that there is no compile dependency with the source2 test package.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Classpath in reactor builds differ from dependency resolution,MNG-2424,12796654,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Duplicate,,joehni,joehni,07/Jul/06 02:43,05/Apr/15 23:33,03/Jan/22 13:13,12/Jul/06 23:08,2.0.4,,,,,2.0.5,,,Reactor and Workspace,,,,,0,,,,"The classpath used to compile and test a module is wrong, if the module uses a released version of another module in the reactor build. If the module is build locally, the correct depednencies are on the classpath. This currently breaks our complete development and results makes e.g. EJBs useless (MEJB-18).",,,,,,,,,,,,,,,,,,,,,,,,MNG-1245,,,,,,,,,,,,,,,,,,,,,,,,,,,MEJB-18,,,"07/Jul/06 03:18;joehni;MNG-2424.zip;https://issues.apache.org/jira/secure/attachment/12712139/MNG-2424.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28y8n:",9223372036854775807,,,,,,,,,,,,,,,,,,,"07/Jul/06 03:18;joehni;Attachment contains thw same minimal project in two steps. To demonstrate the poroblem run in step-1 ""mvn install"" and then do the same in step-2. You will see the unit test of the issue-client in step-2 failing. Go to the issue-client and run ""mvn clean install"" and the build has no problems. The problem in step 2 is the undesired usage of the SNAPSHOT version of ""issue-core"" in the classpath, although it is *nowhere* referenced. The client never stopped to demand the released version created in step-1.;;;","07/Jul/06 03:21;joehni;Might be related to MNG-1245;;;","12/Jul/06 23:06;joehni;This is just another result of the problem described in MNG-1245. That fix solves also this issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Improve handling of ""no plugin version found"" error after intermittent errors",MNG-2408,12796442,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,minfrin,minfrin,27/Jun/06 02:56,15/Jun/07 08:28,03/Jan/22 13:13,01/Sep/06 11:15,2.0.4,,,,,2.0.5,,,Artifacts and Repositories,,,,,0,,,,"If you follow the instructions at http://maven.apache.org/guides/getting-started/index.html#How%20do%20I%20make%20my%20first%20Maven%20project? to use the archetype plugin to create a new project skeleton, the suggested command line fails as below.

It seems there is a typo of some kind in the suggested command line, I am not familiar enough with maven 2 to know for sure.

Graham-Leggetts-Computer:~/src/standard/alchemy/maven minfrin$ mvn archetype:create -DgroupId=za.co.standardbank.alchemy -DartifactId=alchemy-trader   
[INFO] Scanning for projects...
[INFO] Searching repository for plugin with prefix: 'archetype'.
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] The plugin 'org.apache.maven.plugins:maven-archetype-plugin' does not exist or no valid version could be found
[INFO] ------------------------------------------------------------------------
[INFO] For more information, run Maven with the -e switch
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 1 second
[INFO] Finished at: Tue Jun 27 09:43:14 SAST 2006
[INFO] Final Memory: 1M/2M
[INFO] ------------------------------------------------------------------------
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-2963,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28q9j:",9223372036854775807,,,,,,,,,,,,,,,,,,,"27/Jun/06 03:26;brettporter;http://docs.codehaus.org/display/MAVENUSER/FAQs-1#FAQs-1-novalidversion

It's a configuration error on your end.;;;","27/Jun/06 03:44;minfrin;How on earth is this a configuration issue? The maven install is brand new, there is no configuration at all.

The new user _does not_ have a priori knowledge that they have to run maven with the -U switch. Why would they? Maven has always updated itself automatically, why should it stop now?

Do a Google search for the above error, and you get person after person asking the same question over and over again.

All it takes is a single extra line of documentation indicating to the user that the -U switch may be required on new installations.

Please take feedback from new users seriously. I know it is difficult from the point of view of a developer to see maven as the new user sees it. When a new user points out something isn't clear, then change it so it is. Maven is supposed to make the developer's life easier, not harder.
;;;","27/Jun/06 03:54;brettporter;ok, usually it's a configuration error (you have a proxy that isn't configured).

Since it's not the case, it must have been an intermittent issue with ibiblio, which caused a metadata error. This is a known issue (probably filed elsewhere).

I'll assign this to 2.0.5 for now, but we should try and find the original issue.;;;","11/Jul/06 15:00;jdcasey;It seems that this is becoming a more common issue. From what I can tell, either the metadata download is failing (network problem), or else the file itself doesn't exist on the server. In either case, Maven is gleefully writing a new metadata file that contains 'LATEST' for the main <version/>, which should never happen.

In 2.1, we should look at separating the meta-versions like RELEASE and LATEST from real versions, to avoid the need to correct for this sort of situation. For now, it might be a good idea to refrain from writing a dummy metadata file in the local repository when representing a remotely retrieved piece of metadata...will look into this more later.

*As a workaround*

You should be able to traverse in your local repository to the plugin's artifactId folder (org/apache/maven/plugins/maven-archetype-plugin in this example), and remove maven-metadata-*.xml. When you re-run the build, it should restore these metadata files from the repositories, and should resume normal functioning.;;;","18/Jul/06 08:37;bradzilla;Was having the issue also. Emptied local repo and removed that ""Australlian"" (example) mirror from my settings.xml. Did the trick. ;;;","01/Sep/06 11:15;jdcasey;Resolved in trunk (2.1-snapshot), and 2.0.5-snapshot merge should be complete shortly.

I added code to the update method in AbstractRepositoryMetadata to avoid writing the metadata to the local repo if the main version was either RELEASE or LATEST, since these are only meta-versions, and should never exist in the repo as main versions. Also added a unit test to maven-artifact-manager to check for this.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
attached artifacts (such as assemblies) are not resolved in the workspace when running 'package' phase,MNG-2398,12794374,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Cannot Reproduce,brettporter,brozow,brozow,20/Jun/06 14:26,01/Jul/09 11:20,03/Jan/22 13:13,01/Jul/09 11:14,2.0.4,,,,,,,,Reactor and Workspace,,,,,9,,,,"I have attached a sample project.

submoduleA creates an attached artifact (a tar.gz assembly) which submoduleB depends on.

When running:
        mvn package

The attached artifact cannot be resolved from the workspace but tries the repos instead, yet when running:
 

This problems makes using attached artifacts very 'risky' because it could be running 'old' code.



",Running of Mac OSX 10.4,,,,,,,,,,,,,,,,,,,,,,,MNG-2877,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jun/06 14:26;brozow;attached-artifact-bug.tar.gz;https://issues.apache.org/jira/secure/attachment/12711622/attached-artifact-bug.tar.gz","13/Sep/06 02:46;scesbron;maven-project-2.0.4-patch.txt;https://issues.apache.org/jira/secure/attachment/12712146/maven-project-2.0.4-patch.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28qvr:",9223372036854775807,,,,,,,,,,,,,,,,,,,"13/Sep/06 02:46;scesbron;Here is a patch for maven 2.04. I have modified MavenProject and ActiveProjectArtifact in maven-project.jar.
With this patch, an ActiveProjectArtifact is created also for attached artifacts.

One weird thing with creation of ActiveProjectArtifact : for test-jar, it works if I defined the jar with ""tests"" classifier but not if I defined it with ""test-jar"" type. The method ""artifact.getDependencyConflictId()"" does not return the same thing for these two cases. Instead of what it is said in maven book, you have to declare test-jar with classifier ""tests"" and not with type ""test-jar"" if you want this patch to work. It seems weird for me that it is possible to define the same artifact in two ways that are not strictly equals.;;;","02/Jun/07 16:18;jvanzyl;This really needs to account for many attached artifacts and this patch is now stale. Our fault but it needs work again.;;;","02/Jun/07 16:19;jvanzyl;If you do a little more work and make it work with multiple attached artifacts and not just one and update the code then I'd be happy to commit it. I think it would definitely be better if thing inside the reactor worked as expected.;;;","06/Jun/07 01:29;brettporter;since this is desired but the patch needs work, reopening unscheduled and unsetting patch flag ;;;","26/Aug/08 09:54;octo777;I have similar problem. During release goals 'clean verify' are called. When one artifact depends on another attached artifact release fails due to unsatisfied dependency. Workaround is to call goals 'clean install' from maven-release-plugin. 
However, maven should properly resolved that artifacts.;;;","01/Jul/09 11:14;brettporter;this example seems to work for me in 2.0.6+;;;","01/Jul/09 11:20;bentmann;Seems like a dup of MNG-2877.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
<profile><activation><file><exists/> does not work in a multi-project build,MNG-2363,12796436,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,bentmann,daveboden,daveboden,12/Jun/06 12:31,23/Mar/14 12:36,03/Jan/22 13:13,25/Jun/09 07:04,,,,,,3.0-alpha-3,,,Profiles,,,,,19,,,,"I would expect each subproject to have the profile turned on or off depending on whether {{${basedir\}/file-to-check-for}} exists.

Instead, during a multi-project build the profile is either on or off depending on whether the file exists relative to the *aggregator pom*. The decision is made once.

Variable substitution doesn't work, so I can't explicitly use {{<exists>${basedir\}/file-to-check-for</exists>}} or any variation on this theme to workaround the bug.




Some background to my particular problem. I have 10 modules to build. Some of them are GUI modules and contain a file called plugin.xml in the subproject directory. I want to package these up specially and sign them, ready for deployment to webstart. The other modules are shared and server code and I don't want these packaged in the same way. So, I've got a dependency in my *parent* pom file which activates a profile called ""guibundle"" if a plugin.xml file exists in the subproject directory.",,,,,,,,,,,,,,,,,MNG-3017,MNG-3140,MNG-4174,MNG-3524,MNG-4120,MNG-1775,MNG-4620,,,,,,,,,,,,,,MNG-5608,,,,,,MNG-4735,MNG-5360,,,,,,,,,,"22/Jun/09 03:36;janlabrie;DefaultMavenProjectBuilder.java;https://issues.apache.org/jira/secure/attachment/12712939/DefaultMavenProjectBuilder.java","19/Jun/09 10:40;janlabrie;DefaultMavenProjectBuilder.java;https://issues.apache.org/jira/secure/attachment/12712989/DefaultMavenProjectBuilder.java","22/Jun/09 03:36;janlabrie;DefaultMavenProjectBuilder.java.diff;https://issues.apache.org/jira/secure/attachment/12712991/DefaultMavenProjectBuilder.java.diff","13/Jun/06 09:41;daveboden;problemactivation.zip;https://issues.apache.org/jira/secure/attachment/12711619/problemactivation.zip","13/Jun/06 09:43;daveboden;screenshot-1.jpg;https://issues.apache.org/jira/secure/attachment/12711902/screenshot-1.jpg",,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28ztb:",9223372036854775807,,,,,,,,,,,,,,,,,,,"13/Jun/06 09:41;daveboden;Actually, not even an <activeByDefault/> causes a profile to become active during a multi-project build.

Please unzip problemactivation.zip into a directory. Then navigate into the *child* folder and execute:
*mvn install*

You will see a printout of the effective pom.

Now navigate *back a directory* and execute:
*mvn -f pom-aggregator.xml install*

You *will not* see a printout of the effective pom, even though the profile should have been activated.



I have also commented in the parent pom.xml that <file/> activation doesn't work either. This bug relates more to <file/> activation, but it's important to get the <activeByDefault/> working first.;;;","13/Jun/06 09:43;daveboden;These files are involved in the activation process.;;;","08/Dec/06 14:59;straxus;Similar situation, similar result for us. We are trying to only activate a profile on a submodule of a reactor build, and the one-time evaluation makes this impossible.

Has a fix for this issue been implemented or considered? I see that the fix version is currently 2.1, but is that wishful thinking or will this bug actually be addressed in 2.1? We would prefer if it could be addressed in 2.0.5 if possible, in order to get a fix sooner rather than later for this issue.;;;","20/Dec/06 11:21;fgarsombke;Same problem. I have a predefined ant plugin (in pluginmanagement) at the aggregator level. I do not want all of the sub modules to inherit this ant plugin since some of the sub modules need to define their own executions for the ant plugin. Creating profiles at the aggregator level and then inheriting a profile seemed like the right approach. The <file> activation does not allow me to work at the submodule level.

Thanks,

Franz;;;","21/Dec/06 10:55;bentatham;I have the same issue, but not using modules.  

This is the critical point:
""Instead, during a multi-project build the profile is either on or off depending on whether the file exists relative to the aggregator pom. The decision is made once.""

I want a parent pom to define some plugin executions (like xdoclet, jspc, etc), so I can reuse those plugin configurations in all my other projects that need these tools.  Of course, that parent project doesn't have servlets/tags/jsps to compile, so I have to use a profile to define them so that I can actually install the pom project itself.  But I don't want to have to use a command line property to turn it on...my tests rely on those plugins running.  ;;;","04/Feb/07 16:31;wsmoak;David Boden wrote:
> Actually, not even an <activeByDefault/> causes a profile to become active during a multi-project build.

Try:  <activeByDefault>true</activeByDefault> instead;;;","04/Feb/07 18:52;daveboden;Hi Wendy. Yes, I agree. I wish that I could scrub my comments on <activeByDefault/>. I can confirm that <activeByDefault>true</activeByDefault> does work as expected.;;;","03/Jan/08 03:05;chenliang;I have the same issue.
I also have tried another way: to set a varible ""needRun"" to make sure whether the sub module need to run the profile. Buf unfortunately, the activation does not support the varible which defined in the POM. It only recognize the Command Line Varible, such : mvn -DneedRun=true

Is there any solutions?;;;","02/Apr/09 16:18;tinne;I stubled on this, as well (see MNG-4120).

The title is a bit short-sighted, as <activation><property> (and, of course, <activation><file><missing>) could also be module-dependent:

<project><parent><artifactId>parent</artifactId></parent>
<artifactId>project-a</artifactId>
<properties><some-property>true</some-property></properties></project>

<project><parent><artifactId>parent</artifactId></parent>
<artifactId>project-b</artifactId>
<properties><some-property>false</some-property></properties></project>

should also be selectively running a target based on a profile

<project><artifactId>parent</artifactId>
<properties><activation><property><name>some-property</name><value>true</value></property></properties>
<build><!-- project-a specific actions here --></build></project>;;;","19/Jun/09 10:33;janlabrie;Like probably many others we also stumbled over this issue. The combination of a multi-pom project and file based activation does not work, because properties like ${basedir} are not expanded. This is pretty annoying because it is a common setup and there is no workaround. What also did not help was that help:effective-pom reports a pom.xml in which ${basedir} *is* expanded.

I made a fix for this issue. The best solution would be that a relative filename in the activation would be evaluated in respect to the location of the pom file that contains the activation. I didn't code this, because in FileProfileActivator.java I was not able to retrieve the project or the location of the current pom file. Because of this I also could not do an expansion of ${basedir}, because I didn't know what to replace it with. Later I read in a comment from Nicolas de Loof that the activation of profiles is calculated very early in the lifecycle, and that there is not even an active project at that moment.

So I coded a solution in the reading of the xml file. Whenever a model is read from a local file all occurences  of ${basedir} are replaced by the foldername of the pom file. This is coded in DefaultMavenProjectBuilder.readModel().

I have attached the file. It is based on trunk 2.0.x (It reports that it is 2.0.11.SNAPSHOT).

There are some remarks to be made:
- The replacement is not done for pom files that are adressed by a URL instead of a local file.
- The replacement is done with String.ReplaceAll(). This might be a little too rough.


;;;","19/Jun/09 10:40;janlabrie;File with a fix that replaces all instanceof ${basedir} with the foldername of the pom file is attached.;;;","22/Jun/09 03:36;janlabrie;Attached a fix file with a small textual update and a diff file.;;;","25/Jun/09 07:04;bentmann;Fixed in [r788334|http://svn.apache.org/viewvc?view=rev&revision=788334]. Relative paths and paths starting with {{${basedir}}} are now resolved relative to the currently built project.;;;","18/Aug/10 23:12;dcabasson;Any plan on fixing that on the 2.2.x branch as well? Having the fix in 3.0-alpha means it won't actually work before the first stable release of 3.0. I hope we could expect a quicker release of a 2.2.x version with that bug fixed. I has already a significant number of votes, and would get my life and the life of a few other people easier :);;;","06/Dec/11 12:18;djb;Can someone identify which released version (of what plugin) this is fixed?
I still see this bug (however, I do not have a multi-project config); just a pom.xml and a parent pom.
In my <profiles> in the project pom.xml I have 

  <profile>
            <id>cobertura.off</id>
            <activation>
                <file> 
                    <exists>${basedir}/cobertura.off</exists>
                </file>
            </activation>
            <properties>
              <skip.cobertura>true</skip.cobertura>
            </properties>
        </profile>
        <profile>
            <id>cobertura.on</id>
            <activation>
                <file>
                    <missing>${basedir}/cobertura.off</missing>
                </file>
            </activation>
            <properties>
              <skip.cobertura>false</skip.cobertura>
            </properties>
        </profile>

but even if the file cobertura.off exists (same dir as pom.xml), mvn help:active-profiles shows that cobertura.on is active and cobertura.off is not active.

This does work if I use <exists>cobertura.off</exists> and  <missing>cobertura.off</missing> respectively

Thus the doc at http://maven.apache.org/pom.html#Activation is (still) wrong as it shows use of ${basedir}/

I'm using apache-maven-2.2.1;;;","06/Dec/11 12:37;joehni;Works for inherited profiles in Maven 3 only.;;;","18/Dec/12 08:30;docbill;While this bug has been fixed, most of the bugs that are marked as duplicates of this bug have not been...  As the only thing that has been fixed is the usage of ${basedir}.  Other properties still have problems, and the documentation still does not list this limitation.;;;","04/Jan/13 16:40;olamy;doesn't work anymore with 3.0.x
see https://jira.codehaus.org/browse/MNG-5418;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deployed POM is not valid XML,MNG-2362,12796899,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,jvanzyl,joehni,joehni,12/Jun/06 01:45,07/Apr/15 12:24,03/Jan/22 13:13,28/Feb/07 07:14,2.0.4,,,,,2.0.6,,,POM,,,,,2,,,,"If the POM has utf-8 encoding and you make usage of entities to support extended characters, these characters are no longer encoded as entities in the repository (well, the effect is already visible in target/effective-pom.xml). This is not a rule of general, POMs with packaging ""pom"" are installed and deployed correclty.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-2255,MNG-2254,MRELEASE-201,,,,,,,,,"12/Jun/06 01:56;joehni;MNG-2362.zip;https://issues.apache.org/jira/secure/attachment/12711618/MNG-2362.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28m5z:",9223372036854775807,,,,,,,,,,,,,,,,,,,"12/Jun/06 01:56;joehni;Multi module example. The archive contains a parent POM and a POM for a jar. Both UTF-8 encoded POMs contain a developer with a name using an entitiy. Installing both POMs, the ""pom"" POM is still valid, while the ""jar"" POM is written with the expanded entitiy making the XML invalid.;;;","28/Jun/06 02:56;joehni;Just as annotation: The ""pomp"" POM gets also invalid, if it is released with the relase plugin.;;;","15/Feb/07 17:01;jvanzyl;Can you check this with 2.0.5? I have changed it so that POM is not rewritten for deployment so whatever you have in your POM should be left alone.;;;","26/Feb/07 03:52;joehni;Hi Jason,

the POM is not rewritten anymore  installing or deploying the artifact with M2.0.5. The entities are kept in the local and remote repo.

However the issue remains with the release plugin, the modificated POMs are invalid and also the ones used to build the release. So I guess, this issue should be assigned to the release plugin now.

- Jörg;;;","28/Feb/07 07:14;jvanzyl;Could you please take the sample project and attach it to the release plugin. I would say the issue is fixed in the core as the POM is now left alone. So part one of the problem is resolved.;;;","28/Feb/07 07:14;jvanzyl;The real issue is now in the modified POMs created by the release plugin.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect dependency version downloaded,MNG-2340,12796410,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Cannot Reproduce,,apill,apill,02/Jun/06 07:35,05/Apr/15 23:47,03/Jan/22 13:13,28/Dec/09 19:47,2.0.4,,,,,,,,Embedding,,,,,13,,,,"I have a parent pom with a dependency management section specifying the version of an artifact to use. In the child project, I override this version.

The maven plugin ignores the overriding version and downloads the version specified by the parent pom.

For example, in the parent pom

{code}
<dependency>
      <groupId>lucene</groupId>
      <artifactId>lucene</artifactId>
      <version>1.4.3</version>
</dependency>
{code}

in the project pom, inheriting the parent pom

{code}
<dependency>
      <groupId>lucene</groupId>
      <artifactId>lucene</artifactId>
      <version>2.0</version>
</dependency>
{code}

The maven eclipse plugin downloads version 1.4.3 for my project",,,,,,,,,,,,,,,,,MECLIPSE-107,,,,,,,,,,,,,,,,,,,,MNG-2323,,,,,,,,,,,,,,,,,"02/Jun/06 08:43;apill;MNGECLIPSE-131.zip;https://issues.apache.org/jira/secure/attachment/12711754/MNGECLIPSE-131.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i2929j:",9223372036854775807,,,,,,,,,,,,,,,,,,,"02/Jun/06 08:02;eu;Would you mind to attach complete project example that we can use to reproduce this issue?;;;","02/Jun/06 08:11;apill;I will try and create a new example. Being a commercial company I cannot distribute our project.;;;","02/Jun/06 08:43;apill;Attached are the example projects for this bug.

They are already eclipse projects.

To reproduce the bug follow these instructions:

1. Open both projects in eclipse (if it makes any difference i am using eclipse 3.2RC6)
2. Run ""mvn clean install"" at command line for my-parent project
3. Clean the projects
4. You will see that when you expand ""Maven2 Dependencies"" in ""my-app"" project in eclipse that it references lucene-1.3. If you look in the pom it references 1.4.3.

;;;","02/Jun/06 09:42;eu;Jason, it looks like embedder.readProjectWithDependencies() returns lucene 1.3 when reading child project that redefine dependency (even with trunk embedder snapshot you gave me):

6/2/06 10:36:09 AM EDT: [DEBUG] MNGECLIPSE-131-parent: using locally installed snapshot
6/2/06 10:36:09 AM EDT: [DEBUG] org.maven.ide.tests:MNGECLIPSE-131-app:jar:1.0-SNAPSHOT (selected for null)
6/2/06 10:36:09 AM EDT: [DEBUG]   lucene:lucene:jar:1.4.3:compile (applying version: 1.3;)
6/2/06 10:36:09 AM EDT: [DEBUG]   lucene:lucene:jar:1.3:compile (selected for compile)
6/2/06 10:36:09 AM EDT: [DEBUG]   junit:junit:jar:3.8.1:test (selected for test)

Strange thing, that it is working right from the command line with Maven 2.0.4;;;","02/Jun/06 12:07;jrduncans;Sounds like same issue: dependency is resolved from dependencyManagement instead of dependencies by both maven-eclipse-plugin & Netbeans Plugin.;;;","02/Jun/06 12:32;jrduncans;It appears that while ""mvn package"" uses the correct dependency, the dependencies report when running ""mvn site"" also uses the incorrect version from dependencyManagement.;;;","30/Nov/06 00:15;aguther;I was not aware that this is also a problem in the mvn site generating plug-in.  Does an entry for this problem exist for the maven site plug-in as well?;;;","16/Jun/07 06:11;kenney;Maven 2.0.6 and 2.0.7 do it like this:
- depMgt provides defaults; so if a child pom declares a dependency present in depMgt, with a different version, the version from the child pom is used.

Maven 2.0.4 and 2.0.5 do it like this:
- depMgt provides OVERRIDES, so if a child pom declares a dependency present in depMgt, with a different version, the version from depMgt is used.

The difference probably is that you use the commandline version of maven, 2.0.4 or 2.0.5, and in eclipse you use the embedder which is based
on 2.1, and uses the same approach as 2.0.6 and 2.0.7.

I think that when you use the commandline version 2.0.6 or newer, you'll see that m2eclipse and maven commandline both use the same approach.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
${project.*} are interpreted in the wrong place,MNG-2339,12797063,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,brettporter,evenisse,evenisse,02/Jun/06 00:21,06/Apr/15 01:36,03/Jan/22 13:13,29/Feb/08 00:54,2.0.4,,,,,2.0.9,,,General,,,,,15,,,,"If a plugin use ${project.version}, this parameter is interpreted with the version of the current project and not the plugin version. I think we have the same pb with dependencies and other ${project.*}

For a plugin in version 2.0 used in a project in version 1.0-SNAPSHOT, ${project.version} used in the plugin will be interpreted as 1.0-SNAPSHOT instead of 2.0",,,,,,,,,,,,,,,,,MNG-2651,MNG-2653,MNG-2745,MNG-3009,MNG-2782,,,,,,,,,,,,,,,,SUREFIRE-113,,,,,,,,,,,,,,ARCHETYPE-78,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i2913z:",9223372036854775807,,,,,,,,,,,,,,,,,,,"19/Jun/06 18:48;carlos;This bug showed up in surefire-providers pom;;;","19/Jun/06 23:16;brettporter;Carlos - are you sure? The surefire plugin works for most people even with that published, and the plugin itself does not depend on any providers or the providers pom itself.;;;","22/Jun/06 11:49;carlos;In surefire-providers

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>surefire-api</artifactId>
      <version>2.1-SNAPSHOT</version>
<!-- commenting this due to MNG-2339
      <version>${project.version}</version>
-->
    </dependency>

If you put back <version>${project.version}</version>, deploy and clean your repo org/apache/maven/surefire dir, you'll get the problem;;;","05/Feb/07 14:01;wfay;We've seen this on the Users list specifically affecting Spring jars (context)... Wondering if anyone is working on this?;;;","01/Mar/07 22:15;jvanzyl;The POM is not interpolated on deploy anymore so this problem won't happen anymore. The POM will be deployed with the POM intact and it will be read back in correctly.;;;","16/Jun/07 03:43;kenney;this is not fixed.;;;","16/Jun/07 04:04;kenney;This issue deals with ${project.version}, or ${version}, or ${xxx.version} for that matter, all being treated like ${version}.
commandline arguments like -Dversion=foo will have effect on the dependencies or wherever one of the expressions above is used.

${project.version} and ${pom.version} should ALWAYS resolve to a <version> tag in the pom.

RegexBasedModelInterpolator strips off the first part (project.) and then checks the context for the value. This is wrong.

Issue MNG-2486 is different - that one deals with the fact that SNAPSHOT version expressions, which are correctly interpolated from the pom and not from external properties,
are evaluated to the timestamped version instead of the string present in the model.;;;","22/Jun/07 06:36;kenney;Comitted fix in r549786 on trunk (2.1).
It produces lots of warnings - i'm not sure we want exactly that behaviour in 2.0.

See http://docs.codehaus.org/display/MAVEN/Refactoring+Interpolation;;;","10/Jul/07 10:04;sbehnel;Maybe not ""exactly that behaviour"", but leaving this bug in 2.0.x renders that release mostly useless. So any fix will be appreciated.;;;","17/Oct/07 22:33;brianf@infinity.nu;Any one of the watchers/ voters care to make an IT test for this? http://docs.codehaus.org/display/MAVEN/Creating+a+Maven+Integration+Test;;;","21/Oct/07 23:00;brianf@infinity.nu;bumping to 2.0.9. If we get IT tests for these before 2.0.8 is final, we can take a look;;;","03/Feb/08 17:41;grek;Guys, the situation with this issue is really, really annoying.

The issue is more than one year old, affects so many people that most of them (including me) sees it as the most ugliest unresolved bug in Maven. I don't know why you require any IT even if there are many projects (Apache Cocoon, Jetty plug-in, Spring to name a few) that exhibit behaviour described in this issue.

At Apache Cocoon, we have many poms polluted just because of this issue and our users who being worried about whole Maven thing are hit by it at the nearly beginning, see: http://article.gmane.org/gmane.text.xml.cocoon.user/63302 for latest example. It's not perfect first expierience, don't you think?
Demanding any additional action for such embarrassing bug is just a PITA, IMHO.

Sorry for a little rant but I think it's the time to say: enough is enough.

Devoted Maven user,
Grzegorz;;;","28/Feb/08 20:20;brettporter;this has regressed the path alignment of ${project.build.directory}. I'll add a test for it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Locked SNAPSHOT version ignored,MNG-2323,12796426,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Cannot Reproduce,,joehni,joehni,26/May/06 07:25,27/Feb/10 16:54,03/Jan/22 13:13,28/Dec/09 05:26,2.0.4,3.0-alpha-7,,,,,,,Dependencies,,,,,0,,,,"We use for our tip revision (head revision of a branch) a snapshot version in the form of:

_major.minor-SNAPSHOT_

If we make a (maintenance) release, we create a version like:

_major.minor.revision_

We manage our dependencies in a dependencyManagement section of a super POM, where we define always the last released version of an artifact. A dependency of an artifact that is always declared without explicit version unless it makes usage of an unreleased version, then the child POM will be changed from

{code:xml}
<dependency>
  <groupId>group</group>
  <artifactId>artifact</artifactId>
<dependency>
{code}

to 

{code:xml}
<dependency>
  <groupId>group</group>
  <artifactId>artifact</artifactId>
  <version>major.minor-SNAPSHOT</version>
<dependency>
{code}

Unfortunately this does not work, Maven still prefers the released version. Here in the example 2.0.0 instead of 2.0.-SNAPSHOT (snippet):

{noformat}
[INFO] [eclipse:eclipse]
[DEBUG] com.elsagsolutions.projects.components:es_logging:jar:1.0-SNAPSHOT (selected for null)
[DEBUG]   com.elsagsolutions.commons:es_commons_test:jar:2.0-SNAPSHOT:test (applying version: 2.0.0;applying scope: test)
[DEBUG]   com.elsagsolutions.commons:es_commons_test:jar:2.0.0:test (selected for test)
[DEBUG]     cglib:cglib-nodep:jar:2.1_3:test (applying version: 2.1_3;)
[DEBUG]     cglib:cglib-nodep:jar:2.1_3:test (selected for test)
{noformat}

But it gets worse. Even if we try to lock the version in the child POM, it does not work; the locked version is happily ignored:

{code:xml}
<dependency>
  <groupId>group</group>
  <artifactId>artifact</artifactId>
  <version>[major.minor-SNAPSHOT]</version>
<dependency>
{code}

Output from the example:

{noformat}
[INFO] [eclipse:eclipse]
[DEBUG] com.elsagsolutions.projects.components:es_logging:jar:1.0-SNAPSHOT (selected for null)
[DEBUG]   com.elsagsolutions.commons:es_commons_test:jar:2.0-SNAPSHOT:test (setting version to: 2.0-SNAPSHOT from range: [2.0-SNAPSHOT,2.0-SNAPSHOT])
[DEBUG]   com.elsagsolutions.commons:es_commons_test:jar:2.0-SNAPSHOT:test (applying version: 2.0.0;applying scope: test)
[DEBUG]   com.elsagsolutions.commons:es_commons_test:jar:2.0.0:test (selected for test)
[DEBUG]     cglib:cglib-nodep:jar:2.1_3:test (applying version: 2.1_3;)
[DEBUG]     cglib:cglib-nodep:jar:2.1_3:test (selected for test)
{noformat}

First problem is, that 2.0.x is treated as nearer as 2.0-SNAPSHOT. This is IMHO wrong. The algorithm should look, at which point in the version numbering the SNAPSHOT part starts and ignore the further numbers in the version of released artifacts. Additionally the locked version must be honored in any case.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-2340,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28zxj:",9223372036854775807,,,,,,,,,,,,,,,,,,,"26/May/06 07:53;joehni;Even more worse: version 1.99 is also preferred!

{noformat}
[INFO] [eclipse:eclipse]
[DEBUG] com.elsagsolutions.projects.components:es_logging:jar:1.0-SNAPSHOT (selected for null)
[DEBUG]   com.elsagsolutions.commons:es_commons_test:jar:2.0-SNAPSHOT:test (setting version to: 2.0-SNAPSHOT from range: [2.0-SNAPSHOT,2.0-SNAPSHOT])
[INFO] snapshot com.elsagsolutions.commons:es_commons_test:2.0-SNAPSHOT: checking for updates from central
[DEBUG] repository metadata for: 'snapshot com.elsagsolutions.commons:es_commons_test:2.0-SNAPSHOT' could not be found on repository: central
[DEBUG] Skipping disabled repository elsag-repo-release
[INFO] snapshot com.elsagsolutions.commons:es_commons_test:2.0-SNAPSHOT: checking for updates from elsag-repo-snapshot
[DEBUG] es_commons_test: using locally installed snapshot
[DEBUG] Retrieving parent-POM: com.elsagsolutions.commons:es_commons_test_master::2.0-SNAPSHOT for project: null:es_commons_test:jar:2.0-SNAPSHOT from the repository.
[INFO] snapshot com.elsagsolutions.commons:es_commons_test_master:2.0-SNAPSHOT: checking for updates from central
[DEBUG] repository metadata for: 'snapshot com.elsagsolutions.commons:es_commons_test_master:2.0-SNAPSHOT' could not be found on repository: central
[DEBUG] Skipping disabled repository elsag-repo-release
[INFO] snapshot com.elsagsolutions.commons:es_commons_test_master:2.0-SNAPSHOT: checking for updates from elsag-repo-snapshot
[DEBUG] es_commons_test_master: using locally installed snapshot
[DEBUG] Retrieving parent-POM: com.elsagsolutions.maven:master::SNAPSHOT for project: com.elsagsolutions.commons:es_commons_test_master:pom:2.0-SNAPSHOT from the repository.
[DEBUG] master: using locally installed snapshot
[DEBUG]   com.elsagsolutions.commons:es_commons_test:jar:2.0-SNAPSHOT:test (applying version: 1.99;applying scope: test)
[DEBUG]   com.elsagsolutions.commons:es_commons_test:jar:1.99:test (selected for test)
[DEBUG]     cglib:cglib-nodep:jar:2.1_3:test (applying version: 2.1_3;)
[DEBUG]     cglib:cglib-nodep:jar:2.1_3:test (selected for test)
{noformat};;;","28/Dec/09 05:26;joehni;This bug has been reported for Maven 2.0.4. The primary issue that 2.0.1 is preferred over 2.0-SNAPSHOT was caused by wrong assumptions about the Maven depednency resoluation and is invalid. The last comment about 1.99 preferred over 2.0-SNAPSHOT might no longer apply, there had been a lot of changes over the last 3 years.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
it0098 is failing on trunk/branch,MNG-2322,12794336,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,,brettporter,brettporter,25/May/06 18:48,14/Nov/08 16:50,03/Jan/22 13:13,09/Apr/08 12:07,,,,,,,,,Bootstrap & Build,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-3160,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28tpb:",9223372036854775807,,,,,,,,,,,,,,,,,,,"06/Jul/06 13:35;kenney;it0098 was testing a system property specified on the cmd line with -Dtest.property=""Test Property"".

-D properties are no longer merged with the System properties, but they _are_ available in 
the pom and mojo's.

I suspect that this test was originally testing if ""quoted arguments"" work.

Should this test be rewritten to use pom properties?

For instance using some profile activation mechanism - if enabled (by using a system property)
it touches some file and the verifier can check that file's existence.;;;","05/Jun/07 00:41;brettporter;still commented out, as is 91, 93, 106, 107, 120 (I guess 111 is to be removed);;;","09/Apr/08 12:07;brettporter;98 has been fixed... MNG-3160 supercedes this as the general task for fixing commented tests;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
When a project has modules and its parent is not preinstalled the build fails,MNG-2318,12794326,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,jdcasey,carlos,carlos,24/May/06 00:21,09/Nov/08 15:15,03/Jan/22 13:13,30/Jun/08 14:14,2.0.4,,,,,2.0.7,,,Inheritance and Interpolation,,,,,26,,,,".
|-- A
|   `-- pom.xml (A)
|-- C
|   `-- pom.xml (C) - module of B
`-- pom.xml (B)

C parent is B and B parent is A, trying to build B it fails",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-2068,MNG-2289,,,,,MNG-2308,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29c6n:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"24/May/06 00:24;carlos;it0106 added to maven-core-it;;;","29/Jun/06 04:11;joehni;Carlos, I don't see how this issue is in anyway related to MNG-2289. That issue is about not donwloading SNAPSHOT parents and it seems also that SNAPSHOTS are not downloaded at all (just the metadata).;;;","29/Jun/06 04:41;carlos;it's just a pointer saying that probably the two can be fixed at the same time;;;","30/Jun/08 14:14;jdcasey;it0106 works now, and has been enabled for the full IT run.;;;","03/Sep/08 16:59;jdcasey;Adding fix-for for both 2.0.10 and 2.1.0-M1, since 2.1.0-M1 will actually be released first and may not incorporate all of the eventual issue fixes released in 2.0.10.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"ActiveProjectArtifact.getFile(..) and .setFile(..) result in StackOverflowException, since they are effectively recursive",MNG-2303,12794315,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Cannot Reproduce,jdcasey,jdcasey,jdcasey,17/May/06 17:32,31/Jan/15 13:35,03/Jan/22 13:13,18/May/06 16:05,2.0.4,,,,,,,,General,,,,,0,,,,"When in a reactor situation, calling ActiveProjectArtifact.getFile(..) or ActiveProjectArtifact.setFile(..) will usually result in recursive calls and a StackOverlowError, since it tries to set/get the file of the project's artifact, which is usually a reference to itself. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28qzj:",9223372036854775807,,,,,,,,,,,,,,,,,,,"18/May/06 16:05;jdcasey;this was a problem on my side.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Newer SNAPSHOT parents in the remote repository are ignored,MNG-2289,12794348,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Cannot Reproduce,jvanzyl,joehni,joehni,11/May/06 02:29,07/Apr/15 12:25,03/Jan/22 13:13,07/Jun/07 22:02,2.0.5,,,,,,,,Inheritance and Interpolation,,,,,19,,,,"If a POM inherits from another one in the repository with a SNAPSHOT version, it will only look into the local repository for it, but not in the remote repositories.
E.g. if a POM has following parent:...
    <parent>
        <groupId>pom.maven</groupId>
        <artifactId>super</artifactId>
        <version>SNAPSHOT</version>
    </parent>
...

it will not find a newer version of ""pom.maven:super:SNAPSHOT"" in a remote repository.",,,,,,,,,,,,,,,,,,,,,,,,MNG-1908,,,,,,,,,,,,,,,,,,,MNG-2318,,,,,,,,,,,"31/May/06 15:02;butenuth;example.zip;https://issues.apache.org/jira/secure/attachment/12711952/example.zip","01/Jun/06 04:27;joehni;mng2289.zip;https://issues.apache.org/jira/secure/attachment/12711811/mng2289.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i291ev:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"30/May/06 03:03;butenuth;The problem seems to be more general for me:

We use maven 2 to build a large project consisting of several modules. 
Dependencies between modules are handled by the maven dependency 
mechanism. During development, we want to use the SNAPSHOT feature 
because we don't want to have an inflation of version numbers.

The problem: For me it looks like snapshots are never updated in the 
local repository.

To track this down, I have done the following test:

1. Deploy ""interface"" to our central repository 2. Compile ""client"" 
(which depends on ""interface"")
   pom, jar and metadata are downloaded into local repository.
3. Increased version number and timestamp in the file
   1.0-SNAPSHOT/maven-metadata.xml, recomputed checksums.
4. Run ""mvn -U clean compile"" on module ""client"".
This results in the following log:

[INFO] Scanning for projects...
[INFO]
--------------------------------------------------------------
--------------
[INFO] Building Client for the great calculator
[INFO]    task-segment: [clean, compile]
[INFO]
--------------------------------------------------------------
--------------
[INFO] artifact org.apache.maven.plugins:maven-clean-plugin:
checking for updates from central
[INFO] artifact org.apache.maven.plugins:maven-source-plugin:
checking for updates from central
[INFO] artifact
org.apache.maven.plugins:maven-surefire-plugin: checking for updates 
from central [INFO] [clean:clean] [INFO] Deleting directory 
c:\example\client\target [INFO] Deleting directory 
c:\example\client\target\classes [INFO] Deleting directory 
c:\example\client\target\test-classes
[INFO] artifact org.apache.maven.plugins:maven-resources-plugin:
checking for updates from central [INFO] artifact
org.apache.maven.plugins:maven-compiler-plugin: checking for updates 
from central [INFO] [source-download:download-sources {execution:
default}]

-----> [INFO] snapshot
de.sdm.calculator:interface:1.0-SNAPSHOT: checking for updates from 
central <------

[INFO] [resources:resources]
[INFO] Using default encoding to copy filtered resources. [INFO] 
snapshot de.sdm.calculator:calculator-all:1.0-SNAPSHOT: checking for 
updates from central [INFO] [compiler:compile] Compiling 1 source file 
to c:\example\client\target\classes [INFO]
--------------------------------------------------------------
----------
[INFO] BUILD SUCCESSFUL

As you can see in the marked line, the check for updates is done. 
Looking into ~/.m2/repository I can see even the new 
maven-metadata-central.xml (new timestamp, new content), but the jar 
is NOT updated from the server.

Is this intendented behaviour?

I can solve the problem by setting
<uniqueVersion>true</uniqueVersion> master pom of the project, but 
this clobberes the local repositories of all users and the central 
repository with lots of old versions.
;;;","30/May/06 12:32;carlos;can you provide a test case in code, please?;;;","31/May/06 15:02;butenuth;I don't have a JUnit test case for this, but my ""play project"".
To reproduce the bug:
 - mvn deploy the whole project (you need a server where you can deploy),
   do this in environment 1.
 - in envrionment 2 change something in ""common"" (directory name, maven
   name is ""interface""
 - mvn deploy in environment 2
 - mvn -U install in environment 1
Metadata in environment 1 will be updated, but jar will not be updated.;;;","01/Jun/06 04:27;joehni;My attachment (mng2289.zip) contains a demo for the parent SNAPSHOT. It consists of two projects _parent_ and _issue_. The parent POM defines a distribution snapshot repo at {{monospaced}}file:///temp/repo-m2-snapshot{{monospaced}}, so no harm is done ;)

Steps:
# Go to the _parent_ directory and call {{noformat}}mvn deploy{{noformat}}
# Go to the _issue_ directory and call {{noformat}}mvn eclipse:eclipse{{noformat}}, the project is now dependent on junit-3.7 as defined in the dependencyManagement of the parent
# Set your local repo in *settings.xml* to something else e.g. {{noformat}}<localRepository>/temp/repo-m2-local</localRepository>{{noformat}}
# Go to the _parent_ directory and change the version of junit to 3.8
# Call again {{noformat}}mvn deploy{{noformat}}, but Maven will now use the temporary local repo for installation of the updated POM
# Go to the _issue_ directory and call {{noformat}}mvn eclipse:eclipse{{noformat}}, the project is now dependent on junit-3.8 as defined in the dependencyManagement of the parent
# Restore your *settings.xml*
# Call {{noformat}}mvn eclipse:eclipse{{noformat}} again for the _issue_, the project is still dependent on junit-3.7 the available newer version of the snapshot parent is ignored

The example is challenging, since the repo difinitions are in the parent POM itsefl, but evenm if you move them to your settings XML, the behaviour is not different.

;;;","02/Jun/06 08:17;yanke;Hi,
we have the same problem when using the following configuration in our POM:;;;","02/Jun/06 08:36;yanke;Hi,
we have the same problem when using the following configuration in our POM:
 
   <snapshotRepository>
        <id>internalRepo</id>
        <name>our company internal repo</name>
        <url>ftp://maven.xxx.xxx/opt/repository/maven</url>
        <!-- uniqueVersion == false is needed to upload snapshots releases 
        without changing fileName to timestamp+buildNumber.
        All deployment will override the -SNAPSHOT files on the repo. -->
        <uniqueVersion>false</uniqueVersion>
      </snapshotRepository>

during deploy phase the -SNAPSHOT.jar on the server is overridden by the newer one and maven-metadata.xml is updated properly but when another client run maven (and has already the older version of the SNAPSHOT in its local repository) it doesn't download the newer pom and jar.

maven (with debug enabled says):
[DEBUG] Retrieving parent-POM: xxx:yyy::0.3.1-SNAPSHOT for project: xxx:zzz:jar:0.3.1-SNAPSHOT from the repository.
[DEBUG] yyy: using locally installed snapshot

if we run on the client maven with the -U option we get:
[DEBUG] Retrieving parent-POM: xxx:yyy::0.3.1-SNAPSHOT for project: xxx:yyy:jar:0.3.1-SNAPSHOT from the repository.
[INFO] snapshot xxx:yyy:0.3.1-SNAPSHOT: checking for updates from internalRepo
[INFO] snapshot xxx:yyy:0.3.1-SNAPSHOT: checking for updates from central
[DEBUG] repository metadata for: 'snapshot xxx:yyy:0.3.1-SNAPSHOT' could not be found on repository: central
[DEBUG] yyy: using locally installed snapshot

in both cases maven is not downloading the newest POM. 
Another strange thing is that after looking in our internalRepo it still looks in the central repo if the metadata are there. Maven should have found metadata information in our internalRepo (infact it DOES NOT give out the error (repository metadata for: 'snapshot xxx:yyy:0.3.1-SNAPSHOT' could not be found on repository: internalRepo). It seems maven find the metadata on our repo but not consider it.

let me know if I can do some more test,
best regards,
Federico;;;","03/Jul/06 02:14;brettporter;voters: please move your votes to MNG-1908!;;;","01/Mar/07 11:37;jvanzyl;I will check with Kenney because I think this was fixed in trunk and I'll backport it if necessary.;;;","04/Jun/07 16:35;jvanzyl;Joerg, do you want to check this out:

 https://svn.apache.org/repos/asf/maven/core-integration-testing/trunk/core-integration-tests/src/test/resources/MNG-2289
 
 I tried to mimic your test and simplify it and it appears to be working. The new parent POM is used and the updated dependency is used.
 
;;;","04/Jun/07 17:07;pschneider;When I run the IT that Jason just committed (https://svn.apache.org/repos/asf/maven/core-integration-testing/trunk/core-integration-tests/src/test/resources/MNG-2289/), I see commons-logging-1.0.2 pulled in after re-deployment of the parent SNAPSHOT, showing that the child does pick up the newer version.  So, at least with this test, I'm not able to reproduce the problem.;;;","04/Jun/07 17:07;pschneider;I was using 2.0.6.;;;","07/Jun/07 10:02;jvanzyl;Patrick and I cannot not reproduce this Jorg, so we're going to mark can't reproduce. Unless you want to take a look at the IT we whipped up and see if you can.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"If a repo is down, maven stops the buid instead of trying other repos",MNG-2282,12794290,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,kenneyw,gnodet,gnodet,08/May/06 04:06,01/Apr/10 06:52,03/Jan/22 13:13,15/May/06 12:17,2.0.4,,,,,2.0.5,,,Artifacts and Repositories,,,,,0,,,,"In this case, the artifact is available at http://www.ibiblio.org/maven2/activemq/jmdns/1.0-RC2/ and the build always fail until the artifact is downloaded manually.
See the following build output:


+ Error stacktraces are turned on.
Maven version: 2.0.4
[DEBUG] Building Maven user-level plugin registry from: 'C:\Documents and Settings\gnodet\.m2\plugin-registry.xml'
[DEBUG] Building Maven global-level plugin registry from: 'c:\java-bin\maven-2.0.4\conf\plugin-registry.xml'
[INFO] Scanning for projects...
[DEBUG] Searching for parent-POM: org.apache.servicemix:servicemix::3.0-SNAPSHOT of project: null:servicemix-core:jar:null in relative path: ../pom.xml
[DEBUG] Using parent-POM from the project hierarchy at: '../pom.xml' for project: null:servicemix-core:jar:null
[DEBUG] Searching for parent-POM: org.apache:apache::1 of project: org.apache.servicemix:servicemix:pom:3.0-SNAPSHOT in relative path: ../pom.xml
[DEBUG] Parent-POM: org.apache:apache::1 not found in relative path: ../pom.xml
[DEBUG] Retrieving parent-POM: org.apache:apache::1 for project: org.apache.servicemix:servicemix:pom:3.0-SNAPSHOT from the repository.
[INFO] ----------------------------------------------------------------------------
[INFO] Building ServiceMix :: Core
[INFO]    task-segment: [install]
[INFO] ----------------------------------------------------------------------------
[DEBUG] Skipping disabled repository apache.snapshots
[DEBUG] maven-resources-plugin: resolved to version 2.1 from repository central
[DEBUG] Retrieving parent-POM: org.apache.maven.plugins:maven-plugin-parent::2.0 for project: null:maven-resources-plugin:maven-plugin:2.1 from the repository.
[DEBUG] Skipping disabled repository apache.snapshots
[DEBUG] maven-compiler-plugin: resolved to version 2.0.1 from repository central
[DEBUG] Retrieving parent-POM: org.apache.maven.plugins:maven-plugins::1 for project: null:maven-compiler-plugin:maven-plugin:2.0.1 from the repository.
[DEBUG] Retrieving parent-POM: org.apache.maven:maven-parent::1 for project: org.apache.maven.plugins:maven-plugins:pom:1 from the repository.
[DEBUG] Retrieving parent-POM: org.apache:apache::1 for project: org.apache.maven:maven-parent:pom:1 from the repository.
[DEBUG] Skipping disabled repository apache.snapshots
[DEBUG] maven-surefire-plugin: resolved to version 2.1.3 from repository central
[DEBUG] Retrieving parent-POM: org.apache.maven.plugins:maven-plugins::1 for project: null:maven-surefire-plugin:maven-plugin:2.1.3 from the repository.
[DEBUG] Retrieving parent-POM: org.apache.maven:maven-parent::1 for project: org.apache.maven.plugins:maven-plugins:pom:1 from the repository.
[DEBUG] Retrieving parent-POM: org.apache:apache::1 for project: org.apache.maven:maven-parent:pom:1 from the repository.
[DEBUG] Skipping disabled repository apache.snapshots
[DEBUG] maven-jar-plugin: resolved to version 2.0 from repository central
[DEBUG] Retrieving parent-POM: org.apache.maven.plugins:maven-plugin-parent::2.0 for project: null:maven-jar-plugin:maven-plugin:2.0 from the repository.
[DEBUG] Skipping disabled repository apache.snapshots
[DEBUG] maven-install-plugin: resolved to version 2.1 from repository central
[DEBUG] Retrieving parent-POM: org.apache.maven.plugins:maven-plugin-parent::2.0 for project: null:maven-install-plugin:maven-plugin:2.1 from the repository.
[DEBUG] Retrieving parent-POM: org.apache.maven.plugins:maven-plugin-parent::2.0.1 for project: null:maven-one-plugin:maven-plugin:1.0 from the repository.
[DEBUG] Retrieving parent-POM: org.apache.xbean:xbean::2.3 for project: null:maven-xbean-plugin:maven-plugin:2.3 from the repository.
[DEBUG] Retrieving parent-POM: org.apache:apache::1 for project: org.apache.xbean:xbean:pom:2.3 from the repository.
[DEBUG] org.apache.xbean:maven-xbean-plugin:maven-plugin:2.3:runtime (selected for runtime)
[DEBUG] Retrieving parent-POM: org.apache.maven:maven::2.0 for project: null:maven-archiver:jar:2.0 from the repository.
[DEBUG]   org.apache.maven:maven-archiver:jar:2.0:runtime (selected for runtime)
[DEBUG] Retrieving parent-POM: org.apache.maven:maven::2.0 for project: null:maven-project:jar:2.0 from the repository.
[DEBUG]     org.apache.maven:maven-project:jar:2.0:runtime (selected for runtime)
[DEBUG]       org.codehaus.plexus:plexus-utils:jar:1.0.4:runtime (selected for runtime)
[DEBUG]       org.codehaus.plexus:plexus-container-default:jar:1.0-alpha-8:runtime (selected for runtime)
[DEBUG]         classworlds:classworlds:jar:1.1-alpha-2:runtime (selected for runtime)
[DEBUG]         junit:junit:jar:3.8.1:runtime (selected for runtime)
[DEBUG] Retrieving parent-POM: org.apache.maven:maven::2.0 for project: org.apache.maven:maven-artifact:jar:2.0 from the repository.
[DEBUG]       org.apache.maven:maven-artifact:jar:2.0:runtime (selected for runtime)
[DEBUG] Retrieving parent-POM: org.apache.maven:maven::2.0 for project: org.apache.maven:maven-model:jar:2.0 from the repository.
[DEBUG]       org.apache.maven:maven-model:jar:2.0:runtime (selected for runtime)
[DEBUG] Retrieving parent-POM: org.apache.maven:maven::2.0 for project: org.apache.maven:maven-artifact-manager:jar:2.0 from the repository.
[DEBUG]       org.apache.maven:maven-artifact-manager:jar:2.0:runtime (selected for runtime)
[DEBUG] Retrieving parent-POM: org.apache.maven:maven::2.0 for project: org.apache.maven:maven-repository-metadata:jar:2.0 from the repository.
[DEBUG]         org.apache.maven:maven-repository-metadata:jar:2.0:runtime (selected for runtime)
[DEBUG]         org.apache.maven.wagon:wagon-provider-api:jar:1.0-alpha-5:runtime (selected for runtime)
[DEBUG] Retrieving parent-POM: org.apache.maven:maven::2.0 for project: null:maven-profile:jar:2.0 from the repository.
[DEBUG]       org.apache.maven:maven-profile:jar:2.0:runtime (selected for runtime)
[DEBUG]     org.codehaus.plexus:plexus-archiver:jar:1.0-alpha-3:runtime (selected for runtime)
[DEBUG]       classworlds:classworlds:jar:1.1-alpha-2:runtime (selected for runtime)
[DEBUG]     org.apache.maven:maven-artifact:jar:2.0:runtime (selected for runtime)
[DEBUG]   ant:ant:jar:1.6.2:runtime (selected for runtime)
[DEBUG] Retrieving parent-POM: org.codehaus.plexus:plexus::1.0.4 for project: null:plexus-utils:jar:1.1 from the repository.
[DEBUG]   org.codehaus.plexus:plexus-utils:jar:1.0.4:runtime (removed - nearer found: 1.1)
[DEBUG]   org.codehaus.plexus:plexus-utils:jar:1.1:runtime (selected for runtime)
[DEBUG]   org.apache.maven:maven-project:jar:2.0:runtime (selected for runtime)
[DEBUG]     org.codehaus.plexus:plexus-utils:jar:1.0.4:runtime (removed - nearer found: 1.1)
[DEBUG]     org.codehaus.plexus:plexus-container-default:jar:1.0-alpha-8:runtime (selected for runtime)
[DEBUG]       org.codehaus.plexus:plexus-utils:jar:1.0.4:runtime (removed - nearer found: 1.1)
[DEBUG]       junit:junit:jar:3.8.1:runtime (selected for runtime)
[DEBUG]     org.apache.maven:maven-model:jar:2.0:runtime (selected for runtime)
[DEBUG]       org.codehaus.plexus:plexus-utils:jar:1.0.4:runtime (removed - nearer found: 1.1)
[DEBUG]     org.apache.maven:maven-artifact-manager:jar:2.0:runtime (selected for runtime)
[DEBUG]       org.codehaus.plexus:plexus-utils:jar:1.0.4:runtime (removed - nearer found: 1.1)
[DEBUG]       org.apache.maven:maven-repository-metadata:jar:2.0:runtime (selected for runtime)
[DEBUG]         org.codehaus.plexus:plexus-utils:jar:1.0.4:runtime (removed - nearer found: 1.1)
[DEBUG]       org.apache.maven.wagon:wagon-provider-api:jar:1.0-alpha-5:runtime (selected for runtime)
[DEBUG]         org.codehaus.plexus:plexus-utils:jar:1.0.4:runtime (removed - nearer found: 1.1)
[DEBUG]     org.apache.maven:maven-profile:jar:2.0:runtime (selected for runtime)
[DEBUG]       org.codehaus.plexus:plexus-utils:jar:1.0.4:runtime (removed - nearer found: 1.1)
[DEBUG]   qdox:qdox:jar:1.5:runtime (selected for runtime)
[DEBUG] Retrieving parent-POM: org.apache.xbean:xbean::2.3 for project: null:xbean-spring:jar:2.3 from the repository.
[DEBUG] Retrieving parent-POM: org.apache:apache::1 for project: org.apache.xbean:xbean:pom:2.3 from the repository.
[DEBUG]   org.apache.xbean:xbean-spring:jar:2.3:runtime (selected for runtime)
[DEBUG]     commons-logging:commons-logging:jar:1.0.3:runtime (selected for runtime)
[DEBUG]     org.springframework:spring:jar:1.2.4:runtime (selected for runtime)
[DEBUG] Retrieving parent-POM: org.apache.maven:maven::2.0 for project: org.apache.maven:maven-plugin-api:jar:2.0 from the repository.
[DEBUG]   org.apache.maven:maven-plugin-api:jar:2.0:runtime (selected for runtime)
[DEBUG]   org.apache.maven:maven-artifact:jar:2.0:runtime (selected for runtime)
[DEBUG]     org.codehaus.plexus:plexus-utils:jar:1.0.4:runtime (removed - nearer found: 1.1)
[DEBUG] Retrieving parent-POM: org.codehaus.plexus:plexus-components::1.1.4 for project: null:plexus-archiver:jar:1.0-alpha-5 from the repository.
[DEBUG] Retrieving parent-POM: org.codehaus.plexus:plexus::1.0.4 for project: org.codehaus.plexus:plexus-components:pom:1.1.4 from the repository.
[DEBUG]   org.codehaus.plexus:plexus-archiver:jar:1.0-alpha-3:runtime (removed - nearer found: 1.0-alpha-5)
[DEBUG]   org.codehaus.plexus:plexus-archiver:jar:1.0-alpha-5:runtime (selected for runtime)
[DEBUG] Configuring mojo 'org.apache.xbean:maven-xbean-plugin:2.3:mapping' -->
[DEBUG]   (f) namespace = http://servicemix.apache.org/config/1.0
[DEBUG]   (f) outputDir = c:\java\servicemix\servicemix-core\target\xbean
[DEBUG]   (f) project = org.apache.maven.project.MavenProject@eaec334d
[DEBUG]   (f) propertyEditorPaths = org.apache.xbean.spring.context.impl
[DEBUG]   (f) schema = c:\java\servicemix\servicemix-core\target\servicemix.xsd
[DEBUG]   (f) srcDir = c:\java\servicemix\servicemix-core\src\main\java
[DEBUG] -- end configuration --
[INFO] [xbean:mapping {execution: default}]
[DEBUG]  ======= XBeanMojo settings =======
[DEBUG] namespace[http://servicemix.apache.org/config/1.0]
[DEBUG] srcDir[c:\java\servicemix\servicemix-core\src\main\java]
[DEBUG] schema[c:\java\servicemix\servicemix-core\target\servicemix.xsd]
[DEBUG] outputDir[c:\java\servicemix\servicemix-core\target\xbean]
[DEBUG] propertyEditorPaths[org.apache.xbean.spring.context.impl]
[INFO] Generating META-INF properties file: c:\java\servicemix\servicemix-core\target\xbean\META-INF\services\org\apache\xbean\spring\http\servicemix.apache.org\config\1.0 for namespace: http://servicemix.apache.org/config/1.0
[INFO] Generating HTML documentation file: c:\java\servicemix\servicemix-core\target\servicemix.xsd.html for namespace: http://servicemix.apache.org/config/1.0
Warning, could not load class: org.apache.servicemix.jbi.resolver.EndpointResolver
Warning, could not load class: org.apache.servicemix.jbi.resolver.EndpointChooser
Warning, could not load class: org.apache.servicemix.jbi.messaging.PojoMarshaler
Warning, could not load class: org.apache.servicemix.jbi.resolver.EndpointChooser
Warning, could not load class: org.apache.servicemix.jbi.resolver.EndpointResolver
Warning, could not load class: org.apache.servicemix.jbi.resolver.EndpointChooser
Warning, could not load class: org.apache.servicemix.jbi.messaging.PojoMarshaler
Warning, could not load class: org.apache.servicemix.jbi.resolver.EndpointChooser
Warning, could not load class: javax.jbi.component.ServiceUnitManager
Warning, could not load class: javax.jbi.component.ServiceUnitManager
Warning, could not load class: org.apache.servicemix.jdbc.Statements
Warning, could not load class: org.apache.servicemix.jdbc.Statements
Warning, could not load class: org.apache.servicemix.jbi.container.JBIContainer
Warning, could not load class: org.apache.servicemix.jbi.container.JBIContainer
Warning, could not load class: org.apache.servicemix.jbi.container.JBIContainer
Warning, could not load class: org.apache.servicemix.jdbc.Statements
Warning, could not load class: org.apache.servicemix.jdbc.Statements
Warning, could not load class: org.apache.servicemix.jbi.resolver.SubscriptionFilter
Warning, could not load class: org.apache.servicemix.jbi.resolver.SubscriptionFilter
Warning, could not load class: org.apache.servicemix.jbi.framework.ComponentNameSpace
Warning, could not load class: org.apache.servicemix.jbi.resolver.SubscriptionFilter
Warning, could not load class: org.apache.servicemix.jbi.framework.ComponentNameSpace
[INFO] Generating XSD file: c:\java\servicemix\servicemix-core\target\servicemix.xsd for namespace: http://servicemix.apache.org/config/1.0
Warning, could not load class: org.apache.servicemix.jbi.resolver.EndpointResolver
Warning, could not load class: org.apache.servicemix.jbi.resolver.EndpointChooser
Warning, could not load class: org.apache.servicemix.jbi.messaging.PojoMarshaler
Warning, could not load class: org.apache.servicemix.jbi.resolver.EndpointChooser
Warning, could not load class: org.apache.servicemix.jbi.resolver.EndpointResolver
Warning, could not load class: org.apache.servicemix.jbi.resolver.EndpointChooser
Warning, could not load class: org.apache.servicemix.jbi.messaging.PojoMarshaler
Warning, could not load class: org.apache.servicemix.jbi.resolver.EndpointChooser
Warning, could not load class: org.apache.servicemix.jbi.resolver.EndpointResolver
Warning, could not load class: org.apache.servicemix.jbi.resolver.EndpointChooser
Warning, could not load class: org.apache.servicemix.jbi.messaging.PojoMarshaler
Warning, could not load class: org.apache.servicemix.jbi.resolver.EndpointChooser
Warning, could not load class: javax.jbi.component.ServiceUnitManager
Warning, could not load class: javax.jbi.component.ServiceUnitManager
Warning, could not load class: javax.jbi.component.ServiceUnitManager
Warning, could not load class: org.apache.servicemix.jdbc.Statements
Warning, could not load class: org.apache.servicemix.jdbc.Statements
Warning, could not load class: org.apache.servicemix.jdbc.Statements
Warning, could not load class: org.apache.servicemix.jbi.container.JBIContainer
Warning, could not load class: org.apache.servicemix.jbi.container.JBIContainer
Warning, could not load class: org.apache.servicemix.jbi.container.JBIContainer
Warning, could not load class: org.apache.servicemix.jdbc.Statements
Warning, could not load class: org.apache.servicemix.jdbc.Statements
Warning, could not load class: org.apache.servicemix.jdbc.Statements
Warning, could not load class: org.apache.servicemix.jbi.resolver.SubscriptionFilter
Warning, could not load class: org.apache.servicemix.jbi.framework.ComponentNameSpace
Warning, could not load class: org.apache.servicemix.jbi.resolver.SubscriptionFilter
Warning, could not load class: org.apache.servicemix.jbi.framework.ComponentNameSpace
Warning, could not load class: org.apache.servicemix.jbi.resolver.SubscriptionFilter
Warning, could not load class: org.apache.servicemix.jbi.framework.ComponentNameSpace
[INFO] ...done.
[DEBUG] org.apache.maven.plugins:maven-resources-plugin:maven-plugin:2.1:runtime (selected for runtime)
[DEBUG]   org.apache.maven:maven-model:jar:2.0:runtime (selected for runtime)
[DEBUG]     org.codehaus.plexus:plexus-utils:jar:1.0.4:runtime (selected for runtime)
[DEBUG]   org.apache.maven:maven-project:jar:2.0:runtime (selected for runtime)
[DEBUG]     org.codehaus.plexus:plexus-container-default:jar:1.0-alpha-8:runtime (selected for runtime)
[DEBUG]       classworlds:classworlds:jar:1.1-alpha-2:runtime (selected for runtime)
[DEBUG]       junit:junit:jar:3.8.1:runtime (selected for runtime)
[DEBUG]     org.apache.maven:maven-artifact:jar:2.0:runtime (selected for runtime)
[DEBUG]     org.apache.maven:maven-artifact-manager:jar:2.0:runtime (selected for runtime)
[DEBUG]       org.apache.maven:maven-repository-metadata:jar:2.0:runtime (selected for runtime)
[DEBUG]       org.apache.maven.wagon:wagon-provider-api:jar:1.0-alpha-5:runtime (selected for runtime)
[DEBUG]     org.apache.maven:maven-profile:jar:2.0:runtime (selected for runtime)
[DEBUG]   commons-io:commons-io:jar:1.0:runtime (selected for runtime)
[DEBUG]   org.apache.maven:maven-plugin-api:jar:2.0:runtime (selected for runtime)
[DEBUG] Configuring mojo 'org.apache.maven.plugins:maven-resources-plugin:2.1:resources' -->
[DEBUG]   (f) filters = []
[DEBUG]   (f) outputDirectory = c:\java\servicemix\servicemix-core\target\classes
[DEBUG]   (f) project = org.apache.maven.project.MavenProject@eaec334d
[DEBUG]   (f) resources = [org.apache.maven.model.Resource@f07355, org.apache.maven.model.Resource@23f1bb, org.apache.maven.model.Resource@1d33a6b]
[DEBUG] -- end configuration --
[INFO] [resources:resources]
[INFO] Using default encoding to copy filtered resources.
[DEBUG] org.apache.servicemix:servicemix-core:jar:3.0-SNAPSHOT (selected for null)
[DEBUG]   org.apache.servicemix.dependencies:jencks:jar:1.1.2:compile (selected for compile)
[DEBUG]   org.apache.geronimo.specs:geronimo-j2ee-jacc_1.0_spec:jar:1.0:compile (selected for compile)
[INFO] snapshot incubator-activemq:activemq-ra:4.0-SNAPSHOT: checking for updates from central
[DEBUG] repository metadata for: 'snapshot incubator-activemq:activemq-ra:4.0-SNAPSHOT' could not be found on repository: central
[INFO] snapshot incubator-activemq:activemq-ra:4.0-SNAPSHOT: checking for updates from servicemix-m2-repo
[DEBUG] repository metadata for: 'snapshot incubator-activemq:activemq-ra:4.0-SNAPSHOT' could not be found on repository: servicemix-m2-repo
[INFO] snapshot incubator-activemq:activemq-ra:4.0-SNAPSHOT: checking for updates from apache.snapshots
[DEBUG] activemq-ra: resolved to version 4.0-20060508.005319-6 from repository apache.snapshots
[DEBUG] Trying repository apache.snapshots
Downloading: http://svn.apache.org/maven-snapshot-repository/incubator-activemq/activemq-ra/4.0-SNAPSHOT/activemq-ra-4.0-20060508.005319-6.pom
1/1K
1K downloaded
[DEBUG]   Artifact resolved
[DEBUG] Retrieving parent-POM: incubator-activemq:activemq-parent::4.0-SNAPSHOT for project: null:activemq-ra:jar:4.0-20060508.005319-6 from the repository.
[DEBUG] activemq-parent: resolved to version 4.0-20060508.005319-6 from repository apache.snapshots
[DEBUG]   incubator-activemq:activemq-ra:jar:4.0-SNAPSHOT:compile (selected for compile)
[DEBUG] Trying repository central
Downloading: http://repo1.maven.org/maven2/activemq/jmdns/1.0-RC2/jmdns-1.0-RC2.pom
149/149b
149b downloaded
[DEBUG]   Artifact resolved
[DEBUG]     activemq:jmdns:jar:1.0-RC2:compile (selected for compile)
[DEBUG] Trying repository central
Downloading: http://repo1.maven.org/maven2/incubator-activemq/activemq-core/4.0-SNAPSHOT/activemq-core-4.0-20060508.005319-6.pom
[WARNING] Unable to get resource from repository central (http://repo1.maven.org/maven2)
[DEBUG] Trying repository servicemix-m2-repo
Downloading: http://servicemix.org/m2-repo/incubator-activemq/activemq-core/4.0-SNAPSHOT/activemq-core-4.0-20060508.005319-6.pom
[WARNING] Unable to get resource from repository servicemix-m2-repo (http://servicemix.org/m2-repo)
[DEBUG] Trying repository apache.snapshots
Downloading: http://svn.apache.org/maven-snapshot-repository/incubator-activemq/activemq-core/4.0-SNAPSHOT/activemq-core-4.0-20060508.005319-6.pom
4/9K
8/9K
9/9K
9K downloaded
[DEBUG]   Artifact resolved
[DEBUG] Retrieving parent-POM: incubator-activemq:activemq-parent::4.0-SNAPSHOT for project: null:activemq-core:jar:4.0-20060508.005319-6 from the repository.
[DEBUG] activemq-parent: resolved to version 4.0-20060508.005319-6 from repository apache.snapshots
[DEBUG]     incubator-activemq:activemq-core:jar:4.0-20060508.005319-6:compile (selected for compile)
[DEBUG]       org.apache.geronimo.specs:geronimo-jms_1.1_spec:jar:1.0:compile (selected for compile)
[DEBUG]       commons-logging:commons-logging:jar:1.0.4:compile (selected for compile)
[DEBUG]       backport-util-concurrent:backport-util-concurrent:jar:2.1:compile (selected for compile)
[DEBUG]       incubator-activemq:activeio-core:jar:3.0-beta2:compile (selected for compile)
[DEBUG] Retrieving parent-POM: org.springframework:spring-full::1.2.6 for project: null:spring:jar:1.2.6 from the repository.
[DEBUG] Retrieving parent-POM: org.springframework:spring-parent::1.2.6 for project: null:spring-full:pom:null from the repository.
[DEBUG]     org.springframework:spring:jar:1.2.6:compile (selected for compile)
[DEBUG]     org.apache.geronimo.specs:geronimo-j2ee-connector_1.5_spec:jar:1.0:compile (selected for compile)
[DEBUG]   junit:junit:jar:3.8.1:compile (selected for compile)
[DEBUG]   log4j:log4j:jar:1.2.12:runtime (selected for runtime)
[DEBUG]   ant:ant:jar:1.6.5:compile (selected for compile)
[DEBUG]   commons-logging:commons-logging:jar:1.0.4:compile (selected for compile)
[DEBUG] activemq-core: resolved to version 4.0-20060508.005319-6 from repository apache.snapshots
[DEBUG] Retrieving parent-POM: incubator-activemq:activemq-parent::4.0-SNAPSHOT for project: null:activemq-core:jar:4.0-20060508.005319-6 from the repository.
[DEBUG] activemq-parent: resolved to version 4.0-20060508.005319-6 from repository apache.snapshots
[DEBUG]   incubator-activemq:activemq-core:jar:4.0-20060508.005319-6:compile (removed - nearer found: 4.0-SNAPSHOT)
[DEBUG]   incubator-activemq:activemq-core:jar:4.0-SNAPSHOT:compile (selected for compile)
[DEBUG]     org.apache.geronimo.specs:geronimo-jms_1.1_spec:jar:1.0:compile (selected for compile)
[DEBUG]     backport-util-concurrent:backport-util-concurrent:jar:2.1:compile (selected for compile)
[DEBUG]     incubator-activemq:activeio-core:jar:3.0-beta2:compile (selected for compile)
[DEBUG]   org.springframework:spring:jar:1.2.6:compile (selected for compile)
[DEBUG]   commons-lang:commons-lang:jar:2.1:compile (selected for compile)
[DEBUG]   org.apache.geronimo.specs:geronimo-j2ee-connector_1.5_spec:jar:1.0:compile (selected for compile)
[DEBUG]   lingo:lingo:jar:1.0:compile (selected for compile)
[DEBUG]     concurrent:concurrent:jar:1.3.4:compile (selected for compile)
[DEBUG]     commons-logging:commons-logging:jar:1.0.3:compile (removed - nearer found: 1.0.4)
[DEBUG]     aopalliance:aopalliance:jar:1.0:compile (selected for compile)
[DEBUG]     xstream:xstream:jar:1.1.2:compile (selected for compile)
[DEBUG] While downloading springframework:spring:1.2.5
  This artifact has been relocated to org.springframework:spring:1.2.5.


[DEBUG] Retrieving parent-POM: org.springframework:spring-parent::1.2.5 for project: null:spring:jar:1.2.5 from the repository.
[DEBUG]     org.springframework:spring:jar:1.2.5:compile (removed - nearer found: 1.2.6)
[DEBUG]     mx4j:mx4j:jar:3.0.1:compile (selected for compile)
[DEBUG]   backport-util-concurrent:backport-util-concurrent:jar:2.1:compile (selected for compile)
[DEBUG]   jaxen:jaxen:jar:1.1-beta-8:compile (selected for compile)
[DEBUG]     xerces:xercesImpl:jar:2.6.2:compile (selected for compile)
[DEBUG]   org.apache.geronimo.specs:geronimo-jta_1.0.1B_spec:jar:1.0:compile (selected for compile)
[DEBUG]   stax-utils:stax-utils:jar:snapshot-20060502:compile (selected for compile)
[DEBUG]   geronimo:geronimo-connector:jar:1.0:compile (selected for compile)
[DEBUG]   commons-collections:commons-collections:jar:3.1:compile (selected for compile)
[DEBUG]   xmlbeans:xbean:jar:2.1.0:compile (selected for compile)
[DEBUG]   hsqldb:hsqldb:jar:1.7.3.3:test (selected for test)
[DEBUG]   lucene:lucene:jar:1.4.3:compile (selected for compile)
[DEBUG]   mx4j:mx4j:jar:3.0.1:compile (selected for compile)
[DEBUG] servicemix-jbi: using locally installed snapshot
[DEBUG] Retrieving parent-POM: org.apache.servicemix:servicemix::3.0-SNAPSHOT for project: null:servicemix-jbi:jar:3.0-20060507.131217-6 from the repository.
[DEBUG] servicemix: using locally installed snapshot
[DEBUG] Retrieving parent-POM: org.apache:apache::1 for project: org.apache.servicemix:servicemix:pom:3.0-SNAPSHOT from the repository.
[DEBUG]   org.apache.servicemix:servicemix-jbi:jar:3.0-SNAPSHOT:compile (selected for compile)
[DEBUG]     org.apache.geronimo.specs:geronimo-activation_1.0.2_spec:jar:1.0:compile (selected for compile)
[DEBUG]     org.apache.geronimo.specs:geronimo-qname_1.1_spec:jar:1.0:compile (selected for compile)
[DEBUG]   easymock:easymock:jar:1.2_Java1.3:test (selected for test)
[DEBUG]   xerces:xercesImpl:jar:2.6.2:compile (removed - nearer found: 2.7.1)
[DEBUG]   xerces:xercesImpl:jar:2.7.1:compile (selected for compile)
[DEBUG]   xml-apis:xml-apis:jar:1.3.02:compile (selected for compile)
[DEBUG]   wsdl4j:wsdl4j:jar:1.5.2:compile (selected for compile)
[DEBUG]   org.apache.geronimo.specs:geronimo-jms_1.1_spec:jar:1.0:compile (selected for compile)
[DEBUG] Retrieving parent-POM: org.apache.xbean:xbean::2.3 for project: null:xbean-server:jar:2.3 from the repository.
[DEBUG] Retrieving parent-POM: org.apache:apache::1 for project: org.apache.xbean:xbean:pom:2.3 from the repository.
[DEBUG]   org.apache.xbean:xbean-server:jar:2.3:compile (selected for compile)
[DEBUG]     commons-logging:commons-logging:jar:1.0.3:compile (removed - nearer found: 1.0.4)
[DEBUG] Retrieving parent-POM: org.apache.xbean:xbean::2.3 for project: null:xbean-kernel:jar:2.3 from the repository.
[DEBUG] Retrieving parent-POM: org.apache:apache::1 for project: org.apache.xbean:xbean:pom:2.3 from the repository.
[DEBUG]     org.apache.xbean:xbean-kernel:jar:2.3:compile (selected for compile)
[DEBUG]       backport-util-concurrent:backport-util-concurrent:jar:2.0_01_pd:compile (removed - nearer found: 2.1)
[DEBUG]     org.apache.xbean:xbean-spring:jar:2.3:compile (selected for compile)
[DEBUG]       commons-logging:commons-logging:jar:1.0.3:compile (removed - nearer found: 1.0.4)
[DEBUG]       org.springframework:spring:jar:1.2.4:compile (removed - nearer found: 1.2.6)
[DEBUG]   xstream:xstream:jar:1.1.2:compile (selected for compile)
[DEBUG]   geronimo:geronimo-transaction:jar:1.0:compile (selected for compile)
[DEBUG]   org.apache.geronimo.specs:geronimo-j2ee-management_1.0_spec:jar:1.0:compile (selected for compile)
[DEBUG]   xalan:xalan:jar:2.7.0:compile (selected for compile)
[DEBUG] While downloading xml-apis:xml-apis:2.0.2
  This artifact has been relocated to xml-apis:xml-apis:1.0.b2.


[DEBUG]     xml-apis:xml-apis:jar:1.0.b2:compile (removed - nearer found: 1.3.02)
[DEBUG]   mx4j:mx4j-remote:jar:3.0.1:compile (selected for compile)
[DEBUG]   commons-betwixt:commons-betwixt:jar:0.7:compile (selected for compile)
[DEBUG]     commons-logging:commons-logging:jar:1.0.2:compile (removed - nearer found: 1.0.4)
[DEBUG]     xml-apis:xml-apis:jar:1.0.b2:compile (removed - nearer found: 1.3.02)
[DEBUG]     commons-beanutils:commons-beanutils-core:jar:1.7.0:compile (selected for compile)
[DEBUG]       commons-logging:commons-logging:jar:1.0:compile (removed - nearer found: 1.0.4)
[DEBUG]       commons-collections:commons-collections:jar:2.0:compile (removed - nearer found: 3.1)
[DEBUG]     commons-digester:commons-digester:jar:1.6:compile (selected for compile)
[DEBUG]       commons-logging:commons-logging:jar:1.0:compile (removed - nearer found: 1.0.4)
[DEBUG]       xml-apis:xml-apis:jar:1.0.b2:compile (removed - nearer found: 1.3.02)
[DEBUG]       commons-collections:commons-collections:jar:2.1:compile (removed - nearer found: 3.1)
[DEBUG]   stax:stax-api:jar:1.0:compile (selected for compile)
[DEBUG]   xmlbeans:xmlpublic:jar:2.1.0:compile (selected for compile)
[DEBUG]   org.apache.xbean:xbean-spring:jar:2.3:compile (selected for compile)
[DEBUG]     commons-logging:commons-logging:jar:1.0.3:compile (removed - nearer found: 1.0.4)
[DEBUG]     org.springframework:spring:jar:1.2.4:compile (removed - nearer found: 1.2.6)
[DEBUG]   commons-beanutils:commons-beanutils-core:jar:1.7.0:compile (selected for compile)
[DEBUG]     commons-logging:commons-logging:jar:1.0:compile (removed - nearer found: 1.0.4)
[DEBUG]     commons-collections:commons-collections:jar:2.0:compile (removed - nearer found: 3.1)
[DEBUG]   woodstox:wstx-asl:jar:2.0.3:compile (selected for compile)
[DEBUG] Trying repository servicemix-m2-repo
Downloading: http://servicemix.org/m2-repo/activemq/jmdns/1.0-RC2/jmdns-1.0-RC2.jar
[WARNING] Unable to get resource from repository servicemix-m2-repo (http://servicemix.org/m2-repo)
[DEBUG] Skipping disabled repository apache.snapshots
[DEBUG] Trying repository codehaus-snapshot
Downloading: http://snapshots.maven.codehaus.org/maven2/activemq/jmdns/1.0-RC2/jmdns-1.0-RC2.jar
[WARNING] Unable to get resource from repository codehaus-snapshot (http://snapshots.maven.codehaus.org/maven2)
[DEBUG] Trying repository maven-csharp
Downloading: http://localhost/repo/activemq/jmdns/1.0-RC2/jmdns-1.0-RC2.jar
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Failed to resolve artifact.

Error transferring file
  activemq:jmdns:jar:1.0-RC2

from the specified remote repositories:
  central (http://repo1.maven.org/maven2),
  servicemix-m2-repo (http://servicemix.org/m2-repo),
  apache.snapshots (http://svn.apache.org/maven-snapshot-repository),
  codehaus-snapshot (http://snapshots.maven.codehaus.org/maven2),
  apache-maven1-snapshot (http://cvs.apache.org/repository),
  maven-csharp (http://localhost/repo)
Path to dependency: 
	1) org.apache.servicemix:servicemix-core:jar:3.0-SNAPSHOT
	2) incubator-activemq:activemq-ra:jar:4.0-SNAPSHOT
	3) activemq:jmdns:jar:1.0-RC2



Caused by I/O exception: Connection refused: connect

[INFO] ------------------------------------------------------------------------
[DEBUG] Trace
org.apache.maven.lifecycle.LifecycleExecutionException: Error transferring file
  activemq:jmdns:jar:1.0-RC2

from the specified remote repositories:
  central (http://repo1.maven.org/maven2),
  servicemix-m2-repo (http://servicemix.org/m2-repo),
  apache.snapshots (http://svn.apache.org/maven-snapshot-repository),
  codehaus-snapshot (http://snapshots.maven.codehaus.org/maven2),
  apache-maven1-snapshot (http://cvs.apache.org/repository),
  maven-csharp (http://localhost/repo)
Path to dependency: 
	1) org.apache.servicemix:servicemix-core:jar:3.0-SNAPSHOT
	2) incubator-activemq:activemq-ra:jar:4.0-SNAPSHOT
	3) activemq:jmdns:jar:1.0-RC2


	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:551)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:475)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:454)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:306)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:273)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:140)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:322)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:115)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:256)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
	at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.apache.maven.artifact.resolver.ArtifactResolutionException: Error transferring file
  activemq:jmdns:jar:1.0-RC2

from the specified remote repositories:
  central (http://repo1.maven.org/maven2),
  servicemix-m2-repo (http://servicemix.org/m2-repo),
  apache.snapshots (http://svn.apache.org/maven-snapshot-repository),
  codehaus-snapshot (http://snapshots.maven.codehaus.org/maven2),
  apache-maven1-snapshot (http://cvs.apache.org/repository),
  maven-csharp (http://localhost/repo)
Path to dependency: 
	1) org.apache.servicemix:servicemix-core:jar:3.0-SNAPSHOT
	2) incubator-activemq:activemq-ra:jar:4.0-SNAPSHOT
	3) activemq:jmdns:jar:1.0-RC2


	at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:140)
	at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:63)
	at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolveTransitively(DefaultArtifactResolver.java:233)
	at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolveTransitively(DefaultArtifactResolver.java:211)
	at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolveTransitively(DefaultArtifactResolver.java:182)
	at org.apache.maven.plugin.DefaultPluginManager.resolveTransitiveDependencies(DefaultPluginManager.java:1117)
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:366)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:534)
	... 16 more
Caused by: org.apache.maven.wagon.TransferFailedException: Error transferring file
	at org.apache.maven.wagon.providers.http.LightweightHttpWagon.fillInputData(LightweightHttpWagon.java:99)
	at org.apache.maven.wagon.StreamWagon.get(StreamWagon.java:68)
	at org.apache.maven.artifact.manager.DefaultWagonManager.getRemoteFile(DefaultWagonManager.java:369)
	at org.apache.maven.artifact.manager.DefaultWagonManager.getArtifact(DefaultWagonManager.java:282)
	at org.apache.maven.artifact.manager.DefaultWagonManager.getArtifact(DefaultWagonManager.java:244)
	at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:124)
	... 23 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:333)
	at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:195)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:182)
	at java.net.Socket.connect(Socket.java:507)
	at java.net.Socket.connect(Socket.java:457)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:157)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:365)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:477)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:214)
	at sun.net.www.http.HttpClient.New(HttpClient.java:287)
	at sun.net.www.http.HttpClient.New(HttpClient.java:299)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:792)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:744)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:669)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:913)
	at org.apache.maven.wagon.providers.http.LightweightHttpWagon.fillInputData(LightweightHttpWagon.java:85)
	... 28 more
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 16 seconds
[INFO] Finished at: Mon May 08 10:48:34 CEST 2006
[INFO] Final Memory: 9M/16M
[INFO] ------------------------------------------------------------------------",,,,,,,,,,,,,,,,,MNG-2633,MNG-2049,MNG-1925,,,,,,,,,,,,,,,,,,,,,,,,MNG-3470,,,,,,MNG-2295,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i294gn:",9223372036854775807,,,,,,,,,,,,,,,,,,,"15/May/06 11:41;kenney;fixed in revision 406673: also catch TransferFailedException in maven-wagon-manager's DefaultWagonManager, so other repo's can be consulted.;;;","15/May/06 11:53;carlos;Reopen to set the right fix version and remember to port it to 2.0.x;;;","15/May/06 11:59;carlos;Fixed in trunk by Kenney;;;","15/May/06 12:17;kenney;merged changes to the 2.0.x branch.;;;","23/Oct/06 15:20;kenney;assign responsibility;;;","18/Mar/08 13:01;bentmann;Merged to 2.0.x branch in r406684, next Maven release was in r495436 and this was 2.0.5;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
If you zap the ~/.m2 directory then we can no longer build with m2 on ActiveMQ,MNG-2262,12796430,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Won't Fix,brettporter,jstrachan,jstrachan,02/May/06 02:54,02/May/06 03:03,03/Jan/22 13:13,02/May/06 03:01,2.0.4,,,,,,,,General,,,,,0,,,,"We get the following...

macstrac:/workspace/eclipse/activemq jstrachan$ mvn clean install -Dmaven.test.skip=true
[INFO] Scanning for projects...
[INFO] Reactor build order: 
[INFO]   ActiveMQ
[INFO]   ActiveMQ :: JAAS
[INFO]   ActiveMQ :: Core
[INFO]   ActiveCluster
[INFO]   ActiveMQ :: Console
[INFO]   ActiveMQ :: RA
[INFO]   ActiveMQ :: RAR
[INFO]   ActiveMQ :: Web
[INFO]   ActiveMQ :: Web Demo
[INFO]   ActiveMQ :: Optional
[INFO]   ActiveMQ :: GBean Interfaces
[INFO]   ActiveMQ :: GBeans
[INFO]   Bundle Plugin
[INFO]   ActiveMQ :: Assembly
[INFO] ----------------------------------------------------------------------------
[INFO] Building ActiveMQ
[INFO]    task-segment: [clean, install]
[INFO] ----------------------------------------------------------------------------
Downloading: http://snapshots.maven.codehaus.org/maven2/org/apache/maven/plugins/maven-surefire-plugin/2.1.3-SNAPSHOT/maven-surefire-plugin-2.1.3-SNAPSHOT.pom
[WARNING] Unable to get resource from repository codehaus.snapshots (http://snapshots.maven.codehaus.org/maven2)
Downloading: http://maven-csharp.javaforge.com/repo/org/apache/maven/plugins/maven-surefire-plugin/2.1.3-SNAPSHOT/maven-surefire-plugin-2.1.3-SNAPSHOT.pom
0b downloaded
[WARNING] *** CHECKSUM FAILED - Invalid checksum file - RETRYING
Downloading: http://maven-csharp.javaforge.com/repo/org/apache/maven/plugins/maven-surefire-plugin/2.1.3-SNAPSHOT/maven-surefire-plugin-2.1.3-SNAPSHOT.pom
0b downloaded
[WARNING] *** CHECKSUM FAILED - Invalid checksum file - IGNORING
[WARNING] Unable to get resource from repository maven-csharp-plugins (http://maven-csharp.javaforge.com/repo)
Downloading: http://cvs.apache.org/maven-snapshot-repository/org/apache/maven/plugins/maven-surefire-plugin/2.1.3-SNAPSHOT/maven-surefire-plugin-2.1.3-SNAPSHOT.pom
[WARNING] Unable to get resource from repository apache.snapshots (http://cvs.apache.org/maven-snapshot-repository)
Downloading: http://snapshots.maven.codehaus.org/maven2/org/apache/maven/plugins/maven-surefire-plugin/2.1.3-SNAPSHOT/maven-surefire-plugin-2.1.3-SNAPSHOT.pom
[WARNING] Unable to get resource from repository codehaus-snapshot (http://snapshots.maven.codehaus.org/maven2)
Downloading: http://maven-csharp.javaforge.com/repo/org/apache/maven/plugins/maven-surefire-plugin/2.1.3-SNAPSHOT/maven-surefire-plugin-2.1.3-SNAPSHOT.pom
0b downloaded
[WARNING] *** CHECKSUM FAILED - Invalid checksum file - RETRYING
Downloading: http://maven-csharp.javaforge.com/repo/org/apache/maven/plugins/maven-surefire-plugin/2.1.3-SNAPSHOT/maven-surefire-plugin-2.1.3-SNAPSHOT.pom
0b downloaded
[WARNING] *** CHECKSUM FAILED - Invalid checksum file - IGNORING
[WARNING] Unable to get resource from repository maven-csharp (http://maven-csharp.javaforge.com/repo)
Downloading: http://cvs.apache.org/repository/org.apache.maven.plugins/poms/maven-surefire-plugin-2.1.3-SNAPSHOT.pom
[WARNING] Unable to get resource from repository apache-maven1-snapshot (http://cvs.apache.org/repository)
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Failed to resolve artifact.

GroupId: org.apache.maven.plugins
ArtifactId: maven-surefire-plugin
Version: 2.1.3-SNAPSHOT

Reason: Unable to download the artifact from any repository

  org.apache.maven.plugins:maven-surefire-plugin:pom:2.1.3-SNAPSHOT

from the specified remote repositories:
  central (http://repo1.maven.org/maven2),
  codehaus.snapshots (http://snapshots.maven.codehaus.org/maven2),
  apache.snapshots (http://cvs.apache.org/maven-snapshot-repository),
  maven-csharp-plugins (http://maven-csharp.javaforge.com/repo),
  codehaus-snapshot (http://snapshots.maven.codehaus.org/maven2),
  apache-maven1-snapshot (http://cvs.apache.org/repository),
  maven-csharp (http://maven-csharp.javaforge.com/repo)


[INFO] ------------------------------------------------------------------------
[INFO] For more information, run Maven with the -e switch
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 12 seconds
[INFO] Finished at: Tue May 02 08:52:29 BST 2006
[INFO] Final Memory: 3M/6M
[INFO] ------------------------------------------------------------------------",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28nzj:",9223372036854775807,,,,,,,,,,,,,,,,,,,"02/May/06 03:01;brettporter;snapshots get cleaned up periodically.

You should be using the 2.1.3 release.;;;","02/May/06 03:02;carlos;Try removing the m1 repos from the pom (layout=legacy) and clean the repo
Maven 1 repos don't work with snapshots.;;;","02/May/06 03:03;carlos;Specially the http://maven-csharp.javaforge.com because instead of returning 404 status returns an empty page;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Profiles ignored when working with non-projects (such as archetype:create),MNG-3099,12797275,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,joakime,joakime,01/May/06 20:30,05/Apr/15 22:17,03/Jan/22 13:13,04/Feb/08 13:39,,,,,,2.0.9,,,,,,,,27,,,,"Several conditions have to be met to show this bug.

1) Be in an environment that does not have access to repo1.maven.org, (such as a corporate environment)
2) Have no content in your local repository (a fresh install of maven 2.0.4)
3) Attempt to use a plugin that has no project requirement (such as archetype:create)

The plugin fails because access to repo1.maven.org cannot be accessed.

Recommended solution:
Create a settings.xml profile that changes the location of the 'central' repository to point to an internal resource (such as a maven-proxy installation).

<settings>
  <profiles>
    <profile>
      <id>use_internal</id>
      <repositories>
        <repository>
          <id>central</id>
          <name>Internal Central Repository</name>
          <url>http://repo.internal.com/maven2</url>
          <releases>
            <enabled>true</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </repository>
      </repositories>
      <pluginRepositories>
        <pluginRepository>
          <id>central</id>
          <name>Internal Central Repository</name>
          <url>http://repo.internal.com/maven2</url>
          <releases>
            <enabled>true</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </pluginRepository>
      </pluginRepositories>
    </profile>
  </profiles>

  <activeProfiles>
    <activeProfile>use_internal</activeProfile>
  </activeProfiles>
</settings>

Try again.
Still fails.

The reason is that the default behaviour for non-project execution is to use the maven super pom, however there is a bug with that flow that  does not allow for the merging of the settings.xml profiles.",,,,,,,,,,,,,,,,,MNG-3235,MNG-2236,MNG-3337,MNG-2918,MNG-1928,MNG-2716,,,,,,,,,,,,,,,,,,,,,MNG-4246,MNG-4109,ARCHETYPE-89,ARCHETYPE-59,ARCHETYPE-66,,,,,,,"03/May/06 01:09;carlos;MNG-2261-2.patch;https://issues.apache.org/jira/secure/attachment/12711494/MNG-2261-2.patch","01/May/06 20:32;joakime;MNG-2261.patch;https://issues.apache.org/jira/secure/attachment/12711697/MNG-2261.patch","13/Sep/07 00:52;Plugin-showing-MNG3099.zip;https://issues.apache.org/jira/secure/attachment/12712506/Plugin-showing-MNG3099.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29cdr:",9223372036854775807,,,,,,,,,,,,,,,,,,,"01/May/06 20:32;joakime;Patch against maven-core and maven-project in ..
https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x
Revision: 398684;;;","03/May/06 01:09;carlos;Updated patch agains trunk

Tests don't pass after applying the patch;;;","12/Jul/06 14:00;jdcasey;I found that a similar piece of code already exists in the trunk, written by mkleint in revId 415000. I'm trying to lift that piece instead, for consistency's sake. If that works, I'll add some unit tests and call it good.

At a basic level, all we need to do is verify that the superPOM, when loaded standalone, is injected with existing properties from active profiles. We should be able to work up a much more elemental unit test to give this a try, and then come back around to the type of test explained above for one more level of verification.;;;","12/Jul/06 15:03;jdcasey;Unit test applied to trunk that will verify that repositories and properties injected into the standalone superPOM via profile are available in the project instance.

Also, merged the changes to implementation and unit test into the 2.0.x branch, and verified that all ITs which are active still run.;;;","20/Jan/07 16:43;bulente;Hi,

I checked out the trunk, compiled, assembled and installed. And tried to execute archetype:create but it still won't honor the global settings.xml file. Am I missing something ? 

Note: When I compiled and assembled, maven-2.0.6-SNAPSHOT-bin.zip is created and I used this for testing.

Does any one has any comments on this ? 

Bulent Erdemir
;;;","08/Mar/07 11:44;jmaelstrom;This bug needs to be reopened as it still does not work;;;","08/Mar/07 14:11;wsmoak;Reopening based on comments and ARCHETYPE-66.;;;","14/Mar/07 10:44;wsmoak;Workaround:  mvn ... -f /path/to/simple.pom

and ""simple.pom"" contains the following:

<project>
   <modelVersion>4.0.0</modelVersion>
   <groupId>com.example</groupId>
   <artifactId>MNG-2261-workaround</artifactId>
   <packaging>pom</packaging>
   <version>1</version>
</project>

If there is ""a project"" involved, Maven will use the profiles and repositories in settings.xml

For archetype:create, you don't want a pom.xml in the current directory or the plugin will add a <module> to it and hook it up as the newly created project's parent, so use the -f switch to point it at a file somewhere else.

For other things such as deploy:deploy-file, having a pom.xml file in the current directory works fine.  (If you're actually deploying a pom with -DpomFile=..., then name that one something else, or just use -f as above.)

Related thread:  http://www.nabble.com/Maven-ignoring-Artifactory-proxy-settings--t3397576s177.html;;;","03/Jun/07 16:09;jvanzyl;The archetype problem is really something similar to the staging plugin problem where the wagons being setup aren't getting populated with repository, proxy, or authentication information from the settings.xml. Each of these plugins does it's own thing which is the problem. We need a base class for all these things to use. Or a utilitity. Making a note.;;;","04/Jun/07 10:42;jvanzyl;After looking the code this is definitlely archetype specific and specific to any mojo using resolution capabilties that are not done in the same way that Maven does it. If you look up the artifact resolver, or downloader, without initializings the WagonManager then there will be no meshing of the settings.xml. I'll make a more general issue for this.;;;","05/Jun/07 09:24;joakime;This is not archetype specific.

The problem outlined here occurs for any non-project plugin that accesses the repository system.
This problem also exists in the stage:copy plugin.
;;;","09/Jul/07 07:45;joakime;This is not archetype specific.

This occurs with the maven-eclipse-plugin too.;;;","09/Jul/07 07:46;joakime;When working in limited environments, NONE of the $HOME/conf/settings.xml or the $HOME/.m2/settings.xml values are merged.
This is important when working with custom repositories for example.;;;","13/Sep/07 00:52;william_ferguson_au@yahoo.com;Invoking a Mojo that doesn't require a project (ie *@requiresProject false* in your Mojo) doesn't load the Profiles defined in LOCAL_HOME settings or MAVEN_HOME settings.

In an effort to make this issue as explicit as possible, I have attached Plugin-showing-MNG3099.zip

It contains a plugin project (with a Mojo conigured with *@requiresProject false*) and local and global settings files.

Put the local and global settings files in the normal place and build and install the plugin.

Then from the plugin project folder execute:
{quote}
D:\Modules\maven-test-plugin>mvn com.yarris.maven.plugins:maven-test-plugin:profile-props
[INFO] Scanning for projects...
[INFO] snapshot com.yarris.maven.plugins:maven-test-plugin:1.0-SNAPSHOT: checking for updates from snapshot
[INFO] ----------------------------------------------------------------------------
[INFO] Building maven-test-plugin
[INFO]    task-segment: [com.yarris.maven.plugins:maven-test-plugin:profile-props] (aggregator-style)
[INFO] ----------------------------------------------------------------------------
[INFO] [test:profile-props]
[INFO] local-profile-prop=local-profile-prop-value
[INFO] global-profile-prop=global-profile-prop-value
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESSFUL
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 1 second
[INFO] Finished at: Thu Sep 13 15:47:18 EST 2007
[INFO] Final Memory: 2M/4M
[INFO] ------------------------------------------------------------------------
{quote}

Note that the  local-profile-prop and global-profile-prop have resolved to the expected values.

Now execute:
{quote}
D:\Modules\maven-test-plugin>mvn com.yarris.maven.plugins:maven-test-plugin:profile-props -f no-pom.xml
[INFO] Scanning for projects...
[INFO] ----------------------------------------------------------------------------
[INFO] Building Maven Default Project
[INFO]    task-segment: [com.yarris.maven.plugins:maven-test-plugin:profile-props] (aggregator-style)
[INFO] ----------------------------------------------------------------------------
[INFO] [test:profile-props]
[INFO] local-profile-prop=null
[INFO] global-profile-prop=null
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESSFUL
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 1 second
[INFO] Finished at: Thu Sep 13 15:48:56 EST 2007
[INFO] Final Memory: 2M/4M
[INFO] ------------------------------------------------------------------------
{quote}
Note how local-profile-prop and global-profile-prop no longer have values.

As has been noted the most common example of this is archetype:create which requires the remote repository to be explicitly provided on the command line via the remoteRepositories System property if you are pulling an archetype from somewhere other than central. Eg
{code}
mvn archetype:create -DgroupId=com.yarris -DartifactId=foo-project -DarchetypeGroupId=com.yarris.maven.archetype \
  -DarchetypeArtifactId=archetype-standard -DremoteRepositories=http://somewhere.com.au:8080/proximity/repository/release
{code}
It should be possible to define an active Profile in either local or global settings.xml that defines a remote repository, and have the archetype pulled from that repository.

It should also be possible to refer to a property provided by an active Profile
But it occurs for any Mojo that does not require a project.
;;;","04/Feb/08 13:39;jdcasey;should be fixed in revIds:

618391
618393;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong execution order of plugins in same phase,MNG-2258,12794324,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,bmargulies,david@davidkarlsen.com,david@davidkarlsen.com,30/Apr/06 10:01,09/Apr/15 18:04,03/Jan/22 13:13,19/Jun/11 16:38,2.0.4,,,,,3.0.3,,,,,,,,83,,,,"AFAIK plugins should be execute in the same order as they are listed in the POM, when bound to the same phase. This does not happen, the execution order is arbitrary.",N/A,,,,,,,,,,,,,,,,MNG-5088,,,,,,,,,,,MNG-5799,,,,,,,,,MNG-4341,MNG-2784,MNG-3719,MNG-5478,MNG-4727,MNG-1994,MNG-5090,,,,,MNG-1412,,,,,,"18/Aug/09 05:32;ekobir;mavenTest.zip;https://issues.apache.org/jira/secure/attachment/12712950/mavenTest.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i2904v:",9223372036854775807,,,,,,,,,,,,,,,,,,,"09/May/06 05:47;fredriv;I'm having the same problem.  I need to run two plugins in the generate-sources phase, where one depends on the output of the other.

For more information, please see http://www.nabble.com/Plugin-execution-order-within-lifecycle-phase-t1541372.html#a4187121
;;;","18/Jul/06 12:13;dhay;I'd actually rate this much higher priority.  I've already run into this limitation several times during the development of my project.  In particular, I want to run the dependency-maven-plugin:copy followed by the assembly plugin.  But maven wants to run them in the opposite order, which doesn't work very well.

I've also wanted to run the hibernate3-plugin to generate my DDL followed by an antrun plugin to load some sample data, but I can't be assured that the plugins will run in that order.;;;","19/Jul/06 01:50;swisswheel;I'd rate this issue much higher too. I've already solved the order problem with dependencies (see MNG-1412) and this issue can be solved equivalently.;;;","24/Oct/06 18:35;topping;Same problem here.  It's possible to make a new goal on a mojo so that one contains another, but there's no other way to get them to cleanly execute in order.;;;","25/Oct/06 01:52;swisswheel;BTW the patches appended to MNG-1412 does also solve the execution order problem of plugins. It does solve the order problem for all artifacts! Until today the HashSets and HashMaps where not replaced by LinkedHashSets and LinkedHashMaps (see SVN repo). I don't understand why commiters from these Maven 2 components don't apply the patches for such an important issue. I would help if I had commit rights but right now i can just watch and claim.

Cheers,
Martin
http://el4j.sf.net;;;","25/Oct/06 01:59;topping;Great observation Martin!  I marked this as superceded by that bug.;;;","23/May/07 16:02;sdavids;This bug should be solved independent of MNG-1412.

This is a *serious* defect.

Considering the high number of votes and watchers it is important to a lot of people.

It should be backported to 2.0.x stream.

After that a new 2.0.x release should be made.

Having to wait over one year for a simple HashSet -> LinkedHashSet and HashMap -> LinkedHashMap replacement is ridiculous.

Even more so, considering that a patch has been supplied over half a year ago.

@@ Use Case @@

<project ...>
  ...
  <modules>
    <module>ejb</module>
    <module>war</module>
  </modules>
...
  <build>
...
    <plugins>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <inherited>false</inherited>
        <executions>
          <execution>
            <phase>install</phase>
            <configuration>
              <tasks>
... deploy to server ...
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
...    
  </build>
...
</project>



Let's say ""ejb"" contains EJB stuff and ""war"" contains the web application; ""war"" depends on ""ejb""; and both are children of a parent POM, so that the generated ""ejb"" JAR gets packaged into the WAR.

Now we want to be able to use ""install"" to deploy the created WAR to the server (yes, there's Cargo, but it does not support all JEE containers, yet.)

We have to set <inherited>false</inherited> so Maven won't run the deployment for ""ejb"" and ""war"".

But it does not work because ""maven-antrun-plugin"" is run before the children (""ejb"" and ""war"") are run.;;;","24/May/07 02:25;maik;Maybe you should also have a look at MNG-2784;;;","07/Jun/07 11:57;jdcasey;See MNG-2784;;;","15/Nov/07 08:00;viktornordling;It seems that this issue is not actually resolved. The fix version is set to 2.1, but if I am not mistaken, 2.1 has not been released yet?

Since we need this issue to be fixed for our project, I would be happy if it could be reopened.;;;","02/Mar/08 13:54;arobinson74;This is a blocking issue, why is it being left to 2.1?;;;","05/Dec/08 10:00;sandrab;Hi, 
What about this issue ?
Do you have a release date ?
Thanks in advance;;;","30/May/09 08:13;davidh;Hi, 

This bug is always present in the 2.1 version.
On the state of this issue, we can see that is closed. The reason : Duplicate.
But where is the reference of the duplicated issue ?

Cheers,
David;;;","10/Jun/09 11:07;jdcasey;possible lingering problem with this issue, which (hopefully) will be different from MNG-3719. I'll re-close as duplicate if we can't tease out some more details and a test case for this issue, since there is no hope of reliably fixing the issue if we can't reproduce it.;;;","10/Jun/09 17:49;jdcasey;Re-closing as duplicate since there hasn't been any sort of update on the ongoing reports of problems. We can come back to this in the next release if there is still a problem (other than the problem of a limited lifecycle vocabulary, that is).;;;","09/Jul/09 15:26;jlalwani;Just tried this issue in with 2.2 and doesn't look like it's fixed. The pom has a profile with 4 plugins in the following order
a) SQL-maven plugin. This plugin drops the database
b) hibernate3-maven-plugin :- this creates the database schema
c) dbunit-maven-plugin: populates the data with some test data
d) SQL-maven plugin:- Adds some more test data to the database

All ther executions are tied to process-test-resources phase.

Maven executes the plugins in order a, d, b, c, instead of a, b, c, d;;;","16/Jul/09 02:03;justink;I Agree. This bug is not fixed in 2.2.0. ;;;","16/Jul/09 09:18;wsmoak;Reopening based on comments.   Can someone clarify the expected behavior and point to docs/tests which explain it?;;;","16/Jul/09 19:15;wsmoak;Un-setting fix version (was 2.2.0) as it was marked as a duplicate and it's not clear it was ever fixed...;;;","17/Jul/09 02:50;bentmann;Could one of the reporters attach a working example POM to reproduce this?;;;","18/Aug/09 05:32;ekobir;Maven is grouping executions of same plugin at same phase  without checking whether there is/are execution(s) of another plugin(s) in between or not in the pom file.

And this cause the execution order specified by Jayesh Lalwani. A dummy project is attached if it is necessary to see the problem.
Suggested solution by John Casey on MNG-3719 is to use different phases for execution of same plug-in. 

Is this going to be fixed or should we follow suggested ""cheating"" ?;;;","18/Aug/09 12:02;jdcasey;Re-specifying the same plugin in two different XML blocks of the build section within the same POM (without using profiles) is NOT valid. This is a recipe for disaster. If users must replicate any new configurations across multiple plugin sections just to get consistent behavior for all mojos in a plugin, this will cause massive confusion.

I do agree that we should detect this scenario and fail with a validation error, so I'm not going to close this issue yet. But if you want two mojo executions from the same plugin to happen before and after another mojo from another plugin, you must assign them to different phases to arrange this.;;;","27/Aug/09 08:43;roti;I am not a big maven guru, but we have this problem now with 2.2.1

My breaf description is this:
the first transitive dependency version will win

{code:xml}
...
<dependency> <!-- has a dependency on myModul_X-1.0 -->
    <groupId>myCompany.myType</groupId>
    <artifactId>myModul_B</artifactId>
    <version>1.0</version>
    <type>myType</type>
</dependency>
<dependency> <!-- has a dependency on myModul_X-1.2 -->
    <groupId>myCompany.myType</groupId>
    <artifactId>myModul_A</artifactId>
    <version>1.0</version>
    <type>myType</type>
</dependency>   
...
{code}

after the build, myModul_X-1.0 will be included
...
[DEBUG]   myCompany.myType:myModul_A:myType:1.0:compile (selected for compile)
[DEBUG]     myCompany.myType:myModul_X:myType:1.2:compile (removed - nearer found: 1.0)
...


but when myModul_A is the first in the pom:

{code:xml}
...
<dependency> <!-- has a dependency on myModul_X-1.2 -->
    <groupId>myCompany.myType</groupId>
    <artifactId>myModul_A</artifactId>
    <version>1.0</version>
    <type>myType</type>
</dependency>  
<dependency> <!-- has a dependency on myModul_X-1.0 -->
    <groupId>myCompany.myType</groupId>
    <artifactId>myModul_B</artifactId>
    <version>1.0</version>
    <type>myType</type>
</dependency>
...
{code}

after the build, myModul_X-1.2 will be included

...
[DEBUG]     myCompany.myType:myModul_X:myType:1.0:compile (removed - nearer found: 1.2)
...

additional info:
it worked ok with 2.0.8 , but not since 2.0.9;;;","27/Aug/09 09:24;bentmann;Hrotkó, the dependency resolution works as designed, cf. [Introduction to the Dependency Mechanism|http://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Transitive_Dependencies]. If you don't want to rely on the nearest-/first-wins strategy for conflict resolution, you can use {{<dependencyManagement>}} to control the versions of the transitive dependencies.;;;","02/Dec/09 10:39;henryju;In my corporate parent pom I have the following in reporting section:

{code:xml}
<plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-jxr-plugin</artifactId>
    <version>2.1</version>
</plugin>
 ...
<plugin>
    <groupId>org.codehaus.mojo</groupId>
    <artifactId>taglist-maven-plugin</artifactId>
    <version>2.4</version>
</plugin>
{code}
(in this order)

Then I have create a sample test project from Maven quickstart archetype but:

{noformat}
>mvn clean install site
...
[INFO] Generating ""Tag List"" report.
[ERROR] Taglist plugin MUST be executed after the JXR plugin.  No links to xref were generated.
[WARNING] Unable to locate Source XRef to link to - DISABLED
{noformat}

Looking at the log I can see reporting plugins are generated in an order completely different of the reporting section order.;;;","02/Dec/09 11:56;swisswheel;Hi Julien

Are you sure that you're using Maven 2.2.1, the newest one? All previous version where for trash, when you where going into ""details"", like the execution order in one phase. Also the current version needs still some fine tuning, that I'm currently working out.

Cheers
Martin;;;","31/Dec/09 08:54;wargre;Hi, 

i've got same issue as Julien with 2.2.1 version. 

Does anyone have a workaround?

;;;","31/Dec/09 10:22;pablo;@wargre: My workaround is to run JXR twice:
* first time in the pre-site phase (with the POM snippet below), so you're sure it's done before the rest.
* second time in the standard reporting section, so you get the XREF links in the site menu.

{code}
<build>
  <plugins>
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-jxr-plugin</artifactId>
      <executions>
        <execution>
          <id>jxr-pre-site</id>
          <phase>pre-site</phase>
          <goals>
            <goal>jxr</goal>
            <goal>test-jxr</goal>
          </goals>
        </execution>
      </executions>
    </plugin>
  </plugins>
</build>
{code};;;","05/Jan/10 03:54;wargre;
funny thing is adding an execution in pre-site made another reporting plugin ordering.

;;;","11/Apr/10 17:53;zardi;I found this bug while looking for a solution to the taglist-maven-plugin issue with the maven-jxr-plugin, so I have no knowledge about the execution order bug, but I managed to get the taglist plugin working without a second run of jxr.

I noticed that when running jxr in the pre-site phase the output where generated in the reports directory, not in the site directory, so it's probably an issue of the taglist-maven-plugin.

Try adding the following to the taglist-maven-plugin configuration, it worked for me (don't forget to change the directories to match your configuration if needed).
{code:xml}
<xrefLocation>target/site/xref</xrefLocation>
<testXrefLocation>target/site/xref-test</testXrefLocation>
{code}

Probably it won't help with this bug, but it's a better workaround than running jxr twice.

By the way, I'm using Maven 2.2.1 and got the ""Taglist plugin MUST be executed after the JXR plugin."" message too.;;;","20/May/10 08:34;sebpaul;@Daniel: How did you work around this issue without running jxr twice? I am using Maven 2.2.1 too, and have the same issue. When jxr only runs once in pre-site, the report does not contain a link to the source (Reports section in the navigation area). Only the tag list plugin correctly links to the source...;;;","21/Jun/10 13:23;ljnelson;This bug is still present in Maven 2.2.1.

My project runs a goal from maven-dependency-plugin, maven-resources-plugin and maven-jar-plugin during the prepare-package phase.

These are listed in that order.

They are executed in an arbitrary order.;;;","07/Jul/10 06:56;bentmann;I just got aware of the fact that inheritance (and probably profile injection) has a rather counterintuitive effect on the plugin order in the POM. The plugin order given by a parent POM is dominant over the plugin order in a child POM. This circumstance might add to the observation that the POM order (as given in the current child project) is not respected.;;;","19/Jun/11 16:38;bmargulies;The original problem reported in the original test case is fixed in 3.0.3. There is much other material in here, but if someone claims that it amounts to a defect, they can make a distinct JIRA with a test case to that effect.;;;","21/Jun/11 07:36;grlea;Please consider reviewing MNG-3522 and MNG-5090 as examples of distinct JIRAs with test cases that are not resovled in 3.0.3.;;;","21/Jun/11 07:43;bmargulies;I ran the test case and it executed in the right order with 3.0.3. I don't know what to suggest if that's not happening for you.;;;","18/May/12 09:54;glajchs;I'm not sure if this warrants reopening this bug or a new bug (or hopefully I'm missing something and just doing it wrong), but I think a slightly more complicated version of this use case is failing for us.

We are using 3.0.3 and in general, the ordering of plugins with the same lifecycle phase is consistent to the order they were declared in the pom.  However it appears that once we add another plugin execution for the same plugin type and the same lifecycle in a parent pom, the ordering gets screwed up.

Our pom has 3 plugins executing during the ""prepare-package"" lifecycle currently.  They are (in order of declaration in the pom):
maven-war-plugin:2.2.rsa3:exploded (default)
maven-rsa-generate-resource-bundles-plugin:1.21:process-product-conditional-files (default)
gmaven-plugin:1.3:execute (perform xslt transformation)

They execute in the correct order.  Then, in the parent pom for our projects we added this to the ""prepare-package"" lifecycle:
gmaven-plugin:1.3:execute (add-p4-variable-to-rebel-xml)

Now when our project runs, the plugins get executed in this order:

maven-rsa-generate-resource-bundles-plugin:1.21:process-product-conditional-files (default)
gmaven-plugin:1.3:execute (add-p4-variable-to-rebel-xml)
gmaven-plugin:1.3:execute (perform xslt transformation)

I don't know if the fourth goal (the war plugin goal) ever gets executed because the build fails during ""perform xslt transformation"" because it is relying on the war goal to run first.

I would hazard a guess that the problem has to do with either inserting plugin executions from a parent project, or the combination of that and the fact that the same plugin was defined in both the current and parent project.  The ordering logic might never have taken this into account because you're not allowed to define the same plugin twice within the same pom file.;;;","26/Jun/12 16:02;disaacson;I'm seeing the same issue as Scott in a project.;;;","27/Jul/12 18:53;ceefour;This bug isn't fixed yet. I'm using Maven 3.0.4 and the ordering is still arbitrary :(;;;","27/Jul/12 21:44;baerrach;@Scott
I'd suggest filing a new bug and reference this one.
Test cases (and a patch) will make your chances of getting this fixed a lot higher.

@Hendy
See comment to Scott.
;;;","28/Jul/12 04:28;ceefour;Thank you Barrie.

I tried to reproduce the problem but it seems Maven 3.0.4 is fine! (yaay :-)

The problem seems to be in a thirdparty plugin, org.apache.karaf.tooling : features-maven-plugin : generate-features-xml.

For those curious, or want to test, the testcase is in : https://github.com/ceefour/generate-features-xml-bug

Related bug : https://issues.apache.org/jira/browse/KARAF-1681;;;","28/Jul/12 04:30;ceefour;MNG-2258 should already be fixed, tested with maven 3.0.4;;;","01/May/13 11:28;sirianni;@Scott - I am observing the same behavior.  Have you filed the new bug?;;;","18/Oct/13 08:22;gresch;As per my tests, this unpleasant bug still exists for 3.04 and 3.05. Tested with maven-jar-plugin, maven-assembly-plugin and copy-maven-plugin, all executed in phase 'package'.

Perhaps it's a bug in the latter plugin though it seems to me that it is very well crafted (despite the artifact naming perhaps).

I just don't have the time getting into Maven internal's to change the execution mechanism, but as per my opinion, Maven should control the execution order and no plugin should be able to break out from Maven's control.

Anyway - very, very unpleasant. The only workaround I see when not creating pseudo-projects for dependent packaging executions is creating multiple profiles and calling them in the correct order.

Could somebody please open this ticket again? From my point of view, specifying the execution order is quite important in the packaging phase and if Maven's goal is supporting the entire development lifecycle, it *must* support this.

Cheers,

Karsten

Twitter: @gresch;;;","20/Jun/14 04:18;cecchisandrone;Yes I confirm that. It also happen for me in assembly-plugin.;;;",,,,,,,,,,,,,,,,
Handling of custom lifecycle artifacts is not working properly,MNG-2240,12796405,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Duplicate,carlos,emanuelbulic,emanuelbulic,26/Apr/06 13:40,15/Jun/07 08:28,03/Jan/22 13:13,28/Mar/07 11:46,2.0.4,,,,,,,,Artifacts and Repositories,,,,,0,,,,"I am using a custom lifecycle, resource, as follows:

    <component>
      <role>org.apache.maven.lifecycle.mapping.LifecycleMapping</role>
      <role-hint>resource</role-hint>
      <implementation>org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping</implementation>
      <configuration>
        <phases>
          <process-resources>org.apache.maven.plugins:maven-resources-plugin:resources</process-resources>          
          <package>org.apache.maven.plugins:maven-jar-plugin:jar</package>
          <install>org.apache.maven.plugins:maven-install-plugin:install,com.dcx.NGST:maven-bundle-plugin:install</install>
          <deploy>org.apache.maven.plugins:maven-deploy-plugin:deploy</deploy>
        </phases>
      </configuration>
    </component>

    <component>
      <role>org.apache.maven.artifact.handler.ArtifactHandler</role>
      <role-hint>resource</role-hint>
      <implementation>org.apache.maven.artifact.handler.DefaultArtifactHandler</implementation>
      <configuration>
        <extension>jar</extension>
        <type>resource</type>
        <packaging>resource</packaging>
        <language>java</language>
        <addedToClasspath>true</addedToClasspath>
      </configuration>
    </component>



I have a pom structure that looks like this:
app\data\production\ecuDB\ABS\01\pom.xml
app\data\production\ecuDB\ABS\02\pom.xml
app\data\production\ecuDB\ABS\03\pom.xml
app\data\production\ecuDB\ABS\04\pom.xml
app\data\production\ecuDB\ABS\05\pom.xml
app\data\production\ecuDB\ABS\06\pom.xml
app\data\production\ecuDB\ABS\07\pom.xml

Each folder in the structure contains a pom type, and references the child modules; 0X are resource type artifacts as defined above.  I attached the text output of maven install on one of the resource projects, namely 01, followed by 'cd ..' and maven install on all ABS modules.  Comparing the 2 runs, you will find that the 01 resource artifact has been installed with different extensions.  It uses the correct .jar extension on the first run, but it defaults to .resource when build as a multiproject.  It appears that the component definition isn't available, and it defaults the extension to the type value

I am also going to attach the 01/pom.xml


",,,,,,,,,,,,,,,,,,,,,,,,MNG-1682,,,,,,,,,,,,,MNG-2426,,,,,,MNG-2831,,,,,,,,,,,"26/Apr/06 13:40;emanuelbulic;output1.txt;https://issues.apache.org/jira/secure/attachment/12711489/output1.txt","26/Apr/06 13:40;emanuelbulic;pom.xml;https://issues.apache.org/jira/secure/attachment/12711692/pom.xml",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28sn3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"No reports are generated when executing the plugins on CLI instead of ""mvn site""",MNG-2287,12794309,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Won't Fix,brettporter,elpunzalan,elpunzalan,18/Apr/06 19:53,15/Jun/07 08:34,03/Jan/22 13:13,15/Jun/07 08:34,,,,,,,,,,,,,,0,,,,"Currently, doing project-info-reports:<any goal> does not generate a report.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i298p3:",9223372036854775807,,,,,,,,,,,,,,,,,,,"09/May/06 20:23;brettporter;my changes to the abstract maven report mean it gets rendered to a string, not a file. Any plugin that uses 2.0.4 of the reporting impl will need to override generate and work around it;;;","15/Jun/07 08:34;brettporter;can be fixed in individual plugins if needed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Classloader problem loading jars from build extensions,MNG-2228,12794289,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,brettporter,carlos,carlos,14/Apr/06 18:10,25/Jan/07 23:26,03/Jan/22 13:13,03/Jan/07 01:50,2.0.4,,,,,2.0.5,,,Dependencies,,,,,0,,,,"When running ""mvn install"" and ""mvn testwagonscm:test"" in the attached test case you get a ClassCastException although the Class to assign to and the assigned one are the same. The problem seems to be that they come from different classloaders. This problem makes the project-info-report:scm goal fail.

Same as MNG-2225, but using build extensions instead of jars in M2_HOME",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-2664,,,,,,MNG-2225,,,,,,,,,,,"28/Nov/06 19:20;carlos;MNG-2228.tgz;https://issues.apache.org/jira/secure/attachment/12712096/MNG-2228.tgz",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28qqv:",9223372036854775807,,,,,,,,,,,,,,,,,,,"26/Apr/06 17:22;carlos;This breaks generation of site when wagon-scm is in the build extensions, eg. to deploy the site to svn or cvs for Collabnet (dev.java.net)

When running site Maven tries always to instantiate projec-info-report mojos *before* checking in the pom for ""exclude default reports"" option.

The only way to generate the site was install the project-info-report plugin after removing the class ScmReport. It has to go under the same groupId, org.apache.maven.plugins, which makes it a real hack;;;","22/Jun/06 15:18;jdcasey;This would require some heavy refactoring to introduce a new way to manage artifacts in the core classloader during the resolution process. See MNG-2225 for more information.;;;","28/Nov/06 19:19;carlos;Another worst problem is that it causes the release:prepare to fail too;;;","28/Nov/06 19:20;carlos;New patch with less snapshots;;;","31/Dec/06 00:19;brettporter;this caused some problems with the release plugin because jdom was in the root container (via wagon-webdav), but jaxen was not (because it is optional, so it was not caught by the resolution I added).

I have an alternate solution putting extensions in a child container like plugins which is working. I will clean up and commit tomorrow.

This could be reviewed and handled differently for trunk given the changes to plexus and classworlds. I'll examine that separately.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Classloader problem when adding jars to M2_HOME,MNG-2225,12796407,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,jdcasey,carlos,carlos,13/Apr/06 13:15,05/Feb/08 15:47,03/Jan/22 13:13,05/Feb/08 15:47,2.0.4,,,,,3.0-alpha-1,,,Dependencies,,,,,0,,,,"Added these jars to M2_HOME/custom to allow using scm based remote repos

http://www.ibiblio.org/maven2/org/apache/maven/scm/maven-scm-api/1.0-beta-2/maven-scm-api-1.0-beta-2.jar
http://www.ibiblio.org/maven2/org/apache/maven/scm/maven-scm-manager-plexus/1.0-beta-2/maven-scm-manager-plexus-1.0-beta-2.jar
http://www.ibiblio.org/maven2/org/apache/maven/scm/maven-scm-provider-svn/1.0-beta-2/maven-scm-provider-svn-1.0-beta-2.jar
http://cvs.apache.org/maven-snapshot-repository/org/apache/maven/wagon/wagon-scm/1.0-alpha-7-SNAPSHOT/wagon-scm-1.0-alpha-7-20060308.183410-3.jar


bin/m2.conf

main is org.apache.maven.cli.MavenCli from plexus.core.maven

set maven.home default ${user.home}/m2

[plexus.core]
load ${maven.home}/core/*.jar

[plexus.core.maven]
load ${maven.home}/custom/*.jar
load ${maven.home}/lib/*.jar




When running ""mvn install"" and ""mvn testwagonscm:test"" in the attached test case you get a ClassCastException although the Class to assign to and the assigned one are the same. The problem seems to be that they come from different classloaders. This problem makes the project-info-report:scm goal fail.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-2228,MNG-2227,,,,,,,,,,,,,,,,"13/Apr/06 13:15;carlos;testwagonscm.tgz;https://issues.apache.org/jira/secure/attachment/12711690/testwagonscm.tgz",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28lqv:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"13/Apr/06 18:59;brettporter;you need to filter anything in lib (or custom) from turning up in plugins (in the plugin manager).

So replacing anything in lib by putting it in custom is fine, but adding stuff is not.;;;","13/Apr/06 19:50;carlos;do you mean tweaking the PluginManager code or configuration?;;;","13/Apr/06 19:53;brettporter;it's currently in code, would be good to push to configuration.;;;","22/Jun/06 15:16;jdcasey;this will mean changing the way we build the list of artifacts to filter out of the resolution process (because they're already in the core classloader). We'll have to find a dynamic way to manage that, which might mean installing an internal local repository for Maven itself, so we can build up an index of artifacts that are in there.

Any way we go, it represents new design to solve this problem. I think it would be better to do this in the context of design for customizing maven instances, currently planned for 2.1.;;;","22/Dec/06 08:31;kenney;It would be better if mojo dependencies took precedence over those in the core realm, especially with all the plexus-utils problems.

Mojo's should be able to use any component version they desire. Only core components api's that are already used by the maven
core should take precedence; in this case only maven-project, maven-plugin-api and possibly maven-artifact; the rest is not needed
and can be replaced by custom versions used by mojo's.

it comes down to limiting items in mojo's parent classloader to ONLY the interfaces/instances that maven core uses and cannot
be replaced. These are: (amongst others):

* MavenProject
* ArtifactFactory
* ArtifactResolution stuff

this list should be as small as possible - no implementations whatsoever should be exported to mojo's.
Here's the current list:
|| Loc   || Artifact || Export to Mojo ||
| core/ |plexus-component-api-1.0-alpha-13.jar | (-) |
| core/ |plexus-container-default-1.0-alpha-14.jar| (-) |
| core/ |plexus-utils-1.1.jar| (-) |
| core/boot | plexus-classworlds-1.2-alpha-5.jar| (-) |
| lib/ |commons-cli-1.0.jar | (-) |
| lib/ |doxia-sink-api-1.0-alpha-9-20061107.221350-3.jar | (-) |
| lib/ |jsch-0.1.27.jar | (-) |
| lib/ |jtidy-4aug2000r7-dev.jar | (-) |
| lib/ |maven-artifact-2.1-SNAPSHOT.jar | (-) |
| lib/ |maven-artifact-manager-2.1-SNAPSHOT.jar | (-) |
| lib/ |maven-cli-2.1-SNAPSHOT.jar | (-) |
| lib/ |maven-core-2.1-SNAPSHOT.jar | (-) |
| lib/ |maven-embedder-2.1-SNAPSHOT.jar | (-) |
| lib/ |maven-error-diagnostics-2.1-SNAPSHOT.jar | (-) |
| lib/ |maven-model-2.1-SNAPSHOT.jar | (+) |
| lib/ |maven-monitor-2.1-SNAPSHOT.jar | (-) |
| lib/ |maven-plugin-api-2.1-SNAPSHOT.jar | (+) |
| lib/ |maven-plugin-descriptor-2.1-SNAPSHOT.jar | (-) |
| lib/ |maven-plugin-parameter-documenter-2.1-SNAPSHOT.jar | (-) |
| lib/ |maven-plugin-registry-2.1-SNAPSHOT.jar | (?) |
| lib/ |maven-profile-2.1-SNAPSHOT.jar | (?) |
| lib/ |maven-project-2.1-SNAPSHOT.jar | (+) |
| lib/ |maven-reporting-api-2.1-SNAPSHOT.jar | (+) |
| lib/ |maven-repository-metadata-2.1-SNAPSHOT.jar | (-) |
| lib/ |maven-settings-2.1-SNAPSHOT.jar | (?) |
| lib/ |maven-tools-2.1-SNAPSHOT.jar | (?) |
| lib/ |plexus-interactivity-api-1.0-alpha-4.jar | (-) |
| lib/ |wagon-file-1.0-beta-2.jar | (-) |
| lib/ |wagon-http-lightweight-1.0-beta-2.jar | (-) |
| lib/ |wagon-http-shared-1.0-beta-2.jar | (-) |
| lib/ |wagon-provider-api-1.0-beta-2.jar | (?) |
| lib/ |wagon-ssh-1.0-beta-2.jar  | (-) |
| lib/ |wagon-ssh-common-1.0-beta-2.jar | (-) |
| lib/ |wagon-ssh-external-1.0-beta-2.jar | (-) |
| lib/ |xml-apis-1.0.b2.jar | (-) |

So basically everything that's maven-version specific - only APIs, modello models and in this case also MavenProject since it 
contains the runtime project representation.

I think this is easily solved by updating the m2.conf and add another classloader.;;;","05/Feb/08 15:47;jdcasey;You should be able to bring in any extras now using the build extension mechanism, and only the extension components themselves will be added to the core container realm. As long as these components implement interfaces already present in the core realm, or (I suppose) represent themselves (i.e. they aren't going to be referenced by some interface they bring along in their jar) they should be available without problem.

Dependencies of these extension components are actually loaded into a per-extension realm, and the ext. component classes are imported from that realm into a project-specific realm that inherits from the core realm. This means that the core realm is available, as are the ext. components. However, the ext dependencies are isolated in their own realm, where only those ext components have access to them.

There should be no need to modify the ${maven.home}/lib directory now, since you can specify these extensions at the parent-pom level.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Multiple Executions of Plugin at Difference Inhertiance levels causes plugin executions to run multiple times,MNG-2221,12794196,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,jdcasey,jrduncans,jrduncans,11/Apr/06 08:17,11/Oct/06 09:20,03/Jan/22 13:13,12/Jul/06 11:37,2.0.4,,,,,2.0.5,,,Inheritance and Interpolation,,,,,1,,,,"Can occur in a variety of ways, but the attached test case shows a parent pom defining an antrun-execution, and then a child specifying another execution with a different id.  Both executions run twice when running from the child.

I believe this is the same as Kenney Westerhof's comment: http://jira.codehaus.org/browse/MNG-2054#action_62477",,,,,,,,,,,,,,,,,MNG-2237,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-2054,,,,,,,,,,,"11/Apr/06 08:17;jrduncans;repeat-test.zip;https://issues.apache.org/jira/secure/attachment/12711487/repeat-test.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i293in:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"11/Apr/06 08:19;jrduncans;More details on how to run the test.

cd repeat-parent-test
mvn install
cd ../repeat-child-test
mvn package

You will see 2 executions of each antrun.;;;","16/May/06 00:15;brianf@infinity.nu;Interesting because this is exactly what I was seeing pre 2.0.4, but I'm not seeing it after this fix. Still, I can't help but see that this is related.;;;","06/Jun/06 10:46;richvdh;This must be the same issue as MNG-2297, no?;;;","08/Jun/06 08:47;carlos;See patch from MNG-2297;;;","12/Jul/06 11:37;jdcasey;Added two new unit tests to maven-project:org.apache.maven.project.ModelUtilsTest to verify that merged plugins are no longer added to the child POM twice. Merged plugin definitions were not being cached, and could not be checked before being added a second time to the resulting plugins list (along with plugins that didn't undergo a merge).;;;","11/Oct/06 09:20;sak900;I still see the following issue under Maven 2.0.4:

In a multi-module project, the parent POM configures the maven-antrun-plugin to declare dependencies for the plugin.  In the child POMs, the plugin is being executed twice.  The effective POM shows two plugin declarations.  Because of MNG-1949, I tried to configure the plugin in the parent POM so all modules executing maven-antrun-plugin would have the necessary dependencies.  Can anybody comment on this?

Thanks,
Sujan

Parent POM:
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>ant</groupId>
            <artifactId>ant-nodeps</artifactId>
            <version>1.6.5</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Infinite Recursion when POM element has value with substring that is self-referencing ,MNG-2207,12794274,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,jdcasey,jdcasey,06/Apr/06 08:56,06/Apr/06 09:00,03/Jan/22 13:13,06/Apr/06 09:00,2.0.3,,,,,2.0.4,,,Inheritance and Interpolation,,,,,0,,,,"This is an issue reported on the users list. I'm recording it here for tracking purposes.

Sample:

{code:xml}
<project>
  <modelVersion>4.0.0</modelVersion>
  <groupId>some.group</groupId>
  <artifactId>some-artifact</artifactId>
  <version>1</version>

  <scm>
    <connection>${project.scm.connection}/some/other/path</connection>
  </scm>
</project>
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28p47:",9223372036854775807,,,,,,,,,,,,,,,,,,,"06/Apr/06 09:00;jdcasey;Fixed by checking that the resulting value does not *contain* the original expression. Previously, we were only checking that the resulting value didn't *equal* the original expression. This should block:

{code:xml}
<project>
  ...
  <scm>
    <connection>${project.scm.connection}/rest/of/path</connection>
  </scm>
</project>
{code}

Since the interpolated value would be ""${project.scm.connection}/rest/of/path"".

The action taken in this circumstance is to throw a ModelInterpolationException.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bad properties interpolation with profiles ,MNG-2206,12794296,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Duplicate,,olamy,olamy,06/Apr/06 08:42,05/Apr/15 14:54,03/Jan/22 13:13,01/Jun/07 15:40,2.0.3,,,,,,,,Inheritance and Interpolation,,,,,1,,,,"create two profiles in your settings.xml
- id  test with a property <test>dev</test> 
- id snapshots with a property <test>snapshots</test> 

<activeProfiles>
<activeProfile>dev</activeProfile>
<activeProfile>snapshots</activeProfile>
</activeProfiles>

With the attached pom run :
mvn validate :
[echo] dev 
mvn -P snapshots validate :
[echo] dev

Olivier
",cygwin,,,7200,7200,,0%,7200,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-1992,,,,,,,,,,,,,,,,,"06/Jun/06 21:26;elpunzalan;MNG-2206-maven-project.patch;https://issues.apache.org/jira/secure/attachment/12711563/MNG-2206-maven-project.patch","06/Apr/06 08:42;olamy;pom.xml;https://issues.apache.org/jira/secure/attachment/12711683/pom.xml",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,Patch,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i292ev:",9223372036854775807,,,,,,,,,,,,,,,,,,,"06/Apr/06 21:57;redmond;Firstly, he means to create a profile with id ""dev"", not ""test"".

Also, this defect only presents itself if you set an activation of activeByDefault to true.
activeByDefault seems to hold a little too much power here. It does not honor the -P flag.

If you remove ""activeByDefault"", then snapshot will win, as expected.
;;;","07/Apr/06 02:48;olamy;Sorry for bad entry in the issue.
read id dev with a property <test>dev</test> instead of the previous.
And that's what I have done.
And I have the same result.
But you mean activeByDefault override the profile forced in the cli ??
I have problem with this because i need to declare my company repositories in the default profile.
I'm agree on remove ""activeByDefault"" : It works on a solaris machine but not on my cygwin (probably a bad configuration of it on my machine I will check).
Thanks,
Olivier
;;;","20/May/06 11:12;kenney;I don't see any 'activeByDefault' in the issue description.

If you activate both profiles then currently they're both activated, which is correct.
However, the order in which they're activated is random.

If you activate the 'dev' profile by default, and remove the 'snapshots' profile, then dev is always
activated. If you then specify -Psnapshots it should override the <test> property with the new value 'snapshots'.

But since this is random, the OS/jdk combination determines which one wins.

Is this a correct explanation of the above problem? ;;;","22/May/06 03:58;olamy;Sorry for bad explanation concerning this issue.
I try again ;-).
My pom contains :
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <configuration>
          <tasks>
            <echo>${value}</echo>
          </tasks>        
        </configuration>
        <executions>
          <execution>
            <phase>validate</phase>
            <configuration>
              <tasks>
                <echo>${value}</echo>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>        
      </plugin>
My settings contains :
- profile <id>dev</dev> <activeByDefault>true</activeByDefault> and in properties section of this profile <value>dev</value>
- profile <id>snapshots</id> and in properties section of this profile <value>snapshots</value>

+ in settings 
	<activeProfiles>
		<activeProfile>dev</activeProfile>
		<activeProfile>snapshots</activeProfile>
	</activeProfiles>

running mvn validate or mvn validate -P snapshots always displays : [echo] dev.
running mvn validate -Dvalue=foo displays well value : [echo] foo
But this doesn't seems to works with the P commands to activate properties values stored in the settings for each profiles.
My use case is the following : I need to store some databases passwords with different profiles (dev,integration, user test and production) and with profile activation with the cli -P, I expect to have a expression replacement.
I hope it's a better explanation ?
Olivier





;;;","22/May/06 04:07;olamy;As I understand there is a random profile activation.
IMO it's a bug, because if I activate a profile with -P cli option this profile must win !.
WDYT ?
Olivier;;;","06/Jun/06 02:43;elpunzalan;Olivier,

I tried to reproduce in maven 2.0.4 with my settings xml having:

{code}
  <profiles>
    <profile>
      <id>dev</id>
      <properties>
        <test>dev</test>
      </properties>
    </profile>
    <profile>
      <id>snapshots</id>
      <properties>
        <test>snapshots</test>
      </properties>
    </profile>
  </profiles>
{code}

but I'm not able to reproduce your error.  This may have been fixed in 2.0.4.

Below is what I get:

{code:title=Using mvn -P dev validate}
[INFO] Scanning for projects...
[INFO] -------------------------------------------------------------------------
---
[INFO] Building Maven
[INFO]    task-segment: [validate]
[INFO] -------------------------------------------------------------------------
---
[INFO] [antrun:run {execution: default}]
[INFO] Executing tasks
     [echo] dev
[INFO] Executed tasks
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESSFUL
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 1 second
[INFO] Finished at: Tue Jun 06 15:35:29 CST 2006
[INFO] Final Memory: 2M/5M
[INFO] ------------------------------------------------------------------------
{code}

{code:title=Using mvn -P snapshots validate}
[INFO] Scanning for projects...
[INFO] -------------------------------------------------------------------------
---
[INFO] Building Maven
[INFO]    task-segment: [validate]
[INFO] -------------------------------------------------------------------------
---
[INFO] [antrun:run {execution: default}]
[INFO] Executing tasks
     [echo] snapshots
[INFO] Executed tasks
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESSFUL
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 1 second
[INFO] Finished at: Tue Jun 06 15:35:36 CST 2006
[INFO] Final Memory: 2M/5M
[INFO] ------------------------------------------------------------------------
{code};;;","06/Jun/06 02:50;olamy;Hi,
Have you tried with <id>dev</dev> <activeByDefault>true</activeByDefault>  in settings ?
My problem concerns more the winner profile.
Ok dev is activeByDefault but if I say in the cli -P snapshots, snapshots must win ?
--
Olivier;;;","06/Jun/06 21:26;elpunzalan;What happened is you activated an already ""activeByDefault"" profile... so it gets added twice.

Attached patch with test case will prevent duplicates by changing the list to a set.;;;","07/Jun/06 01:05;olamy;Oops sorry for this http://jira.codehaus.org/browse/MNG-2346. (I know I have spend few hours on this too ;-) )
The provided test case must be change.
was recorded in http://jira.codehaus.org/browse/MSUREFIRE-89
--
Olivier;;;","24/Jan/07 02:51;ge0ffrey.desmet;Is my problem of  ""cmd line property does not override others"" is probably the same issue:


[based on m2.0.5's first rc on the dev list]

I have this profile in my pom.xml:

<profile>
  <id>development</id>
  <activation>
    <activeByDefault>true</activeByDefault>
  </activation>
  <properties>
    <no.daisy.test>true</no.daisy.test>
    <maven.test.skip>${no.daisy.test}</maven.test.skip>
  </properties>
</profile>

So without my settings.xml ""mvn install"" doesn't run the tests.
But in my settings.xml I have a profile like this:

<profile>
  <id>daisy_1_5</id>
  <properties>
    <no.daisy.test>false</no.daisy.test>
    ...
  </properties>
</profile>

So now ""mvn install"" does run the tests.

However when I now try
  mvn -Dmaven.test.skip install
The tests are still run,
while I expected my cmd line variable to overwrite my pom.xml and setting.xml properties.
;;;","01/Jun/07 15:40;jvanzyl;Duplicate it appears of not being able to have the command line values set override anything else. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""provided"" scope dependencies must be transitive",MNG-2205,12796395,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Won't Fix,,daveboden,daveboden,06/Apr/06 05:37,21/May/21 15:26,03/Jan/22 13:13,17/Feb/16 11:12,,,,,,,,,Dependencies,,,,,48,,,,"A provided scope dependency can also be thought of as ""compile-only"".

Project A requires Sybase JConnect on the runtime classpath. Project A declares a ""provided"" dependency on Sybase JConnect.
Project B depends upon Project A. Project B declares a ""compile"" dependency on Project A.
Project C depends upon Project B. Project C declares a ""compile"" dependency on Project B.

{noformat}
C
| - compile dependency
B
| - compile dependency
A
| - provided dependency
Sybase JConnect
{noformat}

So, does Project C transitively depend on Sybase JConnect. Yes, of course! The ""provided"" dependency needs to be transitive.

Ultimately, when Project C gets deployed, Sybase JConnect needs to be somewhere on the runtime classpath in order for the application to function. It's valid for Project C to assume that Sybase JConnect is available and use JDBC all over the Project C code. Project C is safe to do this because it can happily deduce that Sybase JConnect will be there in the runtime environment because Project A NEEDS IT.

I've got Use Cases all over my aggregated build which make it absolutely critical and common sense that provided scope dependencies are transitive. For the (very rare) odd case where you don't want to inherit provided dependencies, you can <exclude/> them.",,,,,,,,,,,,,,,,,MNG-1978,MNG-4746,MNG-5048,MNG-2611,,,,,,,MENFORCER-385,,,,,,,,,,MNG-2589,,,,,,MNG-3890,MNG-2317,,,,,,,,,,"17/Dec/10 10:49;michaelpollmeier;transitivetest.zip;https://issues.apache.org/jira/secure/attachment/12713214/transitivetest.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28z9r:",9223372036854775807,,,,,,,,,,,,,,,,,,,"12/Mar/07 12:44;handyande;Your point may be correct, but your use case is wrong.

if C wants to use Sybase JConnect then it must declare this as a dependency. A could at any time change it's dependencies and ""break"" this assumption of C's.
It is wrong to use a dependency that you do not declare.
;;;","12/Mar/07 12:51;daveboden;I agree with you in some sense. Sybase JConnect isn't a great example.

However, your ""any time change its dependencies"" is not at all accurate. A project depends on a released version of, say Apache DBCP. Once it's released, its dependencies are set in stone. The whole point of transitive dependencies is that you benefit from not having to redundantly redeclare you dependencies at each level. When you're upgrading your dependencies, you have time to make a good decision on whether the new dependency tree meets your needs.

Is the logical conclusion of your point that we shouldn't bother with transitive dependencies because we always need the safety of declaring them in each project?;;;","13/Mar/07 03:22;joehni;No, you're using ""provided"" in a wrong manner. A provided means that the artifact is available in the target environment i.e. if you build an enterprise application for a J2EE server you can safely assume that javamail or activation is available, since it is part of the JEE stack. In your case you are introducing a runtime dependency and you should use therefore scope ""runtime"".;;;","13/Mar/07 06:48;daveboden;That's why JConnect is a terrible example.

A better example of this sort of dependency is XML Beans. XML Beans will not work based on a ""runtime"" dependency because your code will require it on the compilation classpath. If all your products depend on XML Beans, you want to be able to declare it as a base dependency and have all your modules inherit that dependency.;;;","11/Jul/07 09:59;pgier;If you make provided transitive, then what is the difference between the ""provided"" and ""compile"" scopes?  Doesn't the compile scope already give the transitive behaviour that you're looking for?

From your original example above, I don't see where the problem is.  If project C is using JDBC with a JConnect driver, and JConnect is being provided on the runtime classpath, by the app server or whatever, then I would think your app would run fine.

The XML beans example sounds like it should be compile scope.  It is required on the compile classpath, and should be inherited transitively.  Why not use the default compile scope for this?
;;;","11/Jul/07 10:06;rgrunder;The difference from PROVIDED to the COMPILE dependency would be, that in the PROVIDED scope, the dependent artifact is not packaged in the target artifact (since its provided by the runtime environment), whereas the COMPILE depedency is alwas packaged into the target artifact which is not always what you want. think of an example like a jdbc-driver, which is installed in your tomcat or jboss; you do not want to package this one in your WAR or EAR artifact too, since its PROVIDED.... ;;;","11/Jul/07 10:22;pgier;Sorry I think I'm still missing something.  So then what is wrong with PROVIDED the way it currently functions?  The JConnect dependency would not be included in the war because it is provided by the container, and project C would be able to use the JConnect driver at runtime because it is provided in the classpath by the app server, right?;;;","11/Jul/07 11:30;daveboden;The problem is that project C is not able to use JConnect classes directly. It's not on project C's compile classpath.

Why not? Why not indeed. It should be! That's what this bug is aiming to fix.

JConnect is a bad example, because you typically don't access JConnect classes directly, you're more likely to use the JDBC API and hide the implementation details.

Eclipse RCP is a better example (it's a real world example for me). Project A is an Eclipse RCP component. It's used by Project B which is in turn used by Project C. Now, because of the way we package the application, the Eclipse RCP (big) jar files are downloaded separately and are provided for the distribution of my application. The problem is that why should I explicitly declare a dependency from Project C to Eclipse RCP? It should be inherited transitively. The default behaviour should be that I can use the Eclipse RCP API in Project C.;;;","17/Apr/08 01:47;syvalta;I think distinguishing packaging and compiling would make sense here. I use compile scope as an example:

- for direct dependencies it's clear that they are included in you compile time classpath and also included when packaged to a war for example.
- for transitive dependencies, it's clear they should be packaged but the question is if they should be included in the compile time classpath.

Ok, let's have an example:

*1. Current behavior:*
A -> B (compile) -> C (compile)
A -> B (compile) -> D (provided)

C: included in A's compile classpath, included in packaging
D: not included in A's compile classpath, not packaged

*2. Requested in this issue:*
A -> B (compile) -> C (compile)
A -> B (compile) -> D (provided)

C: included in A's compile classpath, included in packaging
D: *included* in A's compile classpath, not packaged

*3. Preferable solution in my opinion:*
A -> B (compile) -> C (compile)
A -> B (compile) -> D (provided)

C: *not included* in A's compile classpath, included in packaging
D: not included in A's compile classpath, not packaged

If I remember correctly there were some talk in the mailing list that maven 2.1 would implement option 3, but I might remember wrong.

edit: this seem to be bit more complicated than that: how about classpath for compiling and running tests etc.
As a quick thought, classpath for compiling tests could be just the direct dependencies and for running tests same as for packaging (but how about transitive test dependencies)?;;;","08/Jul/08 11:15;thrillaholic;I think that 'provided' transitive dependencies are important!  The case that comes to my mind is OSGi and Eclipse development.  You need a certain class/package in order to compile your code; however that same package will be available on the runtime environment as a bundle.  You don't want to start adding this jar as an embed library into your bundle!  You want to embed only those that are runtime/compile dependencies.

However since 'provided' is NOT transitive you would have to list all the dependencies this bundle you depend on has in your POM!  Not exactly a step forward from Maven 1.  You would like to pull in these bundle dependencies just for the need of compilation (and actually you would what them in the manifest file too).

So in the end for OSGi and Eclipse transitive provided dependencies would be a really nice thing to have!;;;","07/Aug/08 05:43;lhunath;What I'd like to do is create a POM-type artifact which is basically just a grouping of dependencies used by other artifacts.

    <dependencies>
        <!-- jboss/server/default/lib -->
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.3</version>
            <scope>provided</scope>
        </dependency>
        ....

Then I would add this artifact as a provided dependency to all artifacts.
The desired result would be an inclusion of all dependencies from this container artifact in my other artifacts, marked as provided.

You may wonder why I'm not just marking them as compile-scoped in the container artifact; here's why:
I have an artifact that creates a ZIP file containing the JBoss AS.  This artifact basically just downloads JBoss, extracts it, messes around with its configuration, and packages it as a ZIP file.  Additionally, all artifacts from the container artifact above that are *not* marked as *provided* (because they are not already provided by JBoss) are *added* to the jboss/server/default/lib/ directory just before zipping it up.  That means I can specify two types of provided dependencies in the container POM above:
 - Dependencies provided by the JBoss AS default configuration (<scope>provided</scope> in the container POM).
 - Dependencies that I add to my JBoss' server/default/lib directory (<scope>compile</scope> in the container POM).

Every artifact that depends on the container POM and sets that dependency to a <scope>provided</scope> should have all dependencies in the container pom, be they provided or compile, added to the artifact as provided.  This is exactly as described by the documentation here:
http://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Dependency_Scope
With one single exception:  I cannot yet mark provided dependencies in the container POM as transitive.

The table on the link above says ""provided"" in the intersection of ""provided"" on the left side and ""provided"" on the top.  Reading the text above the table you will see this implies that:
If a dependency is set to [provided], transitive dependencies of that dependency with the scope [provided] will result in a dependency in the main project with the scope [provided]. If no scope is listed, it means the dependency will be omitted.

I would've thought that the author would've just put a ""-"" at the intersection of provided with provided seeing as there currently is no such thing as transitive provided dependencies.  Or is there?;;;","27/Aug/08 06:06;romkal;There is another very important reason why provided dependencies should be transitive. This reason is tests.

If you have some class that needs (lets say) servlet-api and servlet-api is provided, then you cannot use this class in another project, because when you write test, you are not able to instantiate your original class because it imports {{javax.servlet.*}} that is not available.

You also cannot extend any created servlet class in any different project, because it will not compile if {{Serlvet}} interface is not available on classpath. 
This is similar to the note you have just under the table at 
http://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Dependency_Scope

I believe that the most typical situation is to scope servlet-api as provided and it shows, that it doesn't work as it should.;;;","22/Jan/09 12:03;tim12s@yahoo.com;Hi,

In the context of a ""war"" a dependency that is ""provided"" can mean 1 of two things:

1. It is provided within the application ear
      OR
2. It is provided by the environment.

The solution for (1) is easy because we could have ""provided"" being transitive and have the ear-plugin package the ""provided"" dependencies.

The solution for (2) is tricky because (as in the servlets example) we need it for compilation and we do NOT want it packaged by the ear-plugin since it is provided by the appserver or jvm path.  I considered ""runtime"" but this would make it unavailable during compilation and with the servlet -api example we need those dependencies during compilation.  ""optional"" for (2) works fine however the reasons why it works are not obvious to the layman.

The solution is to introduce a new state called ""environmental"" and duplicate functionality around ""optional"".
Make a ""provided"" transitive and have all class-packaging plugins (maven-ear-plugin, maven-war-plugin) support the correct packaging of ""provided"" dependencies.

From my understanding of the maven code base (i've been digging) this is relatively do-able and the semantic changes are not going to be too bad considering the way people work around the problem of creating wars.  I have only one problem which is the need to rewrite the manifest within jar/war/etc to support bundled libraries with different jar locations and signed jar/wars but again i believe this can be managed in the context of how people work around skinny jars at the moment.

-Tim
;;;","22/Jan/09 12:20;tim12s@yahoo.com;Just to clarify around ""optional"" i am referring to a ""compile"" dependencies that are marked optional.  This means that ""environmental"" dependencies will be there for compilation, tests, execution within maven but excluded from packaging.

Alternatively you could leave ""provided"" the way it is and add a new dependency type called ""application"" that is intended to be provided and packaged by the deliverable application component (war, ear, etc).  In the context of a war an dependency marked ""application"" must be packaged by the ear.

-Tim


;;;","07/Jan/10 10:41;dkramer;I believe the right behavior is postulated in the Maven Scope Matrix (http://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html).

There a combination of provided/provided (for dependency and a dependency in the dependency) leads to a provided scope for the secondary dependency (as it should be).

I'm not entirely sure if a xxx/provided dependency should be transitive. Thinking about OSGi environments, this might lead to version issues. 

Anyway, maven (as of 2.2.1) does not even handle the provided/provided case as given in the Maven Scope Matrix.
;;;","17/Dec/10 10:49;michaelpollmeier;This 'critical' issue seems to be dead somehow, so I thought I put in my 2 pence and a bugfix.

First a short summary to the problem as it was a bit blurry in all the various comments: I believe (and I'm not alone there) that we need to make provided dependencies transitive. This is how it used to be in the dependency matrix, however it was never implemented that way, hence this issue was created. Instead of solving it by changing the code, the dependency matrix has been amended to indicate that provided dependencies are _not_ transitive. This has happened silently, at least no comment was left in this issue regarding that change of the documentation. 

Let me point out why provided dependencies should be transitive with a simple example using the projects A, B and C: 
A doesn't depent on anything. B depends on A. And C depends on B. 
Now you want to run unit or integration tests on C. It is straightforward to see that C _must_ have a transitive provided dependency on A, because B (which C depends on) _needs_ A to function. Therefore A must be in the classpath, right? With the current implementation, A will not be in the dependency scope of maven at all, because provided dependencies are not regarded as transitive dependencies. 

Also the combination compile/optional is not a workaround, as it basically duplicates the provided scope - I however can't see a difference in behaviour between 'compile/optional' and 'provided'.

I'll attach these 'A,B,C' poms so that you can play around yourself. 

As a possible resolution I forked mvn in github and provide a bugfix commit:
https://github.com/mpollmeier/maven-3/commit/3339789d6ae2dcbdc0e98d7b47a18f8a2aa2893e

Please let me know your thoughts and pull the change if you like it. ;;;","17/Feb/11 00:47;hatchetman82;here's my use case:
i have a module with ""provided"" dependencies on jboss modules. my tests deploy code to an actual jboss server where these ""provided"" deps exist, but i also have those same provided dependencies on the test classpath. since im booting jboss embedded (using the arquillian project) this causes class-loading issues. i would love for those dependencies to simply not be there during tests.
maybe instead of breaking current behavior (as having ""provided"" deps on the lass path does make sense in certain scenarios) it would be possible to add a new scope ? ""provided-transitive"", ""provided-test"" or whatever that would cause dependencies to be ""provided"" in tests as well ?;;;","23/Feb/12 10:10;dwijnand;I really like the 3rd solution given by Sei Syvalta (http://jira.codehaus.org/browse/MNG-2205?focusedCommentId=131081&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-131081).

I'd like to vote that one in particular.

I think it would make for more stable builds (or rather updating dependencies), such as:
Dozer (net.sf.dozer:dozer:jar:5.3.2) currently depends on commons-lang:commons-lang:jar:2.5
If in my project I compile-time depend on dozer, I also have commons-lang on the compile classpath.
If I Dozer's next version refactors everything to use Google's Guava instead (com.google.guava:guava:jar:11.0.2), then my code will break.. for something (basically) completely unrelated.;;;","13/Jul/12 09:58;marco.speranza;Hi all...
I'm in a OSGi environment and I've the same problem. 
I need to compile a project 

*A* -> *B (provided)* -> *C (provided)*
B is an OSGi bunlde and A needs to use some C's packages/classes 

I agree with [Alexandre|http://jira.codehaus.org/browse/MNG-2205?focusedCommentId=141086&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-141086]

IMHO it's important to have a simple option to add a transitive 'provided' dependency into the compile classpath.
Could be a simple solution to add a flag into the pom file (like system scope? ) that allows a provided dependency to be transitive?

i.e.
{code:xml}
<dependency>
   <groupId> foo.bar </groupId>
   <artifactId> project </artifactId>
   <version> 1.0.0 </version>
   <scope>provided</scope>
   
   <transitive> true </transitive>

</dependency>
{code}

thanks and have a nice day :);;;","02/Aug/12 10:06;buzzeri;I have voted for this.
Half-abstract and half-concrete example: A -> B(compile) -> servlet-api(provided), A must have an access to servlet-api classes (or at least have such possibility), because A must sit in web-container, so B has no other choice. In some cases A don't need classes from servlet-api, but this is not a problem, ""compile"" scope creates more problems in this case, because it pulls unnecessary dependencies along into package.
I think the solution may be removing ""optional"" tag from dependency definition. Instead the tag ""transitivity"" can be introduced, which may be flexible and has different values:
1) 'transitive' - always transitive
2) 'optional' - as optional=true in current variant
3) 'detect' - transitive for cases when ""The type <NAME> cannot be resolved. It is indirectly referenced from required .class files"" compile error appears
4) 'non-transitive' - always non-transitive
5) etc
For backward compatibility 'transitive' can be default for ""compile"" scope and 'non-transitive' for ""provided"";;;","08/Aug/12 08:18;dontsay;Issue has been created: 06/Apr/06 5:37 AM 
6 years old!!! Should be already fixed.;;;","08/Aug/12 09:39;daveboden;For what it's worth, I no longer agree with this issue that I started 6 years ago! I have a best-practice document which I apply to my projects and have pasted here in this comment. Under this strategy, I always declare compile-time dependencies in any project that has an import; statement referring to the class. I don't rely on transitive dependencies when I'm actually using a dependency for compilation. I think this is what the Maven authors intended, which is why ""provided"" has stayed like it is for such a long time.


1. <dependencyManagement/> in parent pom
Declare the versions for all dependencies in the project's parent pom using the <dependencyManagement/> section. You're setting the versions that will be used if the submodules decide to declare dependencies. Using dependency management ensures that the version of all of your dependencies is entirely consistent across all your sub-projects. This is especially important if you're creating a single deployment consisting of many of these sub-modules and you are going to deploy one set of dependency jars

Declare few or no dependencies in the <dependencies/> section of the parent pom. It's fair to assume that all your projects will depend on JUnit and a logging framework so you may want to add those. Anything else results in unnecessary dependencies making their way into your sub-projects.
It's not too useful to declare versions at an even higher level (e.g. the pom that's the parent of all your projects) but in some cases it can make life easier.
Failing to add a dependencyManagement section results in a classic problem of scripts being generated in sub-projects which reference jar versions that don't end up being packaged in the final assemby's lib folder.
2. Declare dependencies where you use them - don't rely on transitive dependencies
Transitive dependencies are very useful. If you're using the public API of a library in your code then you shouldn't have to care how its internals work. Your sub-project should declare a dependency on the library that your code is using; Maven will helpfully pull in the library's transitive dependencies. The library is free to change how its internals work and what transitive dependencies it declares for each version.

If you're using a library, you should declare it in the <dependencies/> section of your pom. Don't rely on transitive dependencies. If your Java code (or Spring config; that's code too) uses commons-beanutils then you should declare that dependency. If you don't, your build is brittle; internal changes to other components can break your component's build.

Run:

mvn dependency:analyze
This tool will tell you about artifacts that you've failed to declare dependencies for and will also tell you if you have extra dependencies declared that you don't need. Be careful about dependencies that you don't use in your .java files; the dependency plugin is only scanning those. If you use a class in Spring config then you do really need it, even if the dependency plugin is telling you that you don't. In these cases I find it useful to make sure that the dependency is set to <scope>runtime</scope>. That way, when I get the dependency:analyze report telling me that these are extra dependencies I know that I probably set them to runtime because they're used by spring config. I ignore the runtime dependencies and only weed out the compile scope ones.

3. Use <properties/> sparingly (in the parent pom)
Declaring all dependency versions in properties and then using those properties in the <dependencyManagement/> section is a little like the (bad) practice of unnecessarily declaring all your Java variables right at the top of a method.

When there's a single artifact to configure, favour hardcoding the version into the <version>1.0</version> tag.

Use properties when there are multiple artifacts to control. For example, set:

<spring.version>3.1.1.RELEASE</spring.version>
and then use:

<version>${spring.version}</version>
for artifacts like <artifactId>spring-core</artifactId>

Properties are public, not private. When you declare a property in the parent pom, it's available anywhere in the build. Adding a property pollutes the (build) environment.

4. Use the enforcer plugin to guard against old or unwanted dependencies
The enforcer plugin can fail your build based on duplicate classes found (the same classes in more than one jar file on the build classpath) or can allow you to ban old or unwanted dependencies. This is especially useful when the owner of a library has changed the groupId or artifactId of their artifact. This stops the Maven dependency mechanism from picking the latest version; you'll end up with 2 similar artifacts on the classpath. For example, from Spring 2 to Spring 3 they changed an artifactId from spring to spring-core. Without banning the older spring dependency, it can easily transitively creep back onto your classpath. Then when your program runs it's somewhat pot luck as to which jar is first on the classpath and therefore which version of a class gets loaded.

5. Detect whether you're using old plugin or dependency versions
The following goals of the versions plugin can help you keep up to date with the latest dependencies. Ideally, get your continuous integration server to display this information.

mvn versions:display-plugin-updates
mvn versions:display-dependency-updates
;;;","16/Nov/13 16:07;tibordigana;I am using Maven 3.1.1
This bug is very important and needs to be fixed.
Especially in Java enterprise architecture the transitive scope of provided is used.
You have inheritance of modules + parent in reactor:

webapp module inherits(war) -> services(jar) -> dao(jar)

So the DAO is dependent on Hibernate. The own Hibernate's dependencies (like. hibernate-jpa-2.0-api, ...) should be excluded, but the same javax artifacts should be included with the scope provided.
The scope=provided on e.g. JPA API is necessary because we want to have own Hibernate's dependencie in compile time and tests as well. Additionally, the WAR file should NOT have libraries with javax packages in WEB-INF/lib.

If you compile DAO module only, it succeeds.
In reality you compile the parent POM in reactor, the build fails in module ""services"". The class from provided artifact was not inherited by the module ""services"". The webapp module wouldn't inherit it either.
So the people make a workaround so that they put the same dependency with provided scope in module services or all modules. 

This is terrible because:
+ the inheritance in Maven is then useless
+ you duplicated the same dependencies with same scope
+ more work when maintaining the modules
+ the POM files are huge

So the temporary workaround can be used to create parents Services-BOM and DAO-BOM with packaging=pom.
Inheritance:
Services-BOM -> DAO-BOM -> reactor's POM
The DAO will have parent DAO-BOM with provided artifacts, and services will have parent Services-BOM.
The problem with this impractical workaround is that you cannot use profiles otherwise you are on the beginning again.
The Services-BOM and DAO-BOM have no noition of profiles in Maven 3.1.1.
You need the profile bacause the build needs to be customized for different appication servers and anything else.

Thx;;;","17/Nov/13 09:02;tibordigana;I do not know if the bug is definitely in Maven core or maven-war-plugin 2.2 or 2.4.
The efective-pom correctly resolves the modules DAO(jar) and Services(jar).
For sure I will rollback to Maven 2.2.1 because there the profiles in DAO-BOM and Services-BOM work as expected.

{code
reactor's parent(pom)
    ^
    +---------------------+
    |                     ^
    |                     |
  DAO(jar)      ->     DAO-BOM(pom)
   ^                      ^
   |                      |
Services(jar)   ->   Services-BOM(pom)
   ^
   |
webapp(war)}



The development profile has dependencies in DAO(jar):
<groupId>org.hibernate</groupId>
<artifactId>hibernate-core</artifactId>
<version>4.2.6.Final</version>

Th production profile has dependencies in DAO(jar):
<dependency>
                    <groupId>org.hibernate</groupId>
                    <artifactId>hibernate-core</artifactId>
                    <version>4.2.6.Final</version>
                    <exclusions>
                        <exclusion>
                            <groupId>org.jboss.spec.javax.transaction</groupId>
                            <artifactId>jboss-transaction-api_1.1_spec</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
                <dependency>
                    <groupId>org.jboss.spec.javax.transaction</groupId>
                    <artifactId>jboss-transaction-api_1.1_spec</artifactId>
                    <version>1.0.1.Final</version>
                    <scope>provided</scope>
                </dependency>;;;","15/Feb/14 12:23;jvanzyl;It is unlikely we will change the behavior of the provided scope, but it would be possible to create a new 'provided-transitive' if we really wanted this. Changing the definition of existing scopes would be problematic.;;;","21/Feb/14 02:39;tibordigana;@Jason
The problem is that the behavior has changed after Maven 2.2.1.
New keywords would not be acceptable by the community in my guess - this may take quite long time to implement and finally the Maven users may get lost.
I prefer simplicity and correct behavior against huge number of keywords.
The right solution would be to concentrate on fixing hunderds of bugs in the Maven project. First of all to write tests against Maven 2 behavior and then run the same tests on Maven 3, let's see what will happen.;;;","10/Mar/14 11:21;jvanzyl;I would love it if you concentrated fixing the hundreds of bugs in Maven. Our attempt is in our integrations tests of which there are hundreds which do exactly that: capture behaviour across Maven versions:

https://github.com/apache/maven-integration-testing

Feel free to augment. Also make sure that what you're asking for is actually happening in the core and is not a function of a particular plugin which does its own resolution. The WAR plugin for example.

Look forward to your patches.;;;","27/Apr/14 14:17;michael-o;As a side note: if you introduce model version 5.0.0, we could easily fix the provided scope and leave it in 4.0.0 as-is.;;;","07/May/14 07:46;jvanzyl;I still think this would be confusing to have one behaviour with the 4.0.0 version of the POM and another behaviour with the 5.0.0 version of the model. I honestly think this would be confusing and after several years with this behaviour making a new scope name for the new behaviour is the way to go.;;;","14/May/14 09:09;tibordigana;I agree with Jason that the model version should not change.
I agree with other commiters saying that XML schema should not be changed.
Therefore a new scope should be introduced and we can call it something like ""nonrunnable"".
Thus the behavior of scope ""provided"" should not change in spec.;;;","14/May/14 09:48;paul4christ79;If this conversation is really about controlling the transitive nature of a dependency, I think we should introduce a <transitive> boolean tag. That won't need a version update since it's a new tag (no one has used it before). Then instead of inventing new scopes, we can just let programmers determine it for themselves based on their own needs.;;;","16/May/14 02:34;tibordigana;@Paul
We shouldn't introduce a new XML element like <transitive/>.
The worst and still possible we can do is to introduce new scope.;;;","17/Oct/15 11:39;cdauth;The documentation even says about transitive compile dependencies: “it is intended that this should be runtime scope instead, so that all compile dependencies must be explicitly listed - however, there is the case where the library you depend on extends a class from another library, forcing you to have available at compile time. For this reason, compile time dependencies remain as compile scope even when they are transitive.”

For the same reason, transitive provided dependencies should remain provided. Imagine project A has a compile/provided dependency on project B, which has a provided dependency on project C. Project A has a class that extends a class from project B. The class from project B extends a class from project C. In order to compile the class from project A, the class from project C needs to be available (at compile time!).;;;","08/Feb/16 16:48;schulte77;Reading the comments on this issue I really fail to see the issue at hand. The only reason people are asking for the 'provided' scope to be transitive is because they want such artifacts to not get packaged in the final distribution artifact automatically. That's the only reason people are not using 'compile' scope. You can use 'dependencyManagement' in the final distribution artifact and manage scopes to 'provided' there or you can setup the plugin performing the packaging to exclude artifacts or to only include specific artifacts. Another option is to just add all 'provided' dependencies to the 'dependencies' section of a common parent so they are inherited to all modules with scope 'provided'. Introducing a new scope behaving exactly the same way the 'compile' scope behaves only to have a way to automatically exclude artifacts from getting packaged is even more effort then just using 'compile' (default) and configuring the packaging accordingly.;;;","17/Feb/16 11:12;schulte77;This can easily be solved in multiple ways. You may also want to consider the optional flag.

{code}
compile+optional  == provided
runtime+optional  == runtime-provided
{code}
;;;","27/Nov/17 19:28;cpovirk;I think that most of the reasons given here are bad reasons. Still, I think there are good reasons to want a new ""transitive compile-time"" scope.

Primarily, it's about annotations: A project may want to depend on some annotations at compile time but might not use them at runtime. In the simplest case, the annotations may have only source retention, so they're provably unusable at runtime.

Yet they may still be needed when compiling transitive users: If you build against a library that uses annotations but the annotations aren't present, javac sometimes issues warnings. And if you're the kind of person who uses {{-Xlint:all -Werror}}, your build breaks. (And I don't think it's possible to suppress that kind of warning without also suppressing others.) For example:

{{Cannot find annotation method 'value()' in type 'com.google.errorprone.annotations.CompatibleWith': class file for com.google.errorprone.annotations.CompatibleWith not found}}

This means that {{optional}} and {{provided}} are both insufficient. As a result, we include the dependencies at runtime, too. Users then have to manually exclude them to avoid the extra classes.

Another use case: Static analysis tools (e.g., [Error Prone|http://errorprone.info/]) may expect transitive dependencies to be present at compile-time. If the dependencies aren't there, the tool may crash. In the case of Error Prone, the tool owners have been willing to work around these problems, but the cost is that the tool may have to skip files and thus miss errors.

The background here is that we've had exactly these problems with [Guava|https://github.com/google/guava]. See [#2721|https://github.com/google/guava/issues/2721], [#2824|https://github.com/google/guava/issues/2824], and [this discussion on our latest release|https://groups.google.com/d/msgid/guava-discuss/1e3b98f1-daf0-4c83-8cb5-9a5c1e70ec10%40googlegroups.com?utm_medium=email&utm_source=footer].;;;","16/Jan/18 19:03;cpovirk;I just learned that JUnit [stopped using provided/optional scope for their annotation dependencies for similar reasons|https://github.com/junit-team/junit5/issues/1105]: Users were reporting problems because the annotations weren't visible to downstream projects (e.g., [1|https://github.com/junit-team/junit5/issues/1104], [2|https://github.com/junit-team/junit5/issues/1210]).;;;","24/Sep/20 16:21;t.broyer;Fwiw, Gradle is adding a {{compileOnlyApi}} configuration for cases like these: it's only used at compile time, and it's transitive. Not even used at test time in the same project (used to compile tests, but not to run them).

When publishing to a Maven repository, those dependencies appear with {{compile}} scope in the published POM.

https://docs.gradle.org/6.7-rc-1/release-notes.html#compile-only-api;;;",,,,,,,,,,,,,,,,,,,,,,,
Calculation of module URLs does not match deployment,MNG-2209,12794175,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Duplicate,bentmann,allisonb,allisonb,06/Apr/06 04:00,20/Feb/11 09:56,03/Jan/22 13:13,20/Feb/11 09:56,2.0.4,,,,,,,,Inheritance and Interpolation,POM,,,,9,,,,"In a project where the parent project is a peer directory with its children (e.g., top/parent/pom.xml, top/child/pom.xml, ...) the site is deployed correctly (site/parent, site/parent/child, ...) but the links in the left menu are not generated correctly (site/parent, site/child, ...)

Attached tar file contains three projects:  parent, child1, and child2.  Unpack these into a directory, change to the parent directory, and do a ""mvn site"".  The generated links for the first child project is ""http://child1/index.html"".",Site plugin built from SVN revision 391930,,,,,,,,,,,,,,,,,,,,,,,MNG-3134,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Apr/06 04:00;allisonb;sitetest.tar;https://issues.apache.org/jira/secure/attachment/12711685/sitetest.tar",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28r5r:",9223372036854775807,,,,,,,,,,,,,,,,,,,"06/Apr/06 07:17;brettporter;to review for next release;;;","06/Apr/06 19:17;brettporter;this is an inheritance problem - the reactor projects come into the site plugin already populated with the incorrect URL values. If you override the URL in the child, it is set correctly;;;","26/May/07 18:25;skaze;this is a known issue that crops up in quite a few places where inheritance and filesystem structure are assumed to be one in the same. as bret says, override everything in your children (url, distroManagement.site.url, scm, etc ), we do.;;;","05/Aug/07 11:26;skaze;MNG-3134 fixes this issue;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Interpolation problem when using surefire,MNG-2201,12794283,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,jvanzyl,vmassol,vmassol,04/Apr/06 10:18,07/Apr/15 12:25,03/Jan/22 13:13,10/Jan/07 12:32,2.0,2.0.1,2.0.2,2.0.3,2.0.4,2.0.9,,,Inheritance and Interpolation,,,,,1,,,,"I've just tried the cargo build with the latest trunk versions of 2.0.4-SNAPSHOT and surefire plugin, and it seems there's some interpolation issue (I don't know if the problem is with the surefire plugin or with maven core).

Here's what I have:
{code:xml}
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <forkMode>pertest</forkMode>
            <systemProperties>
              [...]
              <property>
                <name>cargo.target.dir</name>
                <value>${project.build.directory}</value>
              </property>
[...]
{code}

It seems the ${project.build.directory} property is no longer getting resolved as I got a directory named ${project.build.directory} created.

It used to work fine before.
",,,,14400,14400,,0%,14400,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-2678,,,,,,MNG-3807,,,,,,,,SUREFIRE-60,,MNG-2352,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28rt3:",9223372036854775807,,,,,,,,,,,,,,,,,,,"04/Apr/06 15:32;jdcasey;test is it0104.;;;","04/Apr/06 15:37;jdcasey;fixing for 2.0.5, since this requires a new release of plexus-container-default.

The problem is in the handling of parameters of type java.util.Properties. The PropertiesConverter (used in plexus to coerce DOMs into Properties instances) doesn't use the expression evaluator on the values. I've fixed this in SVN, but the newest version of p-c-d could introduce significant risks into the 2.0.4 release of Maven, which is meant to be as quick as possible, to correct two glaring regressions.;;;","16/Dec/06 15:26;wsmoak;Re-opening as I'm seeing the same behavior again.

${basedir} works fine, as does ${project.build.finalName}, but if I use ${project.build.directory}, it is not expanded.

In http://svn.apache.org/repos/asf/shale/framework/trunk/shale-apps/shale-usecases/pom.xml if I change to:

{noformat}
                                        <property>
                                            <name>cargo.deployable</name>
                                            <value>${project.build.directory}/${artifactId}.war</value>
                                        </property>
{noformat}

It results in 

[INFO] deployable: ${project.build.directory}/shale-usecases.war

;;;","18/Dec/06 09:54;ehsavoie;I have seen it too in SURFIRE 2.2 with Mavn 2.0x built the 16/12/2006 and you don't have this problem with environmentVariables which means it is a Properties interpolation issue only.
Sorry for the http://jira.codehaus.org/browse/SUREFIRE-60 that duplicates this issue.
Emmanuel;;;","09/Jan/07 11:44;jvanzyl;Word is this works in 2.0.4 and now doesn't so that's bad. Checking now, putting back in 2.0.5 so I don't forget.;;;","10/Jan/07 12:32;jvanzyl;Proven to be fixed with it0104.;;;","09/Nov/08 16:20;bentmann;The corresponding IT shows this doesn't work until 2.0.9. As John's fix to the {{PropertiesConverter}} in [r3112|http://fisheye.codehaus.org/changelog/plexus/?cs=3112] isn't part of plexus-container-default:1.0-alpha-9-stable-1, I guess it's merely the ModelInterpolator that fixed that.;;;","26/Oct/09 06:46;bentmann;For clarity: While expressions like {{${project.*}}} work in 2.0.9+, expressions like {{${settings.*}}} do not. The subtle difference being that the former are processed by the model interpolator, while the latter are processed by the plugin parameter expression evaluator but this is not invoked for {{java.util.Properties}}.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fails when parent module is not located a level above,MNG-2196,12796403,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,vmassol,vmassol,01/Apr/06 00:18,01/Jun/09 10:48,03/Jan/22 13:13,03/Apr/06 18:41,2.0.4,,,,,2.0.4,,,Dependencies,,,,,0,,,,"Cargo is now failing to build with v2.0.4-SNAPSHOT as shown below. I believe the problem is because we have the following structure

{noformat}
trunk/
  |_ samples/
    |_ testdata/
{noformat}

where {{testdata}}'s POM refers to the POM in {{trunk}}.

Error log:

{noformat}
C:\dev\cargo\trunk>mvn clean install
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Failed to resolve artifact.

GroupId: org.codehaus.cargo
ArtifactId: cargo
Version: 0.9-SNAPSHOT

Reason: Unable to download the artifact from any repository

  org.codehaus.cargo:cargo:pom:0.9-SNAPSHOT

from the specified remote repositories:
  central (http://repo1.maven.org/maven2)


[INFO] ------------------------------------------------------------------------
[INFO] Trace
org.apache.maven.reactor.MavenExecutionException: Cannot find parent: org.codehaus.cargo:cargo for p
roject: org.codehaus.cargo:cargo-samples-testdata:pom:null
        at org.apache.maven.DefaultMaven.getProjects(DefaultMaven.java:365)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:278)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:115)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:256)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.apache.maven.project.ProjectBuildingException: Cannot find parent: org.codehaus.cargo
:cargo for project: org.codehaus.cargo:cargo-samples-testdata:pom:null
        at org.apache.maven.project.DefaultMavenProjectBuilder.assembleLineage(DefaultMavenProjectBu
ilder.java:1132)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildInternal(DefaultMavenProjectBuil
der.java:672)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromSourceFileInternal(DefaultMa
venProjectBuilder.java:414)
        at org.apache.maven.project.DefaultMavenProjectBuilder.build(DefaultMavenProjectBuilder.java
:190)
        at org.apache.maven.DefaultMaven.getProject(DefaultMaven.java:515)
        at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:447)
        at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:491)
        at org.apache.maven.DefaultMaven.getProjects(DefaultMaven.java:351)
        ... 11 more
Caused by: org.apache.maven.project.ProjectBuildingException: POM 'org.codehaus.cargo:cargo' not fou
nd in repository: Unable to download the artifact from any repository

  org.codehaus.cargo:cargo:pom:0.9-SNAPSHOT

from the specified remote repositories:
  central (http://repo1.maven.org/maven2)

        at org.apache.maven.project.DefaultMavenProjectBuilder.findModelFromRepository(DefaultMavenP
rojectBuilder.java:511)
        at org.apache.maven.project.DefaultMavenProjectBuilder.assembleLineage(DefaultMavenProjectBu
ilder.java:1128)
        ... 18 more
Caused by: org.apache.maven.artifact.resolver.ArtifactNotFoundException: Unable to download the arti
fact from any repository

  org.codehaus.cargo:cargo:pom:0.9-SNAPSHOT

from the specified remote repositories:
  central (http://repo1.maven.org/maven2)

        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolve
r.java:136)
        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolve
r.java:63)
        at org.apache.maven.project.DefaultMavenProjectBuilder.findModelFromRepository(DefaultMavenP
rojectBuilder.java:465)
        ... 19 more
Caused by: org.apache.maven.wagon.ResourceDoesNotExistException: Unable to download the artifact fro
m any repository
        at org.apache.maven.artifact.manager.DefaultWagonManager.getArtifact(DefaultWagonManager.jav
a:260)
        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolve
r.java:124)
        ... 21 more
[INFO] ------------------------------------------------------------------------
[INFO] Total time: < 1 second
[INFO] Finished at: Sat Apr 01 08:14:30 CEST 2006
[INFO] Final Memory: 2M/4M
[INFO] ------------------------------------------------------------------------

C:\dev\cargo\trunk>
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28wcf:",9223372036854775807,,,,,,,,,,,,,,,,,,,"03/Apr/06 18:41;jdcasey;see it0103.

Vincent, see below for some comments I have related to your specific POM.

The fix involved adding a raw-project cache to the project builder. MNG-2054 was the flip-side of this problem, in that it had a problem that came from using the processed-project cache for assembling the project lineage that would eventually be used for inheritance...in that case, projects which had already had inheritance operations performed on them were causing multiple inheritance of the same configuration from ancestor POMs. 

In this case, turning off that caching means that POMs which have broken <relativePath/> links to the parent POM, and whose parent POMs are not in the repository, will not be able to find their parent in a multimodule build - even though the parent has been cached as part of the current build process. To fix this, I've implemented raw-project caching, which are the project instances without interpolation, inheritance, etc. operations performed on them. This allows assembleLineage(..) to lookup and use these POMs, and have subsequent inheritance operations succeed without injecting the same config multiple times.

Vincent, although this use case has been fixed in SVN, I'd strongly suggest you add a *relativePath* element to the testdata POM's parent section, so it can be built in isolation, even if the parent POM isn't in the repository.;;;","04/Apr/06 02:04;vmassol;FYI, it now works on cargo. I'll make the change to the pom for the rleativePath thanks.;;;","01/Jun/09 10:48;bentmann;For the record, Maven 3.x will require a proper {{<relativePath>}} specification in the POM.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
POM interpolation problem in maven-2.0.3,MNG-2186,12797081,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,brettporter,dantran,dantran,29/Mar/06 01:52,30/Mar/06 09:55,03/Jan/22 13:13,30/Mar/06 06:05,2.0.3,,,,,2.0.4,,,Inheritance and Interpolation,,,,,0,,,,"my maven-2.0.3 shows ${project.build.directory}=target.  Instead of the fullpath
this surely breaks the reactor build/test.
 
here is an example pom

<?xml version=""1.0""?>
<project>

  <modelVersion>4.0.0</modelVersion>
  
  <!--
  <parent>
    <groupId>test</groupId>
    <artifactId>parent</artifactId>
    <version>1.0-SNAPSHOT</version> 
  </parent>
  -->
  <packaging>jar</packaging>
  <groupId>test</groupId>
  <artifactId>child</artifactId>
  <version>1.0-SNAPSHOT</version>
  
  <name>child</name>
    
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution> 
            <id>echo</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>run</goal> 
            </goals>
            <configuration> 
              <tasks>
                <echo>project.build.directory:${project.build.directory}</echo>
              </tasks>
            </configuration>
          </execution> 
        </executions>
      </plugin>
    </plugins>    

  </build>

</project>

Carlos also comfirmed

Confirmed :(

2.0.3 = project.build.directory:target
2.0.2 = project.build.directory:C:\Documents and
Settings\csanchez\Local Settings\Temp\target



",xp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-2124,MNG-1927,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29753:",9223372036854775807,,,,,,,,,,,,,,,,,,,"29/Mar/06 03:32;evenisse;${project.build.directory} works fine, it's only the echo result that's strange.

Add this after the echo :

                <mkdir dir=""${project.build.directory}""/>
                <touch file=""${project.build.directory}/${project.artifactId}.txt""/>

and create a child project of your pom with the same plugin execution, and your see that it create two txt files in correct directories (parent/target and child/target)


D:\tmp\testmaven>mvn generate-sources
[INFO] Scanning for projects...
[INFO] Reactor build order:
[INFO]   parent
[INFO]   child
[INFO] ----------------------------------------------------------------------------
[INFO] Building parent
[INFO]    task-segment: [generate-sources]
[INFO] ----------------------------------------------------------------------------
[INFO] [antrun:run {execution: echo}]
[INFO] Executing tasks
     [echo] project.build.directory:target
    [mkdir] Created dir: D:\tmp\testmaven\target
    [touch] Creating D:\tmp\testmaven\target\parent.txt
[INFO] Executed tasks
[INFO] ----------------------------------------------------------------------------
[INFO] Building child
[INFO]    task-segment: [generate-sources]
[INFO] ----------------------------------------------------------------------------
[INFO] [antrun:run {execution: echo}]
[INFO] Executing tasks
     [echo] project.build.directory:target
    [mkdir] Created dir: D:\tmp\testmaven\child\target
    [touch] Creating D:\tmp\testmaven\child\target\child.txt
[INFO] Executed tasks
[INFO] [antrun:run {execution: echo}]
[INFO] Executing tasks
     [echo] project.build.directory:target
[INFO] Executed tasks
[INFO]
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO] ------------------------------------------------------------------------
[INFO] parent ................................................ SUCCESS [1.375s]
[INFO] child ................................................. SUCCESS [0.047s]
[INFO] ------------------------------------------------------------------------
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESSFUL
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 2 seconds
[INFO] Finished at: Wed Mar 29 11:23:54 CEST 2006
[INFO] Final Memory: 2M/4M
[INFO] ------------------------------------------------------------------------

So I think the issue can be closed
;;;","29/Mar/06 10:37;dantran;more notes

you are right about  mkdir, how ever

my surefire configuration the usage of ${project.build.directory}, so this issue is valid

I am sure this issue will hit other usages

-D


On 3/29/06, Emmanuel Venisse <emmanuel@venisse.net> wrote:
${project.build.directory} works fine, it's only the echo result that's strange.

Add this after the echo :

                <mkdir dir=""${project.build.directory}""/>
                <touch file=""${project.build.directory}/${project.artifactId}.txt""/>

and create a child project of your pom with the same plugin execution, and your see that it create
two txt files in correct directories (parent/target and child/target)


;;;","30/Mar/06 01:51;dantran;Map injection also encounters this problem in 2.0.3.  
native-maven-plugin requires this features to setup path environment when forking a test

 

;;;","30/Mar/06 09:55;jdcasey;just adding links, to make this easier to see.;;;","30/Mar/06 09:55;jdcasey;just linking to make it easier to see.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
maven-core-it / it0043 and it0075 fail due to renamed projecthelp-plugin,MNG-2167,12794263,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,brettporter,ymot,ymot,22/Mar/06 02:47,08/Apr/07 18:26,03/Jan/22 13:13,23/May/06 18:54,2.0-alpha-1,,,,,3.0-alpha-1,,,Integration Tests,,,,,0,,,,"I checked out the trunk from svn and tried to build it.

During the build I got the message that it0043 and it0075 have failed due to being unable to find the maven-projecthelp-plugin.

On Oct 27, 2005 the maven-projecthelp-plugin was renamed to maven-help-plugin.

So IMHO the tests it0043 and it0075 should be adjusted as well.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Mar/06 02:58;ymot;MNG-2167.txt;https://issues.apache.org/jira/secure/attachment/12711679/MNG-2167.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28mtb:",9223372036854775807,,,,,,,,,,,,,,,,,,,"22/Mar/06 02:58;ymot;Rename the references from maven-projecthelp-plugin to maven-help-plugin;;;","23/May/06 18:54;carlos;Fixed by Brett in rev. 389650;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Properties defined in top-level profiles.xml do no propagate to child modules,MNG-2157,12797542,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Won't Fix,bentmann,jason@planet57.com,jason@planet57.com,17/Mar/06 19:35,20/Feb/10 13:55,03/Jan/22 13:13,16/Feb/10 08:43,2.0.2,,,,,,,,POM,,,,,20,,,,"I have a multi-module build, and at the top-level I have a profile called 'release-environment', which is activated by -Denv=release.

I need the local release build to use different values for JDBC configuration to run integration tests, and defined them in a profiles.xml:

{code}
<?xml version=""1.0"" encoding=""UTF-8""?>

<settings>

    <profiles>
        <profile>
            <id>local-release-environment</id>
            <activation>
                <property>
                    <name>env</name>
                    <value>release</value>
                </property>
            </activation>
            
            <properties>
                <jdbc.username>mif_jason</jdbc.username>
                <jdbc.password>mif_jason</jdbc.password>
                <jdbc.schema>MIF_JASON</jdbc.schema>
            </properties>
        </profile>
    </profiles>
    
</settings>
{code}

My project looks like:

pom.xml
merchant/pom.xml
merchant/core/pom.xml
merchant/services/pom.xml

If i put profiles.xml as a peer to pom.xml and run {{mvn clean install -Denv=release}} from the top-level, I get errors because the properties are not propagated to the merchant/core/pom.xml module.

If I put profiles.xml as a peer to merchant/core/pom.xml and run {{mvn clean install -Denv=release}}, then it works as expected... properties are set as they are defined in profiles.xml.

But, this is not manageable, as I need to set some properties for all of the modules in a multi-module build... But I don't want to use those properties for all Maven2 projects, so I can not really put it into ~/.m2/settings.xml

I had expected that a top-level profiles.xml would work, but it does not.  Is this by design, is there another recommend way to provide per-top-level multi-module project configuration on a local user basis (ie. no pom.xml modifications)?",,,,,,,,,,,,,,,,,MNG-2982,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28vlj:",9223372036854775807,,,,,,,,,,,,,,,,,,,"26/Apr/06 09:35;emanuelbulic;I am seeing a similar problem, related to this, but slightly different. My project looks like this:

app/pom.xml  -- root pom
app/profiles.xml
app/java/pom.xml   - also a pom
app/java/project1/pom.xml   -- a jar project
app/java/project2/pom.xml  -- also jar

If I build from app, the properties are defined. They are also defined when I build from project1 or project2, however, if I decide to build from java, the profiles are not loaded.  I had to move my profiles into ~/.m2/settings.xml; I don't believe they belong there, since they are project scoped variables, and are not applicable to my plugins project, for example.  We also build our app project from multiple branches, each branch requires it's own profiles.  We define various paths that are different between branches.;;;","13/May/06 11:35;ldauvilaire;I have the same problem with version 2.0.4
The properties defined into the top level profiles.xml are not propagated to the child sub-modules.
When maven is started from the child sub-modules directory, then the properties are correctly retrieved.
I seems the problem is into the descending inheritance but not into the ascending inheritance.
;;;","08/Sep/06 11:27;timmorrow;I experienced the same problem.  But I worked around the problem by putting my profiles definitions in the parent pom.xml.  Thus they are inherited by all sub-projects.  Yes, it clutters up the pom.xml, but avoids settings.xml.;;;","11/Sep/06 02:38;steinchen;We have encountered the same problem. putting some profile values in the pom.xml is ok for values shared by all developers. But we have profile variables with individual values for the different developers. If somebody wants to change a variable for himself, he has to check out the pom.xml (what I'd like to avoid, especially in branches/parallel releases). Is there any fix available for this profile.xml issue?;;;","02/Nov/06 12:37;magnusheino;Properties seems to propagate to child modules if they have the same groupId.;;;","23/Nov/09 03:09;dimo.velev;Are you planning on ever fixing this issue? It has been around for over 3 years...;;;","23/Nov/09 08:04;paul4christ79;Since profiles.xml is not supported in Maven 3, I do not think this issue will make further progress.;;;","17/Feb/10 09:10;abhishekhp;I think I might have a workaround/solution to this problem using a profiles.xml (MAVEN 2.1.0) in the root project that holds the project current version as a property. This property then can be used as a value to the version in the parent tag definition in all its sub modules.


Find below the workaround that I use to propagate the project version variable as a property to all of the project submodule. By doing this I avoid having to redefine the project parent pom version in all its submodules.

*PROJECT STRUCTURE (all caps are modules)*

ROOT
 - pom.xml
 - profiles.xml
 - WAR
   -- pom.xml
 - EJB
   -- pom.xml

*ROOT/profiles.xml*

{noformat}
<profilesXml>
<profiles>
    <profile>
      <id>projectProfile</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
         <currentVersion>1.0.1</currentVersion>
      </properties>
    </profile>
</profiles>
</profilesXml>
{noformat}

*ROOT/pom.xml*

{noformat}
<project>
  <groupId>projGrp</groupId>
  <artifactId>rootProjName</artifactId>
  <version>${currentVersion}</version>
</project>
{noformat}

*ROOT/EJB/pom.xml*

{noformat}
<project>
  <artifactId>ejbProjName</artifactId>
  <packaging>ejb</packaging>
  <parent>
	<groupId>projGrp</groupId>
	<artifactId>rootProjName</artifactId>
	<version>${currentVersion}</version>
  </parent>
</project>
{noformat}

I think this way the project version is a property just in one file profiles.xml in the ROOT project and will be the only file that changes when the version changes.

I have not tested this exhaustively but seems to work in principle.;;;","20/Feb/10 13:55;dimo.velev;Hi Abshishek,

thank you for comment. 

Actually, my question was not whether it is possible or not - the parent profile does definitely NOT get picked up when you build one of the child modules. So in your case if you run mvn package in e.g. the EJB module maven is not going to read the profiles.xml of your parent project. Unfortunately, the maven developers seem not to want to implement it this way for their reasons.

Best regards
Dimo
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[maven-embedder-refactor] Cannot build multiprojects.,MNG-2154,12796378,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,,mkleint,mkleint,16/Mar/06 14:04,08/Apr/07 18:26,03/Jan/22 13:13,13/Apr/06 01:30,,,,,,3.0-alpha-1,,,Embedding,,,,,0,,,,"when trying to build mevenide sources  using the embedder I get this error. Please note that the  org.codehaus.mevenide:netbeans:pom:1.0 project is supposed to be part of the build process. 
If I have the poms/artifacts in local repository from previous builds with the 2.0.2 command line version, everything builds correctly then.


[INFO]Scanning for projects...
[WARN]Unable to get resource from repository central (http://repo1.maven.org/maven2)
[ERROR2]POM 'org.codehaus.mevenide:netbeans' not found in repository: Unable to download the artifact from any repository
[ERROR2]
[ERROR2]  org.codehaus.mevenide:netbeans:pom:1.0
[ERROR2]
[ERROR2]from the specified remote repositories:
[ERROR2]  central (http://repo1.maven.org/maven2)
[INFO]----------------------------------------------------------------------------
[ERROR]FATAL ERROR
[INFO]----------------------------------------------------------------------------
[INFO]Failed to resolve artifact.
[INFO]
[INFO]GroupId: org.codehaus.mevenide
[INFO]ArtifactId: netbeans
[INFO]Version: 1.0
[INFO]
[INFO]Reason: Unable to download the artifact from any repository
[INFO]
[INFO]  org.codehaus.mevenide:netbeans:pom:1.0
[INFO]
[INFO]from the specified remote repositories:
[INFO]  central (http://repo1.maven.org/maven2)
[INFO]----------------------------------------------------------------------------
[INFO]Trace
[INFO]----------------------------------------------------------------------------
[INFO]Total time: 4 seconds
[INFO]Finished at: Thu Mar 16 20:55:51 CET 2006
[INFO]Final Memory: 31M/64M
[INFO]----------------------------------------------------------------------------
org.apache.maven.reactor.MavenExecutionException: Error executing project within the reactor
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:18        at org.apache.maven.embedder.MavenEmbedder.execute(MavenEmbedder.java:73        at org.codehaus.mevenide.netbeans.execute.MavenJavaExecutor.run(MavenJavaExecutor.java:14        at org.netbeans.core.execution.RunClassThread.run(RunClassThread.java:12Caused by: org.apache.maven.reactor.MavenExecutionException: POM 'org.codehaus.mevenide:netbeans' not found in repository: Unable to download the artifact from any repository

  org.codehaus.mevenide:netbeans:pom:1.0

from the specified remote repositories:
  central (http://repo1.maven.org/maven2)

        at org.apache.maven.DefaultMaven.getProjects(DefaultMaven.java:40        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:31        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:15        ... 3 moCaused by: org.apache.maven.project.ProjectBuildingException: POM 'org.codehaus.mevenide:netbeans' not found in repository: Unable to download the artifact from any repository

  org.codehaus.mevenide:netbeans:pom:1.0

from the specified remote repositories:
  central (http://repo1.maven.org/maven2)

        at org.apache.maven.project.DefaultMavenProjectBuilder.findModelFromRepository(DefaultMavenProjectBuilder.java:51        at org.apache.maven.project.DefaultMavenProjectBuilder.assembleLineage(DefaultMavenProjectBuilder.java:109        at org.apache.maven.project.DefaultMavenProjectBuilder.buildInternal(DefaultMavenProjectBuilder.java:67        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromSourceFileInternal(DefaultMavenProjectBuilder.java:41        at org.apache.maven.project.DefaultMavenProjectBuilder.build(DefaultMavenProjectBuilder.java:19        at org.apache.maven.DefaultMaven.getProject(DefaultMaven.java:55        at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:49        at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:53        at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:53        at org.apache.maven.DefaultMaven.getProjects(DefaultMaven.java:39        ... 5 moCaused by: org.apache.maven.artifact.resolver.ArtifactNotFoundException: Unable to download the artifact from any repository

  org.codehaus.mevenide:netbeans:pom:1.0

from the specified remote repositories:
  central (http://repo1.maven.org/maven2)

        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:16        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:6        at org.apache.maven.project.DefaultMavenProjectBuilder.findModelFromRepository(DefaultMavenProjectBuilder.java:46        ... 14 moCaused by: org.apache.maven.wagon.ResourceDoesNotExistException: Unable to download the artifact from any repository
        at org.apache.maven.artifact.manager.DefaultWagonManager.getArtifact(DefaultWagonManager.java:26        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:15        ... 16 m",jason's maven-embedder-refactor branch.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28qb3:",9223372036854775807,,,,,,,,,,,,,,,,,,,"13/Apr/06 01:30;mkleint;seems to work fine in latest trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Plugins' dependencies are not always checked,MNG-2145,12794259,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,daiyam,daiyam,10/Mar/06 18:50,12/May/09 06:53,03/Jan/22 13:13,31/Jan/08 20:15,2.0.2,,,,,2.0.9,3.0-alpha-1,,Dependencies,,,,,5,,,,"I want to run two ant task, one on the phase 'generate-sources' which contains a dependency and another on the phase 'package'.
When I want to compile with the project like that, maven don't check the dependency.
But when I comment the plugin on the phase 'package', maven check it.

PS: In the pom.xml in attachement, maven must check the library junit:junit:jar:30.80.10 (which don't exsist)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-3719,,,,,,,,,,,"11/Mar/06 16:02;pom-echo.xml;https://issues.apache.org/jira/secure/attachment/12711471/pom-echo.xml","11/Mar/06 16:03;pom-merge.xml;https://issues.apache.org/jira/secure/attachment/12711472/pom-merge.xml","12/Mar/06 03:02;daiyam;pom-profile.xml;https://issues.apache.org/jira/secure/attachment/12711611/pom-profile.xml","10/Mar/06 18:50;daiyam;pom.xml;https://issues.apache.org/jira/secure/attachment/12711469/pom.xml","13/Mar/06 12:10;test-suite.zip;https://issues.apache.org/jira/secure/attachment/12711947/test-suite.zip",,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i293en:",9223372036854775807,,,,,,,,,,,,,,,,,,,"11/Mar/06 16:08;le.du.yann@gmail.com;Things get indeed weird if you use several <plugin>s with the same <artifactId> : attached pom-echo.xml echoes 2 times ""Hello world, I'm in generate-resources""
A better way to achieve your goal is to merge these 2 <execution>s as in attached pom-merge.xml (you must use <id>s to avoid duplicate ""default"" id)
;;;","12/Mar/06 03:00;daiyam;Thanks Yann, I didn't know about id or default id of the execution tag.

I have the same problem with the pom-profile.xml, I have several <plugin>s with the same <artifactId> but one in the build tag and another in build tage of a profile.
When I run ""mvn -P compile-schemas package"", it's don't check the dependency of the profile's plugin.;;;","13/Mar/06 12:10;le.du.yann@gmail.com;OK, I've made a small test suite, and here is a clumsy guess about the process. Let's assume that main <build> is assimilated to a <profile> (in first position).
# (!) In an <execution>, if no <id> is defined, then <id>default</id> is added
# (!) If an <execution> is defined in several activated <profile> with the same <id>, the <execution> in the last <profile> overwrites the <execution> in the first <profile>
# (/) If several <execution> with different <id> are defined in several activated <profile> for the same <artifactId>, they are merged in the first <profile>
# (x) If several <dependency> are defined in several activated <profile> for the same <artifactId>, they are NOT merged in the first <profile>
# (!) If several <plugin> are defined in the same <profile> with the same <artifactId>, I don't know what happens :p
# (/) If no <plugin> is defined in main <build> for a given <artifactId>, the one in the first <profile> is copied into main <build>

I think that :
* because of points 1. and 2. , <id> should be mandatoty
* point 4. should be corrected
* situation in point 5. should not be allowed;;;","22/Jun/06 11:19;jdcasey;this has to do with plugins not being reconfigured inside a multmodule project, I think. It's a lifecycle/plugin management issue.;;;","25/Oct/06 05:42;syvalta;Does that reconfiguration issue have a separate report, or should this be renamed?
;;;","31/Jan/08 20:15;jdcasey;Integrated some of the tests from the test-suite.zip into plain junit tests at a lower level, to guard against these problems in the future. Thanks, those were very helpful.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Active profile in profiles.xml prevents active profile in pom.xml to be triggered automatically,MNG-2136,12794195,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,vmassol,vmassol,08/Mar/06 07:47,10/Mar/06 11:05,03/Jan/22 13:13,10/Mar/06 11:05,2.0.3,,,,,2.0.3,,,POM,,,,,0,,,,"If there's a profiles.xml with an active profile in it, then the active profile defined in the pom.xml is ignored and not triggered.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28l2f:",9223372036854775807,,,,,,,,,,,,,,,,,,,"08/Mar/06 09:44;jdcasey;do these two profiles have the same id? How is the profile in the POM triggered?

Can you provide a test case, so we know when this is fixed?;;;","08/Mar/06 09:45;jdcasey;upgrading to blocker to make sure this is resolved before we release.;;;","08/Mar/06 09:51;vmassol;Heer's the profiles.xml:

{code:xml}
<profilesXml>
  <profiles>
    <profile>
      <id>vmassol</id>
      <properties>
        <installDir>c:/apps/cargo-installs</installDir>
      </properties>
    </profile>
  </profiles>
  <activeProfiles>
    <activeProfile>vmassol</activeProfile>
  </activeProfiles>
</profilesXml>
{code}

Here's a portion of the pom.xml:

{code:xml}
[...]
  <profiles>

    <profile>
      <id>jboss4x</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <containerId>jboss4x</containerId>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <configuration>
              <container>
                <zipUrlInstaller>
                  <url>http://ovh.dl.sourceforge.net/sourceforge/jboss/jboss-4.0.2.zip</url>
                  <installDir>${installDir}</installDir>
                </zipUrlInstaller>
              </container>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
[...]
{code}

if I type ""mvn install"" the jboss4x profile is not activated. Removing profiles.xml makes it work. Forcing it using -Pjboss4x makes it active too (as would be expected).;;;","08/Mar/06 14:04;jdcasey;The above example is working as designed. The <activeByDefault/> element is meant to specify that this profile will be activated if no other profiles are active in the build. Therefore, specific activation of any profile will cause this one to be deactivated. The issue with using the logic that the profile should always be applied is this:

1. If it's always applied, why not put it in the POM?
2. If it's active-unless-deactivated, how do you deactivate it?

Changing this feature right now might not make a huge impact on the user community, but it would break backwards compatibility in the strictest sense. Also, it requires defining some mechanism for deactivating profiles. We have one undocumented feature for this, which is:

-P -jboss4x

which would explicitly deactivate the jboss4x profileId, but this is not well tested, and IMO is pretty specific...I'd say that we would need something akin to:

<deactivation>
  <!-- stuff similar to the activation section -->
</deactivation>

where the user can specify conditions that will deactivate the profile. Alternately, we could add an element to simply invert the activation logic...meaning the profile is active by default if this element is set, but anything triggered in the activation section will DEACTIVATE the profile...

I dunno which way we should go with this, but my feeling is that it might have to wait for 2.1.;;;","08/Mar/06 14:04;jdcasey;BTW, can't you add a secondary activation condition that will result in this profile being activated despite the outcome of <activeByDefault/> ? If you cannot, I'd consider *that* a bug.;;;","08/Mar/06 14:41;vmassol;Thanks John

> 1. If it's always applied, why not put it in the POM?

I fail to undestand this. The reason I have a profiles.xml file is because it contains user-specific properties that cannot be shared with other users. That's the rasion d'etre of profiles.xml, isn't it?

> 2. If it's active-unless-deactivated, how do you deactivate it?

I don't want to deactivate it. I want jboss4x to be the default profile so that there's always a container defined by default and I want to let the user define where the containers are installed.

Is that an invalid use case?

If it's valid, then how do I implement it? Or are you simply saying that such a use case (which I think it pretty common and simple) is not supported?;;;","10/Mar/06 09:50;jdcasey;Alright, let's see if we can make <activeByDefault/> a little more intuitive. Since external profiles (from profiles.xml or settings.xml) may be injected at almost any time (especially those in settings.xml), we don't want them to factor into the calculation of whether ""by default"" is satisfied...in other words, we don't expect/want that external profiles will have an impact on whether a default profile is used or not. The only thing that should be able to suppress a profile that's active-by-default is another profile in the POM which has been activated, either explicitly or using some trigger.

Using this, your example can still have users supplying installation directories for containers in an external profile (though the settings.xml may be a better place for this...I dunno). When they specify an install dir through a profile, that will have no impact on the choice of container to be installed, which is specified by a set of profiles that are embedded in the POM. When the user triggers some other container, maybe by ""-Dcontainer=orion"" or something, then the default profile of ""jboss4"" will be suppressed in favor of the ""orion"" profile...both of these would be embedded in the POM.

I'm checking this change into SVN soon, and we can roll it back if need be. IT is it0102 for testing purposes. Let me know what you think.;;;","10/Mar/06 10:07;vmassol;I think that's a good idea as it'll allow reproductible builds (i.e. external profiles should not modify what's in pom.xml).;;;","10/Mar/06 11:05;jdcasey;modified the calculation used in activating <activeByDefault/> profiles.

Was:

If ANY profile {embedded in POM, external} was activated by a means *other* than <activeByDefault/>, then all <activeByDefault/> triggers were suppressed.

Is:

If a profile that's embedded in POM is activated by a means *other* than <activeByDefault/>, then all <activeByDefault/> triggers are suppressed.

For example, if I have a profile in my settings.xml that injects a new repository, and that profile is in my <activeProfiles/> section in the settings.xml, it *cannot* influence whether or not an <activeByDefault/> profile is triggered in a build that I run. This should keep such local environmental factors from changing the build process.

*NOTE:* This represents a subtle change in behavior from < 2.0.3 releases. However, I believe the nature of this change will make <activeByDefault/> usage more intuitive, and fix behavior that would otherwise appear buggy.

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Parent POM not created by reactor if not found in repository,MNG-2130,12794258,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,maurotalevi,maurotalevi,07/Mar/06 07:58,07/Mar/06 21:36,03/Jan/22 13:13,07/Mar/06 21:36,2.0.3,,,,,2.0.3,,,Artifacts and Repositories,,,,,0,,,,"Consider a multi-module project with usual parent-child relationship

pom.xml
module-1/pom.xml
...
module-n/pom.xml

Executing install goal from top-level fails due to failure to find parent POM in any repository

Caused by: org.apache.maven.artifact.resolver.ArtifactNotFoundException: Unable to download the artifact from any repository

  <groupId>:<artifactId>:pom:<version>

Using maven-2.0.2 this does not occur and the parent POM is installed if not found - as expected.
Hence a regression. 

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28wef:",9223372036854775807,,,,,,,,,,,,,,,,,,,"07/Mar/06 14:39;jdcasey;I believe this has to do with the fix for the multiple projectId problem...the building process doesn't check the project-cache for the parent project, therefore will miss parent projects that are cached from the current builds...;;;","07/Mar/06 21:36;jdcasey;see it0099;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
mvn.bat always exits 0 on Windows 2000 and higher,MNG-2127,12794254,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Won't Fix,brettporter,dfabulich,dfabulich,06/Mar/06 16:51,31/Jul/07 05:01,03/Jan/22 13:13,08/Mar/06 07:11,2.0,2.0.1,2.0.2,,,,,,Command Line,,,,,0,,,,"Write the following ant script and run it on Windows 2000 or higher:  <project default=""main""><target  name=""main""><exec executable=""mvn.bat"" failonerror=""true"" /></target></project>

This will run ""mvn"" with no arguments, which will always fail.  But the ant script will claim ""build successful"", because the exit value of mvn.bat was 0.  It is absolutely critical that this work correctly, or else I can't integrate Maven into any other automated system.

This is happening because mvn.bat is improperly abusing local scoping.  On line 130 of mvn.bat, we execute maven, but we don't do anything with its exit value... we just always goto end.  The fix for this is to add a line 131 that says ""if errorlevel 1 goto error"", which will behave correctly.

(I marked this as having a test case because I've included a test ant script, but technically this isn't a JUnit test case, so it may be an inappropriate use of the ""testcase included"" marker.)","I'm on Windows 2003 Server, but this will affect any OS for which the %OS% environment variable is Windows_NT, including Windows XP and Windows 2000.",,,,,,,,,,,,,,,,MNG-2132,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Mar/06 06:44;steve_l;maven-task.xml;https://issues.apache.org/jira/secure/attachment/12711613/maven-task.xml","07/Mar/06 20:00;dfabulich;mvnfixed.bat;https://issues.apache.org/jira/secure/attachment/12711946/mvnfixed.bat","07/Mar/06 17:25;dfabulich;mvnfixed.bat;https://issues.apache.org/jira/secure/attachment/12711746/mvnfixed.bat",,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29d4v:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"07/Mar/06 01:28;evenisse;You must set MAVEN_TERMINATE_CMD env var to 'on' : 

<project default=""main"">
  <target name=""main"">
    <exec executable=""mvn.bat"" failonerror=""true"">
      <env key=""MAVEN_TERMINATE_CMD"" value=""on"" />
    </exec>
  </target>
</project>
;;;","07/Mar/06 01:45;wfay;Any particular reason this isn't ON by default?

It makes no sense to me that this needs to be turned ON when it seems like normal behavoir for commandline utilities in any Operating system. But there is probably a good reason why this is off for Windows, and I just don't know enough to realize why...;;;","07/Mar/06 01:57;evenisse;We can't use on by default because when you activate this env var with 'on', mvn exit with /B so the command line is closed, and if you use it in a dos environment, your window would be closed too.

Ypu can try it like this :
SET MAVEN_TERMINATE_CMD=on
mvn.bat
;;;","07/Mar/06 02:03;wfay;Like I said... ""I just don't know enough to realize why"" ;-)

Thanks Emmanuel;;;","07/Mar/06 11:25;dfabulich;This undocumented environment variable is totally unnecessary in a batch script... we shouldn't be using exit /B like that.  All that's needed is the one-line fix I proposed in the bug description.  I've filed an improvement MNG-2132 to highlight this.;;;","07/Mar/06 12:41;brettporter;will investigate;;;","07/Mar/06 17:25;dfabulich;Thanks for re-opening this.  I've just discovered that Emmanuel's workaround doesn't work either, because *that* makes mvn.bat *always* exit with error code 1, even if the build succeeds!

Also note that my one-line fix needs to be added to all of the other validation points in this file, including the JAVA_HOME and M2_HOME verification checks.  I'm attaching a new batch file to this issue which I believe fixes the problem.;;;","07/Mar/06 17:25;dfabulich;I believe this fixes the issue.;;;","07/Mar/06 19:59;dfabulich;Oops, sorry... it's not that it *always* fails with Emmanuel's workaround; the problem with mvn.bat right now is that if it ever fails, it sets the ERROR_CODE=1, (not the DOS official env var %ERRORLEVEL%, but an arbitrary env var) which means that the script will always fail from then on.

I'm updating my mvnfixed.bat file with enhancements to make this go away.  I've tested this on Windows 2003 and Windows NT, but not on Win9x.  It works great everywhere I've tried it.  Note that I've added this sneaky line to set the Windows errorlevel: ""echo 1 | choice /c:12 /n >nul >2&1"".  I got this from here: http://www.robvanderwoude.com/index.html

He claims this works on Win9x, but I don't have Win9x available.;;;","08/Mar/06 03:33;evenisse;choice command is available only with ms resource kit;;;","08/Mar/06 07:11;brettporter;this is a misunderstanding. I'm assuming you tested your fix by checking if errorlevel 1 echo something

the missing if errorlevel 1 was already added to svn, and I've fixed the location of the original setting of ERROR_CODE. Not using ERROR_CODE still works, setting the errorlevel correctly, but should the script change to have an intervening command that resets it this would be lost so it is good to keep, plus it allows returning ""1"" for the failure to set JAVA_HOME, etc.

Emmanuel was entirely correct, and you'll find running the new script inside Ant still succeeds, as does running Ant inside Ant. The reason for this is that batch files are called like this:
cmd /c mvn.bat

The exit code of mvn.bat is swallowed by cmd.exe. However, if you use the ""exit"" command, cmd.exe is terminated with the correct exit code. There doesn't appear to be any alternative to this at this point. I'll keep looking.

I test this on both XP SP2 and XP SP1a. We don't support Win9x.;;;","08/Mar/06 07:18;brettporter;Ant should be using:

cmd /C call mvn.bat

instead, though it doesn't know that it's a batch file, I assume.

Emmanuel, can we do this in Continuum to ensure the correct result?;;;","08/Mar/06 07:28;brettporter;It looks like we could add that to setDefaultShell() in plexus utils for continuum to fix it permanently.;;;","08/Mar/06 07:41;evenisse;ant doesn't use cmd /C call ...

it use cmd /C cd DIR && command for Windows XP/2000/NT
and it use an external launcher (antrun.bat for windows 95/98

http://svn.apache.org/repos/asf/ant/core/trunk/src/main/org/apache/tools/ant/taskdefs/Execute.java

I'm not sure cmd /C call ... will return the correct result and in continuum we always get the correct result.
;;;","08/Mar/06 07:50;brettporter;I know ant doesn't, and I'm saying ant doesn't work here either. cmd /C still swallows the result.

Continuum works by setting the TERMINATE_CMD, without requiring any user intervention? What about if it calls m1, or ant?

I think cmd /c call is cleaner if that works...;;;","08/Mar/06 07:58;evenisse;ok, i'll look at it.

Actually,  Continuum works by setting the MAVEN_TERMINATE_CMD, without requiring any user intervention. For ant, we have a modified script on continuum site. m1 script use MAVEN_TERMINATE_CMD;;;","08/Mar/06 14:58;dfabulich;Wow... I'm definitely surprised to see that ant.bat suffers from this same problem.  Let that teach me a valuable lesson.  :-)

I'm definitely surprised to hear that we don't support Win9x, because there's a bunch of code in this batch script designed to handle Win9x, including a batch label called :Win9xApp, which only triggers when %OS% is not equal to Windows_NT, which is always true on Windows_NT, Windows 2000, Windows XP, and Windows 2003.  Is any of that code necessary?

Anyway, using the current latest mvn.bat from SVN (384215) helps quite a bit.
http://svn.apache.org/viewcvs.cgi/maven/components/trunk/maven-core/src/bin/mvn.bat?rev=384215&view=markup

With that said, on line 154, it says ""exit /b %ERROR_CODE%"".  This breaks on Windows NT... the batch script always returns 1, because that's an invalid command on NT.  Does Maven support Windows NT?

Interestingly, since the latest SVN mvn.bat uses exit /b, but includes the ""if errorlevel 1 goto error"" fix, it works properly in Ant on Windows 2003 even without the MAVEN_TERMINATE_CMD environment variable.  Here's my test, which works on Windows 2003, but not on Windows XP:

<property name=""maven.executable"" location=""mvnfixed.bat"" />
<exec executable=""${maven.executable}"" failonerror=""false"" resultproperty=""x"">
</exec>
<echo message=""x = ${x}"" />
<condition property=""should.have.failed"">
	<equals arg1=""0"" arg2=""${x}"" />
</condition>
<fail if=""should.have.failed"" message=""should have failed""/>
<exec executable=""${maven.executable}"" failonerror=""true"">
	<arg value=""--help"" />
</exec>

Anyway, I think I can live with this.;;;","08/Mar/06 15:12;steve_l;I believe Ant's return code on winnt systems was fixed as of last week. We really need to think of a good regression test for this, because ant.bat is the one of the two startup scripts that scare the team. the other is cygwin support in ant.sh. the perl and python startup scripts are fine, its just those two.

the underlying problem with ant.bat is trying to support win9x, which makes things much more contrived, and much more brittle -we have a vmware image of '9x around just to check things work. 

as for last weeks patch, it turns out that if you unset an env variable that was never set, the error code was set. So to clear all env variables (remember, you can't use @setlocal on '9x), ant needs to set every transient env var to a value just before clearing, to be 100% sure that is was set by all paths to the exit logic.

If starting maven on ant is important (and clearly it is), I would recomend you look at the script and do a <java> task to set it up and call it. That or someone needs to write a proper <maven> task. ;;;","08/Mar/06 17:17;dfabulich;Good points, Steve.  I've filed a wish MNG-2139 for a <maven> ant task to launch Maven.

When you say you believe Ant's return code on ""winnt systems"" was fixed, do you mean Windows NT, or everything NT-based (2003, 2000, XP, etc)?  Can you provide a link/pointer to the revision in SCM?

Hopefully since Maven doesn't need 9x support it can at least make sure mvn.bat returns a reasonable result code on the supported operating systems.;;;","08/Mar/06 18:09;brettporter;I guess we don't support Windows NT either :(

Perhaps we should remove the exit /B altogether and rely on errorlevel not getting murdered by carefully checking it also.

It's awfully tempting to write a little .exe that takes care of this.;;;","08/Mar/06 18:26;dfabulich;exit /B is the only thing making this work nicely on Windows 2003.  I'd rather say ""if errorlevel 1 exit /B >NUL 2>&1"" which will work on Windows NT by sending an invalid syntax to exit, which is probably not the way you meant it to work, but I think it does work.;;;","09/Mar/06 03:42;steve_l;Dan, the last fix was bugzilla ID 32069
http://issues.apache.org/bugzilla/show_bug.cgi?id=32069

and the SVN HEAD of ant.bat contains it, just after the :end statement
http://svn.apache.org/repos/asf/ant/core/trunk/src/script/ant.bat

As far as ant is concerned, winnt==anything running on the winnt kernel, from version 3.1 up. specifically,. anything whose %OS% env variable is set to winnt or Windows_NT ,the latter being what XP systems do.

The way the ant script sets the error code is to abuse the color command to try and set the fg and bg colours to match. From the documentation
""The COLOR command sets ERRORLEVEL to 1 if an attempt is made to execute
the COLOR command with a foreground and background color that are the
same.""

so COLOR 00 sets ERROLEVEL to 1, which is what you want
;;;","10/Mar/06 06:44;steve_l;This is a build file to <import> into your project that gives you a <maven> task. Needs maven.home, env.MAVEN_HOME set, and possibly some help finding tools.jar

-steve;;;","10/Mar/06 07:36;brettporter;its also for Maven 1, so it won't work for m2.;;;","31/Jul/07 05:01;pledge;What is the situation with this on WinXP SP2, with Maven 2.0.7?  I have set MAVEN_TERMINATE_CMD=on and regardless of which command I run I am always getting %ERRORLEVEL% as 0.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect resolution of parent POM properties,MNG-2124,12794204,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,kjetilod,kjetilod,06/Mar/06 04:02,04/Jun/08 17:28,03/Jan/22 13:13,08/Mar/06 11:06,2.0.2,,,,,2.0.3,,,Inheritance and Interpolation,,,,,1,,,,"Unzip maven-bug to current dir and cd to maven-bug/artifact.

Now, Maven 2.0.1 handles things correctly (irrelevant output removed):

{code}[echo] Parent: parentartifact, project: artifact{code}

But Maven 2.0.2 has a bug:

{code}[echo] Parent: artifact, project: artifact{code}
","Windows XP, JDK 1.4.2_11",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-2186,,,,,,MNG-3355,MNG-3530,,,,,,,,,,"06/Mar/06 04:02;kjetilod;maven-bug.zip;https://issues.apache.org/jira/secure/attachment/12711468/maven-bug.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i293lz:",9223372036854775807,,,,,,,,,,,,,,,,,,,"06/Mar/06 04:36;brettporter;promoting if it is a regression;;;","06/Mar/06 15:03;maurotalevi;Don't know if related to this bug, but there seems to be another regression  issue with 2.0.3-SNAPSHOT: 

If the parent pom (SNAPSHOT version) is not found in remote repo mvn chokes and does not generate it as it should when running from top-level. 

This behaviour does not appear in 2.0.2 so is definitely a regression. 

;;;","07/Mar/06 08:00;maurotalevi;Created MNG-2130 to track the inability to re-created parent POM - as seems sufficient different in scope.
;;;","07/Mar/06 21:51;jdcasey;this seems to have to do with trimming the root token from an expression before evaluating it, even though that's already been done...;;;","08/Mar/06 11:06;jdcasey;see it0088 and it0100 (it0100 has the test case provided in this report, slightly modified to fit the integration testing framework).;;;","13/Mar/06 06:59;kjetilod;Great! Looks like this fixed my problem.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[REGRESSION] local plugin metadata files are being deleted when remote repository transfer fails,MNG-2120,12794219,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Cannot Reproduce,jdcasey,jdcasey,jdcasey,03/Mar/06 11:25,03/Mar/06 16:48,03/Jan/22 13:13,03/Mar/06 11:29,2.0.2,,,,,,,,,,,,,0,,,,"when a plugin repository transfer results in a TransferFailedException, any locally install plugin metadata gets obliterated.

I'll add more info as I find it out.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i292xz:",9223372036854775807,,,,,,,,,,,,,,,,,,,"03/Mar/06 11:29;jdcasey;...and now I cannot reproduce it. This is VERY strange.;;;","03/Mar/06 11:38;jdcasey;the problem was manifesting itself in the maven-core-it process, which I had to remind myself was actually executing a delete of the local plugin installation in a pre-build hook.

*UGH*;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Listing central repo in pluginRepositories confuses Maven,MNG-2118,12797084,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Cannot Reproduce,,jason@planet57.com,jason@planet57.com,01/Mar/06 16:58,28/Dec/09 19:29,03/Jan/22 13:13,28/Dec/09 19:29,2.0.2,,,,,,,,Plugins and Lifecycle,POM,,,,5,,,,"It appears that if you list the central repository in the pluginRepositories, that it may cause Maven to incorrectly check the central repository for plugin data.

Specifically, I found this when using the maven-clean-plugin 2.1.  I did not have this plugin in my local repository, and when running {{mvn clean}} it causes the build to fail:

{noformat}
+ Error stacktraces are turned on.
[DEBUG] Building Maven user-level plugin registry from: '/Users/jason/.m2/plugin-registry.xml'
[DEBUG] Building Maven global-level plugin registry from: '/Users/jason/ws/paybytouch/dev/paycore/main/tools/maven/conf/plugin-registry.xml'
[INFO] Scanning for projects...
[INFO] Reactor build order: 
[INFO]   Paycore
[INFO]   Paycore :: Merchant
[INFO]   Paycore :: Merchant :: Core
[INFO]   Paycore :: Merchant :: Services
[INFO] ----------------------------------------------------------------------------
[INFO] Building Paycore
[INFO]    task-segment: [clean]
[INFO] ----------------------------------------------------------------------------
[DEBUG] maven-clean-plugin: resolved to version 2.1 from repository maven-snapshots
[DEBUG] Trying repository maven-snapshots
Downloading: http://snapshots.maven.codehaus.org/maven2/org/apache/maven/plugins/maven-clean-plugin/2.1/maven-clean-plugin-2.1.pom
[DEBUG] Artifact not found - using stub model: Unable to locate resource in repository

  org.apache.maven.plugins:maven-clean-plugin:pom:2.1

from the specified remote repositories:
  central (http://repo1.maven.org/maven2),
  maven-snapshots (http://snapshots.maven.codehaus.org/maven2),
  paybytouch-legacy (http://repository.paybytouch.com/m1/repository)

[DEBUG] Using defaults for missing POM org.apache.maven.plugins:maven-clean-plugin:pom:2.1
[DEBUG] maven-surefire-plugin: resolved to version 2.1.3-SNAPSHOT from repository maven-snapshots
[DEBUG] maven-surefire-plugin: resolved to version 2.1.3-20060228.012944-10 from repository maven-snapshots
[DEBUG] Retrieving parent-POM from the repository for project: null:maven-surefire-plugin:maven-plugin:2.1.3-20060228.012944-10
[DEBUG] maven-one-plugin: resolved to version 1.0-20060213.011019-4 from repository maven-snapshots
[DEBUG] maven-one-plugin: resolved to version 1.0-20060213.011019-4 from repository maven-snapshots
[DEBUG] org.apache.maven.plugins:maven-clean-plugin:maven-plugin:2.1 (selected for runtime)
-----------------------------------------------------
this realm = app0.child-container[org.apache.maven.plugins:maven-clean-plugin]
urls[0] = file:/Users/jason/.m2/repository/org/apache/maven/plugins/maven-clean-plugin/2.1/maven-clean-plugin-2.1.jar
Number of imports: 0


this realm = plexus.core.maven
urls[0] = file:/Users/jason/ws/paybytouch/dev/paycore/main/tools/maven/lib/commons-cli-1.0.jar
urls[1] = file:/Users/jason/ws/paybytouch/dev/paycore/main/tools/maven/lib/doxia-sink-api-1.0-alpha-7.jar
urls[2] = file:/Users/jason/ws/paybytouch/dev/paycore/main/tools/maven/lib/jsch-0.1.24.jar
urls[3] = file:/Users/jason/ws/paybytouch/dev/paycore/main/tools/maven/lib/maven-artifact-2.0.2.jar
urls[4] = file:/Users/jason/ws/paybytouch/dev/paycore/main/tools/maven/lib/maven-artifact-manager-2.0.2.jar
urls[5] = file:/Users/jason/ws/paybytouch/dev/paycore/main/tools/maven/lib/maven-core-2.0.2-javadoc.jar
urls[6] = file:/Users/jason/ws/paybytouch/dev/paycore/main/tools/maven/lib/maven-core-2.0.2.jar
urls[7] = file:/Users/jason/ws/paybytouch/dev/paycore/main/tools/maven/lib/maven-error-diagnostics-2.0.2.jar
urls[8] = file:/Users/jason/ws/paybytouch/dev/paycore/main/tools/maven/lib/maven-model-2.0.2.jar
urls[9] = file:/Users/jason/ws/paybytouch/dev/paycore/main/tools/maven/lib/maven-monitor-2.0.2.jar
urls[10] = file:/Users/jason/ws/paybytouch/dev/paycore/main/tools/maven/lib/maven-plugin-api-2.0.2.jar
urls[11] = file:/Users/jason/ws/paybytouch/dev/paycore/main/tools/maven/lib/maven-plugin-descriptor-2.0.2.jar
urls[12] = file:/Users/jason/ws/paybytouch/dev/paycore/main/tools/maven/lib/maven-plugin-parameter-documenter-2.0.2.jar
urls[13] = file:/Users/jason/ws/paybytouch/dev/paycore/main/tools/maven/lib/maven-plugin-registry-2.0.2.jar
urls[14] = file:/Users/jason/ws/paybytouch/dev/paycore/main/tools/maven/lib/maven-profile-2.0.2.jar
urls[15] = file:/Users/jason/ws/paybytouch/dev/paycore/main/tools/maven/lib/maven-project-2.0.2.jar
urls[16] = file:/Users/jason/ws/paybytouch/dev/paycore/main/tools/maven/lib/maven-reporting-api-2.0.2.jar
urls[17] = file:/Users/jason/ws/paybytouch/dev/paycore/main/tools/maven/lib/maven-repository-metadata-2.0.2.jar
urls[18] = file:/Users/jason/ws/paybytouch/dev/paycore/main/tools/maven/lib/maven-settings-2.0.2.jar
urls[19] = file:/Users/jason/ws/paybytouch/dev/paycore/main/tools/maven/lib/plexus-interactivity-api-1.0-alpha-4.jar
urls[20] = file:/Users/jason/ws/paybytouch/dev/paycore/main/tools/maven/lib/wagon-file-1.0-alpha-6.jar
urls[21] = file:/Users/jason/ws/paybytouch/dev/paycore/main/tools/maven/lib/wagon-http-lightweight-1.0-alpha-6.jar
urls[22] = file:/Users/jason/ws/paybytouch/dev/paycore/main/tools/maven/lib/wagon-provider-api-1.0-alpha-6.jar
urls[23] = file:/Users/jason/ws/paybytouch/dev/paycore/main/tools/maven/lib/wagon-ssh-1.0-alpha-6.jar
urls[24] = file:/Users/jason/ws/paybytouch/dev/paycore/main/tools/maven/lib/wagon-ssh-external-1.0-alpha-6.jar
Number of imports: 0


this realm = plexus.core
urls[0] = file:/Users/jason/ws/paybytouch/dev/paycore/main/tools/maven/core/plexus-container-default-1.0-alpha-9.jar
urls[1] = file:/Users/jason/ws/paybytouch/dev/paycore/main/tools/maven/core/plexus-utils-1.1.jar
Number of imports: 0
-----------------------------------------------------
[INFO] ----------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ----------------------------------------------------------------------------
[INFO] Internal error in the plugin manager executing goal 'org.apache.maven.plugins:maven-clean-plugin:2.1:clean': Unable to find the mojo 'org.apache.maven.plugins:maven-clean-plugin:2.1:clean' in the plugin 'org.apache.maven.plugins:maven-clean-plugin'
org/apache/maven/shared/model/fileset/SetBase
[INFO] ----------------------------------------------------------------------------
[DEBUG] Trace
org.apache.maven.lifecycle.LifecycleExecutionException: Internal error in the plugin manager executing goal 'org.apache.maven.plugins:maven-clean-plugin:2.1:clean': Unable to find the mojo 'org.apache.maven.plugins:maven-clean-plugin:2.1:clean' in the plugin 'org.apache.maven.plugins:maven-clean-plugin'
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:535)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:472)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:451)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:303)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:270)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:139)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:322)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:115)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:249)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
	at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.apache.maven.plugin.PluginManagerException: Unable to find the mojo 'org.apache.maven.plugins:maven-clean-plugin:2.1:clean' in the plugin 'org.apache.maven.plugins:maven-clean-plugin'
	at org.apache.maven.plugin.DefaultPluginManager.getConfiguredMojo(DefaultPluginManager.java:536)
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:393)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:531)
	... 16 more
Caused by: org.codehaus.plexus.component.repository.exception.ComponentLookupException: Unable to lookup component 'org.apache.maven.plugin.Mojoorg.apache.maven.plugins:maven-clean-plugin:2.1:clean', it could not be created
	at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:335)
	at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:440)
	at org.apache.maven.plugin.DefaultPluginManager.getConfiguredMojo(DefaultPluginManager.java:527)
	... 18 more
Caused by: org.codehaus.plexus.component.factory.ComponentInstantiationException: Could not instanciate component: role: 'null', implementation: 'org.apache.maven.plugin.clean.CleanMojo'
	at org.codehaus.plexus.component.factory.java.JavaComponentFactory.makeException(JavaComponentFactory.java:77)
	at org.codehaus.plexus.component.factory.java.JavaComponentFactory.newInstance(JavaComponentFactory.java:62)
	at org.codehaus.plexus.DefaultPlexusContainer.createComponentInstance(DefaultPlexusContainer.java:1464)
	at org.codehaus.plexus.component.manager.AbstractComponentManager.createComponentInstance(AbstractComponentManager.java:93)
	at org.codehaus.plexus.component.manager.PerLookupComponentManager.getComponent(PerLookupComponentManager.java:48)
	at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:331)
	... 20 more
Caused by: java.lang.NoClassDefFoundError: org/apache/maven/shared/model/fileset/SetBase
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Class.java:1618)
	at java.lang.Class.getConstructor0(Class.java:1930)
	at java.lang.Class.newInstance0(Class.java:278)
	at java.lang.Class.newInstance(Class.java:261)
	at org.codehaus.plexus.component.factory.java.JavaComponentFactory.newInstance(JavaComponentFactory.java:44)
	... 24 more
[INFO] ----------------------------------------------------------------------------
[INFO] Total time: 1 second
[INFO] Finished at: Wed Mar 01 14:36:37 PST 2006
[INFO] Final Memory: 2M/4M
[INFO] ----------------------------------------------------------------------------
{noformat}

I had included the central repo in my {{pom.xml}}:
{code}
    <pluginRepositories>
        <pluginRepository>
            <id>central</id>
            <name>Central Maven Repository</name>
            <url>http://repo1.maven.org/maven2</url>
        </pluginRepository>
        
        <pluginRepository>
            <id>maven-snapshots</id>
            <name>Maven Snapshots Repository</name>
            <url>http://snapshots.maven.codehaus.org/maven2</url>
        </pluginRepository>
        
        <!-- Legacy Plugin Repositories -->
        
        <pluginRepository>
            <id>paybytouch-legacy</id>
            <name>PayByTouch Repository (Maven 1)</name>
            <url>http://repository.paybytouch.com/m1/repository</url>
            <layout>legacy</layout>
        </pluginRepository>
    </pluginRepositories>
{code}

Removing the central entry from my {{pom.xml}} resolved the problem:

{code}
    <pluginRepositories>
        <pluginRepository>
            <id>maven-snapshots</id>
            <name>Maven Snapshots Repository</name>
            <url>http://snapshots.maven.codehaus.org/maven2</url>
        </pluginRepository>
        
        <!-- Legacy Plugin Repositories -->
        
        <pluginRepository>
            <id>paybytouch-legacy</id>
            <name>PayByTouch Repository (Maven 1)</name>
            <url>http://repository.paybytouch.com/m1/repository</url>
            <layout>legacy</layout>
        </pluginRepository>
    </pluginRepositories>
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28mhz:",9223372036854775807,,,,,,,,,,,,,,,,,,,"03/Mar/06 15:07;jason@planet57.com;I also noticed yesterday, that if you do not list central for <repositories> and at least one of the <repository> listed fail, that Maven 2.0.2 will fail to find artifacts from the inherited ""central"";;;","31/Aug/06 10:44;gazlm;I have the same problem - in a project which has the central repository redefined to point to an internal maven-proxy server, a clean install of maven does not download all the artifacts required to make the clean goal work.

In another project which does not redefine the central repository, mvn clean worked fine.

This is holding back our adoption of Maven - we need to be able to redefine the central server, as most of our developers have no direct access to the internet.;;;","07/Nov/06 17:33;barrett;This may actually be an issue with plexus and artifact resolution.
I deleted the entire org/apache/maven and org/codehaus directories from my box.
Then I rebuilt my plugin, and everything worked.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
2.0.3 messes up plugin parameters from CLI,MNG-2112,12794203,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Incomplete,,brianf,brianf@infinity.nu,24/Feb/06 12:53,10/Mar/16 13:54,03/Jan/22 13:13,24/Feb/06 13:08,2.0.3,,,,,,,,Plugin API,,,,,0,,,,"From the dev list:
I noticed something awhile ago where the expression was being hidden from the qdox parser when specified as the last attribute in that line, but I thought it had always been there. It's even filed in jira, but I thought it could wait (again, b/c I assumed it had always been there). 
Can you verify that this is the case, and that for this mojo, command-line specification of this parameter works in 2.0.2?

Thanks,

John

This is a test case that takes 2 values. Build and install the mojo then run by doing mvn some:mojo -Dvalue=xxx -Dvalue2=yyy
You can see that the second value isn't being picked up.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Feb/06 12:53;some-maven-plugin.zip;https://issues.apache.org/jira/secure/attachment/12711945/some-maven-plugin.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28xo7:",9223372036854775807,,,,,,,,,,,,,,,,,,,"24/Feb/06 13:08;brianf@infinity.nu;Forget it. Must be those beers Jason talked me into. Everything is fine.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Stack trace with Internal error in the plugin manager executing goal,MNG-2109,12796365,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Won't Fix,brettporter,olamy,olamy,24/Feb/06 04:38,17/Jul/06 00:17,03/Jan/22 13:13,17/Jul/06 00:17,2.0.2,,,,,,,,Plugins and Lifecycle,,,,,0,,,,"Hi,
I have a root pom with some modules :
- api (packaging jar)
- webapp (packaging accorwar internal plugin use with extension)
- tools
- site

The plugin accorwar  is actually in a snapshot version.
When i run the cli accowar:clean in the root folder and if a new snapshot has been detected/downloaded in the remote repository.
I have the following stack trace :
[INFO] Preparing accorwar:clean
Downloading: http://57.200.214.247/snapshots/com/accor/maven/plugins/maven-accor
war-plugin/1.0-SNAPSHOT/maven-accorwar-plugin-1.0-20060216.171651-24.jar
20K downloaded
[INFO] Reloading plugin container for: com.accor.maven.plugins:maven-accorwar-pl
ugin. The plugin artifact has changed.
[INFO] [clean:clean]
[INFO] Deleting directory c:\projets\CommonTrunk\commontrunk-api\target
[INFO] Deleting directory c:\projets\CommonTrunk\commontrunk-api\target\classes
[INFO] Deleting directory c:\projets\CommonTrunk\commontrunk-api\target\test-cla
sses
-----------------------------------------------------
this realm = app0.child-container[com.accor.maven.plugins:maven-accorwar-plugin]

urls[0] = file:/c:/local/maven/local-repository/repository/com/accor/maven/plugi
ns/maven-accorwar-plugin/1.0-SNAPSHOT/maven-accorwar-plugin-1.0-SNAPSHOT.jar
Number of imports: 0


this realm = plexus.core.maven
urls[0] = file:/c:/maven-2.0.2/lib/commons-cli-1.0.jar
urls[1] = file:/c:/maven-2.0.2/lib/doxia-sink-api-1.0-alpha-7.jar
urls[2] = file:/c:/maven-2.0.2/lib/jsch-0.1.24.jar
urls[3] = file:/c:/maven-2.0.2/lib/maven-artifact-2.0.2.jar
urls[4] = file:/c:/maven-2.0.2/lib/maven-artifact-manager-2.0.2.jar
urls[5] = file:/c:/maven-2.0.2/lib/maven-core-2.0.2-javadoc.jar
urls[6] = file:/c:/maven-2.0.2/lib/maven-core-2.0.2.jar
urls[7] = file:/c:/maven-2.0.2/lib/maven-error-diagnostics-2.0.2.jar
urls[8] = file:/c:/maven-2.0.2/lib/maven-model-2.0.2.jar
urls[9] = file:/c:/maven-2.0.2/lib/maven-monitor-2.0.2.jar
urls[10] = file:/c:/maven-2.0.2/lib/maven-plugin-api-2.0.2.jar
urls[11] = file:/c:/maven-2.0.2/lib/maven-plugin-descriptor-2.0.2.jar
urls[12] = file:/c:/maven-2.0.2/lib/maven-plugin-parameter-documenter-2.0.2.jar
urls[13] = file:/c:/maven-2.0.2/lib/maven-plugin-registry-2.0.2.jar
urls[14] = file:/c:/maven-2.0.2/lib/maven-profile-2.0.2.jar
urls[15] = file:/c:/maven-2.0.2/lib/maven-project-2.0.2.jar
urls[16] = file:/c:/maven-2.0.2/lib/maven-reporting-api-2.0.2.jar
urls[17] = file:/c:/maven-2.0.2/lib/maven-repository-metadata-2.0.2.jar
urls[18] = file:/c:/maven-2.0.2/lib/maven-settings-2.0.2.jar
urls[19] = file:/c:/maven-2.0.2/lib/plexus-interactivity-api-1.0-alpha-4.jar
urls[20] = file:/c:/maven-2.0.2/lib/wagon-file-1.0-alpha-7-SNAPSHOT.jar
urls[21] = file:/c:/maven-2.0.2/lib/wagon-http-lightweight-1.0-alpha-6.jar
urls[22] = file:/c:/maven-2.0.2/lib/wagon-provider-api-1.0-alpha-6.jar
urls[23] = file:/c:/maven-2.0.2/lib/wagon-ssh-1.0-alpha-6.jar
urls[24] = file:/c:/maven-2.0.2/lib/wagon-ssh-external-1.0-alpha-6.jar
Number of imports: 0


this realm = plexus.core
urls[0] = file:/c:/maven-2.0.2/core/plexus-container-default-1.0-alpha-9.jar
urls[1] = file:/c:/maven-2.0.2/core/plexus-utils-1.1.jar
Number of imports: 0
-----------------------------------------------------
[INFO] -------------------------------------------------------------------------
---
[ERROR] BUILD ERROR
[INFO] -------------------------------------------------------------------------
---
[INFO] Internal error in the plugin manager executing goal 'com.accor.maven.plug
ins:maven-accorwar-plugin:1.0-SNAPSHOT:clean': Unable to find the mojo 'com.acco
r.maven.plugins:maven-accorwar-plugin:1.0-SNAPSHOT:clean' in the plugin 'com.acc
or.maven.plugins:maven-accorwar-plugin'
org/codehaus/plexus/archiver/ArchiverException
[INFO] -------------------------------------------------------------------------
---
[INFO] For more information, run Maven with the -e switch
[INFO] -------------------------------------------------------------------------
---
[INFO] Total time: 30 seconds
[INFO] Finished at: Fri Feb 24 11:27:51 CET 2006
[INFO] Final Memory: 5M/11M
[INFO] -------------------------------------------------------------------------

A new build without downloaded new snapshot version works fine.
I have deployed a new version in the remote repo and run mvn -X -e -U accorwar:clean > fulllog.txt.
The fulllog.txt file is attached.
",windows/cygwin and solaris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Feb/06 04:38;olamy;fulllog.txt;https://issues.apache.org/jira/secure/attachment/12711673/fulllog.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28t3j:",9223372036854775807,,,,,,,,,,,,,,,,,,,"17/Jul/06 00:17;brettporter;this was an error in the metadata that crept into the Maven repository for a short period of time.

Please clean out your local repository (specifically maven-assembly-plugin).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
antcall failed,MNG-2088,12794246,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,kenneyw,logicalobjects,logicalobjects,20/Feb/06 09:08,08/Apr/07 18:26,03/Jan/22 13:13,06/Jul/06 14:18,2.0.2,,,,,3.0-alpha-1,,,Plugins and Lifecycle,,,,,1,,,,"I am trying to develop a maven plugin using the ant way beacuse of intensive file operations.
I have many filesystem operations coded inside different targets(mainly for easy manageability)
A template target invokes other targets in the same build file using the <antcall> task, but the invocation of this task couses the following exception:

org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute: Executing Ant script: /logicalserver.build.xml [deploy]: Failed to execute.
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:556)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:472)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:451)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:303)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:270)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:139)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:322)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:115)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:249)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.apache.maven.plugin.MojoExecutionException: Failed to execute: Executing Ant script: /logicalserver.build.xml [deploy]: Failed to execute.
        at org.apache.maven.script.ant.AntMojoWrapper.execute(AntMojoWrapper.java:37)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:415)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:531)
        ... 16 more
Caused by: org.codehaus.plexus.component.factory.ant.AntComponentExecutionException: Executing Ant script: /logicalserver.build.xml [deploy]: Failed to execute.
        at org.codehaus.plexus.component.factory.ant.AntScriptInvoker.invoke(AntScriptInvoker.java:227)
        at org.apache.maven.script.ant.AntMojoWrapper.execute(AntMojoWrapper.java:33)
        ... 18 more
Caused by: /tmp/plexus-ant-component61868.build.xml:15: The following error occurred while executing this line:
java.io.FileNotFoundException: /home/marco/projects/util/build.xml (No such file or directory)
        at org.apache.tools.ant.ProjectHelper.addLocationToBuildException(ProjectHelper.java:539)
        at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:336)
        at org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:107)
        at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:275)
        at org.apache.tools.ant.Task.perform(Task.java:364)
        at org.apache.tools.ant.Target.execute(Target.java:341)
        at org.apache.tools.ant.Target.performTasks(Target.java:369)
        at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1216)
        at org.apache.tools.ant.Project.executeTarget(Project.java:1185)
        at org.codehaus.plexus.component.factory.ant.AntScriptInvoker.invoke(AntScriptInvoker.java:222)
        ... 19 more
Caused by: java.io.FileNotFoundException: /home/marco/projects/util/build.xml (No such file or directory)
        at org.apache.tools.ant.helper.ProjectHelper2.parse(ProjectHelper2.java:243)
        at org.apache.tools.ant.helper.ProjectHelper2.parse(ProjectHelper2.java:140)
        at org.apache.tools.ant.ProjectHelper.configureProject(ProjectHelper.java:91)
        at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:334)
        ... 27 more
Caused by: java.io.FileNotFoundException: /home/marco/projects/util/build.xml (No such file or directory)
        at java.io.FileInputStream.open(Native Method)
        at java.io.FileInputStream.<init>(FileInputStream.java:106)
        at org.apache.tools.ant.helper.ProjectHelper2.parse(ProjectHelper2.java:198)
        ... 30 more
",Suse Linux 10.0 / JDK 1.5.0_04 / ANT 1.6.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28w9z:",9223372036854775807,,,,,,,,,,,,,,,,,,,"06/Jul/06 14:18;kenney;Fixed in plexus, revision 3473: plexus-ant-factory's (1.0-alpha-2-SNAPSHOT) AntScriptInvoker. Set property 'ant.file' to correct temp filename.

Fixed in maven trunk, revision 419664: updated maven-script-ant's dep on plexus-ant-factory to 1.0-alpha-2-SNAPSHOT.

Fixed in maven 2.0.x branch, revision 419665: updated maven-script-ant's dep on plexus-ant-factory to 1.0-alpha-2-SNAPSHOT.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Path to missing dependency is not shown nor url to download ,MNG-2083,12794224,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,carlos,carlos,17/Feb/06 13:01,21/Feb/06 10:41,03/Jan/22 13:13,21/Feb/06 10:41,2.0.3,,,,,2.0.3,,,Dependencies,,,,,0,,,,"Seems a regression
it's only shown with -X

[DEBUG] Unable to download the artifact from any repository

Try downloading the file manually from
  http://java.sun.com/products/javabeans/glasgow/jaf.html
and install it using the command:
  mvn install:install-file -DgroupId=javax.activation -DartifactId=activation -Dversion=1.0.2 -Dpackaging=jar -Dfile=/path/to/file
Path to dependency:
        1) test:test:jar:1.0-SNAPSHOT
        2) javax.activation:activation:jar:1.0.2


  javax.activation:activation:jar:1.0.2",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Feb/06 01:09;carlos;pom.xml;https://issues.apache.org/jira/secure/attachment/12711897/pom.xml","17/Feb/06 13:06;carlos;pom.xml;https://issues.apache.org/jira/secure/attachment/12711557/pom.xml",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28txz:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"21/Feb/06 00:24;jdcasey;ready for merge from trunk.;;;","21/Feb/06 00:41;jdcasey;fixed and merged.;;;","21/Feb/06 01:08;carlos;There's a problem when more than one dependecy is missing, some info (install instructions, download url) for the first one is ommitted

2 required artifacts missing:

1) javax.activation:activation:jar:1.0.2
  Path to dependency:
        1) test:test:jar:1.0-SNAPSHOT
        2) javax.activation:activation:jar:1.0.2



2) javax.mail:mail:jar:1.3.2

  Try downloading the file manually from
      http://java.sun.com/products/javamail/downloads/index.html

  Then, install it using the command:
      mvn install:install-file -DgroupId=javax.mail -DartifactId=mail \
          -Dversion=1.3.2 -Dpackaging=jar -Dfile=/path/to/file

  Path to dependency:
        1) test:test:jar:1.0-SNAPSHOT
        2) javax.mail:mail:jar:1.3.2



for the artifact:
  test:test:jar:1.0-SNAPSHOT

from the specified remote repositories:
  central (http://test.maven.codehaus.org/maven2);;;","21/Feb/06 01:09;carlos;The pom with two missing dependencies;;;","21/Feb/06 10:41;jdcasey;there was a problem with projects that were already cached...the pomArtifact doesn't get populated with downloadUrl, because the project is already in the cache.

I corrected this to set the downloadUrl on both the main artifact and the pomArtifact, for consistency. Then, I added a little bit more formatting to try to make multi-artifact output more legible.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
resolution fail after installing an artifact using an m2 build that was downloaded from a legacy repository,MNG-2077,12794178,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Cannot Reproduce,brettporter,brettporter,brettporter,15/Feb/06 19:59,05/Jun/07 00:45,03/Jan/22 13:13,05/Jun/07 00:45,2.0-alpha-1,,,,,,,,Artifacts and Repositories,,,,,0,,,,"the solution to MNG-1908 this seems to have introduced a regression that causes resolution to fail after installing the artifact using an m2 build.

Thanks to Patrick for testing every bizarre combination of uses for m1/m2 repositories :)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28vfj:",9223372036854775807,,,,,,,,,,,,,,,,,,,"15/Feb/06 20:14;brettporter;can't reproduce this just editing the file. I might need to get my hands on webwork and try and install it using m2 to reproduce the same circumstances.;;;","20/Feb/06 20:24;brettporter;either needs to be fixed in 2.0.3, or the previous change rolled back.

There also seems to be an introduced issue with getIfNewer after the previous change on scp deployment;;;","20/Feb/06 23:10;brettporter;I'm removeing this fix from the branch due to slowness and instability.;;;","05/Jun/07 00:45;brettporter;MNG-1908 was fixed properly;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Multiple inheritance fails to find ""grand"" parent in ../../pom.xml when the groupIds differ (Test Case Attached)",MNG-2068,12797533,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,jdcasey,brianf,brianf@infinity.nu,12/Feb/06 18:58,10/Mar/16 13:54,03/Jan/22 13:13,03/Jul/08 11:08,2.0.4,2.0.5,2.0.6,,,2.0.7,,,Inheritance and Interpolation,,,,,13,,,,"I have a project that inherits from 2 (or more) parents. If the grand parent (parent of my parent) isn't in the repository, it isn't found at ../../pom.xml

In my sample, make sure none of the artifacts are in your repository, then go down to sample-jar and try to build from there. See it fail.

Note: If you remove the "".sub"" from the second parent's group and update the sampe-jar pom, it no longer fails and finds the grandparent.

See below for the output when the groups are different (fails) and when they are the same (works)

Failing output:
E:\sample\sample\sample-parent2\sample-jar>mvn -X compile
+ Error stacktraces are turned on.
[DEBUG] Building Maven user-level plugin registry from: 'C:\Documents and Settin
gs\brianf\.m2\plugin-registry.xml'
[DEBUG] Building Maven global-level plugin registry from: 'c:\PROGRA~1\MAVEN-~1.
2\bin\..\conf\plugin-registry.xml'
[INFO] Scanning for projects...
[DEBUG] Using parent-POM from the project hierarchy at: '../pom.xml' for project
: null:sample-jar:jar:null
[DEBUG] Invalid parent-POM referenced by relative path '../pom.xml' in parent sp
ecification in null:sample-parent2:pom:null:
  Specified: sample-project.sub:sample-parent::SNAPSHOT
  Found:     sample-project:sample-parent:pom:SNAPSHOT
[DEBUG] Retrieving parent-POM from the repository for project: null:sample-paren
t2:pom:null
[DEBUG] Skipping disabled repository central
[DEBUG] sample-parent: using locally installed snapshot
[DEBUG] Trying repository sv1-int
Downloading: http://sv1.tus.stchome.com:9998/repository/sample-project/sub/sampl
e-parent/SNAPSHOT/sample-parent-SNAPSHOT.pom
[WARNING] Unable to get resource from repository sv1-int (http://sv1.tus.stchome
.com:9998/repository)
[DEBUG] Trying repository Maven Snapshots
Downloading: http://snapshots.maven.codehaus.org/maven2//sample-project/sub/samp
le-parent/SNAPSHOT/sample-parent-SNAPSHOT.pom
[WARNING] Unable to get resource from repository Maven Snapshots (http://snapsho
ts.maven.codehaus.org/maven2/)
[DEBUG] Skipping disabled repository central
[INFO] -------------------------------------------------------------------------
---
[ERROR] FATAL ERROR
[INFO] -------------------------------------------------------------------------
---
[INFO] Failed to resolve artifact.

GroupId: sample-project.sub
ArtifactId: sample-parent
Version: SNAPSHOT

Reason: Unable to download the artifact from any repository

  sample-project.sub:sample-parent:pom:SNAPSHOT

OUTPUT WITHOUT .sub:
E:\sample\sample\sample-parent2\sample-jar>mvn -X compile
+ Error stacktraces are turned on.
[DEBUG] Building Maven user-level plugin registry from: 'C:\Documents and Settin
gs\brianf\.m2\plugin-registry.xml'
[DEBUG] Building Maven global-level plugin registry from: 'c:\PROGRA~1\MAVEN-~1.
2\bin\..\conf\plugin-registry.xml'
[INFO] Scanning for projects...
[DEBUG] Using parent-POM from the project hierarchy at: '../pom.xml' for project
: null:sample-jar:jar:null
[DEBUG] Using parent-POM from the project hierarchy at: '../pom.xml' for project
: null:sample-parent2:pom:null
[INFO] -------------------------------------------------------------------------
---
[INFO] Building Maven Quick Start Archetype
[INFO]    task-segment: [compile]
[INFO] -------------------------------------------------------------------------
---
[DEBUG] maven-resources-plugin: resolved to version 2.1 from repository central
[DEBUG] Retrieving parent-POM from the repository for project: null:maven-resour

",,,,,,,,,,,,,,,,,MNG-2308,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-2318,,,,,,,,,,,"12/Feb/06 19:34;good-sample.zip;https://issues.apache.org/jira/secure/attachment/12711662/good-sample.zip","12/Jan/07 07:50;vbraun;mavenbugreport.zip;https://issues.apache.org/jira/secure/attachment/12712156/mavenbugreport.zip","12/Feb/06 18:58;sample.zip;https://issues.apache.org/jira/secure/attachment/12711893/sample.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28qov:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"12/Feb/06 19:03;brianf@infinity.nu;Note: Sample attached above is incorrect. I'm still verifying if I can reproduce my real problem in a sample. I'll update the attachment or close the issue.;;;","12/Feb/06 19:34;brianf@infinity.nu;Attached a working sample.

Note: To get this to fail, you must build from the mid level project (in this case sample-parent2). I think the problem is that it goes down to the child module to begin resolving the poms but fails to go back up. In this case it works from the highest level and also from the child.

;;;","13/Feb/06 03:09;gslowikowski;Add:

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

to pom.xml and good-example will work.
I use Maven 2.0.2;;;","13/Feb/06 06:46;brianf@infinity.nu;No, it still fails. You must build from ""sample-project2"" to see this problem. If you build from the root or from sample-jar it works fine. The trouble is when you are at an intermediate parent and try to build, it won't find it's own parent.;;;","24/Feb/06 13:14;brianf@infinity.nu;This seems to be fixed in 2.0.3. Should update the fixed in version so it shows up in the jira report. Would be nice to have an it test for this to keep it from coming back.;;;","24/Feb/06 17:38;jdcasey;confirmed fixed by Brian Fox...I added a variant of good-sample.zip as it0097.;;;","01/Jun/06 13:13;idueppe;It seems that this bug is still in maven 2.0.4. I can reproduce the error of this issue. To reproduce the error your local repository has to be empty.;;;","12/Jan/07 07:49;vbraun;We have the same issue with maven 2.0.4. 
Please reopen this bug. You must have a clean repository and build from the ""middle"" project.
The log output is:

[DEBUG] Searching for parent-POM: samplegroup:master::0.0.1 of project: samplegroup:frameworks:pom:0.0.1 in relative path: ../pom.xml
[DEBUG] Using parent-POM from the project hierarchy at: '../pom.xml' for project: samplegroup:frameworks:pom:0.0.1
[DEBUG] Retrieving parent-POM: samplegroup:master::0.0.1 for project: samplegroup:frameworks:pom:0.0.1 from the repository.
[DEBUG] Trying repository central
Downloading: http://repo1.maven.org/maven2/samplegroup/master/0.0.1/master-0.0.1.pom
[WARNING] Unable to get resource from repository central (http://repo1.maven.org/maven2)
[INFO] ------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ------------------------------------------------------------------------


This is although all projects have the same groupid.

I have attached a use case for this.;;;","12/Jan/07 07:50;vbraun;new test case with only 3 poms that fails with maven 2.0.4;;;","12/Jan/07 09:59;brianf@infinity.nu;new test cases attached.;;;","10/Apr/07 19:50;brianf@infinity.nu;Tested that this still occurs. Using the attached ""mavenbugreport.zip"". Make sure you haven't previously installed this. Cd into the midlevel pom (frameworks) and run mvn install:

[INFO] Failed to resolve artifact.

GroupId: samplegroup
ArtifactId: master
Version: 0.0.1

Reason: Unable to download the artifact from any repository

  samplegroup:master:pom:0.0.1

from the specified remote repositories:
  Maven Snapshots (http://people.apache.org/maven-snapshot-repository),
  central (http://repo1.maven.org/maven2),
  Codehaus Snapshots (http://snapshots.repository.codehaus.org)


[INFO] ------------------------------------------------------------------------
[INFO] Trace
org.apache.maven.reactor.MavenExecutionException: Cannot find parent: samplegroup:master for project: samplegroup:frameworks:pom:0.0
.1
        at org.apache.maven.DefaultMaven.getProjects(DefaultMaven.java:378)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:290)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:125)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:280)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.apache.maven.project.ProjectBuildingException: Cannot find parent: samplegroup:master for project: samplegroup:framew
orks:pom:0.0.1
        at org.apache.maven.project.DefaultMavenProjectBuilder.assembleLineage(DefaultMavenProjectBuilder.java:1264)
        at org.apache.maven.project.DefaultMavenProjectBuilder.assembleLineage(DefaultMavenProjectBuilder.java:1281)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildInternal(DefaultMavenProjectBuilder.java:749)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromSourceFileInternal(DefaultMavenProjectBuilder.java:479)
        at org.apache.maven.project.DefaultMavenProjectBuilder.build(DefaultMavenProjectBuilder.java:200)
        at org.apache.maven.DefaultMaven.getProject(DefaultMaven.java:537)
        at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:467)
        at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:512)
        at org.apache.maven.DefaultMaven.getProjects(DefaultMaven.java:364)
        ... 11 more
Caused by: org.apache.maven.project.ProjectBuildingException: POM 'samplegroup:master' not found in repository: Unable to download t
he artifact from any repository

  samplegroup:master:pom:0.0.1

from the specified remote repositories:
  Maven Snapshots (http://people.apache.org/maven-snapshot-repository),
  central (http://repo1.maven.org/maven2),
  Codehaus Snapshots (http://snapshots.repository.codehaus.org)

        at org.apache.maven.project.DefaultMavenProjectBuilder.findModelFromRepository(DefaultMavenProjectBuilder.java:573)
        at org.apache.maven.project.DefaultMavenProjectBuilder.assembleLineage(DefaultMavenProjectBuilder.java:1260)
        ... 19 more
Caused by: org.apache.maven.artifact.resolver.ArtifactNotFoundException: Unable to download the artifact from any repository

  samplegroup:master:pom:0.0.1

from the specified remote repositories:
  Maven Snapshots (http://people.apache.org/maven-snapshot-repository),
  central (http://repo1.maven.org/maven2),
  Codehaus Snapshots (http://snapshots.repository.codehaus.org)

        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:197)
        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:73)
        at org.apache.maven.project.DefaultMavenProjectBuilder.findModelFromRepository(DefaultMavenProjectBuilder.java:526)
        ... 20 more
Caused by: org.apache.maven.wagon.ResourceDoesNotExistException: Unable to download the artifact from any repository
        at org.apache.maven.artifact.manager.DefaultWagonManager.getArtifact(DefaultWagonManager.java:324)
        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:185)
        ... 22 more




If you build this from the top level, everything is fine.;;;","16/Apr/07 10:59;rene.grob;I have exactly the same issue with maven 2.0.6. The grand-parent-pom is a release while the parent-pom is a SNAPSHOT and a mulit-module-project.;;;","14/Aug/07 11:35;dpasek;Same problem for me with Maven 2.0.4 and 2.0.6. Build fails if it's started on a intermediate POM (= not top level POM but also no leaf in project hierarchy).;;;","02/Jul/08 17:49;jdcasey;I've tried the good-sample attachment with 2.0.9, 2.0.6, and 2.0.4, and I can't get this sample to fail when I build from the leaf-node project. I'm on OS X...was this happening on windows?;;;","03/Jul/08 04:21;vbraun;You have to build from a middle project. Not a leaf-node one.
And make sure that no artifacts are already installed in the repository.
Have you tried the test case mavenbugreport.zip?;;;","03/Jul/08 11:08;jdcasey;Verified that this is fixed in 2.0.7+, and integrated the example from mavenbugreport.zip into a new integration test.;;;","03/Sep/08 16:59;jdcasey;Adding fix-for for both 2.0.10 and 2.1.0-M1, since 2.1.0-M1 will actually be released first and may not incorporate all of the eventual issue fixes released in 2.0.10.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Multiple Inheritence causes plugin executions to run multiple times (Test Case Attached),MNG-2054,12797082,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,brettporter,brianf,brianf@infinity.nu,08/Feb/06 14:08,10/Mar/16 13:54,03/Jan/22 13:13,30/Mar/06 07:57,2.0.2,,,,,2.0.4,,,Inheritance and Interpolation,,,,,2,,,,"See the attached sample. If a plugin execution is set in a parent of a parent, when the child is built from either aggregator, the plugin execution runs multiple times. In my sample, I set the sources to be generated, but when run, see that the sources are generated and installed 2x.

[INFO] Building jar: E:\STC\sample\sample-parent2\sample-jar\target\sample-jar-SNAPSHOT-tests.jar
[INFO] [install:install]
[INFO] Installing E:\STC\sample\sample-parent2\sample-jar\target\sample-jar-SNAPSHOT.jar to f:\mavenRepo\sampl
e-project\sample-jar\SNAPSHOT\sample-jar-SNAPSHOT.jar
[INFO] Installing E:\STC\sample\sample-parent2\sample-jar\target\sample-jar-SNAPSHOT-sources.jar to f:\mavenRe
po\sample-project\sample-jar\SNAPSHOT\sample-jar-SNAPSHOT-sources.jar
[INFO] Installing E:\STC\sample\sample-parent2\sample-jar\target\sample-jar-SNAPSHOT-sources.jar to f:\mavenRe
po\sample-project\sample-jar\SNAPSHOT\sample-jar-SNAPSHOT-sources.jar
[INFO] Installing E:\STC\sample\sample-parent2\sample-jar\target\sample-jar-SNAPSHOT-tests.jar to f:\mavenRepo
\sample-project\sample-jar\SNAPSHOT\sample-jar-SNAPSHOT-tests.jar
[INFO]


If run directly from the child build, the sources are only built 1x:
[INFO] [jar:jar]
[INFO] Building jar: E:\STC\sample\sample-parent2\sample-jar\target\sample-jar-SNAPSHOT.jar
[INFO] [source:jar {execution: attach-source}]
[INFO] Building jar: E:\STC\sample\sample-parent2\sample-jar\target\sample-jar-SNAPSHOT-sources.jar
[INFO] [jar:test-jar {execution: default}]
[INFO] Building jar: E:\STC\sample\sample-parent2\sample-jar\target\sample-jar-SNAPSHOT-tests.jar
[INFO] [install:install]
[INFO] Installing E:\STC\sample\sample-parent2\sample-jar\target\sample-jar-SNAPSHOT.jar to f:\mavenRepo\sampl
e-project\sample-jar\SNAPSHOT\sample-jar-SNAPSHOT.jar
[INFO] Installing E:\STC\sample\sample-parent2\sample-jar\target\sample-jar-SNAPSHOT-sources.jar to f:\mavenRe
po\sample-project\sample-jar\SNAPSHOT\sample-jar-SNAPSHOT-sources.jar
[INFO] Installing E:\STC\sample\sample-parent2\sample-jar\target\sample-jar-SNAPSHOT-tests.jar to f:\mavenRepo
\sample-project\sample-jar\SNAPSHOT\sample-jar-SNAPSHOT-tests.jar",WinXp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-2237,MNG-2221,MNG-4879,,,,MNG-1701,,,,,,,,,,,"31/Mar/06 06:18;kenneyw;antrun2.tgz;https://issues.apache.org/jira/secure/attachment/12711479/antrun2.tgz","28/Mar/06 19:06;sample-regression.zip;https://issues.apache.org/jira/secure/attachment/12711477/sample-regression.zip","08/Feb/06 14:08;sample.zip;https://issues.apache.org/jira/secure/attachment/12711892/sample.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i297dj:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"08/Feb/06 14:13;brianf@infinity.nu;Further investigation using help:effective-pom shows that the plugin configuration actually gets included 2x in the pom. Shouldn't executions with the same name be merged with their parent?;;;","23/Feb/06 10:38;brianf@infinity.nu;I verified in my sample and in my real project that this appears to be fixed in 2.0.3. The fixed version should be updated so that the JIRA report reflects the correct information. I'd like to see this get created as an integration test to prevent future regresion, but I'm not 100% sure how to test for this condition.;;;","24/Feb/06 17:40;jdcasey;confirmed fixed by Brian Fox, I just added a variant of sample.zip as it0096.;;;","28/Mar/06 18:24;brianf@infinity.nu;There was some regression on this issue between the RC and the final version. In 2.0.2, the sample ran the sources jar 3 times. In 2.0.3 RC, it ran only once (correct). In 2.0.3 final it now runs 2 times:

[INFO] Installing E:\svn\dsms-2.1\legacy\hl7\target\hl7-2.1.0.7-SNAPSHOT.jar to
e:\stc\mavenRepo\com\stchome\products\dsms\legacy\hl7\2.1.0.7-SNAPSHOT\hl7-2.1.0
.7-SNAPSHOT.jar
[INFO] Installing E:\svn\dsms-2.1\legacy\hl7\target\hl7-2.1.0.7-SNAPSHOT-sources
.jar to e:\stc\mavenRepo\com\stchome\products\dsms\legacy\hl7\2.1.0.7-SNAPSHOT\h
l7-2.1.0.7-SNAPSHOT-sources.jar
[INFO] Installing E:\svn\dsms-2.1\legacy\hl7\target\hl7-2.1.0.7-SNAPSHOT-sources
.jar to e:\stc\mavenRepo\com\stchome\products\dsms\legacy\hl7\2.1.0.7-SNAPSHOT\h
l7-2.1.0.7-SNAPSHOT-sources.jar;;;","28/Mar/06 18:37;jdcasey;Brian,

Can you tell me what the key difference is between your project above (dsms-2.1, looks like?) and it0096, which is based on the sample.zip?

I just re-downloaded sample.zip, and it works fine on this side (running with a copy of mvn I downloaded this morning).;;;","28/Mar/06 18:39;brettporter;Brian, also please detail exactly which RC you are using (time/date). I don't believe anything was changed between the last one and the release.;;;","28/Mar/06 18:55;brianf@infinity.nu;I was running with 2.0.3-SNAPSHOT that was built on March 2nd. I believe this was one of the earlier RCs.

I also noticed that the sample seems to work even though it was based on my original project, which doesn't work. I'll go back and see if I can figure out the difference.;;;","28/Mar/06 19:06;brianf@infinity.nu;Apparently the only difference is the number of levels between the plugin definition to the child. This updated sample now produces 3 or more executions of the sources jar

The only difference between this version and the previous sample is an additional inheritence level.;;;","31/Mar/06 06:18;kenney;This test shows multiple calls of the same goals. Try 'mvn clean', 'mvn generate-sources', 'mvn package'.
It contains a parent and a child pom, and when run from the parent pom there are multiple executions of the same
goals:

$ mvn -version
Maven version: 2.0.4-SNAPSHOT   

(http://maven.zones.apache.org/~maven/builds/branches/maven-2.0.x/m2-20060330.155710.tar.gz)

$ mvn clean

[INFO] Scanning for projects...
[INFO] Reactor build order: 
[INFO]   parent
[INFO]   child
[INFO] ----------------------------------------------------------------------------
[INFO] Building parent
[INFO]    task-segment: [clean]
[INFO] ----------------------------------------------------------------------------
[INFO] [clean:clean]
[INFO] Deleting directory /vol/home/forge/work/sandbox/m2test/antrun2/target
[INFO] Deleting directory /vol/home/forge/work/sandbox/m2test/antrun2/target/classes
[INFO] Deleting directory /vol/home/forge/work/sandbox/m2test/antrun2/target/test-classes
[INFO] [antrun:run {execution: test2}]
[INFO] Executing tasks
     [echo] test2
[INFO] Executed tasks
[INFO] ----------------------------------------------------------------------------
[INFO] Building child
[INFO]    task-segment: [clean]
[INFO] ----------------------------------------------------------------------------
[INFO] [clean:clean]
[INFO] Deleting directory /vol/home/forge/work/sandbox/m2test/antrun2/child/target
[INFO] Deleting directory /vol/home/forge/work/sandbox/m2test/antrun2/child/target/classes
[INFO] Deleting directory /vol/home/forge/work/sandbox/m2test/antrun2/child/target/test-classes
[INFO] [antrun:run {execution: test2}]
[INFO] Executing tasks
     [echo] test2
[INFO] Executed tasks
[INFO] [antrun:run {execution: childTest2}]
[INFO] Executing tasks
     [echo] childTest2
[INFO] Executed tasks
[INFO] [antrun:run {execution: test2}]
[INFO] Executing tasks
     [echo] test2
[INFO] Executed tasks
[INFO] [antrun:run {execution: childTest2}]
[INFO] Executing tasks
     [echo] childTest2
[INFO] Executed tasks
[INFO] 
[INFO] 
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO] ------------------------------------------------------------------------
[INFO] parent ................................................ SUCCESS [1.022s]
[INFO] child ................................................. SUCCESS [0.069s]
[INFO] ------------------------------------------------------------------------
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESSFUL
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 1 second
[INFO] Finished at: Fri Mar 31 14:18:10 CEST 2006
[INFO] Final Memory: 2M/6M
[INFO] ------------------------------------------------------------------------
;;;","31/Mar/06 07:30;brianf@infinity.nu;This does seem some how related, but it's not quite the same. The original problem I saw was just the executions defined in the parent got executed a bunch of times. In your case, some of the child executions are rerun too.;;;","31/Mar/06 22:43;brettporter;Kenney, please file a new bug.;;;","11/Apr/06 08:18;jrduncans;I've filed http://jira.codehaus.org/browse/MNG-2221 which I think is the same as Kenney's.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Specifying a New Packaging / Creating a Custom Artifact Handler,MNG-2041,12794167,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Won't Fix,brettporter,olamy,olamy,06/Feb/06 02:31,06/Feb/06 04:40,03/Jan/22 13:13,06/Feb/06 04:40,2.0.2,,,,,,,,,,,,,0,,,,"Hi all,
I need to Specifying a New Packaging (I have read the section called Specifying a New Packaging [1]). This part is ok. But I have a trouble with the section called Creating a Custom Artifact Handler. I use this : <addedToClasspath>true</addedToClasspath>

But when I try javadoc:javadoc on an module with this new packaging. Mvn says : Not executing Javadoc as the project is not a Java classpath-capable package.

I have try my own implementation of ArtifactHandler which simply extends org.apache.maven.artifact.handler.DefaultArtifactHandler.
But the same result.

Note , I use the following hack (if not my file =
artifactId-${version}-{packaging}) : this.getProject().getArtifact().setArtifactHandler( new my own implementation of ArtifactHandler ); getProject().getArtifact().setFile( artifactFile ); My own implementation of ArtifactHandler override : 
- getPackaging()
- getExtension()
- getType()
- isAddedToClasspath() with return true.

What's wrong ?? (an already existing issue ?)

Thanks in advance,
Olivier",solaris and windows,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28urb:",9223372036854775807,,,,,,,,,,,,,,,,,,,"06/Feb/06 04:40;brettporter;please ask questions on the users@ list.

I think you need <language>java</language> in there.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Strange NPE with profile and injectPlugins,MNG-2037,12796241,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,olamy,olamy,03/Feb/06 16:40,08/Mar/06 10:40,03/Jan/22 13:13,16/Feb/06 18:13,2.0.2,,,,,2.0.3,,,,,,,,0,,,,"I use the war plugin with a default configuration :
<plugin>
  <artifactId>maven-war-plugin</artifactId>
  <configuration>
    <warSourceDirectory implementation=""java.io.File"">${basedir}/src/main/web</warSourceDirectory>
    <webXml>${basedir}/src/main/resources/war/web.xml</webXml> 
    <webappDirectory implementation=""java.io.File"">${basedir}/webappdir</webappDirectory>
  </configuration>
</plugin> 
And a profile with only 
    <profile>
      <id>rec-ap2</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
              <webappDirectory implementation=""java.io.File"">/local/tomcat/jakarta-tomcat-5.5.9/webapps/SLSTester</webappDirectory>
            </configuration>
          </plugin>
        </plugins> 
      </build>     
    </profile>
mvn -P rec-ap2 -X -e war:exploded generate the NPE :
+ Error stacktraces are turned on. 
[DEBUG] Building Maven user-level plugin registry from: '/local/tomcat/.m2/plugin-registry.xml' 
[DEBUG] Building Maven global-level plugin registry from: '/local/maven/maven-2.0.2/conf/plugin-registry.xml' 
[INFO] Scanning for projects... 
[INFO] ---------------------------------------------------------------------------- 
[ERROR] FATAL ERROR 
[INFO] ---------------------------------------------------------------------------- 
[INFO] null 
[INFO] ---------------------------------------------------------------------------- 
[DEBUG] Trace 
java.lang.NullPointerException 
        at org.apache.maven.project.injection.DefaultProfileInjector.injectPlugins(DefaultProfileInjector.java:147) 
        at org.apache.maven.project.injection.DefaultProfileInjector.injectBuild(DefaultProfileInjector.java:134) 
        at org.apache.maven.project.injection.DefaultProfileInjector.inject(DefaultProfileInjector.java:80) 
        at org.apache.maven.project.DefaultMavenProjectBuilder.injectActiveProfiles(DefaultMavenProjectBuilder.java:1035)

        at org.apache.maven.project.DefaultMavenProjectBuilder.assembleLineage(DefaultMavenProjectBuilder.java:836) 
        at org.apache.maven.project.DefaultMavenProjectBuilder.build(DefaultMavenProjectBuilder.java:593) 
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromSourceFile(DefaultMavenProjectBuilder.java:303) 
        at org.apache.maven.project.DefaultMavenProjectBuilder.build(DefaultMavenProjectBuilder.java:274) 
        at org.apache.maven.DefaultMaven.getProject(DefaultMaven.java:515) 
        at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:447) 
        at org.apache.maven.DefaultMaven.getProjects(DefaultMaven.java:351) 
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:278) 
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:115) 
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:249) 
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) 
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) 
        at java.lang.reflect.Method.invoke(Method.java:585) 
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315) 
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255) 
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430) 
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375) 
[INFO] ---------------------------------------------------------------------------- 
[INFO] Total time: < 1 second 
[INFO] Finished at: Fri Feb 03 23:39:41 MET 2006 
[INFO] Final Memory: 2M/126M 
[INFO] ---------------------------------------------------------------------------- 
",solaris and windowns,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Feb/06 07:48;olamy;fullstack.log;https://issues.apache.org/jira/secure/attachment/12711894/fullstack.log","10/Feb/06 05:09;olamy;pom_changeip.xml;https://issues.apache.org/jira/secure/attachment/12711742/pom_changeip.xml",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i296nj:",9223372036854775807,,,,,,,,,,,,,,,,,,,"09/Feb/06 12:36;olamy;I can't reproduce it.
Sorry for noise.;;;","09/Feb/06 13:00;buddycasino;Just wanted to say that I have a similar issue where I get a NPE in Solaris, but not in Windows, maybe these are related? I'm trying to investigate this tomorrow, to make sure I didn't make any mistakes setting up the environment. I'll report back if I managed to make it work (or not).

Heres my stacktrace:

[DEBUG] Trace
java.lang.NullPointerException
       at org.apache.maven.plugin.DefaultPluginManager.addPlugin(DefaultPluginManager.java:295)
       at org.apache.maven.plugin.DefaultPluginManager.verifyVersionedPlugin(DefaultPluginManager.java:200)
       at org.apache.maven.plugin.DefaultPluginManager.verifyPlugin(DefaultPluginManager.java:165)
       at org.apache.maven.lifecycle.DefaultLifecycleExecutor.verifyPlugin(DefaultLifecycleExecutor.java:1218)
       at org.apache.maven.lifecycle.DefaultLifecycleExecutor.getMojoDescriptor(DefaultLifecycleExecutor.java:1483)
       at org.apache.maven.lifecycle.DefaultLifecycleExecutor.bindLifecycleForPackaging(DefaultLifecycleExecutor.java:979)
       at org.apache.maven.lifecycle.DefaultLifecycleExecutor.constructLifecycleMappings(DefaultLifecycleExecutor.java:943)
       at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:450)
       at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:303)
       at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:270)
       at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:139)
       at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:322)
       at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:115)
       at org.apache.maven.cli.MavenCli.main(MavenCli.java:249)
       at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
       at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
       at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
       at java.lang.reflect.Method.invoke(Method.java:585)
       at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
       at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
       at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
       at org.codehaus.classworlds.Launcher.main(Launcher.java:375) ;;;","10/Feb/06 05:07;olamy;I reopen this because I have reproduced the trouble.
I attached the pom.
Just try : mvn -P intdotw clean.
Failed on windows+cygwin/cmd and solaris.
On windows : my settings doesn't contains the profile.
On solaris : my settings contains the profile but not activeByDefault and not in activeProfiles section;;;","10/Feb/06 05:09;olamy;attached the pom to reproduce it.;;;","10/Feb/06 06:11;buddycasino;Ok, today I was able to resolve my problem, it had to do with a corrupted plugin jar in my repository on solaris, everything runs fine now. Can't help here, sorry.;;;","10/Feb/06 07:48;olamy;I have deleted all files in my local repository.
The NPE appears before downloading artifacts.
I look at http://svn.apache.org/viewcvs.cgi/maven/components/tags/maven-2.0.2/maven-project/src/main/java/org/apache/maven/project/injection/DefaultProfileInjector.java?rev=369329&view=markup
method injectPlugins, probably need to check if profileContainer != null.
I don't know all the code of maven. Maybe it's normal that profileContainer is null.
Olivier;;;","10/Feb/06 07:48;olamy;attach full stack trace generated with : mvn -P intdotw -X -e clean > fullstack.log.;;;","08/Mar/06 10:40;renaud_julienne;I had the same issue and found a workaround.
In the profile build section, just add an empty pluginManagement section.

From org.apache.maven.project.injection.DefaultProfileInjector
122             injectPlugins( profileBuild, modelBuild );
123 
124             // Plugin management :: aggregate
125             PluginManagement profilePM = profileBuild.getPluginManagement();  /** ==> this is what leads to NullPointerException in the following injectPlugins call **/
126             PluginManagement modelPM = modelBuild.getPluginManagement();
127 
128             if ( modelPM == null )
129             {
130                 modelBuild.setPluginManagement( profilePM );
131             }
132             else
133             {
134                 injectPlugins( profilePM, modelPM );
135             };;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
POM is still not read using the right encoding,MNG-2025,12796817,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,jvanzyl,stefanhuebner,stefanhuebner,30/Jan/06 18:12,07/Apr/15 12:24,03/Jan/22 13:13,17/Oct/07 11:01,2.0,,,,,2.0.8,,,POM::Encoding,,,,,4,,,,"IIRC XML standard says that default encoding is UTF-8 for xml files

That can be overriden with 
<?xml version=""1.0"" encoding=""ISO-8859-1""?>

But files without header saved as UTF8 are not parsed in some systems (eg windows, solaris), while files saved as other encoding (I believe it was ansi) break under a Mac mini with yellowdog linux",,,,,,,,,,,,,,,,,,,,,,,,MNG-2254,,,,,,,,,,,,,,,,,,,,,,,,,,,MECLIPSE-56,,,"30/Jan/06 18:24;stefanhuebner;MNG-2025-maven-model-testcases.patch;https://issues.apache.org/jira/secure/attachment/12711739/MNG-2025-maven-model-testcases.patch","30/Jan/06 18:32;stefanhuebner;MNG-2025-maven-project-testcases.patch;https://issues.apache.org/jira/secure/attachment/12711940/MNG-2025-maven-project-testcases.patch",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29c8v:",9223372036854775807,,,,,,,,,,,,,,,,,,,"30/Jan/06 18:22;stefanhuebner;This issue is a clone of MNG-1603. Sorry, The Fix Version is not correct due to cloning (I misunderstood this cloning feature slightly.)

My experiences working with encodings is, that Maven actually DOES NOT read model files using the right encoding. It might be true, that the declared encoding is read and attached to the model. But certain field like *description* are read using the default system character set, which isn't the same as the POM's encoding in all cases.

I'll provide test cases both for maven-model and maven-project to demonstrate the problem.

Again, sorry for the misleading issue data by cloning MNG-1603.

Regards,
Stefan;;;","30/Jan/06 18:24;stefanhuebner;This patch adds two model-files encoded in two different ways. The patch also provides test cases which try to read those models and check the read data.;;;","30/Jan/06 18:32;stefanhuebner;This patch demonstrates the encoding issue in maven-project. Again it provides two POMs encoding in different ways. It provides test cases trying to read those POMs and validate the read data.;;;","08/May/06 15:53;stefanhuebner;PLX-214 describes the actual cause of this issue very nicely.;;;","16/Oct/07 20:46;brianf@infinity.nu;I applied the maven-project unit tests and those were already fixed by MNG-2254. The maven model tests are still failing however;;;","16/Oct/07 20:48;brianf@infinity.nu;The model patch is applied to 2.0.x here: http://svn.apache.org/repos/asf/maven/components/branches/maven-model-mng2025;;;","16/Oct/07 21:52;brianf@infinity.nu;Actually the project units are failing on 2.0.x too.;;;","17/Oct/07 11:01;brianf@infinity.nu;fixed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Module SCM URL is resolved as [...]/parent/module regardless of relativePath,MNG-2006,12796211,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,le.du.yann@gmail.com,le.du.yann@gmail.com,24/Jan/06 08:54,24/Jan/11 23:28,03/Jan/22 13:13,21/Feb/06 14:29,2.0.2,,,,,2.0.3,,,Inheritance and Interpolation,,,,,3,,,,"Quoting Emmanuel Venisse from user list :
Ok, it's a bug in
http://svn.apache.org/viewcvs.cgi/maven/components/trunk/maven-project/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java?rev=306518&view=markup
in assembleScmInheritance method.
This method append parent scm connection url and artifactId without look at relativePath. 

For detailed description see http://www.nabble.com/-m2-Multiprojects-and-inherited-SCM-URLs-t951105.html

Project structure :
PROJECT
PROJECT/parent
PROJECT/parent/pom.xml
PROJECT/module
PROJECT/module/pom.xml

parent/pom.xml :
<connection>scm:svn:svn://host/PROJECT/parent/</connection>
<module>../module</module>

module/pom.xml :
<relativePath>../parent/pom.xml</relativePath> 

When I add module in Continuum, its url is resolved as :
scm:svn:svn://host/PROJECT/parent/module","Maven 2.0.2
Continuum 1.0.2 with maven-scm-*-1.0-beta-3-20060115.041342-*.jar",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-4994,MNG-4878,MNG-3848,MNG-3134,MNG-4763,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29713:",9223372036854775807,,,,,,,,,,,,,,,,,,,"25/Jan/06 02:24;evenisse;It's required for Continuum;;;","26/Jan/06 08:32;evenisse;The fix must be done for scm connection url, scm developer connection url, scm url and site url in distributionManagement.

For fixing it,  we need to access to the absolute path of parent and child, so we need to access to Project instead of Model in DefaultModelInheritanceAssembler.
New urls must be calculated with child artifactId, relativePath of parent, parent url and module path used for the child
;;;","20/Feb/06 16:03;jdcasey;added getModulePathAdjustment( MavenProject ) to MavenProject, so we can pull the module definition of an associated child project instance from a parent project instance. This enables us to then pass in the child path adjustment (from the parent pom's directory) to the model inheritance assembler, so we can adjust URLs for the child, rather than simply appending them.;;;","21/Feb/06 10:10;evenisse;patch doesn't work;;;","21/Feb/06 14:29;jdcasey;Implemented the following strategy for determining module path adjustments for URLs:

1. look for module-project file, and parent-project file, and compute directory shift from parent-project <modules/> section based on that.

2. look for module-project artifactId, and parent-project <modules/> section, and match where the artifactid is the last path part for a given module in the parent.

Using <relativePath/> is difficult, since the pom files are not always going to be populated for this method, particularly when computing model inheritance.

This should work in most normal cases. Where it doesn't, it's still possible to override the value in the child pom.;;;","30/Sep/08 15:28;mck;MCHANGELOG-75 seems to be a duplicate of this. But it still does not work.
 And i don't see how in DefaultModelInheritanceAssembler.assembleScmInheritance
{code}
            if ( StringUtils.isEmpty( childScm.getConnection() ) && !StringUtils.isEmpty( parentScm.getConnection() ) )
            {
                childScm.setConnection( appendPath( parentScm.getConnection(), child.getArtifactId(), appendPaths ) );
            }
{code}
could possibly work in such situations.;;;","29/Jun/10 10:35;dma_k;I also don't see how the fix with {{child.getArtifactId()}} actually solves the problem.I agree that SCM resolution mechanism should use {{module}} information, so if in parent has {{<connection>>scm:svn:svn://host/PROJECT/parent/</connection>}} and refers to module as {{<module>../module</module>}}, then the module should have {{<connection>scm:svn:svn://host/PROJECT/module/</connection>}} and not {{<connection>scm:svn:svn://host/PROJECT/parent/modile-artifact-id</connection>}}.;;;","08/Jul/10 13:26;wayneliu;I think the assumption this fix is wrong. It is not necessary for a project to be a module of it's parent. I'm using the parent to inherit a number of common settings only, not to build the child projects. One setting I would like to be able to put into the parent is 
	<scm>
		<connection>scm:svn:http://.../trunk/${project.artifactId}</connection>
		<developerConnection>scm:svn:http://.../trunk/${project.artifactId}</developerConnection>
	</scm>
This would avoid having to specify scm information in the children even though they are not submodules.

Please reconsider a fix for this case.

Thanks,

Wayne Liu;;;","09/Jul/10 09:21;dma_k;Wayne, ASAIK variable substitution works OK. What behaves wrong and what do you expect? I suppose, you do not expect that for children projects SCM will be actually scm:svn:http://.../trunk/${project.artifactId}/${project.artifactId}?;;;","14/Jul/10 16:04;wayneliu;Yes, you are correct about my expectations.  I'm not a long-time Maven user, but my understanding is for all other elements, the parent's settings is inherited.  But for this element, the parent's setting is inherited and appended to.  That seems confusing and unnecessary, since there is no submodule relationship between parent and children.
;;;","23/Oct/10 09:01;puce;I have similar issues. My project layout looks like this:
PROJECT
PROJECT/pom.xml (multi module project)
PROJECT/parent
PROJECT/parent/pom.xml
PROJECT/module
PROJECT/module/pom.xml

This layout allows to build the parent POM without building its children and still support:
cd PROJECT
mvn clean install

to build everything.

PROJECT/parent/pom.xml is the parent of PROJECT/pom.xml and PROJECT/module/pom.xml;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ArtifactCollector fails without looking into other repositories,MNG-2005,12796216,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Cannot Reproduce,,lacostej,lacostej,24/Jan/06 08:02,01/Feb/06 14:45,03/Jan/22 13:13,25/Jan/06 08:40,2.0.2,,,,,,,,Artifacts and Repositories,,,,,0,,,,"My pom references 2 pluginRepositories (the snapshots codehaus one and the corporate one). 

The keytool-maven-plugin is deployed as 0.3-SNAPSHOT on the snapshots
repository and I've built  a newer version (0.4-SNAPSHOT)
deployed in my internal repository, but it's not picked up.

It looks like it found the plugin on snapshots, but not with the
requested version and failed instead of looking further.

Sounds like an issue in the DefaultArtifactCollector. Will try to investigate further...

[INFO] ----------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ----------------------------------------------------------------------------
[INFO] Failed to resolve artifact.

Couldn't find a version in [0.3-SNAPSHOT] to match range [0.3,)
  org.codehaus.mojo:keytool-maven-plugin:jar:null

from the specified remote repositories:
  central (http://repo1.maven.org/maven2),
  snapshots (http://snapshots.maven.codehaus.org/maven2/),
  embedded (file://${basedir}/tmp/m2repos),
  myrepo (http://myrepository/)


[INFO] ----------------------------------------------------------------------------
[DEBUG] Trace
org.apache.maven.lifecycle.LifecycleExecutionException: Couldn't find a version in [0.3-SNAPSHOT] to match range [0.3,)
  org.codehaus.mojo:keytool-maven-plugin:jar:null

from the specified remote repositories:
  central (http://repo1.maven.org/maven2),
  snapshots (http://snapshots.maven.codehaus.org/maven2/),
  embedded (file://${basedir}/tmp/m2repos),
  myrepo (http://myrepository/)

        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:548)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:472)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:451)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:303)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:270)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:139)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:322)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:115)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:249)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.apache.maven.artifact.versioning.OverConstrainedVersionException: Couldn't find a version in [0.3-SNAPSHOT] to match range [0.3,)
  org.codehaus.mojo:keytool-maven-plugin:jar:null

from the specified remote repositories:
  central (http://repo1.maven.org/maven2),
  snapshots (http://snapshots.maven.codehaus.org/maven2/),
  embedded (file://${basedir}/tmp/m2repos),
  myrepo (http://myrepository/)

        at org.apache.maven.artifact.resolver.DefaultArtifactCollector.recurse(DefaultArtifactCollector.java:266)
        at org.apache.maven.artifact.resolver.DefaultArtifactCollector.collect(DefaultArtifactCollector.java:67)
        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolveTransitively(DefaultArtifactResolver.java:223)
        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolveTransitively(DefaultArtifactResolver.java:211)
        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolveTransitively(DefaultArtifactResolver.java:182)
        at org.apache.maven.plugin.DefaultPluginManager.ensurePluginContainerIsComplete(DefaultPluginManager.java:611)
        at org.apache.maven.plugin.DefaultPluginManager.getConfiguredMojo(DefaultPluginManager.java:522)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:393)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:531)
        ... 16 more
[INFO] ----------------------------------------------------------------------------
[INFO] Total time: 15 seconds
[INFO] Finished at: Tue Jan 24 14:39:00 CET 2006
[INFO] Final Memory: 7M/13M
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i299tj:",9223372036854775807,,,,,,,,,,,,,,,,,,,"24/Jan/06 09:11;lacostej;I've investigated the issue a little bit.

Currently looking at DefaultRepositoryMetadataManager:

    private boolean loadMetadata( RepositoryMetadata repoMetadata, ArtifactRepository remoteRepository,
                                  ArtifactRepository localRepository, Map previousMetadata )
        throws RepositoryMetadataReadException
    {
        boolean setRepository = false;

        File metadataFile = new File( localRepository.getBasedir(),
                                      localRepository.pathOfLocalRepositoryMetadata( repoMetadata, remoteRepository ) );

        if ( metadataFile.exists() )
        {
            Metadata metadata = readMetadata( metadataFile );

            if ( repoMetadata.isSnapshot() && previousMetadata != null )
            {
                previousMetadata.put( remoteRepository, metadata );
            }

            if ( repoMetadata.getMetadata() != null )
            {
                setRepository = repoMetadata.getMetadata().merge( metadata );
            }
            else
            {
                repoMetadata.setMetadata( metadata );
                setRepository = true;
            }
        }
        return setRepository;
    }

metadataFile = ""/home/mvn/.m2/repository/org/codehaus/mojo/keytool-maven-plugin/maven-metadata-myrepossitory.xml""

The file contains:

<?xml version=""1.0"" encoding=""UTF-8""?><metadata>
  <groupId>org.codehaus.mojo</groupId>
  <artifactId>keytool-maven-plugin</artifactId>
  <version>0.4-SNAPSHOT</version>
  <versioning>
    <versions>
      <version>0.4-SNAPSHOT</version>
    </versions>
    <lastUpdated>20060124110948</lastUpdated>
  </versioning>
</metadata>

but in the metadata object generated, the versionning and version properties are null. That sounds wrong to me.;;;","24/Jan/06 10:11;lacostej;I've ingestigated my plugin version resolution iissue and it appears that the metadata instance properties do not match the metadata xml file stored in my local repository.

I am following the XML parsing in the debugger, and it looks like the XMLPullParser doesn't send events for all node starts, so versionning and version are not filled up. This only happens for that particular file in that particular context. I tried to create a  simple test case outside maven and the test case ran OK...

import java.io.*;
import org.apache.maven.artifact.repository.metadata.*;
import org.apache.maven.artifact.repository.metadata.io.xpp3.MetadataXpp3Reader;
import org.codehaus.plexus.util.IOUtil;
import org.codehaus.plexus.util.xml.pull.XmlPullParserException;

public class Test {

  public static void main(String[] args) throws Exception{

       File mappingFile = new File(""/home/jerome/.m2/repository/org/codehaus/mojo/keytool-maven-plugin/maven-metadata-myrepo.xml"");

        Metadata result;

        Reader fileReader = null;
        try
        {
            fileReader = new FileReader( mappingFile );

            MetadataXpp3Reader mappingReader = new MetadataXpp3Reader();

            result = mappingReader.read( fileReader, false );
        }
        catch ( FileNotFoundException e )
        {
            throw new Exception( ""Cannot read metadata from '"" + mappingFile + ""'"", e );
        }
        catch ( IOException e )
        {
            throw new Exception(
                ""Cannot read metadata from '"" + mappingFile + ""': "" + e.getMessage(), e );
        }
        catch ( XmlPullParserException e )
        {
            throw new Exception(
                ""Cannot read metadata from '"" + mappingFile + ""': "" + e.getMessage(), e );
        }
        finally
        {
            IOUtil.close( fileReader );
        }
        System.out.println("""" + result.getVersion());
        System.out.println("""" + result.getVersioning().getVersions());
    }
}

;;;","24/Jan/06 12:17;lacostej;Problem is within the MXParser indeed.

I've modified the parser to print the following information:

    public int next()
        throws XmlPullParserException, IOException
    {
        tokenize = false;
        int next = nextImpl();
        if (debug) {
            System.out.println(""lineNumber: "" + lineNumber
                    + "" columnNumber:"" + columnNumber
                    + "" String: "" + (depth > 0 ? new String(elRawName[depth]) : ""depth = 0"" ) );
        }
         return next;
    }

Here's the log when the parser parses the metadata files. First parsing is related to the metadata file from the snapshot repository. Second parsing is from the file from my corporate repository (pasted in a previous comment).

lineNumber: 1 columnNumber:48 String: metadata^@^@^@^@^@^@^@^@
lineNumber: 2 columnNumber:5 String: metadata^@^@^@^@^@^@^@^@
lineNumber: 2 columnNumber:12 String: groupId^@^@^@^@^@^@^@
lineNumber: 2 columnNumber:31 String: groupId^@^@^@^@^@^@^@
lineNumber: 2 columnNumber:39 String: groupId^@^@^@^@^@^@^@
lineNumber: 3 columnNumber:5 String: metadata^@^@^@^@^@^@^@^@
lineNumber: 3 columnNumber:15 String: artifactId^@^@^@^@
lineNumber: 3 columnNumber:37 String: artifactId^@^@^@^@
lineNumber: 3 columnNumber:48 String: artifactId^@^@^@^@
lineNumber: 4 columnNumber:5 String: metadata^@^@^@^@^@^@^@^@
lineNumber: 4 columnNumber:12 String: versiontId^@^@^@^@
lineNumber: 4 columnNumber:26 String: versiontId^@^@^@^@
lineNumber: 4 columnNumber:34 String: versiontId^@^@^@^@
lineNumber: 5 columnNumber:5 String: metadata^@^@^@^@^@^@^@^@
lineNumber: 5 columnNumber:15 String: versioning^@^@^@^@
lineNumber: 6 columnNumber:7 String: versioning^@^@^@^@
lineNumber: 6 columnNumber:13 String: latest^@^@^@^@^@^@
lineNumber: 6 columnNumber:27 String: latest^@^@^@^@^@^@
lineNumber: 6 columnNumber:34 String: latest^@^@^@^@^@^@
lineNumber: 7 columnNumber:7 String: versioning^@^@^@^@
lineNumber: 7 columnNumber:15 String: versions^@^@^@^@
lineNumber: 8 columnNumber:9 String: versions^@^@^@^@
lineNumber: 8 columnNumber:16 String: version^@^@^@^@^@^@^@
lineNumber: 8 columnNumber:30 String: version^@^@^@^@^@^@^@
lineNumber: 8 columnNumber:38 String: version^@^@^@^@^@^@^@
lineNumber: 9 columnNumber:7 String: versions^@^@^@^@
lineNumber: 9 columnNumber:16 String: versions^@^@^@^@
lineNumber: 10 columnNumber:7 String: versioning^@^@^@^@
lineNumber: 10 columnNumber:18 String: lastUpdated^@
lineNumber: 10 columnNumber:34 String: lastUpdated^@
lineNumber: 10 columnNumber:46 String: lastUpdated^@
lineNumber: 11 columnNumber:5 String: versioning^@^@^@^@
lineNumber: 11 columnNumber:16 String: versioning^@^@^@^@
lineNumber: 12 columnNumber:3 String: metadata^@^@^@^@^@^@^@^@
lineNumber: 12 columnNumber:12 String: metadata^@^@^@^@^@^@^@^@
lineNumber: 12 columnNumber:12 String: depth = 0



lineNumber: 1 columnNumber:48 String: metadata^@^@^@^@^@^@^@^@
lineNumber: 2 columnNumber:5 String: metadata^@^@^@^@^@^@^@^@
lineNumber: 2 columnNumber:12 String: groupId^@^@^@^@^@^@^@
lineNumber: 2 columnNumber:31 String: groupId^@^@^@^@^@^@^@
lineNumber: 2 columnNumber:39 String: groupId^@^@^@^@^@^@^@
lineNumber: 3 columnNumber:5 String: metadata^@^@^@^@^@^@^@^@
lineNumber: 3 columnNumber:15 String: artifactId^@^@^@^@
lineNumber: 3 columnNumber:37 String: artifactId^@^@^@^@
lineNumber: 3 columnNumber:48 String: artifactId^@^@^@^@
lineNumber: 4 columnNumber:3 String: metadata^@^@^@^@^@^@^@^@
lineNumber: 4 columnNumber:12 String: metadata^@^@^@^@^@^@^@^@
lineNumber: 4 columnNumber:12 String: depth = 0
lineNumber: 1 columnNumber:48 String: metadata^@^@^@^@^@^@^@^@
lineNumber: 2 columnNumber:5 String: metadata^@^@^@^@^@^@^@^@
lineNumber: 2 columnNumber:12 String: groupId^@^@^@^@^@^@^@
lineNumber: 2 columnNumber:31 String: groupId^@^@^@^@^@^@^@
lineNumber: 2 columnNumber:39 String: groupId^@^@^@^@^@^@^@
lineNumber: 3 columnNumber:5 String: metadata^@^@^@^@^@^@^@^@
lineNumber: 3 columnNumber:15 String: artifactId^@^@^@^@
lineNumber: 3 columnNumber:37 String: artifactId^@^@^@^@
lineNumber: 3 columnNumber:48 String: artifactId^@^@^@^@
lineNumber: 4 columnNumber:3 String: metadata^@^@^@^@^@^@^@^@
lineNumber: 4 columnNumber:12 String: metadata^@^@^@^@^@^@^@^@
lineNumber: 4 columnNumber:12 String: depth = 0
lineNumber: 1 columnNumber:48 String: metadata^@^@^@^@^@^@^@^@
lineNumber: 2 columnNumber:5 String: metadata^@^@^@^@^@^@^@^@
lineNumber: 2 columnNumber:12 String: groupId^@^@^@^@^@^@^@
lineNumber: 2 columnNumber:31 String: groupId^@^@^@^@^@^@^@
lineNumber: 2 columnNumber:39 String: groupId^@^@^@^@^@^@^@
lineNumber: 3 columnNumber:5 String: metadata^@^@^@^@^@^@^@^@
lineNumber: 3 columnNumber:15 String: artifactId^@^@^@^@
lineNumber: 3 columnNumber:37 String: artifactId^@^@^@^@
lineNumber: 3 columnNumber:48 String: artifactId^@^@^@^@
lineNumber: 4 columnNumber:3 String: metadata^@^@^@^@^@^@^@^@
lineNumber: 4 columnNumber:12 String: metadata^@^@^@^@^@^@^@^@
lineNumber: 4 columnNumber:12 String: depth = 0


Notice how the second parsing ends up being kind of reset and neither versioning nor version tags are processed. Will try to investigate further.;;;","25/Jan/06 08:40;lacostej;I have been unable to reproduce this issue to day. Strange strange strange.
Will reopen if I re-encounter the issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The mvn.bat Script does not return the error-code of Maven,MNG-2002,12797072,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,evenisse,schulte77,schulte77,23/Jan/06 09:09,01/Feb/06 14:45,03/Jan/22 13:13,23/Jan/06 10:12,2.0,2.0.1,2.0.2,,,2.0.3,,,Command Line,,,,,0,,,,"The mvn.bat Script does not return with an error-code if Maven failed. The scipt only returns error-codes for problems with the environment. If Maven fails the Script does not propagate Maven's error code  back to the caller. Since we are calling mvn.bat from some ant-wrapper-script it is essential for us to have mvn.bat return an error if Maven fails instead of success.
",Windows XP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28x33:",9223372036854775807,,,,,,,,,,,,,,,,,,,"23/Jan/06 10:06;evenisse;It works fine in 2.0.2. We use it with Continuum and if thare are failuires in maven, the correct erro code is transmitted to caller.

You must set MAVEN_TERMINATE_CMD env var to ""on"" before to call mvn from ant.
;;;","23/Jan/06 10:08;evenisse;I just test it with ant and it doesn't work. It seems that ant doesn't get error code like us in continuum.;;;","23/Jan/06 10:12;evenisse;Fixed. It works now when we call mvn.bat from continuum and from ant.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Execution order of child plugins is arbitrary if inheritance is involved,MNG-1994,12797523,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Won't Fix,jdcasey,jdidion,jdidion,19/Jan/06 17:25,04/Apr/16 16:02,03/Jan/22 13:13,01/Jun/07 14:17,2.0.1,,,,,,,,Inheritance and Interpolation,,,,,17,,,,"This is related to MNG-1499, but different, and, in my opinion, equally important. It makes sense that the order of plugin execution should be the same as it appears in the POM. For example, I have two plugins: one that generates a batch file and one that executes it. These plugins must run in order or the build will fail. However, the current implementation of ModelUtils.mergePluginLists does not respect the order of child plugins.

There is also a seperate bug in that the assembledPlugins map is being checked for the presence of child plugins before adding them to the mergedPlugins list, but nothing is ever added to assembledPlugins. So if a plugin exists in a parent and a child, it will end up appearing twice in the child's plugin list.

I have re-written this method to fix both these problems. See attached.",,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-5994,,,,,,,,,MNG-3808,,,,,,MNG-1499,MNG-2258,,,,,,,,,,"19/Jan/06 17:25;jdidion;mergePluginLists.txt;https://issues.apache.org/jira/secure/attachment/12711807/mergePluginLists.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,Patch,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i2934f:",9223372036854775807,,,,,,,,,,,,,,,,,,,"15/Feb/07 03:12;yogieric;This bug was inadvertently fixed by jdcasey in r425921 when fixing MNG-1891. Thus, it is fixed in 2.0.5.

The attached patch is no longer relevant as several changes between 2.0.4 and 2.0.5 were merges from trunk and significantly altered the structure of the code.

I code reviewed the 2.0.5 implementation and believe it fixes this problem.

Given the nature of the bug -- arbitrary -- I don't think there is a reasonable way to write unit or integration tests. Suggest closing this bug as fixed.;;;","16/Feb/07 08:22;jdidion;Actually, it's pretty easy to unit test this bug. You have a parent POM that defines two or more  plugins, and you have a child POM that also defines those plugins, but in a different order. If the ordering in the child POM is respected, the bug is fixed.;;;","12/Feb/08 14:23;dseki;I noticed something strange and made a test. I suspected plugins/reports were being executed in *alphabetic order* (first by groupId, then by artifactId) and so they are!

For example, I have a problem generating QALab reports in child projects, because QALab plugin was always executed before the reports that generate data. Then I noticed the reports were generated *almost* in the order I specify them (I use the above alphabetic order, expept for the QALab plugin, that is the last one). Then I imagined that maybe that happens because all my reports are from {{org.*}} groups while QALab belongs to {{net.*}}.

I tested it by creating a dummy plugin by renaming the groupId of a QALab report plugin to {{zzz.net.objectlab}} and deploying it to my local repository. Then I changed my root dependency to this new one and magic, *IT WORKS*.

I suspect someone is using a sorted collection (tree set, etc). Some display-beautifuly-list is messing things up.;;;","28/Oct/08 22:10;carlos;why was this issue closed as Won't Fix?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Triggering Profiles bugs,MNG-1985,12796230,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Won't Fix,,pinghe,pinghe,18/Jan/06 23:52,13/Jun/08 04:08,03/Jan/22 13:13,08/Sep/07 17:17,2.0.2,,,,,,,,Profiles,,,,,4,,,,"=======env 1,

inside pom.xml
<profiles>
	<profile>
			<id>env-common</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>os-win32</id>
			<activation>
				<activeByDefault>true</activeByDefault>
				<!--os>
					<family>windows</family>
				</os-->
				<property>
					<name>performRelease</name>
				</property>
			</activation>
		</profile>
		<profile>
			<id>env-prod</id>
			<activation>
				<property>
					<name>performRelease</name>
				</property>
			</activation>
		</profile>
	</profiles>

exec: mvn projecthelp:active-profiles
output:  
 - env-common (source: pom)
 - os-win32 (source: pom)

exec: mvn projecthelp:active-profiles -DperformRelease
output:  
 - env-prod (source: pom)
 - os-win32 (source: pom)
expect:
 - env-prod (source: pom)
 - os-win32 (source: pom)
 - env-common (source: pom)

=======env 2:
inside pom.xml
<profiles>
	<profile>
			<id>env-common</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>os-win32</id>
			<activation>
				<activeByDefault>true</activeByDefault>
				<os>
					<family>windows</family>
				</os>
				<property>
					<name>performRelease</name>
				</property>
			</activation>
		</profile>
		<profile>
			<id>env-prod</id>
			<activation>
				<property>
					<name>performRelease</name>
				</property>
			</activation>
		</profile>
	</profiles>

exec: mvn projecthelp:active-profiles
output:  
 - os-win32 (source: pom)
expect:
 - env-prod (source: pom)
 - os-win32 (source: pom)",windows2000 maven 2.02,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28ouv:",9223372036854775807,,,,,,,,,,,,,,,,,,,"18/Jan/06 23:58;pinghe;=======env 2:

exec: mvn projecthelp:active-profiles
output:

    * os-win32 (source: pom)
expect:
    * env-prod (source: pom) ------>env-common
    * os-win32 (source: pom)

;;;","19/Jan/06 00:03;pinghe;=======env 2:

exec: mvn projecthelp:active-profiles -DperformRelease
output:

    * env-prod (source: pom) 
    * os-win32 (source: pom)
expect:
    * env-common
    * env-prod (source: pom) 
    * os-win32 (source: pom)

;;;","19/Jan/06 00:16;pinghe;if profiles define in m2\conf\settings.xml, then property and jdk and os triggering profile not effect;;;","19/Jan/06 00:24;pinghe;if parent pom.xml

<profiles>
	<profile>
			<id>env-prod</id>
			<activation>
				<property>
					<name>performRelease</name>
				</property>
			</activation>
		</profile>
</profiles>

in child pom.xml
	<parent>
                .....
	</parent>
exec:
    mvn projecthelp:active-profiles -DperformRelease
output:
   There are no active profiles.
expect:
       * env-prod (source: pom)
;;;","08/Sep/07 12:15;jvanzyl;This is the correct behavior. 

When you have a profile that is activeByDefault it means that it will be knocked out once another profile is activated. This profile is used when no other profiles are activated. And profile chaining is not supported.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cannot pass a username to the scp command,MNG-1972,12796153,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Cannot Reproduce,,apill,apill,17/Jan/06 10:47,01/Feb/06 14:45,03/Jan/22 13:13,19/Jan/06 11:40,2.0,2.0.1,2.0.2,,,,,,Command Line,POM,,,,0,,,,"Maven ignores the username set in settings.xml for the server used as the deploy repository.

We are running continuum as root on startup of our build server, thus maven runs as root. We want maven to connect to our deploy server as the user named ""build"". We have created ssh rsa keys for connecting that work fine and can ssh without a password using these keys. The issue we are having is that the scp command ignores the settings in settings.xml telling it to use the build user and instead attempts to login as root.

The deployment repository is set up as follows:
---------------------------------------------------------------------
<repository>
      <id>ukdev-repo</id>
      <name>Central repository on ukdev</name>
      <url>scp://<servername>/<path></url>
</repository>
---------------------------------------------------------------------

The settings xml is as follows:
---------------------------------------------------------------------
<settings>
	<servers>
		<server>
			<id>ukdev-repo</id>
			<username>build</username>
		</server>
	</servers>
</settings>",Linux,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28vu7:",9223372036854775807,,,,,,,,,,,,,,,,,,,"17/Jan/06 12:15;brettporter;are you sure settings.xml is being loaded. This is known to work in every situation I've tried.;;;","19/Jan/06 03:32;apill;My mistake. I placed the settings.xml in the wrong location. BTW I cannot find anywhere on the maven site telling you to place the settings.xml in your repository.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cyclic dependencies causes maven to not include all transitive dependencies,MNG-1944,12797068,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Won't Fix,,brianf,brianf@infinity.nu,07/Jan/06 22:57,10/Mar/16 13:54,03/Jan/22 13:13,30/Dec/09 12:48,2.0.1,,,,,,,,POM,,,,,3,,,,"Try including dom4j 1.5.2 and see what dependencies are resolved. dom4j depends on jaxen, which depends on dom4j. When maven sees the cyclic dependency, it stops processing the jaxen dependency. This leaves everything else jaxen depends on not included in the final artifact list. This is mvn -x output:
 dom4j:dom4j:jar:1.5.2 (selected for compile)
[DEBUG]     stax:stax-api:jar:1.0 (selected for compile)
[DEBUG]     pull-parser:pull-parser:jar:2 (selected for compile)
[DEBUG]     jaxme:jaxme-api:jar:0.3 (selected for compile)
[WARNING]
  This artifact has been relocated to xml-apis:xml-apis:1.0.b2.


[DEBUG]     xml-apis:xml-apis:jar:1.0.b2 (selected for compile)
[DEBUG]     msv:xsdlib:jar:20030807 (selected for compile)
[DEBUG]     xpp3:xpp3:jar:1.1.3.3 (selected for compile)
[DEBUG]     dom4j:dom4j:jar:1.5.2 (removed - causes a cycle in the
graph)
[DEBUG]     jaxen:jaxen:jar:1.1-beta-4 (selected for compile)
[DEBUG]     msv:relaxngDatatype:jar:20030807 (selected for compile)




Notice that xerces and xom and everything else jaxen depends on isn't included.
Taking dom4j out of the jaxen pom locally causes everything to be included:



[DEBUG] com.stchome.maven.mojo:helloUser:jar:1.0-SNAPSHOT (selected for null)
[DEBUG]   dom4j:dom4j:jar:1.5.2 (selected for compile)
[DEBUG]     stax:stax-api:jar:1.0 (selected for compile)
[DEBUG]     pull-parser:pull-parser:jar:2 (selected for compile)
[DEBUG]     jaxme:jaxme-api:jar:0.3 (selected for compile)
[WARNING] 
  This artifact has been relocated to xml-apis:xml-apis:1.0.b2.


[DEBUG]     xml-apis:xml-apis:jar:1.0.b2 (selected for compile)
[DEBUG]     msv:xsdlib:jar:20030807 (selected for compile)
[DEBUG]     xpp3:xpp3:jar:1.1.3.3 (selected for compile)
[DEBUG]     jaxen:jaxen:jar:1.1-beta-4 (selected for compile)
[DEBUG]       jdom:jdom:jar:b10 (selected for compile)
[DEBUG]       xom:xom:jar:1.0b3 (selected for compile)
[DEBUG]         xerces:xmlParserAPIs:jar:2.6.1 (selected for compile)
[DEBUG]         xerces:xercesImpl:jar:2.2.1 (selected for compile)
[DEBUG]         xalan:xalan:jar:2.6.0 (selected for compile)
[WARNING] 
  This artifact has been relocated to xml-apis:xml-apis:1.0.b2.


[DEBUG]           xml-apis:xml-apis:jar:1.0.b2 (selected for compile)
[WARNING] 
  This artifact has been relocated to com.ibm.icu:icu4j:2.6.1.


[DEBUG]         com.ibm.icu:icu4j:jar:2.6.1 (selected for compile)
[WARNING] 
  This artifact has been relocated to javax.servlet:servlet-api:2.4.


[DEBUG]         javax.servlet:servlet-api:jar:2.4 (selected for compile)
[WARNING] 
  This artifact has been relocated to org.ccil.cowan.tagsoup:tagsoup:0.9.7.


[DEBUG]         org.ccil.cowan.tagsoup:tagsoup:jar:0.9.7 (selected for compile)
[DEBUG]       xerces:xmlParserAPIs:jar:2.6.1 (removed - nearer found: 2.6.2)
[DEBUG]       xerces:xmlParserAPIs:jar:2.6.2 (selected for compile)
[DEBUG]       xerces:xercesImpl:jar:2.2.1 (removed - nearer found: 2.6.2)
[DEBUG]       xerces:xercesImpl:jar:2.6.2 (selected for compile)
[DEBUG]     msv:relaxngDatatype:jar:20030807 (selected for compile)


",,,,,,,,,,,,,,,,,MNG-3486,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Aug/08 16:38;jrw@pobox.com;MNG-1944.patch;https://issues.apache.org/jira/secure/attachment/12712780/MNG-1944.patch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i298gv:",9223372036854775807,,,,,,,,,,,,,,,,,,,"10/Jan/06 23:21;brettporter;Pretty sure there is a workaround, downgrading from blocker.;;;","12/Mar/07 12:31;handyande;How is it possible for a cyclic dep. to be inserted into the repos, if it cannot be built?;;;","13/Mar/07 03:17;joehni;Artifacts from projects not using Maven are uploaded with hand-crafted POMs ... ;-);;;","20/Aug/08 16:38;jrw@pobox.com;I've attached a patch that makes two changes to the way cycles in the dependency graph are handled:
1. A warning is logged when a cycle is detected.
2. When a dependency is discarded because it creates a cycle, the remaining non-problematic dependencies are still processed as usual.;;;","21/Aug/08 12:10;paul4christ79;Can an option flag be set to fail the build on a cycle?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MavenProject::getParent() returns a MavenProject that is NOT interpolated,MNG-1943,12797447,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,sisbell,skaze,skaze,07/Jan/06 13:00,06/Apr/15 01:19,03/Jan/22 13:13,03/Feb/09 13:50,,,,,,3.0-alpha-3,,,Inheritance and Interpolation,,,,,2,,,,Plugin developers repeatedly use ${project}.getParent().someMethod() yet getParent() returns a project that has not been interpolated. This obviously needs to be fixed but may I also suggest that all plugin acceptance testing is revisted to ensure that the tests use POMs that are littered with property expressions and not literals.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MSITE-585,,,"08/Feb/08 10:52;jdcasey;mng-1943-test.zip;https://issues.apache.org/jira/secure/attachment/12712486/mng-1943-test.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28tgv:",9223372036854775807,,,,,,,,,,,,,,,,,,,"07/Jan/06 16:44;brettporter;I'm not sure we should interpolate it by default. It's a rare case that the interpolated model is needed. I will see for MSITE-71 whether I can use the interpolation component from the plugin.

As for integration tests - we have those for interpolation, what we really need is parent interpolation.;;;","08/Jan/06 05:51;skaze;Brett,

re 'a rare case', obviously my familiarity with these internal APIs and there usage is greatly limited so I will defer to your expertese but in general I would have thought that if someone is using an accessor to retreive a value they will want the cooked version of that 'property' and not an internal/meta representation of it, after all what use is ${foo.bar} to the developer who has called getUrl()? 

I'll keep a keen eye out for your MSITE-71 code as I have a number of plugins that i've had to make reactor dependent in order to gain access to properly interpolated parent model data.

re 'integration tests' - yep, thats exactly what i meant :) 
;;;","08/Jan/06 12:09;brettporter;I agree anyone calling getParent wants the cooked version. It's a rare case that someone wants the parent as opposed to the already merged values in their own project.;;;","17/Aug/06 04:24;jim_b_o;Perhaps the problem I describe in [#MNG-1775] (Comment James Olsen [15/Aug/06 06:37 AM]) is a symptom of this issue?;;;","08/Feb/08 10:52;jdcasey;this is an integration test ready to add to core-integration-tests when this issue is completed.;;;","16/May/08 15:25;nsgood82;I have just experienced this issue in a more critical use case.  Here are the details.  Please let me know if you need more information.

${buildVersion} is a property defined in a profile in settings.xml and is used in all poms.

<parent>
&nbsp;&nbsp;<artifactId>bar</artifactId>
&nbsp;&nbsp;<groupId>foo.bar</groupId>
&nbsp;&nbsp;<version>${buildVersion}</version>
</parent>

It seems that the problem presents itself when a project depends on an artifact that has a parent with a non-literal value; and the parent pom is not located on the filesystem.

Example:

pom.xml - This is the master pom that all others inherit from
Project A
&nbsp;&nbsp;pom.xml - Inherits from master pom
&nbsp;&nbsp;A.x
&nbsp;&nbsp;&nbsp;&nbsp;pom.xml - inherits from ProjectA/pom.xml

Project B
&nbsp;&nbsp;pom.xml - depends on A.x

if you run maven on ProjectB and A.x is located in a remote repository it will fail because ${buildVersion} in A.x/pom.xml will not be interpolated before it is used to lookup the pom.
  
Here is the resulting stack trace (from version 2.0.9):

Caused by: org.apache.maven.project.ProjectBuildingException: 
Cannot find parent: foo.bar:xyz-pom for project: foo.bar:prompting-client:jar:${buildVersion} for project foo.bar:zyx-client:jar:${buildVersion}
        at org.apache.maven.project.DefaultMavenProjectBuilder.assembleLineage(DefaultMavenProjectBuilder.java:1370)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildInternal(DefaultMavenProjectBuilder.java:821)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository(DefaultMavenProjectBuilder.java:253)
        at org.apache.maven.project.artifact.MavenMetadataSource.retrieve(MavenMetadataSource.java:106)

Is this scheduled to be fixed in the next maven release?;;;","01/Oct/08 23:24;sisbell;3.0 does interpolation of the parent. I wasn't able to get the attached IT to run, as it is relying on old, non-existent snapshots.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
When using artifacts with full stops in the artifact id the are not loaded correctly when transitively referenced another project.,MNG-1933,12797534,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,,chris.stevenson@gmail.com,chris.stevenson@gmail.com,06/Jan/06 07:19,01/Feb/06 14:45,03/Jan/22 13:13,24/Jan/06 08:53,2.0.1,,,,,2.0.2,,,Artifacts and Repositories,,,,,1,,,,"I've written a CSharp plugin for maven which utilises the maven framework + the csharp plexus compiler to build c# projects inside of maven. I have found that when I reference a dotnet ""System"" dll from inside maven as a dependency with system scope, which also has more than one full stop in the name that it will compile correctly in the ""main"" project. 

If however I reference this project from another, the transitive dependency does not work correctly, it consistantly says it cannot find the artifact.

ex...

In main lib

<project>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>log4net</artifactId>
	<groupId>com.javaforge.maven-csharp</groupId>
	<name>Apache Log4net</name>
                                 ........
				<dependency>
					<groupId>System</groupId>
					<artifactId>System.Reflection.Remoting</artifactId>
					<version>1.1</version>
					<type>dotnet-library</type>
					<scope>system</scope>
					<systemPath>${dotnet.home}/System.Runtime.Remoting.dll</systemPath>
                               </dependency>
                                 ........
</project>

In lib which references main lib:

		<dependency>
			<groupId>com.javaforge.maven-csharp</groupId>
			<artifactId>log4net</artifactId>
			<version>1.2.9-beta</version>
			<type>dotnet-library</type>
			<scope>compile</scope>
		</dependency>

output:


[DEBUG] Trace
org.apache.maven.lifecycle.LifecycleExecutionException: System artifact: System:System.Runtime.Remoting:dotnet-library:1.1 
not found in path: ${dotnet.home}\System.Runtime.Remoting.dll
  System:Remoting:1.1:dotnet-library


        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:528)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:469)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:448)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:301)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:268)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:137)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:316)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:113)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:249)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)

Even though this dll is definately in this location.

My assertion is that the transitive dependency mechanism my be getting confused, thinking that the extra full stop denotes a


","Windows XP, java version ""1.5.0_02"" Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_02-b09)
Java HotSpot(TM) Client VM (build 1.5.0_02-b09, mixed mode)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Jan/06 07:19;Info.zip;https://issues.apache.org/jira/secure/attachment/12711609/Info.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28o1r:",9223372036854775807,,,,,,,,,,,,,,,,,,,"24/Jan/06 08:53;chris.stevenson@gmail.com;This was fixed in version 2.0.2;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
${project.build.directory} different in M2.0 & M2.0.1,MNG-1927,12794102,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jvanzyl,brettporter,brettporter,05/Jan/06 18:02,07/Apr/15 12:24,03/Jan/22 13:13,13/Jan/06 23:09,,,,,,2.0.2,,,Inheritance and Interpolation,,,,,0,,,,"From Jens:
In Maven 2.0 the value containes the whole absolute path to the target
dir.

C:\windows\system32\target

With Maven 2.0.1 only:

target\

(Note: I was unable to reproduce this against 2.0, instead getting ${project.build.directory} verbatim, but I believe it should be an absolute path)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-2186,MNG-3530,,,,,MNG-3355,MNG-3475,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i295jj:",9223372036854775807,,,,,,,,,,,,,,,,,,,"09/Jan/06 14:28;brettporter;its been noted that this isn't always the case, depending on environment. This leads me to believe it could be related to the introduction of environment variables in the expression evaluator.;;;","13/Jan/06 23:09;jvanzyl;Interpolator from 2.0 back ported with envar interpolation taken from the new interpolator to keep compatibility with that feature which was added in 2.0.1.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Building plugins with extensions in a reactor fails,MNG-1911,12794127,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Won't Fix,jvanzyl,gnodet,gnodet,02/Jan/06 09:44,07/Apr/15 12:25,03/Jan/22 13:13,29/Jan/14 10:17,2.0.1,,,,,,,,Plugins and Lifecycle,,,,,10,,,,"I have the following in my main pom
{code:xml}
<build>
 <pluginManagement>
  <plugins>
   <plugin>
    <groupId>org.apache.servicemix.plugins</groupId>
    <artifactId>maven2-jbi-plugin</artifactId>
    <version>1.0-SNAPSHOT</version>
    <extensions>true</extensions>
   </plugin>
  </plugins>
 </pluginManagement>
</build>
{code}

If i try to add it to the modules, the first time, maven complains that it can not download the plugin.
If i remove the {{<extensions>}} tag, all works, but i need it :)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-1323,MNG-656,,,,,MNG-1682,MNG-4081,,,,,,,,,,"14/Jan/10 09:37;brettporter;MNG-1911.zip;https://issues.apache.org/jira/secure/attachment/12713018/MNG-1911.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i2970n:",9223372036854775807,,,,,,,,,,,,,,,,,,,"22/Jun/06 15:32;jdcasey;so, how is the pluginManagement item getting triggered? Do you have the plugin referenced in the main part of your build in the main POM or something?;;;","03/Jul/06 19:42;brettporter;The current Geronimo build has the same problem. Order of build doesn't matter - it just needs to be used somewhere as the extensions are pre-loaded.

Workaround is to deploy a snapshot of the plugin so that Maven downloads the snapshot, uses that to load the extensions, builds the plugin, then reloads the new plugin when it is used.;;;","17/Aug/06 11:38;jason@planet57.com;Any status on when this will make it into a m2 release?;;;","04/Jun/07 19:00;jvanzyl;John is this fixed now in trunk with your most recent build plan work?;;;","08/Jun/07 10:03;jdcasey;no, i haven't tested this use case with the new build plan. It may work, but I haven't tried yet.;;;","13/Jan/09 10:22;velo;Hi John,

Do you have any news on that?

Flex-mojos is suffering with this too.


VELO;;;","14/Jan/10 09:37;brettporter;This actually works on Maven 2.2.1, but seems to have regressed in 3.0-SNAPSHOT. Attaching the test program (artifacts must not be in the local repository for failure to appear), as I do not currently have time for a full IT/investigation.;;;","18/Mar/10 05:53;bentmann;Until we extend the POM to allow to distinguish between different types of extensions in order to tell which of them can loaded sometime later during the build, there is no path forward.;;;","06/Oct/10 00:11;brettporter;putting into 3.1 so that such an extension to the POM can be made so that this can be made to work again;;;","06/Oct/10 03:21;brettporter;I didn't investigate enough originally, and the attached IT isn't complete to test this. This wasn't fixed in 2.2.1 - it doesn't actually load the extension, as it never ended up in the effective POM. Maven 3 now does that, and attempts to load the extension, which is not built.

The workaround to this, if suitable, is to use an older version of the plugin to use throughout the build.
;;;","01/Apr/11 06:16;lcorneliussen;Does anybody know what the concrete work would be to solve this issue? We struggle with this in NPanday...;;;","03/Apr/12 10:00;vmassol;We really need this on the xwiki project too. Using an older version is not really a solution since when you make a change you need to use the latest version. We have some automated script to release XWiki which uses the maven release plugin and doing a 2 step release with the release plugin is really difficult (and probably impossible actually).

;;;","25/Apr/12 06:52;rombert;This also affects the Apache Sling build.;;;","27/Jan/14 08:38;jvanzyl;Anyone else thought about this from the discussion on the mailing list? I would like to close this as won't fix.;;;","29/Jan/14 10:17;jvanzyl;Trying to build plugins that have extensions that are to be used in the same build is just a complication in the core we're not going to accommodate. This is in part because extensions are ill defined and can be used for many things but trying to make extensions work generally where transport is provided is very difficult. If, in the future, we define different types of extensions some of these can likely be accommodated.;;;","29/Jan/14 16:01;paul4christ79;Removed specified fixed version.;;;","29/Jan/14 16:08;vmassol;Very disappointed that issues reported by users are just discarded without any plan to fix them :( This is not the first one I see like this. Closing invalid issues is ok but closing valid issues with a won't fix is not a good signal sent to users... Especially when no workaround is provided...



;;;","04/Apr/14 02:40;aheritier;The only existing workaround is to extract your extension (or the plugin defining it) in another independent project (which I agree, is often overkill).
I don't know if [~jason] and others who worked on the core recently have an idea how to fix it but the root cause of the problem is that an extension can extend an existing lifecycle or add a new one and thus Maven may require it to read poms).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"snapshots not deployed using m2, or deployed with uniqueVersion = false are not updated if present locally",MNG-1908,12793980,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,brettporter,gnodet,gnodet,02/Jan/06 03:37,30/Jul/10 13:59,03/Jan/22 13:13,03/Apr/07 17:22,2.0.1,,,,,2.0.5,,,Artifacts and Repositories,,,,,36,,,,"It seems from the log info that m2 is trying to locate the artifact metadata on the repository.
SInce this artifact has been generated from m1, there is no metadata.
So whatever repository settings are configured, m2 will never update snapsots.",,";06/Feb/06 22:59;brettporter;7200","fix bug
;07/Feb/06 01:14;brettporter;1800",1800,0,9000,500%,1800,0,9000,,,,,,,MNG-1919,MNG-2601,MNG-2289,,,,,,,,,,,,,,,,,,MNG-3144,,,,,,MNG-3137,MNG-2780,MNG-2790,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i297of:",9223372036854775807,,,,,,,,,,,,,,,,,,,"04/Jan/06 15:53;brettporter;look into the unique version = false problem which is probably the same too;;;","06/Feb/06 21:26;brettporter;downloading is fine, its the updating that's a problem;;;","07/Feb/06 01:10;brettporter;should be able to obtain this mix by merging r375485 and r375497 from the trunk to the maven-2.0.2 tag.

All trunk and branch builds will now contain it - eg:
http://maven.zones.apache.org/~maven/builds/branches/maven-2.0.x/m2-20060207.061502.tar.gz;;;","07/Feb/06 01:23;brettporter;note that this is significantly slower when using local snapshots not in the reactor during a daily or forced update period. We should investigate a better solution.;;;","20/Feb/06 23:19;brettporter;fix only applied to trunk;;;","15/Mar/06 12:22;brettporter;need to investigate the performance regression caused by these revisions;;;","28/Jun/06 09:57;cvagner;Can I please get an update on this issue...

I have ran into the problem with maven not updating the snapshot locally if present. The snapshot release is not generated with maven but uploaded manually. 

Will this be fixed no earlier then 2.1?;;;","20/Sep/06 09:15;supercargo;I have a similar problem.  The artifacts are deployed using m2, the metadata on the repo is generated.  When I do a build, maven logs that it has found a snapshot version and is checking for updates.  It downloads and updates my local metadata for that repo, but DOES NOT download the updated JAR. 

THIS IS A BLOCKING ISSUE.  If a release is not planned soon, the fix needs to be back ported.

Having snapshots that don't update reduces the usefullness of SNAPSHOT to ZERO.  Actually its worse than that, because we expect that SNAPSHOTS be updated from our internal repo and maven behaves as if it is updating them and then it does NOTHING.  A fix in 2.1 does nothing for us if 2.1 doesn't get releases soon.;;;","29/Oct/06 14:29;tom_spengler;2.1 is realy to late for us, 

we (100 persons) cannot every day update there local repository with more than 300 artifacts per hand

we need a solution nearly today!!;;;","03/Jan/07 02:15;brettporter;the current fix has resulted in a regression in the release update functionality. Another IT is in order.;;;","03/Jan/07 08:02;brettporter;fixed, again :);;;","21/Feb/07 11:41;jekirby;This is still an issue in 2.0.5.  I can never get an artifact with a non-unique version number containing SNAPSHOT to update in the local repository.  I get a message like:

[DEBUG] repository metadata for: 'snapshot mygroup:myartifact:main-SNAPSHOT' could not be found on repository: devst

even though it appears as though the correct metadata is present on the remote server.  A new maven-metadata-devst.xml is created in the local repository, but none of the artifacts are pulled.

How do I reopen this?
;;;","22/Feb/07 17:56;jekirby;Finally got this to work by packaging and deploying using m2 after the m1 build completed.  It only seems to work if the artifacts in the remote repository have unique names (i.e. with the timestamp in it).  You then end up with two copies of the artifact in the local repo, one with the unique name (i.e. myartifactid-1.0-20070222.002933-1.jar) and one with the abbreviated artifactid-versionid name (i.e. myartifact-1.0-SNAPSHOT.jar).  Kind of a waste of space, but at least it works...;;;","02/Mar/07 07:25;jvanzyl;This does not appear to be fixed and is related to MNG-2289.;;;","02/Mar/07 16:23;brettporter;Jason, I have test cases in the integration tests showing this works, and they run in every environment I have ever run them in.

Do you have:
- an additional test case that shows it doesn't work, or
- an environment where the test cases fail?

If not, I'd prefer to leave this closed for 2.0.5 and open new issues for any new issues found with the functionality.;;;","03/Apr/07 17:22;brettporter;this was fixed in several scenarios in 2.0.5. Any related problems are being filed as new issues.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Plugin classpath broken from 2.0 to 2.0.1,MNG-1898,12794071,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,,brianf,brianf@infinity.nu,26/Dec/05 22:36,10/Mar/16 13:54,03/Jan/22 13:13,30/Dec/06 22:55,,,,,,2.0.3,,,,,,,,2,,,,"I'm working on a kodo plugin in the codehaus mojo sandbox. Using 2.0, it works fine. In 2.1, it can't find xercesImpl, which is a transitive dependency of the plugin. Did something change to cause new behavior (aka a bug) related to this? Just eyeballing the info below, in 2.0, the instance of classloader was  org.codehaus.classworlds.RealmClassLoader but in 2.0.1 it is org.codehaus.plexus.util.RealmDelegatingClassLoader
 
I tried specifying xercesImpl as a direct dependency and that didn't work either so I'm not sure it's related to the transitivity.
 
Output from 2.0.1: (2.0 follows further below)
 
[DEBUG] org.codehaus.mojo:kodo-maven-plugin:maven-plugin:1.0-alpha-1-SNAPSHOT (selected for runtime)
[DEBUG]   org.apache.maven:maven-model:jar:2.0 (selected for runtime)
[DEBUG]     org.codehaus.plexus:plexus-utils:jar:1.0.4 (selected for runtime)
[DEBUG] Skipping disabled repository snapshots
[DEBUG]   com.solarmetric:kodo-jdo:jar:3.3.3 (setting version to: 3.3.3 from range: [3.0,])
[DEBUG]   com.solarmetric:kodo-jdo:jar:3.3.3 (selected for runtime)
[DEBUG]     com.solarmetric:kodo-wl81manage:jar:1.0 (selected for runtime)
[DEBUG]     com.solarmetric:kodo-workbench:jar:1.0 (selected for runtime)
[DEBUG]     org.hsqldb:jdbc-hsql:jar:1.7.0 (selected for runtime)
[DEBUG]     sqlline:sqlline:jar:1.0 (selected for runtime)
[DEBUG]     jcommon:jcommon:jar:0.9.1 (selected for runtime)
[DEBUG]     javax.jdo:jdo:jar:1.0.2 (selected for runtime)
[DEBUG]     xalan:xalan:jar:2.5.1 (selected for runtime)
[DEBUG]     jfreechart:jfreechart:jar:0.9.16 (selected for runtime)
[DEBUG]     com.solarmetric:kodo-jdo-runtime:jar:3.3.3 (selected for runtime)
[DEBUG]     javax.sql:jdbc-stdext:jar:2.0 (selected for runtime)
[DEBUG]     jline:jline:jar:0.9.1 (selected for runtime)
[DEBUG]     mx4j:mx4j-jmx:jar:1.1.1 (selected for runtime)
[DEBUG]     jta-spec:jta-spec:jar:1.0.1 (selected for runtime)
[WARNING] While downloading xml-apis:xml-apis:2.0.0
  This artifact has been relocated to xml-apis:xml-apis:1.0.b2.
 

[DEBUG]     xml-apis:xml-apis:jar:1.0.b2 (selected for runtime)
[DEBUG]     xerces:xercesImpl:jar:2.5.0 (selected for runtime)
[DEBUG]     jca:jca:jar:1.0.0 (selected for runtime)
[DEBUG]     mx4j:mx4j-tools:jar:1.1.1 (selected for runtime)
[DEBUG]     jndi:jndi:jar:1.2.1 (selected for runtime)
[DEBUG] Skipping disabled repository snapshots
[DEBUG]   log4j:log4j:jar:1.2.12 (setting version to: 1.2.12 from range: [1.2.9,])
[DEBUG]   log4j:log4j:jar:1.2.12 (selected for runtime)
[DEBUG]   org.apache.maven:maven-plugin-api:jar:2.0 (selected for runtime)
[DEBUG] Configuring mojo 'org.codehaus.mojo:kodo-maven-plugin:1.0-alpha-1-SNAPSHOT:enhance' -->
[DEBUG]   (f) classDir = E:\STC\svn\modules\services\supplementaldata-jdo\trunk\target\classes
[DEBUG]   (f) resources = [org.apache.maven.model.Resource@acb158]
[DEBUG]   (f) searchDir = E:\STC\svn\modules\services\supplementaldata-jdo\trunk\target\classes
[DEBUG] -- end configuration --
[INFO] [kodo:enhance {execution: kodo-enhance}]
[info] Found file:E:\STC\svn\modules\services\supplementaldata-jdo\trunk\target\classes\com\stchome\application\supplementalforms\persist\persist.jdo
[info] org.codehaus.plexus.util.RealmDelegatingClassLoader@16dfa45
[debug] Added to Classpath:
[debug] /E:/STC/svn/modules/services/supplementaldata-jdo/trunk/src/main/resources/
[debug] /E:/STC/svn/modules/services/supplementaldata-jdo/trunk/target/classes/
[INFO] ----------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ----------------------------------------------------------------------------
[INFO] Provider org.apache.xerces.jaxp.SAXParserFactoryImpl not found
[INFO] ----------------------------------------------------------------------------
[DEBUG] Trace
javax.xml.parsers.FactoryConfigurationError: Provider org.apache.xerces.jaxp.SAXParserFactoryImpl not found
 at javax.xml.parsers.SAXParserFactory.newInstance(SAXParserFactory.java:93)
 at serp.xml.XMLFactory.checkSAXCache(XMLFactory.java:217)
 at serp.xml.XMLFactory.getSAXParser(XMLFactory.java:66)
 at com.solarmetric.meta.XMLMetaDataParser.parseNew(XMLMetaDataParser.java:354)
 at com.solarmetric.meta.XMLMetaDataParser.parse(XMLMetaDataParser.java:320)
 at com.solarmetric.meta.ClassArgParser.getFromMetaData(ClassArgParser.java:182)
 at com.solarmetric.meta.ClassArgParser.parseClassNames(ClassArgParser.java:98)
 at com.solarmetric.meta.ClassArgParser.parseClasses(ClassArgParser.java:74)
 at kodo.enhance.JDOEnhancer.run(JDOEnhancer.java:2657)

 
 
2.0 Output:
[DEBUG] org.codehaus.mojo:kodo-maven-plugin:maven-plugin:1.0-alpha-1-SNAPSHOT (selected for runtime)
[DEBUG]   org.apache.maven:maven-model:jar:2.0 (selected for runtime)
[DEBUG]     org.codehaus.plexus:plexus-utils:jar:1.0.4 (selected for runtime)
[DEBUG] Skipping disabled repository snapshots
[DEBUG]   com.solarmetric:kodo-jdo:jar:3.3.3 (setting version to: 3.3.3 from range: [3.0,])
[DEBUG]   com.solarmetric:kodo-jdo:jar:3.3.3 (selected for runtime)
[DEBUG]     com.solarmetric:kodo-wl81manage:jar:1.0 (selected for runtime)
[DEBUG]     com.solarmetric:kodo-workbench:jar:1.0 (selected for runtime)
[DEBUG]     org.hsqldb:jdbc-hsql:jar:1.7.0 (selected for runtime)
[DEBUG]     sqlline:sqlline:jar:1.0 (selected for runtime)
[DEBUG]     jcommon:jcommon:jar:0.9.1 (selected for runtime)
[DEBUG]     javax.jdo:jdo:jar:1.0.2 (selected for runtime)
[DEBUG]     xalan:xalan:jar:2.5.1 (selected for runtime)
[DEBUG]     jfreechart:jfreechart:jar:0.9.16 (selected for runtime)
[DEBUG]     com.solarmetric:kodo-jdo-runtime:jar:3.3.3 (selected for runtime)
[DEBUG]     javax.sql:jdbc-stdext:jar:2.0 (selected for runtime)
[DEBUG]     jline:jline:jar:0.9.1 (selected for runtime)
[DEBUG]     mx4j:mx4j-jmx:jar:1.1.1 (selected for runtime)
[DEBUG]     jta-spec:jta-spec:jar:1.0.1 (selected for runtime)
[WARNING] 
  This artifact has been relocated to xml-apis:xml-apis:1.0.b2.
 

[DEBUG]     xml-apis:xml-apis:jar:1.0.b2 (selected for runtime)
[DEBUG]     xerces:xercesImpl:jar:2.5.0 (selected for runtime)
[DEBUG]     jca:jca:jar:1.0.0 (selected for runtime)
[DEBUG]     mx4j:mx4j-tools:jar:1.1.1 (selected for runtime)
[DEBUG]     jndi:jndi:jar:1.2.1 (selected for runtime)
[DEBUG] Skipping disabled repository snapshots
[DEBUG]   log4j:log4j:jar:1.2.12 (setting version to: 1.2.12 from range: [1.2.9,])
[DEBUG]   log4j:log4j:jar:1.2.12 (selected for runtime)
[DEBUG]   org.apache.maven:maven-plugin-api:jar:2.0 (selected for runtime)
[DEBUG] Configuring mojo 'org.codehaus.mojo:kodo-maven-plugin:1.0-alpha-1-SNAPSHOT:enhance' -->
[DEBUG]   (f) classDir = E:\STC\svn\modules\services\supplementaldata-jdo\trunk\target\classes
[DEBUG]   (f) resources = [org.apache.maven.model.Resource@39e5b5]
[DEBUG]   (f) searchDir = E:\STC\svn\modules\services\supplementaldata-jdo\trunk\target\classes
[DEBUG] -- end configuration --
[INFO] [kodo:enhance {execution: kodo-enhance}]
[info] Found file:E:\STC\svn\modules\services\supplementaldata-jdo\trunk\target\classes\com\stchome\application\supplementalforms\persist\persist.jdo
[info] org.codehaus.classworlds.RealmClassLoader@589e56
[debug] Added to Classpath:
[debug] /E:/STC/svn/modules/services/supplementaldata-jdo/trunk/src/main/resources/
[debug] /E:/STC/svn/modules/services/supplementaldata-jdo/trunk/target/classes/
0     INFO  [main] kodo.Tool - JDO enhancer running on type ""class com.stchome.application.supplementalforms.persist.FormOwnerAssociation"".",winxp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-1804,MCHECKSTYLE-10,MSITE-60,,,,,,,,,"16/Jan/06 11:16;joakime;MNG-1898-coreit.tar.bz2;https://issues.apache.org/jira/secure/attachment/12711608/MNG-1898-coreit.tar.bz2","20/Feb/06 16:07;automatedTestCase.zip;https://issues.apache.org/jira/secure/attachment/12711896/automatedTestCase.zip","20/Feb/06 16:27;carlos;it0100.tar.gz;https://issues.apache.org/jira/secure/attachment/12711743/it0100.tar.gz","11/Dec/06 23:34;mng-1898-for-2.1-take2.patch;https://issues.apache.org/jira/secure/attachment/12712220/mng-1898-for-2.1-take2.patch","11/Jan/06 14:02;test-1.0.zip;https://issues.apache.org/jira/secure/attachment/12711606/test-1.0.zip","11/Jan/06 14:03;test-case.zip;https://issues.apache.org/jira/secure/attachment/12711736/test-case.zip",,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29d87:",9223372036854775807,,,,,,,,,,,,,,,,,,,"29/Dec/05 12:24;brettporter;need to review a couple of classloader situations;;;","06/Jan/06 17:29;brettporter;see also http://archive.mojo.codehaus.org/dev/messages/1398;;;","06/Jan/06 17:40;brettporter;basically we need to: 
- restore compatibility with 2.0 version
- retain the fix above
- see if we can improve the classloading situation for things like MCHECKSTYLE-10 so people don't need to create their own classloaders

the original bugfix for 2.0.1 was MNG-1804;;;","10/Jan/06 23:15;jdcasey;I need a test case to verify that this is an issue. Currently, using the descriptions above, and the email message referenced above, I cannot get this to break.

See:

* it0086
* it0087
* it0089

If these are erroneous, I need to figure out why. I'm going to reschedule this to 2.0.3, and close it later if I can't reproduce later.;;;","11/Jan/06 07:53;brianf@infinity.nu;I was really hoping this could get fixed in 2.0.2, I can't proceed with my Kodo plugin until it gets fixed. If there is something I can do to help let me know, the code causing the problem is on mojo.;;;","11/Jan/06 14:03;brianf@infinity.nu;Install the jar in test-1.0.zip to the local repo and build the plugin in test-case. Run the plugin by using mvn test:enhance

In 2.0 it will print where it found the factory class, in 2.0.1 it will crash
;;;","16/Jan/06 11:16;joakime;Attached: MNG-1898-coreit.tar.bz2

Contains 2 maven-core-it tests to help prevent some specific classloader issues.

Tests both classloader.getResource() techniques.
Using ClassLoaders obtained via 

1) Thread.currentThread().getContextClassLoader()
2) this.getClass().getClassLoader()

it0100 - Plugin/Mojo test classloader test.
it0101 - Plugin/Report test classloader test..;;;","01/Feb/06 08:22;brianf@infinity.nu;Any progress on this issue? I would like to move forward with my plugins but can't because of this. We are stuck maintaining a bunch of lame ant scripts in the meantime. ;;;","08/Feb/06 16:44;carlos;Try excluding xml-apis and xerces. That fixed a similar problem for me;;;","20/Feb/06 15:01;brianf@infinity.nu;What's the rational for pushing this off to yet another revision? It's functionality that was clearly broken from the original 2.0 AND it has a test case attached. I was originally told that if I could produce a test case that it would be fixed in 2.0.2.;;;","20/Feb/06 15:27;carlos;Test case doesn't work, there are missing dependencies;;;","20/Feb/06 15:36;carlos;Fixed test case;;;","20/Feb/06 15:36;carlos;Fixed test case;;;","20/Feb/06 15:38;carlos;I'm unable to reproduce this bug with the test cases either in 2.0.2 and 2.0.3 snapshot
I've attached the test cases with updated pom s so they build;;;","20/Feb/06 15:38;carlos;BTW the one I tried is MNG-1898-coreit.tar.bz2;;;","20/Feb/06 15:46;brianf@infinity.nu;the IT case came from someone else. I just retried this and was able to reproduce with 2.0.2. 

Extract test-1.0.zip to localrepo/test/test/1.0

extract test-case.zip and run: mvn install
then mvn test:enhance;;;","20/Feb/06 16:07;brianf@infinity.nu;Attaching new fully automated test case: automatedTestCase.zip

Unzip and run test.bat (sorry only on windows but you can look at the commands and run on unix, only 3 of them)
;;;","20/Feb/06 16:27;carlos;IT test that breaks under 2.0.3-SNAPSHOT and succeeds under 2.0;;;","20/Feb/06 16:30;carlos;it0100.tar.gz is the one for maven components\maven-core-it
;;;","20/Feb/06 17:38;carlos;Added as it094
http://svn.apache.org/viewcvs.cgi/maven/components/trunk/maven-core-it/it0094/;;;","21/Feb/06 05:19;brettporter;1804 was what introduced the issue.;;;","21/Feb/06 05:23;brettporter;the problem appeared to be that the RealmDelegatingClassLoader included the system classpath, which would have conflicted with Xerces, as best I can guess.

Flipping to realm.getClassLoader() achieves the original aim, while still matching the 2.0 classloader that the plugin was relying on. Fixed in r379425 on trunk.;;;","21/Feb/06 09:57;brianf@infinity.nu;Thank you!;;;","11/Dec/06 23:18;brianf@infinity.nu;attaching patch to fix it0094 for maven 2.1;;;","12/Dec/06 04:36;carlos;Brian, you need to reopen the issue to bring the attention, if  you just comment it can be missed.

> attaching patch to fix it0094 for maven 2.1

It'd be good if you explain why is this patch needed now after 10 months;;;","12/Dec/06 09:46;brianf@infinity.nu;Jason paged me on the dev list to fix the IT test because classworlds changed. I didn't have karma to directly commit so I figured this would be the logical place to attach. Since the actual bug itself was still fixed, it didn't occur to me to reopen.


-----Original Message-----
From: Jason van Zyl [mailto:jason@maven.org] 
Sent: Tuesday, December 12, 2006 2:02 AM
To: Maven Developers List
Subject: Re: it0094 calling Brian Fox

Awesome, thanks. That means the new container works with everything now.

Jason.

On 12 Dec 06, at 12:35 AM 12 Dec 06, Brian E. Fox wrote:

> Hi Jason,
> The fix was easy because the new classworlds is much better than the 
> old one. I don't have karma in maven-core so I attached the patch to 
> MNG-1898. This patch works with both 2.0.4 and 2.1.
>
> I also came across and patched a bug in the mvn.bat file:
> http://jira.codehaus.org/browse/MNG-2699
>
> -Brian
> -----Original Message-----
> From: Jason van Zyl [mailto:jason@maven.org]
> Sent: Sunday, December 10, 2006 7:01 PM
> To: Maven Developers List
> Subject: Re: it0094 calling Brian Fox
>
> On 10 Dec 06, at 6:54 PM 10 Dec 06, Brian E. Fox wrote:
>
>> I can try. Are you saying only the IT is broken and not the 
>> functionality?
>>
>
> It's broken because we've changed ClassWorlds and that field does not 
> exist anymore :-)
>
> Jason.
>
>> -----Original Message-----
>> From: Jason van Zyl [mailto:jason@maven.org]
>> Sent: Sunday, December 10, 2006 4:15 PM
>> To: Maven Developers List
>> Subject: it0094 calling Brian Fox
>>
>> Hi Brian :-)
>>
>> Do you think you might be able to help me with an IT?
>>
>> http://jira.codehaus.org/browse/MNG-1898
>>
>> This originally uses a reflection to grab a private field which no 
>> longer exists in classworlds and is breaking the IT in 2.1-SNAPSHOT.
>>
>> Do you think you might try to faithfully reproduce the intent of the 
>> IT without grabbing a protected field?
>>
>> That would be most helpful :-)
>>
>> Jason.
;;;","12/Dec/06 09:49;brianf@infinity.nu;just for further clarification: all that needs to be done on this issue is to have the mng-1898-for-2.1take2.patch applied against the trunk integration tests. Only the IT was broken, not the real code.;;;","30/Dec/06 22:55;brettporter;re-closing for the original version. Shouldn't reopen stuff fixed in earlier versions - beter to create a new one. I will apply the patch.;;;","30/Dec/06 22:56;brettporter;actually, looks like it was already applied;;;","14/Oct/08 15:44;bentmann;bq. the problem appeared to be that the RealmDelegatingClassLoader included the system classpath, which would have conflicted with Xerces, as best I can guess.
Actually, the {{RealmDelegatingClassLoader}} wasn't really delegating. The call hierarchy looked like
{noformat}
client calls ClassLoader.loadClass(String)
  ClassLoader.loadClass(String) calls this.loadClass(String, boolean)
  ClassLoader.loadClass(String, boolean) calls parent.loadClass(String, boolean)
    RealmDelegatingClassLoader.loadClass(String, boolean) calls parent.loadClass(String, boolean)  UPS
{noformat}
{{RealmDelegatingClassLoader}} didn't override the overload {{loadClass(String, boolean)}} and as such never called into {{ClassRealm.loadClass()}} which would have provided the requested Xerces implementation from the plugin dependencies.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dependencies in two paths are not added to resolution when scope needs to be updated in the nearest  due to any of nearest parents,MNG-1895,12794110,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,carlos,carlos,carlos,24/Dec/05 18:12,21/Nov/10 10:12,03/Jan/22 13:13,24/Jan/06 17:28,2.0.1,2.0.2,,,,2.0.3,,,Artifacts and Repositories,,,,,0,,,,"scopes are not correctly calculated for this case

my pom: a compile, b test
a: c compile, d compile
b: d compile

then d ends in test scope because d is closer to my project through the path b-d

I think scope importance should also be taken into account
",,,,,,,,,,,,,,,,,MNG-1571,MNG-1568,,,,,,,,,,,,,,,,,,,,,,,,,MNG-2686,MNG-4675,MNG-4724,MNG-4789,,,,,,,,"30/Dec/05 08:50;carlos;MNG-1895.patch;https://issues.apache.org/jira/secure/attachment/12711737/MNG-1895.patch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28sbr:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"30/Dec/05 08:50;carlos;This is the it test;;;","10/Jan/06 23:37;jdcasey;bumping to next release, so we can assess any changes to existing behavior that this might imply.;;;","23/Jan/06 17:54;carlos;This is  ablocker issue if you need to depend in a test-jar type artifact and its normal jar, as it'll make all its deps end in scope test;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot deploy artifacts using classifier,MNG-1893,12796044,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Duplicate,brettporter,mgriffa,mgriffa,22/Dec/05 12:33,17/Oct/06 09:13,03/Jan/22 13:13,22/Dec/05 23:38,,,,,,,,,,,,,,0,,,,"The classifier concept is well understood in maven, beeing an elemnt of the dependency.
However, a project that generates artifacs with classifiers, cannot be deployed, nor installed:

install plugin seem to 'not see' the classifier:

this output might help:

[INFO] [jar:jar]
[INFO] Building jar: /home/mgriffa/workspace/tfv-core/target/tfv-core-2.1-SNAPSHOT-localdev.jar
[INFO] [install:install]
[INFO] Installing /home/mgriffa/workspace/tfv-core/target/tfv-core-2.1-SNAPSHOT.jar to /home/mgriffa/.m2/repository/transferval/tfv-core/2.1-SNAPSHOT/tfv-core-2.1-SNAPSHOT.jar
[INFO] ----------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ----------------------------------------------------------------------------
[INFO] Error installing artifact

Embedded error: Error installing artifact: File /home/mgriffa/workspace/tfv-core/target/tfv-core-2.1-SNAPSHOT.jar does not exist

jar:jar generates the artifact with the classifier, as told to do so, but install misses it",,,,,,,,,,,,,,,,,,,,,,,,MNG-1875,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29bpz:",9223372036854775807,,,,,,,,,,,,,,,,,,,"22/Dec/05 18:16;brettporter;how does your POM look?

We successfully do this in maven-model/pom.xml, so I think this works.;;;","22/Dec/05 23:37;brettporter;I just realised this is a dupe of a bug you filed yourself just 4 days ago. Sheesh.;;;","17/Oct/06 09:13;pbracher;I run into the exactely same problem. The difference is that the maven-model's pom uses an execution and we both tried withou (just configuration). In the first case an additional artifact is created where in the later the main artifact is missed I guess:

WORKING:
    <profile>
      <id>full</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-jar-plugin</artifactId>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>jar</goal>
                </goals>
                <configuration>
                  <classifier>full</classifier>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>

NOT WORKING:

    <profile>
      <id>full</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                  <classifier>full</classifier>
                </configuration>
          </plugin>
 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
exception coming from the embedder prohibits modifying the pom file. ,MNG-1876,12796101,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,mkleint,mkleint,mkleint,19/Dec/05 13:14,08/Apr/07 18:26,03/Jan/22 13:13,06/May/06 01:03,2.0.1,,,,,3.0-alpha-1,,,Embedding,,,,,1,,,,"the embedder is seriously broken when it has to reload the project definition. When I open a project and the embedder reads it's structures for teh first time, it's fine, but when the user changes the pom.xml, I need to reload the data. reusing the same embedder instance, 
I get this strange exception and the whole project/IDE is mainly unusable because of reoccuring exceptions. That's a showstpper for any serious IDE integration.


org.apache.maven.project.ProjectBuildingException: Duplicate project ID found in /home/mkleint/src/mevenide/mevenide2/netbeans/libs/embedder/pom.xml
	at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromSourceFile(DefaultMavenProjectBuilder.java:298)
	at org.apache.maven.project.DefaultMavenProjectBuilder.build(DefaultMavenProjectBuilder.java:274)
	at org.apache.maven.project.DefaultMavenProjectBuilder.buildWithDependencies(DefaultMavenProjectBuilder.java:169)
	at org.apache.maven.project.DefaultMavenProjectBuilder.buildWithDependencies(DefaultMavenProjectBuilder.java:159)
	at org.apache.maven.embedder.MavenEmbedder.readProjectWithDependencies(MavenEmbedder.java:307)
	at org.codehaus.mevenide.netbeans.NbMavenProject.getOriginalMavenProject(NbMavenProject.java:131)
<snip>","maven embedder 2.0.1, netbeans mevenide2 source snapshot.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jan/06 12:47;mkleint;duplicates.patch;https://issues.apache.org/jira/secure/attachment/12711805/duplicates.patch","22/Jan/06 09:07;mkleint;newversion.patch;https://issues.apache.org/jira/secure/attachment/12711887/newversion.patch",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28uiv:",9223372036854775807,,,,,,,,,,,,,,,,,,,"08/Jan/06 12:47;mkleint;a fix that seems to work. No more embedder restarts are required, all maven integration tests passed for me.;;;","22/Jan/06 09:07;mkleint;a better patch, introducing a resetCache() method to MavenProjectBuilder. everytime the embedder loads any project, the resetCache() method gets called.;;;","06/May/06 01:03;mkleint;was fixed in embedder refactor branch and is now in trunk.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
maven-reporting-impl version 2.0.1 missing component org.codehaus.doxia.site.renderer.SiteRenderer,MNG-1834,12794095,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Won't Fix,brettporter,olamy,olamy,14/Dec/05 04:30,01/Feb/06 14:45,03/Jan/22 13:13,19/Dec/05 01:00,2.0.1,,,,,,,,,,,,,0,,,,"With using maven-reporting-impl version 2.0.1. (updating my pom to all maven* 2.0.1)
I have the following stack trace :
ComponentRequirement{role='org.codehaus.doxia.site.renderer.SiteRenderer', roleHint='null', fieldName='siteRenderer'} was missing.
The component org.codehaus.doxia.site.renderer.SiteRenderer is missing.
The workaroung is using maven-reporting-impl version 2.0",all,,,1800,1800,,0%,1800,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28x7b:",9223372036854775807,,,,,,,,,,,,,,,,,,,"16/Dec/05 15:56;jdcasey;can you try the snapshot I just uploaded to:

http://cvs.apache.org/maven-snapshot-repository/org/apache/maven/reporting/maven-reporting-impl/2.0.2-SNAPSHOT/

It should be fixed.;;;","18/Dec/05 02:58;olamy;I can't try because I have missing others dependencies :

[INFO] Failed to resolve artifact.

GroupId: org.apache.maven.reporting
ArtifactId: maven-reporting
Version: 2.0.2-SNAPSHOT

Reason: Unable to download the artifact from any repository

  org.apache.maven.reporting:maven-reporting:pom:2.0.2-SNAPSHOT

from the specified remote repositories:
  snapshots-cvsapache (http://cvs.apache.org/maven-snapshot-repository),
  central (http://repo1.maven.org/maven2),
  snapshots-codehaus (http://snapshots.maven.codehaus.org/maven2),
  rec-ap2-maven2 (http://57.200.214.247/maven2),
  cargo m2 snapshot repository (http://cargo.codehaus.org/dist2-snapshot)

Could you upload this too ? (and probably others ..) 
;;;","19/Dec/05 01:00;brettporter;this is the result of using the wrong component expression. If you use reporting-impl 2.0.1+, you must use o.a.m.d.s...
Using @component instead of @parameter expression=""${component...}"" usually does this.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Not detecting changes in the installed jars.,MNG-1742,12794620,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Duplicate,brettporter,parveen.beniwal,parveen.beniwal,03/Dec/05 02:05,01/Feb/06 14:42,03/Jan/22 13:13,03/Dec/05 03:18,,,,,,,,,POM,,,,,0,,,,"I have installed my components jar to remote repository. If someone has change the repository then and user is using the same version of the component. Although the component jar has been changed but user is not getting the new component jar in the repository as he is having the same version jar in his/her local repository.

There is no way to recognise the latest changes..........",,,,,,,,,,,,,,,,,,,,,,,,MNG-1741,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i299z3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"PluginParameterExpressionEvaluator, StringIndexOOBE",MNG-1666,12795986,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,jdcasey,heymjo,heymjo,23/Nov/05 04:22,01/Feb/06 14:44,03/Jan/22 13:13,23/Nov/05 11:02,2.0.1,,,,,2.0.1,,,Plugin API,,,,,0,,,,"doing package/install i get :

java.lang.StringIndexOutOfBoundsException: String index out of range: 1
        at java.lang.String.charAt(String.java:558)
        at java.util.regex.Matcher.appendReplacement(Matcher.java:704)
        at java.util.regex.Matcher.replaceAll(Matcher.java:806)
        at java.lang.String.replaceAll(String.java:2000)
        at org.apache.maven.plugin.PluginParameterExpressionEvaluator.evaluate(PluginParameterExpressionEvaluator.java:145)
        at org.codehaus.plexus.component.configurator.converters.AbstractConfigurationConverter.fromExpression(AbstractConfigurationConverter.java:167)
        at org.codehaus.plexus.component.configurator.converters.basic.AbstractBasicConverter.fromConfiguration(AbstractBasicConverter.java:57)
        at org.codehaus.plexus.component.configurator.converters.composite.CollectionConverter.fromConfiguration(CollectionConverter.java:177)
        at org.codehaus.plexus.component.configurator.converters.ComponentValueSetter.configure(ComponentValueSetter.java:247)
        at org.codehaus.plexus.component.configurator.converters.composite.ObjectWithFieldsConverter.processConfiguration(ObjectWithFieldsConverter.java:137)
        at org.codehaus.plexus.component.configurator.BasicComponentConfigurator.configureComponent(BasicComponentConfigurator.java:56)
        at org.apache.maven.plugin.DefaultPluginManager.populatePluginFields(DefaultPluginManager.java:1031)
        at org.apache.maven.plugin.DefaultPluginManager.getConfiguredMojo(DefaultPluginManager.java:576)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:390)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:519)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:469)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:448)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:301)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:268)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:137)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:322)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:115)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:249)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)

The compile target does not suffer from this. I have attached the pom and parent pom. Output of maven -X is also attached

","SunOS cocoon.zones.apache.org 5.10 Generic_118844-08 i86pc i386 i86pc
","was missing regex escape ""character"" of ""\\"" in front of the replacement value.;23/Nov/05 11:02;jdcasey;1800",,3600,0,1800,50%,3600,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Nov/05 04:22;heymjo;exception.log;https://issues.apache.org/jira/secure/attachment/12711545/exception.log","23/Nov/05 04:22;heymjo;parentpom.xml;https://issues.apache.org/jira/secure/attachment/12711544/parentpom.xml","23/Nov/05 04:22;heymjo;pom.xml;https://issues.apache.org/jira/secure/attachment/12711543/pom.xml",,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i291gv:",9223372036854775807,,,,,,,,,,,,,,,,,,,"23/Nov/05 10:09;jdcasey;looks like a problem in the expression escaping support of the parameter expression evaluator.;;;","23/Nov/05 11:02;jdcasey;Added regex escape sequence to the replacement value for escaped parameter expressions.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
xml-apis relocation wrong,MNG-1656,12795978,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,jdcasey,heymjo,heymjo,22/Nov/05 10:45,20/Mar/06 05:09,03/Jan/22 13:13,23/Nov/05 10:32,2.0,,,,,2.0.1,,,Artifacts and Repositories,,,,,0,,,,"During my build, i get this multiple times :

[WARNING]
  This artifact has been relocated to xml-apis:xml-apis:1.0.b2.

Even though i have directly specified xml-apis:xml-apis:1.3.02 in my pom, maven insists on using 1.0.b2, making my build fail.

Steps to reproduce
1) svn co http://svn.apache.org/repos/asf/cocoon/whiteboard/maven2/cocoon-flat-layout/trunk/ testbug
2) edit settings.xml to point to a clean repo
3) mvn -N -s settings.xml install
4) cd cocoon-core
5) mvn -s ..\settings.xml -Dmaven.test.skip=true compile

This should fail with :

[ERROR] BUILD FAILURE
[INFO] ----------------------------------------------------------------------------
[INFO] Compilation failure

C:\temp\testtrunk\cocoon-core\src\main\java\org\apache\cocoon\xml\dom\DocumentWrapper.java
:[26,19] cannot resolve symbol
symbol  : class DOMConfiguration
location: package dom

C:\temp\testtrunk\cocoon-core\src\main\java\org\apache\cocoon\xml\dom\DocumentWrapper.java
:[39,19] cannot resolve symbol
symbol  : class UserDataHandler
location: package dom

C:\temp\testtrunk\cocoon-core\src\main\java\org\apache\cocoon\xml\dom\DocumentWrapper.java
:[914,11] cannot resolve symbol
symbol  : class DOMConfiguration
location: class org.apache.cocoon.xml.dom.DocumentWrapper

C:\temp\testtrunk\cocoon-core\src\main\java\org\apache\cocoon\xml\dom\DocumentWrapper.java
:[1012,56] cannot resolve symbol
symbol  : class UserDataHandler
location: class org.apache.cocoon.xml.dom.DocumentWrapper


The interfaces it can't find are effectively in 1.3.02 , but not in 1.0.b2",,"finally figured out that relocation was setting the artifact version, which means the version range is null...ths was keeping the proper version of xml-apis from being selected.;22/Nov/05 20:23;jdcasey;10800",,10800,0,10800,100%,10800,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-1417,"22/Nov/05 16:34;carlos;log.txt;https://issues.apache.org/jira/secure/attachment/12711542/log.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i2918n:",9223372036854775807,,,,,,,,,,,,,,,,,,,"22/Nov/05 10:47;heymjo;http://jira.codehaus.org/browse/MEV-216 and http://jira.codehaus.org/browse/MEV-222 are related;;;","22/Nov/05 13:52;jdcasey;it seems like the wrong version (2.0.2) is getting picked up from somewhere other than the direct dependency specification. 2.0.2 has a relocation to 1.0.b2, so it's not actually a problem with the relocation handling, per se.

I think this may have to do with selection of a dependency when it's specified in multiple places.;;;","22/Nov/05 14:10;jdcasey;seems to be related, but we need to verify it.;;;","22/Nov/05 16:34;carlos;it works for me. I deleted just xml-apis from the local repo and I'm using the latest maven snapshots.

I've attached my log so you can check it for differences;;;","23/Nov/05 04:13;heymjo;I have verified with an SVN build as of a few minutes ago, the issue seems to have been fixed. ;;;","23/Nov/05 10:32;jdcasey;seems to be fixed.;;;","23/Nov/05 15:13;carlos;Let's fix it so 2.0 users don't get the problem;;;","20/Mar/06 04:50;henryju;It's not fixed for me with maven 2.0.2.

[WARNING] While downloading xml-apis:xml-apis:2.0.2
  This artifact has been relocated to xml-apis:xml-apis:1.0.b2.;;;","20/Mar/06 05:09;henryju;Sorry, don't give attention to my last post. My problem was with pull-parser.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
POM is not read using the right encoding,MNG-1603,12793983,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,jdcasey,carlos,carlos,17/Nov/05 14:00,16/Jun/07 18:05,03/Jan/22 13:13,10/Dec/05 20:47,2.0,,,,,2.0.1,,,POM::Encoding,,,,,0,,,,"IIRC XML standard says that default encoding is UTF-8 for xml files

That can be overriden with 
<?xml version=""1.0"" encoding=""ISO-8859-1""?>

But files without header saved as UTF8 are not parsed in some systems (eg windows, solaris), while files saved as other encoding (I believe it was ansi) break under a Mac mini with yellowdog linux",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i2914v:",9223372036854775807,,,,,,,,,,,,,,,,,,,"22/Nov/05 13:19;carlos;That mini uses IBM JDK (build 1.4.2, J2RE 1.4.2 IBM build cxppc32142-20050929 (SR3) (JIT enabled: jitc))

It also breaks under Pentium 4 with Linux RHEL 3.5, IBM's JDK 1.4.2 (as reported by a user in the mailing list)

Seems that common environment is the IBM JDK;;;","22/Nov/05 19:19;brettporter;sorry, but I think I twas breaking it with the Sun 1.5.0_05 :(;;;","22/Nov/05 19:22;carlos;yes, seems that IBM reads UTF8 (as it should be) and Sun other format;;;","10/Dec/05 20:47;jdcasey;encoding is used correctly to read the xml now, and that encoding is now attached to all model-class instances, so that the corresponding model writers can use it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exception with dependencies that have <type> and implied <version> from parents,MNG-1562,12795961,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Won't Fix,jdcasey,arikkfir,arikkfir,14/Nov/05 15:03,31/Jan/15 13:35,03/Jan/22 13:13,26/Jul/06 17:03,2.0,,,,,,,,Inheritance and Interpolation,,,,,4,,,,"I have the following POM structure:

POM_PARENT
  +--POM_EJB (packaging=ejb)
  +--POM_EAR (packaging=ear)

As you can see, POM_EJB and POM_EAR extend POM_PARENT.

The POM_PARENT defines a ""<dependencyManagement>"" which specifies the correct version of POM_EJB that POM_EAR should depend upon, like this:
<dependencyManagement>
  ...
  <dependency>
    <groupId>...</groupId>
    <artifactId>POM_EJB</artifactId>
    <version>...</version>
  </dependency>
</dependencyManagement>

POM_EAR contains the following:
<dependency>
  <groupId>...</groupId>
  <artifactId>POM_EJB</artifactId>
</dependency>

This works well, until I use the maven-ear-plugin to package the POM_EAR project. I get the error:

Artifact[org.corleon.crm:crm-ejb-dummy:ejb] is not a dependency of the project.

Note the "":ejb"" at the end of the artifact ID. I've poked around the maven-ear-plugin and I see it makes sure that EJB modules' for the application.xml *are indeed of TYPE ejb*, which is fine. However, when I add the ""<type>ejb</type>"" clause to the POM_EAR's dependency (either in the depManagement in POM_PARENT or in POM_EAR itself) I get the exception:

arik@corleon:~/projects/crm/ear$ mvn package
[INFO] Scanning for projects...
[INFO] ----------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ----------------------------------------------------------------------------
[INFO] Error building POM (may not be this project's POM).


Project ID: org.corleon.crm:crm-ear
POM Location: /home/arik/projects/crm/ear/pom.xml
Validation Messages:

    [0]  'dependencies.dependency.version' is missing.


Reason: Failed to validate POM


[INFO] ----------------------------------------------------------------------------
[INFO] Trace
org.apache.maven.reactor.MavenExecutionException: Failed to validate POM
        at org.apache.maven.DefaultMaven.getProjects(DefaultMaven.java:359)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:276)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:113)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:249)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.apache.maven.project.InvalidProjectModelException: Failed to validate POM
        at org.apache.maven.project.DefaultMavenProjectBuilder.processProjectLogic(DefaultMavenProjectBuilder.java:774)
        at org.apache.maven.project.DefaultMavenProjectBuilder.build(DefaultMavenProjectBuilder.java:624)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromSourceFile(DefaultMavenProjectBuilder.java:298)
        at org.apache.maven.project.DefaultMavenProjectBuilder.build(DefaultMavenProjectBuilder.java:276)
        at org.apache.maven.DefaultMaven.getProject(DefaultMaven.java:509)
        at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:441)
        at org.apache.maven.DefaultMaven.getProjects(DefaultMaven.java:345)
        ... 11 more
[INFO] ----------------------------------------------------------------------------
[INFO] Total time: < 1 second
[INFO] Finished at: Mon Nov 14 22:58:26 IST 2005
[INFO] Final Memory: 1M/2M
[INFO] ----------------------------------------------------------------------------

This happens anytime there's a dependency that has a <type> clause without a <version> clause (even though the <version> should be taken from a <dependencyManagement> clause in the parent POM).","JDK 1.5.0_05, Kubuntu Linux 5.1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28swn:",9223372036854775807,,,,,,,,,,,,,,,,,,,"22/Nov/05 20:16;brettporter;what if you put the <type> in the <dependencyManagement> element too?;;;","25/Nov/05 13:49;arikkfir;Then I get this (error relates to POM_EAR):

arik@corleon:~/projects/crm/trunk$ mvn clean package
[INFO] Scanning for projects...
[INFO] ----------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ----------------------------------------------------------------------------
[INFO] Error building POM (may not be this project's POM).


Project ID: org.corleon.crm:crm-ear
POM Location: /home/arik/projects/crm/trunk/ear/pom.xml
Validation Messages:

    [0]  'dependencies.dependency.version' is missing.


Reason: Failed to validate POM


[INFO] ----------------------------------------------------------------------------
[INFO] Trace
org.apache.maven.reactor.MavenExecutionException: Failed to validate POM
        at org.apache.maven.DefaultMaven.getProjects(DefaultMaven.java:359)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:276)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:113)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:249)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.apache.maven.project.InvalidProjectModelException: Failed to validate POM
        at org.apache.maven.project.DefaultMavenProjectBuilder.processProjectLogic(DefaultMavenProjectBuilder.java:774)
        at org.apache.maven.project.DefaultMavenProjectBuilder.build(DefaultMavenProjectBuilder.java:624)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromSourceFile(DefaultMavenProjectBuilder.java:298)
        at org.apache.maven.project.DefaultMavenProjectBuilder.build(DefaultMavenProjectBuilder.java:276)
        at org.apache.maven.DefaultMaven.getProject(DefaultMaven.java:509)
        at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:441)
        at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:485)
        at org.apache.maven.DefaultMaven.getProjects(DefaultMaven.java:345)
        ... 11 more
[INFO] ----------------------------------------------------------------------------
[INFO] Total time: < 1 second
[INFO] Finished at: Fri Nov 25 21:47:35 IST 2005
[INFO] Final Memory: 1M/3M
[INFO] ----------------------------------------------------------------------------

The EAR pom now has only a groupId and an artifactId, where the parent POM defines the group, artifact, type and version.;;;","25/Dec/05 16:42;svadu;Confirming the issue. Both <type/> and <version/> for POM_EAR (in this example) MUST be present which makes <dependencyManagement/> in parent POM_PARENT project obsolete/broken (and the documentation on http://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html as well).;;;","27/Dec/05 14:26;snicoll;Let's increase the priority of this one.;;;","26/Jul/06 17:03;jdcasey;in the case of non-jar dependencies, the minimal set of information for dependencies referencing an entry in the dependencyManagement section is groupId:artifactId:type\[:classifier\]. This allows the dependencyManagement section to house information on multiple dependencies from the same POM, with different types and potentially different classifiers.

Again, the identity used to match dependencies against the dependencyManagement section is:

groupId:artifactId:type='jar'[:classifier]

So, in this case, you'd use:

<dependency>
  <groupId>...</groupId>
  <artifactId>POM_EJB</artifactId>
  <type>ejb</type>
</dependency>

in order to reference the information stored in your <dependencyManagement/> section. I've updated the site documentation to reflect this, and will republish within the next few minutes.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
some execution output not routed through default routes.,MNG-1545,12793990,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,,mkleint,mkleint,13/Nov/05 11:24,24/Sep/06 19:03,03/Jan/22 13:13,24/Sep/06 08:13,,,,,,2.0.5,,,Embedding,,,,,0,,,,"when running embedded maven I create an instance of EventMonitor, TransferListener and MavenEmbedderLogger.
however there's still some output that is not received through these means, but rather printoed to standard output (I suppose)
that's wrong because it prohibits custom handling of output.

one example that I found is the surefire plugin's output.. everything prepended with [surefire] is printed out wrongly..


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28va7:",9223372036854775807,,,,,,,,,,,,,,,,,,,"11/Dec/05 13:01;jdcasey;should we re-route system streams to logger, just to guard against plugins doing Bad Things again?

scanning all the current plugins, etc. may fix this issue for now, but any new plugin (or subsequent update to existing plugins) can re-break it.;;;","30/Dec/05 11:52;arikkfir;I'm not sure that would be wise - when runningin another application (e.g. an IDE) I wouldn't want Maven to fiddle with external resources such as streams. What if the IDE wants to reroute the system streams to another source?

I think this should be solved by imposing some other form of validation on the source (perhaps a checkstyle check that fails the build if it finds a System.out?) ;;;","17/Jul/06 00:00;brettporter;I think surefire should be fixed in the later plugins - can you confirm?;;;","17/Jul/06 08:24;mkleint;brett, which version of surefire do you mean?;;;","17/Jul/06 08:38;brettporter;surefire plugin 2.2 (surefire 2.0);;;","20/Jul/06 03:11;mkleint;still doesn't seem to work for me. when running the build in the IDE, I get the surefire output in the console where I started the IDE from, instead the output window. please note that if you do a System.out in a maven build somewhere, the IDE is capable of catching that one even though it's not routed through the loggers. but with surefire's forking, it's all lost.
;;;","29/Aug/06 03:44;mkleint;brett: I've done some additional debugging of the surefire plugin problem and I tracked it down the StreamPumper classes that print messages from the forked process to the System.out of the IDE's process. However the delegating System.out impl in the IDE doesn't recognize these threads (StreamPumper is a running thread) as belonging to build being executed and prints them to console. I believe it's because the threads don't belong to the same ThreadGroup. I tried to confirm the theory but surefire cannot be used with the trunk version of plexus-utils.

please note that even when this is fixed, it still doens't fully satisfy the issues mentioned in this report. In the ideal case one should  get the output in the logger/llisteners, which is not the case now and it will only be cought by the IDE's safety net. But it cannot be filtered out, have actions attached to it etc..


;;;","31/Aug/06 11:47;mkleint;After some more work I think I got it working for netbeans correctly. The StreamPumper not printing  was a Netbeans/Mevenide classpath issue.
Now I have a multiplexing stdout/stderr implementation that is capable of sending the System.out and System.err to the correct output window pane.

not sure if we can consider the issue fix as the texts are not routed thought the loggers but System.out.

;;;","24/Sep/06 08:13;jvanzyl;Milos has figured this out in netbeans using a multiplexing solution in netbeans. This is really a bigger in issue where a set of threadsafe components are not logging to the originating thread but for the time being this issue has been resolved for netbeans.;;;","24/Sep/06 19:03;brettporter;but if this works for netbeans doesn't it still need to be fixed for anything else using the embedder? I'm not sure it should be closed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to load maven-model-2.0-all from a plugin,MNG-1436,12795882,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Won't Fix,,fgiust,fgiust,06/Nov/05 09:15,17/Jun/07 19:14,03/Jan/22 13:13,17/Jun/07 19:14,,,,,,,,,Plugins and Lifecycle,,,,,0,,,,"The org.apache.maven:maven-model artifact is available with the ""all"" classifier in the maven repo. The ""all"" version also contains project v3 classes and reader/writer.

Adding a dependency with:

<dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <version>2.0</version>
      <type>jar</type>
      <classifier>all</classifier>
</dependency>

let you use project 3 classes in a plugin and install successfully.

However, when running the plugin, the maven-model-2.0-all artifact seems to be ignored and replaced by the version in m2/lib _also if the classifier is different_.

This is the debug log from an execution of a plugin that uses this dependency:

[INFO] Searching repository for plugin with prefix: 'maven1'.
[DEBUG] maven-maven1-plugin: using locally installed snapshot
[DEBUG] maven-maven1-plugin: using locally installed snapshot
[DEBUG] org.apache.maven.plugins:maven-maven1-plugin:maven-plugin:2.0-SNAPSHOT (selected for runtime)
[DEBUG]   org.codehaus.plexus:plexus-utils:jar:1.0.4 (selected for runtime)
[DEBUG] Retrieving parent-POM from the repository for project: org.apache.maven:maven-model:jar:2.0
[DEBUG]   org.apache.maven:maven-model:jar:all:2.0 (selected for runtime)
[DEBUG]     org.codehaus.plexus:plexus-utils:jar:1.0.4 (selected for runtime)
[DEBUG]   dom4j:dom4j:jar:1.4 (selected for runtime)
[DEBUG] Configuring mojo 'org.apache.maven.plugins:maven-maven1-plugin:2.0-SNAPSHOT:convert' -->
[DEBUG]   (f) basedir = \testconvert 
[DEBUG] -- end configuration --
[INFO] [1:convert]
[WARNING] pom.xml in \testconvert already exists, overwriting
[INFO] ----------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ----------------------------------------------------------------------------
[INFO] org/apache/maven/model/v3_0_0/io/xpp3/MavenXpp3Reader
[INFO] ----------------------------------------------------------------------------
[DEBUG] Trace
java.lang.NoClassDefFoundError: org/apache/maven/model/v3_0_0/io/xpp3/MavenXpp3Reader


At the moment this makes impossible to use pom v.3 in mvn.

Apart from the classifier issue that could be solved in a future m2 release, I would like to find out a workaroud in order to use v3 poms for a mvn plugin that could automatically convert maven 1 project.xml to mvn pom.xml for making migration from maven 1 easier.
The current options I can think at are:
- embedding the org.apache.maven.model.v3_0_0.* classes in the plugin
- releasing maven-model-2.0-all with a different artifactId (maven-model-all-2.0 or maven-model-v3-2.0)
thoughts?

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28y47:",9223372036854775807,,,,,,,,,,,,,,,,,,,"06/Nov/05 19:58;brettporter;we won't be allowing maven-model-2.0-all into the plugin, its v4 classes will conflict with the root classloader.

What is needed is a way to get maven-model-3.0.1 into the plugin, really. That may be best done by changing the artifact ID of that release.;;;","16/Jun/07 16:36;jvanzyl;Brett, so can this be closed?;;;","17/Jun/07 19:14;brettporter;using a different artifact ID in the maven-one-plugin now.

Though it may be possible to use the classifier version in Maven 2.0.6 due to the different exclusino rule s not sure.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Specifying <version> for a plugin in <pluginManagement> does not force Maven to use this version,MNG-1424,12794599,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,jdcasey,fabemn,fabemn,04/Nov/05 08:04,01/Feb/06 14:44,03/Jan/22 13:13,14/Nov/05 17:06,2.0,,,,,2.0.1,,,Plugins and Lifecycle,,,,,0,,,,"I had the problem when I wanted to use the final release of the surefire plugin. I put the following in my root POM:

      <build>
            ...
            <pluginManagement>
                  <plugins>
                        ...
                        <plugin>
                              <groupId>org.apache.maven.plugins</groupId>
                              <artifactId>maven-surefire-plugin</artifactId>
                              <version>2.0</version>
                        </plugin>
                  </plugins>
            </pluginManagement>
      </build>

, but Maven still used version 2.0-beta-4 (and therefore did not try to download version 2.0).
","Win2k, M2.0, Java 1.4.2",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28v1z:",9223372036854775807,,,,,,,,,,,,,,,,,,,"14/Nov/05 17:06;jdcasey;Changed the ordering of:

* verify plugin
* add plugin to project

to:

* add plugin to project
* verify plugin

This is important, since it allows pluginManagment to take effect and specify a plugin version before the plugin version is resolved using repository metadata.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Relocated artifacts hide other versions that should be picked,MNG-1417,12793903,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,jdcasey,carlos,carlos,04/Nov/05 00:47,01/Feb/06 14:43,03/Jan/22 13:13,23/Nov/05 10:18,2.0,,,,,2.0.1,,,Artifacts and Repositories,,,,,1,,,,"The output of mvn -X shows nothing about the servlet-api 2.4

<project>
  <modelVersion>4.0.0</modelVersion>
  <groupId>test</groupId>
  <version>1</version>
  <artifactId>test</artifactId>
  <dependencies>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.4</version>
        </dependency>
        <dependency>
            <groupId>servletapi</groupId>
            <artifactId>servletapi</artifactId>
            <version>2.3</version>
        </dependency>
  </dependencies>
</project>


This is other test that fails

<project>
  <modelVersion>4.0.0</modelVersion>
  <groupId>test</groupId>
  <version>1</version>
  <artifactId>test</artifactId>
  <dependencies>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.4</version>
        </dependency>
        <dependency>
            <groupId>commons-chain</groupId>
            <artifactId>commons-chain</artifactId>
            <version>1.0</version>
        </dependency>
  </dependencies>
</project>",,"verified that all is working as expected.;22/Nov/05 19:48;jdcasey;3600",,7200,0,3600,50%,7200,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-1656,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29bkn:",9223372036854775807,,,,,,,,,,,,,,,,,,,"04/Nov/05 01:02;carlos;A workaround is exclude the relocated artifacts where used

        <dependency>
            <groupId>struts</groupId>
            <artifactId>struts</artifactId>
            <version>1.2.7</version>
            <optional/>
            <exclusions>
                <exclusion>
                    <groupId>servletapi</groupId>
                    <artifactId>servletapi</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
;;;","22/Nov/05 14:10;jdcasey;seems to be related, but we need to verify it.;;;","22/Nov/05 19:12;jdcasey;something in the recurse() method of the DefaultArtifactCollector is failing to compare the dependencies by depth when one has been relocated. I'll hook up the debugger and see what I can see.;;;","22/Nov/05 19:51;jdcasey;In the first test case, the servlet dependency is essentially respecified at the same transitive depth with a different version. Since the project's dependency collection is resolved using set semantics, it's undefined which servlet-api dependency will take precedence over the other, but the first encountered will win.

In the second test, the servlet-api for commons-chain is optional and at a greater depth than the servlet-api dependency specified directly in the pom. In this case, the direct specification wins.

Both tests have been verified to be working correctly.;;;","22/Nov/05 19:57;carlos;but shouldn't the output of -X say 2.4 overriden by 2.3, as it does for other use cases?;;;","22/Nov/05 20:17;carlos;We should get the output saying that one version is removed as we get for other artifacts

eg.
commons-collections:commons-collections:jar:2.1 (removed - nearer found: 3.1);;;","23/Nov/05 10:18;jdcasey;cleaned up the debug output a bit, to make sure it doesn't say it's selecting both versions...my output now has:

[DEBUG] test:test:jar:1 (selected for null)
[WARNING] While downloading servletapi:servletapi:2.3
  This artifact has been relocated to javax.servlet:servlet-api:2.3.


[DEBUG]   javax.servlet:servlet-api:jar:2.3 (selected for compile)
[DEBUG]   javax.servlet:servlet-api:jar:2.4 (removed - nearer found: 2.3)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
quoted arguments are not being protected,MNG-1415,12795886,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,jdcasey,dozer,dozer,03/Nov/05 17:53,30/Mar/06 08:06,03/Jan/22 13:13,02/Mar/06 12:34,,,,,,2.0.3,,,,,,,,0,,,,"Arguments with whitespace protected by quotes are broken up into individual arguments by maven. It's not happening inside the mvn script - I've echoed the generated command-line to check that. This same exception is raised regardless of using...

-x=""y z""
-x=\""y z\""
-x='y z'
""-x=y z""

and several other combinations I can't remember.

Here's an example failure:

nmrp3@farnham:~/devel/fluxion/trunk/stack/sql-schema$ ~/m2_home/bin/mvn org.codehaus.mojo:maven-execute-plugin:0.1-SNAPSHOT:resources -Dexecute.class=org.comparagrid.fluxion.sql.schema.OWLFromSchema -Dexecute.args=""-baseURI=fish -Xdebug""
+ Error stacktraces are turned on.
[DEBUG] Building Maven user-level plugin registry from: '/home/nmrp3/.m2/plugin-registry.xml'
[DEBUG] Building Maven global-level plugin registry from: '/home/nmrp3/m2_home/conf/plugin-registry.xml'
[INFO] Scanning for projects...
[DEBUG] Using parent-POM from the project hierarchy at: '../pom.xml' for project: org.comparagrid.fluxion:sql-schema:jar:0.1-SNAPSHOT
[DEBUG] Skipping disabled repository central
[DEBUG] Skipping disabled repository central
[DEBUG] maven-execute-plugin: using locally installed snapshot
[DEBUG] Retrieving parent-POM from the repository for project: null:maven-execute-plugin:maven-plugin:0.1-SNAPSHOT
[DEBUG] maven-execute-plugin: using locally installed snapshot
[INFO] ----------------------------------------------------------------------------
[ERROR] BUILD FAILURE
[INFO] ----------------------------------------------------------------------------
[INFO] Invalid task 'debug': you must specify a valid lifecycle phase, or a goal in the format plugin:goal or pluginGroupId:pluginArtifactId:pluginVersion:goal
[INFO] ----------------------------------------------------------------------------
[DEBUG] Trace
org.apache.maven.BuildFailureException: Invalid task 'debug': you must specify a valid lifecycle phase, or a goal in the format plugin:goal or pluginGroupId:pluginArtifactId:pluginVersion:goal
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.getMojoDescriptor(DefaultLifecycleExecutor.java:1351)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.segmentTaskListByAggregationNeeds(DefaultLifecycleExecutor.java:376)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:132)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:322)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:115)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:249)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
[INFO] ----------------------------------------------------------------------------
[INFO] Total time: < 1 second
[INFO] Finished at: Thu Nov 03 23:35:37 GMT 2005
[INFO] Final Memory: 1M/3M
[INFO] ----------------------------------------------------------------------------",Linux,,,,,,,,,,,,,,,,MNG-2190,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28mzj:",9223372036854775807,,,,,,,,,,,,,,,,,,,"03/Nov/05 18:05;pouet;Seems related to http://jira.codehaus.org/browse/MNG-1389;;;","04/Nov/05 02:36;brettporter;this is different to MNG-1389.

Matthew, did you determine whether this was an issue with the shell script or not?;;;","14/Nov/05 15:57;dozer;This seems to definitely be an issue with bash, not anything in maven. However, I've not been able to work arround it in bash, so the *nix mvn script is by deffinition affected.;;;","14/Nov/05 16:25;dozer;Think we have a work-arround:

#!/bin/sh

arg_list=""""
while [ ""$1"" != """" ] ; do
  arg_list=""$arg_list \""$1\""""
  shift
done

echo TestMain $arg_list
exec /bin/sh -c ""java TestMain $arg_list""

This seems to behave as required. The $* and $@ vars loose quotes arround args very early. Just incase you care, here's TestMain as well:

public class TestMain
{
        public static void main(String[] args)
        {
                for(String arg : args)
                {
                        System.out.println(arg);
                }
        }
}
;;;","02/Mar/06 12:34;jdcasey;The actual fix was a bit more involved, on two fronts.

First, commons-cli apparently doesn't know what to do with:

""-Dfoo=some bar""

when it sees it, so it balks. I compensated for this by adding my own quoted-argument reconstruction method to the parse() method of the CLIManager in MavenCLI. This will groom out any quotes and re-join quoted arguments that span multiple arg-array elements.

Second, usage of the 'm2' script will still break when using the fix included in the comments of this issue. To handle this, I have had to introduce some fairly shady scripting in the m2 shell script, which *may* need some more tweaking to get right. However, since it's deprecated, IMO we shouldn't go to outrageous lengths to fix it for this issue.;;;","30/Mar/06 07:10;gordonhenriksen;Sorry for the dup.

The above changes just seem to shift the problem from spaces to quotes. Try this bash voodoo:

- ${CLASSWORLDS_LAUNCHER} $@
+ ${CLASSWORLDS_LAUNCHER} ""$@""
;;;","30/Mar/06 07:59;gordonhenriksen;Yikes! My ""bulleted list"" was supposed to look like an add/remove unified diff; didn't realize that Jira was going to go all wiki on my comments. To emphasize, revert ye diff, then in the various modified 'svn' files:

REM ${CLASSWORLDS_LAUNCHER} $@
ADD ${CLASSWORLDS_LAUNCHER} ""$@""

""$@"" (quotes significant) does not do what it looks like; it's equivalent to ""$1"" ""$2"" ""$3"" ""$4"" ... ""$n"". That is, upon expansion, it preserves existing list element boundaries rather than putting the joined string through word splitting again. man bash or man zsh for more info.

This one-line change would obviate the need for svn rev 382461 in maven-core/src/main/java/org/apache/maven/cli/MavenCli.java, which is an entirely new set of bugs. (Try building a reference to a file containing a quote character.) Likewise for the $QUOTED_ARGS variables introduced to the bash scripts. You really don't want to be in the command-line parsing business...;;;","30/Mar/06 08:05;brettporter;been there, done that. It's not supported by all shells, IIRC.

Can you please file a bug with a specific thing that won't work, rather than the solution? Likewise for the MavenCli. If you could include a patch that corrects that and passes the integration test, I'd certainly include it - but right now I'd rather not risk making changes to this. It appears to be working at least a little better than the last release if not perfectly and there are no regressions AFAICT.;;;","30/Mar/06 08:06;brettporter;btw, if you want to reopen the one marked dupe with the new deatils, that's fine. Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
optional dependencies not resolved while compiling from a master project,MNG-1384,12795845,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,jdcasey,fgiust,fgiust,01/Nov/05 06:29,01/Feb/06 14:43,03/Jan/22 13:13,23/Nov/05 16:26,2.0,,,,,2.0.1,,,Plugins and Lifecycle,,,,,0,,,,"project-A has a dependency defined as optional but required to compile.
Running ""mvn install"" directly on project-A works.

If project-A is referenced as a module in master-project, running ""mvn install"" from master-project will result in a build failure, since direct optional dependencies will not be included in project-A compile classpath.

A related issue (currently fixed by manually resolving artifacts) is that optional direct dependencies were not included in the classpath file generated by the m2 eclipse plugin (direct optional dependencies are missing from project.getTestArtifacts() with @requiresDependencyResolution test)

Shouldn't optional dependencies only be excluded from referenced projects or am I missing something?
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Nov/05 01:32;elpunzalan;MNG-1384-maven-artifact.patch;https://issues.apache.org/jira/secure/attachment/12711520/MNG-1384-maven-artifact.patch",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28vvz:",9223372036854775807,,,,,,,,,,,,,,,,,,,"23/Nov/05 16:26;jdcasey;Fixed this while addressing another issue.

;;;","23/Nov/05 16:26;jdcasey;sorry, assigning to myself, since I'm closing it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Fatal error trying ""mvn site""",MNG-1266,12796871,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Duplicate,carlos,wim.deblauwe@gmail.com,wim.deblauwe@gmail.com,21/Oct/05 07:54,06/Apr/15 00:45,03/Jan/22 13:13,22/Oct/05 22:29,2.0,,,,,,,,,,,,,0,,,,"I get the following error trying to build a site:

[INFO] ----------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ----------------------------------------------------------------------------
[INFO] Can't find bundle for base name project-info-report, locale nl_NL
[INFO] ----------------------------------------------------------------------------
[INFO] Trace
java.util.MissingResourceException: Can't find bundle for base name project-info-report, locale nl_NL
        at java.util.ResourceBundle.throwMissingResourceException(ResourceBundle.java:837)
        at java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:806)
        at java.util.ResourceBundle.getBundle(ResourceBundle.java:700)
        at org.apache.maven.report.projectinfo.CimReport.getBundle(CimReport.java:260)
        at org.apache.maven.report.projectinfo.CimReport.getName(CimReport.java:80)
        at org.apache.maven.plugins.site.ReportComparator.compare(ReportComparator.java:40)
        at java.util.Arrays.mergeSort(Arrays.java:1284)
        at java.util.Arrays.mergeSort(Arrays.java:1295)
        at java.util.Arrays.sort(Arrays.java:1223)
        at java.util.Collections.sort(Collections.java:159)
        at org.apache.maven.plugins.site.SiteMojo.execute(SiteMojo.java:239)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:399)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:519)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:469)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:448)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:301)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:268)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:137)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:316)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:113)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:249)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
[INFO] ----------------------------------------------------------------------------
[INFO] Total time: 2 minutes 21 seconds
[INFO] Finished at: Thu Oct 20 16:17:51 CEST 2005
[INFO] Final Memory: 5M/10M
[INFO] ----------------------------------------------------------------------------

The same problem has been reported on the mailing list by another person using a German locale: java.util.MissingResourceException: Can't find bundle for base name
project-info-report, locale de_DE

","Windows XP
Maven 2.0",,,,,,,,,,,,,,,,,,,,,,,MPIR-7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28tmn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
attachArtifact doesn't allow to attach an artifact with different type and no assembly,MNG-1251,12793538,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,lacostej,lacostej,20/Oct/05 09:50,01/Feb/06 14:44,03/Jan/22 13:13,02/Nov/05 18:21,2.0,,,,,2.0.1,,,Inheritance and Interpolation,,,,,2,,,,"Use case: a project triggers a plugin which generates several files. I want to put all these files in a zip file and install it when calling install.
So I bind my plugin to the package phase, I keep the project packaging as pom, and then i tri to do soemthing like projectHelper.attachArtifact( project, ""zip"", null, toFile ); in my execute() method

this fails in 2 places:
- empty or null classifier is disallowed by AttachedArtifact
- then AttachedArtifact inherits the parent's ArtifactHandler which then will return ""pom"" as extension instead of ""zip"" (the type) .

Thus my artifact ends up being installed in finalName-forcedClassifier.pom instead of finalName.zip...
Blocks my webstart plugin development,

Note that project.attachArtifact() looks empty...",,";02/Nov/05 18:13;jdcasey;3600",,3600,3600,3600,100%,3600,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Oct/05 17:50;lacostej;MNG-1251_more_flexible_attach_artifact.diff;https://issues.apache.org/jira/secure/attachment/12711519/MNG-1251_more_flexible_attach_artifact.diff",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28ywv:",9223372036854775807,,,,,,,,,,,,,,,,,,,"20/Oct/05 09:53;jdcasey;Need to make AttachedArtifact manage its own extension and allow empty classifier.

Also, need to introduce new variant of MavenProjectHelper.attachArtifact(..) to handle fuller specification of this information.;;;","20/Oct/05 17:50;lacostej;This fixes it for me. Not sure if that is the right thing to do, in particular with the API now potentially inconsistent:

  projectHelper.attachArtifact( project, ""zip"", null, toFile ); fails

while

  projectHelper.attachArtifact( project, ""zip"", toFile ); works

one may want to look into that.

Some comments: 
- the updates to the poms are probably not needed. I just wanted to be sure to use 2.0.1-SNAPSHOT material. Feel free to apply separately.
- AttachedArtifact has a strange way of redirectign method calls to the parent instance. I came up with the fix in 5 minutes and it took me 30 min more to find out that the getArtifactHandler() was 'bypassing' my intended changes...
- and no, I don't have a test case... Except that this fixes what I've been trying to do.

[INFO] [install:install]
[INFO] Installing /home/jerome/Dev/m2/mojo-site/mojo/mojo-sandbox/webstart-maven-plugin/src/test/projects/project1/pom.xml to /home/jerome/.m2/repository-m2trunk/org/apache/maven/plugins/jar-mng-1130-0/1.0/jar-mng-1130-0-1.0.pom
[INFO] Installing /home/jerome/Dev/m2/mojo-site/mojo/mojo-sandbox/webstart-maven-plugin/src/test/projects/project1/target/jar-mng-1130-0-1.0.zip to /home/jerome/.m2/repository-m2trunk/org/apache/maven/plugins/jar-mng-1130-0/1.0/jar-mng-1130-0-1.0.zip

:);;;","23/Oct/05 20:58;brettporter;I have some concerns with this patch:
- it seems to break a public API, in particular creating a dependence on maven 2.0.1 for the install plugin (though I can't see why as the install plugin is not changed)
- I don't understand the comment about omitting getArtifactHandler yet

it requires a closer look;;;","24/Oct/05 14:25;lacostej;Brett, thanks for looking into this.

I will try to be a little bit more verbose, first describing the patch then maybe a better approach.

The patch
- with regard to the pom dependencies updates, I think I've had to make the change for the maven-project dependency. The 2 others are probably not required.
  If I didn't upgrade maven-project to be 2.0.1-SNAPSHOT, tHe install package would keep using the 2.0 maven-project. That was failing in my plugin. I could maybe try forcing a dependency of 2.0.1-SNAPSHOT in my plugin.
- with regard to commenting out the getArtifactHandler(). The original getArtifactHandler() assumed that the super.artifactHandler was initialized by the parent.artifactHandler, thus the getArtifactHandler() would always return the same as parent.getArtifactHandler(). As my new constructor introduces its own ArtifactHandler instead of passing the parent.getArtifactHandler() to the super() constructor.this assumption is broken. I need to let the super return the real ArtifactHandler, known only by super. As to why the AttachedArtifact was overriding all these calls, I don't know. I would let the super provide this information or use delegation instead of inheritance.

Better approach?

It looks like AttachedArtifact is not correctly implemented.
1- delegation instead of inheritance?
2- do not add a new constructor but change the default AttachedArtifact to deal with the 2 broken cases initially reported in this bug report, i.e.:
     1- support empty or null classifier
     2- when the classifier is empty/null and the type different from the parent's type, use a different ArtifactHandler() with the correct type.;;;","27/Oct/05 16:55;jdcasey;getArtifactHandler() must not be delegated to main artifact instance, either...;;;","27/Oct/05 19:05;ajwhitney;In a multi-module project, the ArtifactHandler extension only appears to be read from the extensions' components.xml for the first module.

i.e.

<modules>
	<module>modules/module1-ext1</module>
	<module>modules/module2-ext2</module>
</modules>

results in the custom artifact handler for module1-ext1 being used but not module2-ext2

Reversing this order

<modules>
	<module>modules/module2-ext2</module>
	<module>modules/module1-ext1</module>
</modules>

results in the custom artifact handler for module2-ext2 being used but not module1-ext1;;;","02/Nov/05 18:13;jdcasey;changed the MavenProjectHelper to lookup and pass the proper ArtifactHandler to the AttachedArtifact constructor. Then, I changed the AttachedArtifact to only delegate those methods that need to be kept up to date WRT the main artifact. Wherever a method delegates instead of using its own data, I've disabled the corresponding setter method by throwing UnsupportedOperationException that has a message explaining why it's disabled.;;;","02/Nov/05 18:21;jdcasey;patch was reviewed but not applied. The better approach was to make the attached artifact more independent, only delegating the identity-related fields (groupId, artifactId, version stuff) to the main artifact. The only reason to do this is to keep metadata lookups working consistently based on this info.

Also, I added code to MavenProjectHelper to lookup and pass on the correct ArtifactHandler for the given artifact type used for the attachment.

Thanks for the help on running this one down, Jerome (and everyone else who helped). ;;;","03/Nov/05 01:15;lacostej;Thanks for fixing that one.
THere are at least one issue depending on that one: CC-1310. I thought there was a second, but I can't find it right now.
Should I try to refresh the patch on this issue, or should you take care of it?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect field case triggers NPE when configurator unable to configure object,MNG-1232,12793862,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,brettporter,lacostej,lacostej,18/Oct/05 06:50,01/Feb/06 14:44,03/Jan/22 13:13,02/Nov/05 02:03,,,,,,2.0.1,,,Plugins and Lifecycle,,,,,0,,,,"Triggered working on a new plugin. The configuration error is mine, but the error message is very cryptic. I spent 15 min trying to finx the reason for the issue...
NPE should at least be avoided. Better should the configuration error reported.

pom.xml extract:

        <configuration>
           <!--outputDirectory></outputDirectory--> <!-- not required?? -->

           <!-- ""GLOBAL"" -->
           <!-- dependencies to sign and distribute (runtime-sub-dependencies get signed too). -->
           <!-- does that imply transitivity? -->
           <dependencies>
             <dependency>commons-logging:commons:logging</dependency>
             <dependency>commons-cli:commons:cli</dependency>
           </dependencies>

           <jnlp>
              ...
             <sign>
                ....
               <dnameC>US</dnameC>

and my Mojo:

public class JnlpMojo
    extends AbstractMojo
{
    /**
     * @parameter
     */
    private SignConfig sign;
   ...
}

public class SignConfig {
    private String dnamec;   // note the case issue
    ...
}

Gives the following failure:
	

[DEBUG] adding entry META-INF/maven/org.apache.maven.plugins/jar-mng-1130-0/pom.properties
[DEBUG] org.codehaus.mojo:webstart-maven-plugin:maven-plugin:0.1-SNAPSHOT (selected for runtime)
[DEBUG]   commons-lang:commons-lang:jar:2.1 (selected for runtime)
[DEBUG] Configuring mojo 'org.codehaus.mojo:webstart-maven-plugin:0.1-SNAPSHOT:jnlp' -->
[DEBUG]   (f) gzip = false
[INFO] ----------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ----------------------------------------------------------------------------
---------------------------------------------------
constituent[0]: file:/home/jerome/local/lib/maven-2.0-RC/lib/maven-core-2.0.jar
constituent[1]: file:/home/jerome/local/lib/maven-2.0-RC/lib/maven-model-2.0.jar
constituent[2]: file:/home/jerome/local/lib/maven-2.0-RC/lib/maven-plugin-parameter-documenter-2.0.jar
constituent[3]: file:/home/jerome/local/lib/maven-2.0-RC/lib/maven-profile-2.0.jar
constituent[4]: file:/home/jerome/local/lib/maven-2.0-RC/lib/maven-error-diagnostics-2.0.jar
constituent[5]: file:/home/jerome/local/lib/maven-2.0-RC/lib/plexus-interactivity-api-1.0-alpha-4.jar
constituent[6]: file:/home/jerome/local/lib/maven-2.0-RC/lib/wagon-http-lightweight-1.0-alpha-5.jar
constituent[7]: file:/home/jerome/local/lib/maven-2.0-RC/lib/maven-plugin-descriptor-2.0.jar
constituent[8]: file:/home/jerome/local/lib/maven-2.0-RC/lib/commons-cli-1.0.jar
constituent[9]: file:/home/jerome/local/lib/maven-2.0-RC/lib/wagon-ssh-1.0-alpha-5.jar
constituent[10]: file:/home/jerome/local/lib/maven-2.0-RC/lib/maven-monitor-2.0.jar
constituent[11]: file:/home/jerome/local/lib/maven-2.0-RC/lib/maven-repository-metadata-2.0.jar
constituent[12]: file:/home/jerome/local/lib/maven-2.0-RC/lib/jsch-0.1.23.jar
constituent[13]: file:/home/jerome/local/lib/maven-2.0-RC/lib/maven-settings-2.0.jar
constituent[14]: file:/home/jerome/local/lib/maven-2.0-RC/lib/maven-artifact-manager-2.0.jar
constituent[15]: file:/home/jerome/local/lib/maven-2.0-RC/lib/wagon-file-1.0-alpha-5.jar
constituent[16]: file:/home/jerome/local/lib/maven-2.0-RC/lib/wagon-provider-api-1.0-alpha-5.jar
constituent[17]: file:/home/jerome/local/lib/maven-2.0-RC/lib/maven-project-2.0.jar
constituent[18]: file:/home/jerome/local/lib/maven-2.0-RC/lib/maven-reporting-api-2.0.jar
constituent[19]: file:/home/jerome/local/lib/maven-2.0-RC/lib/maven-plugin-api-2.0.jar
constituent[20]: file:/home/jerome/local/lib/maven-2.0-RC/lib/maven-artifact-2.0.jar
constituent[21]: file:/home/jerome/local/lib/maven-2.0-RC/lib/maven-plugin-registry-2.0.jar
constituent[22]: file:/home/jerome/local/lib/maven-2.0-RC/lib/doxia-sink-api-1.0-alpha-4.jar
---------------------------------------------------
java.lang.NullPointerException
        at java.util.regex.Matcher.getTextLength(Matcher.java:1127)
        at java.util.regex.Matcher.reset(Matcher.java:284)
        at java.util.regex.Matcher.<init>(Matcher.java:205)
        at java.util.regex.Pattern.matcher(Pattern.java:879)
        at org.apache.maven.plugin.PluginConfigurationException.addParameterUsageInfo(PluginConfigurationException.java:85)
        at org.apache.maven.plugin.PluginConfigurationException.buildConfigurationDiagnosticMessage(PluginConfigurationException.java:272)
        at org.apache.maven.usability.PluginConfigurationDiagnoser.diagnose(PluginConfigurationDiagnoser.java:49)
        at org.apache.maven.usability.diagnostics.ErrorDiagnostics.diagnose(ErrorDiagnostics.java:81)
        at org.apache.maven.DefaultMaven.logDiagnostics(DefaultMaven.java:693)
        at org.apache.maven.DefaultMaven.logError(DefaultMaven.java:640)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:119)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:249)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)

Renaming the field from dnamec to dnameC fixes the issue.",,,,,,,,,,,,,,,,,MNG-1351,MNG-1414,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Oct/05 04:57;lacostej;MNG-1232.diff;https://issues.apache.org/jira/secure/attachment/12711590/MNG-1232.diff","25/Oct/05 10:00;lacostej;project-1232.tar.bz2;https://issues.apache.org/jira/secure/attachment/12711593/project-1232.tar.bz2",,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28orz:",9223372036854775807,,,,,,,,,,,,,,,,,,,"18/Oct/05 06:51;lacostej;Forgot to mention: affects 2.0-RC.;;;","18/Oct/05 07:18;lacostej;Simpler/more generic test case: 

Have a Mojo with an object field (the error is not reported otherwise)
Add an non-existing property for the bean to the configuration.

E.g.

class MyMojo {
  private MyBean bean;
}
 
class MyBean {
}

Configure like:

<configuration>
  <bean>
    <notthere></notthere>
  </bean>
</configuration>

And you reproduce the issue.;;;","23/Oct/05 16:06;brettporter;I did this with the final (<archive><notthere></notthere></archive> in the assembly plugin) and got no error. Please reopen if you can still reproduce (preferably attaching test case);;;","25/Oct/05 09:57;lacostej;Investigated more. With 

class MyMojo {
  private MyBean bean;
}
 
class MyBean {
  private String fieldx;

  // getter and setter
}

Configure like:

<configuration>
  <bean>
    <fieldx></fieldx>
  </bean>
</configuration> 

The problem is reproduced only if the getter has a wrong case.
I.e.

String getFieldX() { return fieldx; }            will fail

while 

String getFieldx() { return fieldx; }

Trying to create a test case.;;;","25/Oct/05 10:00;lacostej;a plugin + a project exercing that plugin that is somewhat minimal.
modify the src/test/projects/project1/pom.xml (comment out the fieldX property, comment the other one) to reproduce the issue.;;;","26/Oct/05 04:57;lacostej;Simple thing that can fix the NPE.
Not sure why the cause is null thought. I also thought of recursing the children and add their causes (if not null) but
that didn't bring help to the user.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Recursive dependencies with exclusive bounds fail,MNG-1207,12797054,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,,gconaty,gconaty,15/Oct/05 00:37,01/Feb/06 14:44,03/Jan/22 13:13,20/Oct/05 09:59,2.0 (RC),,,,,2.0,,,Artifacts and Repositories,,,,,0,,,,"ResolutionNode.getDependencyTrail calls artifact.selectVersion(artifact.getSelectedVersion()) even w/o checking artifact.isSelectedVersionKnown().

It should perhaps have the same handling as DefaultArtifactCollector.recurse(...) which uses retrieveAvailableVersions or getAvailableVersions to then call artifact.getVersionRange().matchVersion(...)

Example:

A depends on B which depends on C

if B depends on C version (1.0,1.1)
then B resolves the dependencies fine.
However, if you try to build A, then maven tries to look for C-1.1.jar which is of course outside B's dependency version.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Oct/05 23:33;MNG-1207.diff;https://issues.apache.org/jira/secure/attachment/12711727/MNG-1207.diff",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28o87:",9223372036854775807,,,,,,,,,,,,,,,,,,,"15/Oct/05 10:16;brettporter;Garrett - is this really a 2.0 blocker for you? We expect a 2.0.1 in a reasonably short timeframe (probably 2-3 weeks depending on whether there are many more issues reported after the release).

I'm hesitant to re-roll the artifact code with the release so close without time to do sufficient testing.;;;","16/Oct/05 23:33;gconaty;Turns out the bug is when the collector tries to restrict versions from looking at previous artifacts of the same kind.  It then restricts and calls 'setVersionRange' on the current and previous artifacts.  HOWEVER, the call to setVersionRange then causes version = null, even though it was specified before as a result of the collector getting the available versions.

I still don't think ResolutionNode.getDependencyTrail could actually be called and not have the versions resolved, but the attached fix anyway just cleans up after the setVersionRange call. 

This is a pretty simple fix, though it was a tricky bug.  IMHO this ought to go into 2.0 because the bug effectively breaks any transitive dependencies that use version ranges.;;;","20/Oct/05 09:59;jvanzyl;Patch applied.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MavenEmbedder.execute() doesn't run reactor modules,MNG-1181,12793641,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jvanzyl,eu,eu,12/Oct/05 00:01,07/Apr/15 12:24,03/Jan/22 13:13,05/May/06 19:26,,,,,,2.0.5,,,Embedding,,,,,9,,,,"MavenEmbedder.execute() doesn't run reactor modules. 

I've been trying to run it with ""generate-sources"" goal, but it only build the root project.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Feb/06 10:41;jochenw;MNG-1181.tar.gz;https://issues.apache.org/jira/secure/attachment/12711607/MNG-1181.tar.gz","21/Feb/06 05:37;jochenw;MavenEmbedder2.java;https://issues.apache.org/jira/secure/attachment/12711461/MavenEmbedder2.java","15/Feb/06 19:29;jochenw;MavenEmbedder2.java;https://issues.apache.org/jira/secure/attachment/12711460/MavenEmbedder2.java",,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29c5z:",9223372036854775807,,,,,,,,,,,,,,,,,,,"15/Feb/06 10:41;jochen.wiedmann@gmail.com;Sample project demonstrating the problem. Run ""mvn package"" in the top level directory.
;;;","15/Feb/06 19:29;jochen.wiedmann@gmail.com;Attached is a file, which I do suggest as a replacement for the MavenEmbedder. When using this embedder, submodules are called fine.

I have decided against fixing the MavenEmbedder, because it is, IMO, a real mess. Not so much, because the code is bad or something similar, but because it is basically a replacement of the DefaultMaven class. However, both classes are really difficult and are doing basically the same things. IMO, they cannot, and should not, be maintained separately. A more sensible approach seems to me to use the DefaultMaven for both the usual Maven, and for embedded Mavens.

My suggestion does not resolve the problem of duplicate code. Rather it introduces new duplicates, this time between the MavenCli class and the suggested MavenEmbedder2. To resolve this, I propose the following:

- Introduce a new class, or interface, MavenCliOptions, or whatever it may be called.
- Move the methods isDebug(), getAlternatePomFile(), ... from MavenEmbedder2
  to the new class.
- Change the method MavenEmbedder2.execute(String[], File) to
  execute(String[], File, MavenCliOptions)
- Remove most code from MavenCli. The class should basically create an instance
  of MavenCliOptions and call MavenEmbedder2.
;;;","21/Feb/06 00:43;mkleint;the embedder2 class seems to be missing some functionality of the original, namely the reading of models and MavenProjects. 

can you elaborate on if/how MNG-1665 will work with your embedder2? that's a crucial functionality for my netbeans ide integration.;;;","21/Feb/06 02:09;jochen.wiedmann@gmail.com;

> the embedder2 class seems to be missing some functionality of the original,
> namely the reading of models and MavenProjects.

Yes, that's true, and I already noted that. I see three possible solutions:

- My personal favourite: Open the DefaultMaven class to provide this functionality.
  Possibly open it as protected methods only and make MavenEmbedder2 a
  subclass of DefaultMaven, which opens this.
- Copy code from DefaultMaven, or MavenEmbedder. Personally, I do not like
  this, because copying code is bad.
- Change the MavenEmbedders execute methods to work with or like the
  MavenEmbedder. I also do not like this, because it still leaves the problem
  of doing things different than the ""raw Maven"".


> can you elaborate on if/how MNG-1665 will work with your embedder2?

The test case attached to MNG-1181 doesn't check that. However, considering
that the MavenEmbedder2 really does nothing different than the command line
Maven, I see no reason to believe the it won't work.
;;;","21/Feb/06 05:37;jochen.wiedmann@gmail.com;Updated version of the MavenEmbedder2, adding the possibility to read a POM file and convert it into an instance of MavenProject.

This is still a proof of concept, and would need a lot of reengineering. However, using it, I have got a version of the Eclipse plugin with MNGECLIPSE-75 working.
;;;","21/Feb/06 05:40;jochen.wiedmann@gmail.com;Sorry, not MNGECLIPSE-75, but MNGECLIPSE-71.
;;;","21/Feb/06 21:46;jvanzyl;I apologize for not looking at these issues sooner and I do appreciate the effort and I would like to integrate some of your work but the embedder is not simply a repackaging of DefaultMaven. The intention is to also provide access/manipulation of models, artifacts and repositories. I'm not intentionally trying to duplicate the code, I was attemping to entirely decouple the embedder from the CLI notions. Eventually the embedder will be used in the MavenCli, the plugin integration testing code and the Ant tasks. I'm not trying to dupe things here intentionally.

I will start looking at integrating bits and pieces of your code, but patches and some discussion will get you further then just rewriting the embedder. It's not likely I'm going to replace it with something I'm unfamiliar with, formatted differently and working differently then I intended. I'm not trying to discourage you and gladly welcome the help but some smaller patches and dialog will get you much further.;;;","22/Feb/06 01:40;jochen.wiedmann@gmail.com;
Jason, I can follow your points, including the ""formatted differently"". This one wasn't intended, btw, I went as far as creating a special Maven formatter in my Eclipse.

However, please understand the following points:

- I am not proposing a patch. I am posting a ""proof of concept"". I am mainly asking for guidance.
- Without help, I am most possibly unable to fix the current MavenEmbedder, because it is too
  complex for me. You're the Maven expert, I am the novice. At least, I won't be able to fix it
  with a small patch.
- I do not even understand the intended lifecycle of the MavenEmbedder, the DefaultMaven,
  and the objects they are using.
- I am happy, if you decide to fix the MavenEmbedder without following my extended proposals.
  In that case I'll step aside and terminate my work on this request.

If you want me to carry on, here's my plan. Understand, that I make the steps as small as possible:

- I propose an object (MavenRequestConfiguration?), that may serve as a replacement of the CLI
  within DefaultMaven. The object will receive additional properties, as required by the
  MavenEmbedder. This first step doesn't include other changes than proposing this object.
- You split the objects properties into two categories: Those, which should be per
  MavenEmbedder instance and those, which are per request. Additionally, you should provide
  notes on using these properties, if they have lifcycle considerations, or something similar.
- The former properties are removed from the object.
- I propose a patch for DefaultMaven, the Maven interface, and the MavenCli, which makes
  the DefaultMaven use the above object (get/setMavenRequestConfiguration(), and getters/
  setters for the per embedder properties).
- You accept the patch.
- I propose a patch for the MavenEmbedder, which makes it use the DefaultMaven internally.
- You accept the patch.
- I propose a patch for the MavenCli, which makes it use the MavenEmbedder.

Changes to the above proposal are fine for me. My intention is to get this thing going. (Remember,
this is a five months old blocker!)
;;;","02/Mar/06 07:58;jvanzyl;You will want to take a look here:

http://svn.apache.org/viewcvs.cgi/maven/components/branches/maven-embedder-refactor/

The MavenCli class now uses the embedder and I've pushed a lot of the code that was in the MavenCli class into DefaultMaven. Many of your points there have been addressed and next week I'll be actively working on this code so we probably need to exchange some email or chat on IRC if you want to do some work that I will incorporate.

I'm not sure if you are subscribed to the dev mailing list but I will be sending a message there talking about incorporating what is on the branch into the trunk. 

Now to address your points above:

- Everything that goes into DefaultMaven should be couched in terms of the MavenExecutionRequest. Internally Maven should deal with a MavenExecutionRequest and the MavenSession. Anything that comes in via the CLI should be translated into a request and the Settings object that is used throughout the core should be taken out of the core.

- I've has started figuring out what is required per request to make sure that the embedder works in a multi threaded environment. So this you could certainly help me with. The embedder is pretty chopped up on the branch but you can see how the embedder is being using in the MavenCli class in the branch.

- I would be happy to work with you to figure out how to best configure the embedder.

- This I've done by allowing the configuration of the request itself. You can see exactly what's happening by looking at the MavenCli in the branch.

- I think what I've started is heading down that path.

- No patch is ever going to be accepted unless we are actually in discussion on a regular basis. That's how I can guide you, with some dialog.

- This has been done on the branch.

- Same as above regarding integrating large patches/changes.

- This has been done on the branch.

Everyday this week and on the weekend I'll be doing some work on the embedder to prepare for a presentation on the 7th of March.;;;","05/May/06 19:26;jvanzyl;The command line and embedder now work identically when executing.;;;","05/May/06 19:29;eu;Jason, what embedder version or snapshot I could use?;;;","05/Jun/06 11:11;src;I tried to use maven-embedder from SVN branch maven-2.0.x which claims to hold 2.0.5-SNAPSHOT, but that is not working. Where can I download working code which is interface-compatible with 2.0.4? 2.1 works, but it is too much refactored and I don't think there will be any release soon. I need something to try now and use official release in the near future. Thank you.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"maven searching the plugin repository and using default for POM when not found, even when a local version is installed",MNG-1107,12793768,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,brettporter,brettporter,brettporter,06/Oct/05 01:34,01/Feb/06 14:44,03/Jan/22 13:13,06/Oct/05 04:37,,,,,,2.0 (RC),,,Inheritance and Interpolation,,,,,0,,,,probably a regression from the recent change to this handling,,";06/Oct/05 04:38;brettporter;1800",,900,0,1800,200%,900,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i290g7:",9223372036854775807,,,,,,,,,,,,,,,,,,,"06/Oct/05 04:37;brettporter;fixed by setting the artifact repository back to null if we use the local repository;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MavenEmbedder.getLocalRepositoryDirectory() return null after start(),MNG-1097,12793751,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,,eu,eu,05/Oct/05 13:41,01/Feb/06 14:41,03/Jan/22 13:13,07/Oct/05 11:13,,,,,,,,,Embedding,,,,,0,,,,Method getLocalRepositoryDirectory() should allow to retrieve default locaion for local repository (probably eve without starting embedder).,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i291cf:",9223372036854775807,,,,,,,,,,,,,,,,,,,"07/Oct/05 11:13;jvanzyl;You can now use getLocalRepository() which will return an ArtifactRepository object so that:

artifactRepository.getBasedir() will yield a usable result.

You can set a local repository directory or you can rely on the settings builder to provide a default value of ~/.m2/repository;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can't access to corp. repo snapshots by mirroring central,MNG-943,12797047,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Won't Fix,brettporter,le.du.yann@gmail.com,le.du.yann@gmail.com,21/Sep/05 10:57,01/Feb/06 14:43,03/Jan/22 13:13,21/Sep/05 17:43,2.0-beta-1,,,,,,,,Inheritance and Interpolation,,,,,0,,,,"I have set a corp. repository, and want local users to use this repo to download latest corp. artifacts.

Altering the local settings.xml with
~   <mirror>
~     <mirrorOf>central</mirrorOf>
~     <url>http://repo.corp.com/maven/repository</url>
~   </mirror>
allows downloading only releases, not snapshots.

Adding a mirror for ""snapshots"" doesn't change anything.

For the moment, my workaround is  to alter each POM with these lines :
~   <repository>
~     <id>central</id>
~     <url>http://repo.corp.com/maven/repository</url>
~     <snapshotPolicy>always</snapshotPolicy>
~   </repository>
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i291fj:",9223372036854775807,,,,,,,,,,,,,,,,,,,"21/Sep/05 17:43;brettporter;you need to add a repository to your pom declaring where your corp snapshots are stored. there are no snapshots on ""central"".

You should create a single POM for the company that is the ""root"" that all projects inherit from if you want to share it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Javadoc fails to include libraries,MNG-891,12793777,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,siveton,allisonb,allisonb,14/Sep/05 05:57,01/Feb/06 14:42,03/Jan/22 13:13,14/Sep/05 07:16,2.0-beta-1,,,,,2.0-beta-1,,,,,,,,0,,,,"I am writing a simple extension to log4j that consists of a new class which extends Level to add more values.  I have zipped up the project (the pom and a single source file) and attached them.

The project compiles fine.  When I try to generate the JavaDoc for the project, JavaDoc fails to include the log4j library in the classpath which causes it to fail.",SVN revision 280814 on Linux using JRockit 1.4.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Sep/05 05:57;allisonb;javadoc-failure.zip;https://issues.apache.org/jira/secure/attachment/12711510/javadoc-failure.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i290kn:",9223372036854775807,,,,,,,,,,,,,,,,,,,"14/Sep/05 07:16;siveton;Fix in SVN;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hardcoded pom.xml name in InstallMojo.java,MNG-851,12795464,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,guest,guest,08/Sep/05 18:24,01/Feb/06 14:43,03/Jan/22 13:13,12/Sep/05 21:38,2.0-beta-1,,,,,2.0-beta-1,,,,,,,,0,,,,"Just ran the install lifecycle against a pom with a made-up name but the code eventually looks for a file called pom.xml. Here's the command I ran

m2 -f testpom.xml install

and got an exception:

Caused by: java.io.FileNotFoundException: /Users/developer/projects/java-source-repository/home/pom.xml (No such file or directory)
        at java.io.FileInputStream.open(Native Method)
        at java.io.FileInputStream.<init>(FileInputStream.java:106)
        at java.io.FileReader.<init>(FileReader.java:55)
        at org.apache.maven.project.artifact.ProjectArtifactMetadata.storeInLocalRepository(ProjectArtifactMetadata.java:82)

a quick check of the source code reveals a hardcoded reference to pom.xml in InstallMojo.execute line 92 in my version:

    public void execute()
        throws MojoExecutionException
    {
        // TODO: push into transformation
        boolean isPomArtifact = ""pom"".equals( packaging );

        File pom = new File( basedir, ""pom.xml"" );
        if ( !isPomArtifact )
...

Just renamed the file back to pom.xml again and this time the install worked.
",,"Fixed in maven-install-plugin and maven-deploy-plugin by using MavenProject.getFile() rather than constructing a new File instance using ${basedir} and ""pom.xml"".;12/Sep/05 15:08;jdcasey;3600",,7200,0,3600,50%,7200,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28p07:",9223372036854775807,,,,,,,,,,,,,,,,,,,"12/Sep/05 14:18;jdcasey;adding estimate for hours...will try to use ${project.file} instead of building up new File( ${basedir}, ""pom.xml"")

;;;","12/Sep/05 14:52;jdcasey;This impacts maven-deploy-plugin, too...will fix in both.;;;","12/Sep/05 15:08;jdcasey;see it0066;;;","12/Sep/05 15:08;jdcasey;reopening to adjust remaining time.;;;","12/Sep/05 15:09;jdcasey;fixed remaining time estimate.;;;","12/Sep/05 21:38;brettporter;fixing fix for;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Over-zealous transitive dependencies during mediation,MNG-820,12793732,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,brettporter,markh,markh,01/Sep/05 07:49,08/Feb/20 15:39,03/Jan/22 13:13,26/Sep/05 00:52,2.0-beta-1,,,,,2.0-beta-2,,,Artifacts and Repositories,,,,,0,,,,"The attached zip sets up the following project hierarchy:
{noformat}
main.war
   projecta
      shared:1.0
         librarya
   projectb
      projectc
         shared:2.0
            libraryb
{noformat}
From what I understand of dependency mediation shared:2.0 should be chosen in preference to shared:1.0, and hence libraryb should be included instead of librarya.  Using the latest m2 the main.war WEB-INF/lib contains:

projecta
projectb
projectc
shared:2.0
librarya
libraryb

Thus librarya is included when it shouldn't be.","Windows XP, Cygwin",";26/Sep/05 00:51;brettporter;7200",,7200,0,7200,100%,7200,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-4790,MNG-4768,,,,,,,,,,"01/Sep/05 07:49;markh;test.zip;https://issues.apache.org/jira/secure/attachment/12711860/test.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29buv:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"15/Sep/05 22:01;brettporter;ok, its not matching them up because of the order of processing it seems:

a:main:war:1.0 (selected for null)
  a:projectb:jar:1.0 (selected for compile)
    a:projectc:jar:1.0 (selected for compile)
      a:shared:jar:2.0 (selected for compile)
        a:libraryb:jar:1.0 (selected for compile)
  a:projecta:jar:1.0 (selected for compile)
    a:shared:jar:1.0 (selected for compile)
      a:librarya:jar:1.0 (selected for compile)

Under current rules, it should be selecting shared 1.0 (nearest), and overwriting the 2.0 obtained earlier.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
m2 site:site failes because of NoClassDefException,MNG-812,12793736,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Cannot Reproduce,brettporter,moizd,moizd,31/Aug/05 12:54,01/Feb/06 14:43,03/Jan/22 13:13,01/Sep/05 22:17,,,,,,,,,,,,,,0,,,,"site:site fails in the reports section with a root cause NoClassDefFoundError:

[INFO] ----------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ----------------------------------------------------------------------------
[INFO] Diagnosis: Error getting reports
[INFO] ----------------------------------------------------------------------------
[ERROR] Cause: 
org.apache.maven.plugin.MojoExecutionException: Error getting reports
	at org.apache.maven.doxia.DoxiaMojo.getReports(DoxiaMojo.java:1054)
	at org.apache.maven.doxia.DoxiaMojo.execute(DoxiaMojo.java:234)
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:346)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:478)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeStandaloneGoal(DefaultLifecycleExecutor.java:459)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:441)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:273)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:131)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:186)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:316)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
	at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.apache.maven.plugin.PluginManagerException: Error looking up plugin: 
	at org.apache.maven.plugin.DefaultPluginManager.getReports(DefaultPluginManager.java:432)
	at org.apache.maven.doxia.DoxiaMojo.getReports(DoxiaMojo.java:1037)
	... 17 more
Caused by: org.codehaus.plexus.component.repository.exception.ComponentLookupException: Unable to lookup component 'org.apache.maven.plugin.Mojoorg.apache.maven.plugins:maven-javadoc-plugin:2.0-alpha-1:javadoc', it could not be created
	at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:312)
	at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:417)
	at org.apache.maven.plugin.DefaultPluginManager.getConfiguredMojo(DefaultPluginManager.java:466)
	at org.apache.maven.plugin.DefaultPluginManager.getReports(DefaultPluginManager.java:424)
	... 18 more
Caused by: org.codehaus.plexus.component.factory.ComponentInstantiationException: Could not instanciate component: role: 'null', implementation: 'org.apache.maven.plugin.javadoc.JavadocReport'
	at org.codehaus.plexus.component.factory.java.JavaComponentFactory.makeException(JavaComponentFactory.java:77)
	at org.codehaus.plexus.component.factory.java.JavaComponentFactory.newInstance(JavaComponentFactory.java:62)
	at org.codehaus.plexus.DefaultPlexusContainer.createComponentInstance(DefaultPlexusContainer.java:1410)
	at org.codehaus.plexus.component.manager.AbstractComponentManager.createComponentInstance(AbstractComponentManager.java:93)
	at org.codehaus.plexus.component.manager.PerLookupComponentManager.getComponent(PerLookupComponentManager.java:48)
	at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:308)
	... 21 more
Caused by: java.lang.NoClassDefFoundError: org/apache/maven/reporting/AbstractMavenReport
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:620)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:124)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:260)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:56)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:195)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:188)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:306)
	at org.codehaus.classworlds.RealmClassLoader.loadClassDirect(RealmClassLoader.java:195)
	at org.codehaus.classworlds.DefaultClassRealm.loadClass(DefaultClassRealm.java:255)
	at org.codehaus.plexus.component.factory.java.JavaComponentFactory.newInstance(JavaComponentFactory.java:30)
	... 25 more


file containing the entire console output attached.",Win2k3. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Aug/05 12:54;moizd;site.log;https://issues.apache.org/jira/secure/attachment/12711650/site.log",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i291xz:",9223372036854775807,,,,,,,,,,,,,,,,,,,"31/Aug/05 13:28;moizd;This happened using m2 built from the latest svn trunk code ( as of today ).;;;","01/Sep/05 22:17;brettporter;please pursue an answer on maven users, reopen if necessary. we'd need more information - but it is working here.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dependency suggestion in current project should take precedence over transitive dependencies by default,MNG-787,12797360,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,brettporter,cziegeler,cziegeler,26/Aug/05 01:20,07/Sep/10 15:44,03/Jan/22 13:13,25/Sep/05 20:55,2.0-beta-1,,,,,2.0-beta-1,,,Artifacts and Repositories,,,,,1,,,,"The current dependency mechanism does not use the versions specified in the POM for compilation. It uses the most recent version from some transitive dependency. An example is the xml-apis. If you specifiy e.g. version 1.3.02 in your pom, version 2.0.2 is used comming from transitive dependencies.

Another problem is, as soon as you specify ranges for the version, you get an exception:
If you specifiy e.g. [1.3.02] or [1.3.01,1.3.02] or [1.3.02, 1.3.03] you always get the same NPE:

java.lang.NullPointerException: version was null for xml-apis:xml-apis
        at
org.apache.maven.artifact.DefaultArtifact.getBaseVersion(DefaultArtifact.java:295)
        at
org.apache.maven.artifact.DefaultArtifact.getId(DefaultArtifact.java:202)
        at
org.apache.maven.artifact.resolver.DebugResolutionListener.includeArtifact(DebugResolutionListener.java:56)
        at
org.apache.maven.artifact.resolver.DefaultArtifactCollector.fireEvent(DefaultArtifactCollector.java:275)
        at
org.apache.maven.artifact.resolver.DefaultArtifactCollector.fireEvent(DefaultArtifactCollector.java:254)
        at
org.apache.maven.artifact.resolver.DefaultArtifactCollector.recurse(DefaultArtifactCollector.java:166)
        at
org.apache.maven.artifact.resolver.DefaultArtifactCollector.recurse(DefaultArtifactCollector.java:204)
        at
org.apache.maven.artifact.resolver.DefaultArtifactCollector.collect(DefaultArtifactCollector.java:70)
        at
org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolveTra",,,,7200,7200,,0%,7200,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-1007,,,,,,MNG-4156,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i296kf:",9223372036854775807,,,,,,,,,,,,,,,,,,,"26/Aug/05 06:16;cziegeler;Retesting today without updated from the Maven svn, the NPE does not appear anymore (I guess this is due to some updates of some dependency snapshots for the compiler?). So specifying [1.3.02] or the ranges works! So I can use this as a workaround.
So the only open issue is that the version specified in the POM is not used.;;;","25/Sep/05 20:55;brettporter;this was fixed in beta-1;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
settings.xml profile activation breaks reactor,MNG-776,12793702,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Duplicate,,markh,markh,23/Aug/05 06:41,08/Feb/20 15:40,03/Jan/22 13:13,23/Aug/05 09:52,2.0-beta-1,,,,,,,,,,,,,0,,,,"The attached zip consists of:

1) Parent POM project A
2) Child JAR project B
3) settings.xml

Running m2 in the 'a' dir:

m2 -s ../settings.xml install

Results in a failed build - m2 looks for B's POM at a/b/b/pom.xml rather than a/b/pom.xml.","Windows XP, Cygwin",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-773,,,,,,,,,,,,,,,,,"23/Aug/05 06:41;markh;setup.zip;https://issues.apache.org/jira/secure/attachment/12711427/setup.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28npj:",9223372036854775807,,,,,,,,,,,,,,,,,,,"23/Aug/05 09:50;jdcasey;MNG-773 is the root cause, but MNG-776 articulates a test situation...basically any reactorized build where profiles are injected from the settings.xml;;;","23/Aug/05 09:52;jdcasey;see MNG-773;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
profiles applied to POM inheritance hierarchy will pollute child POMs with modules from parents,MNG-773,12793300,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,jdcasey,jdcasey,22/Aug/05 14:56,01/Feb/06 14:44,03/Jan/22 13:13,24/Aug/05 15:33,,,,,,2.0-beta-1,,,Inheritance and Interpolation,,,,,0,,,,"This happens because of the merge-down-and-copy-back process which merges info into the profile to keep the dominance lines straight...this was a bad move, so it should be backed out, and a new profile merge process implemented.",,"Separated profile injection logic from model inheritance assembly logic...these are similar, but the dominance-persistence relationship for merged data is reversed. It's easier to maintain them separately, to reduce the complexity of the logic.;24/Aug/05 15:33;jdcasey;21600",,14400,0,21600,150%,14400,0,21600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-776,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28raf:",9223372036854775807,,,,,,,,,,,,,,,,,,,"22/Aug/05 14:58;jdcasey;this effectively stops the use of settings-injected profiles within project hierarchies in which modules are used...;;;","23/Aug/05 09:50;jdcasey;MNG-773 is the root cause, but MNG-776 articulates a test situation...basically any reactorized build where profiles are injected from the settings.xml;;;","23/Aug/05 09:51;jdcasey;NOTE: This issue should only take place when there is a POM inheritance hierarchy where multiple POMs in the hierarchy are in the same reactor build. I'm closing MNG-776 as a duplicate now that this note is here.;;;","24/Aug/05 15:33;jdcasey;see it0058;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""provided"" scoped dependencies is not made available during tests, making the tests fail with errors.",MNG-766,12793443,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,jdcasey,elpunzalan,elpunzalan,21/Aug/05 22:10,01/Feb/06 14:42,03/Jan/22 13:13,23/Aug/05 17:11,,,,,,2.0-beta-1,,,,,,,,1,,,,,,"removed scope checks for retrieval of test classpath elements, dependencies, and artifacts from MavenProject, since 'test' is the widest of all possible scopes, and should incorporate all.;23/Aug/05 15:50;jdcasey;3600",,7200,0,3600,50%,7200,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i297k7:",9223372036854775807,,,,,,,,,,,,,,,,,,,"23/Aug/05 17:11;jdcasey;see it0057;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Empty artifacts when not using  maven-core's default lifecycles,MNG-759,12797038,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Cannot Reproduce,jdcasey,dantran,dantran,21/Aug/05 07:21,01/Feb/06 14:43,03/Jan/22 13:13,25/Aug/05 00:37,2.0-beta-1,,,,,,,,Plugins and Lifecycle,,,,,0,,,,"maven project that uses external build lifecycle out side maven-core do not see it artifact list.

in my case of using maven-native-plugin,  my dll project has a .lib dependency, therefore
the link phase will fail since the artifacts is empty (  project.getArtifacts() returns empty set)
and the linker do not have the required lib file to link to

This is  a blocking bug.


",xp,"Setup it2001 test to verify this problem, and it turned out to be a missing 

'@requiresDependencyResolution compile' 

annotation. I'm going to go ahead and checkin it2001 as a safeguard against regressions. It won't run in the bootstrap, but has a shell script to manually check it.;23/Aug/05 13:21;jdcasey;7200",,14400,0,7200,50%,14400,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Aug/05 01:20;danttran;pom.xml;https://issues.apache.org/jira/secure/attachment/12711431/pom.xml",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28u6v:",9223372036854775807,,,,,,,,,,,,,,,,,,,"22/Aug/05 01:20;dantran;Here are important  info about the attached pom.xml

  - packaging = dll  ,  i have my own lifecycle defined in my maven-native-plugin's components.xml

  - I have a dependency of type ""lib""    another lifecycle

  - in the linkerStartOption, i have to hardcode the .lib file inorder to link
     <linkerStartOption>
            ..\common\target\modiiop-windows-x86-common-7.0-SNAPSHOT.lib
      </linkerStartOption>

   - I dont have ArtifactHandler for type dll, lib.  M2 uses the lifecycle name as extention
     name when It is not able to find the artifact Handler;;;","22/Aug/05 16:57;jdcasey;should just be a matter of debugging the error using a test based on the attached POM, then fixing the problem. Not anticipating anything too crazy...;;;","23/Aug/05 12:20;dantran;Per John advice, I need to add @requiresDependencyResolution  to NativeLinkerMojo

Sorry about this.

;;;","23/Aug/05 12:21;dantran;forgot to mention, it works now.;;;","23/Aug/05 13:37;jdcasey;actually, I'm leaving the integration test out, since this is far too specific of a case to be generally applicable for regression testing.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Transitive dependency resolution ignores custom repositories,MNG-757,12793251,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,markh,markh,19/Aug/05 11:32,08/Feb/20 15:41,03/Jan/22 13:13,13/Sep/05 22:48,2.0-beta-1,,,,,2.0-beta-1,,,,,,,,0,,,,"The attached files set the scene:

* test-repo.zip - expand this into the root context of a local web server on 127.0.0.1:8080 for a test repo
* projects.zip - expand this for the projects
* settings.xml - the ~/.m2/settings.xml file

The scenario is as follows:

* test-repo contains a single artifact C
* project B depends on C
* project A depends on B & defines test-repo
* settings.xml also defines test-repo

The build process is:

* m2 install B (downloads C, installs B ok)
* m2 install A (finds B and C in local repo, installs A ok)

Now the problem is if C is then deleted the second step fails - i.e. m2 only looks in the central repo for C and not the custom test-repo, even though test-repo is defined in both A's POM and settings.xml.

This didn't happen in 2.0-alpha-3 - is this intentional?","Windows XP, Cygwin","Simply aggregating remote repositories down the transitivity line...local project repositories have precedence over those of the dependencies, and so on. This ensures that locally defined repositories can host artifacts that would otherwise be resolved from the central repository, for example. Super-POM repositories will only be appended to the end, to ensure that any other repository has the first chance to resolve it.;22/Aug/05 15:30;jdcasey;7200",,14400,0,7200,50%,14400,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Aug/05 11:32;markh;projects.zip;https://issues.apache.org/jira/secure/attachment/12711717/projects.zip","19/Aug/05 11:32;markh;settings.xml;https://issues.apache.org/jira/secure/attachment/12711508/settings.xml","19/Aug/05 11:32;markh;test-repo.zip;https://issues.apache.org/jira/secure/attachment/12711857/test-repo.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28tnb:",9223372036854775807,,,,,,,,,,,,,,,,,,,"21/Aug/05 01:28;brettporter;yeah, this is a bug. probably a regression related to recent fixes in profile merging.;;;","21/Aug/05 01:28;brettporter;btw, this is easier to test using a file:// repo than a test repo on http;;;","22/Aug/05 10:33;jdcasey;this would seem to imply that we expect dependency poms to have profiles from settings.xml merged into them...that doesn't sound right to me. The only way that a could transitively find c would be if:

1. the same set of repositories were used at all levels for dependency resolution...which would be defined in the project-to-be-built pom.xml file. This is how -alpha-3 worked.

2. we apply settings.xml profiles to all POMs we work with during the build, including dependency POMs.

If you think about the integrity of the dependency POM, these two are restatements of the same thing...modifying something that's meant to be an authoritative source of information for a graph of dependencies (the dependency and it's transitive closure).

I'm not sure it's wise to put all resolution control in the hands of your project's dependencies...so maybe it would be better to say that the project being built should provide the list of repositories used to resolve everything a la -alpha-3...? I bring this up since there was another JIRA issue filed to change that to repository-set-per-POM.;;;","22/Aug/05 10:40;brettporter;I think settings profiles should be applied to all poms - parents, deps and projects. The reason for this need to is to avoid the chicken and egg problem of a parent in a repository specified in the parent (which may happen in the project, or the dep - so needs to apply to both).

It may make sense to make the project authoratative, but that doesn't solve the chicken and egg problem either.

The other issue you refer to was to make the project repositories be searched before the parent (ie super POM), I think.;;;","22/Aug/05 11:03;markh;Not sure if the actual use-case that led to this helps, but I had:

1) project depending on Hibernate
2) Hibernate depending on JTA
3) JTA hosted on my repo

So JTA on my repo couldn't possibly be referenced by the ibiblio Hibernate POM, and so m2 needs help finding it.  Either this could come from settings.xml, or maybe even a repo-hint added to the Hibernate dependency in the top-level project's POM?

I haven't been keeping up-to-speed on the latest design discussions, so whatever you guys think as long as there's a way of achieving this.;;;","22/Aug/05 14:15;jdcasey;I think the correct solution here is to append successively deep transitive dependency POMs' repository definitions to the list being used for resolution, preserving repository uniqueness by id. This allows each project to have precedence in determining which repository a given artifact will be resolved from, while ensuring that the artifact will be resolved from somewhere...as long as those repositories are accessible.
;;;","22/Aug/05 14:24;markh;Sounds good to me.  Would higher-level POMs have precedence over transitive dependency POMs?  This would allow projects to override repositories, e.g. use an in-house repo for some dependencies rather than ibiblio (without mirroring the entirety of ibiblio).;;;","05/Sep/05 19:37;brettporter;rolled back due to MNG-836.;;;","12/Sep/05 15:10;jdcasey;what are the details of the regression caused by this fix, do we know? Do we have a test in place to prevent future regressions?;;;","12/Sep/05 18:47;brettporter;the details are in MNG-836;;;","13/Sep/05 22:21;jdcasey;I'm functionally re-adding the code that got rolled back, because I suspect that this was not the root problem. In addition, I'm adding two integration tests: the first, it0068, will verify that MNG-836 is not repeated; the second, it2001, replicates the scenario originally laid out in this issue, and verifies that it works. This last test - it2001 - is complex, and must be run manually by executing test.sh inside the it2001 directory.

I'm going to commit what I have for this, and if regressions pop up, I guess we'll fix them.;;;","13/Sep/05 22:22;jdcasey;I've worked another 3h on this issue, but I'm not at all sure how to log it properly without causing negative time estimation in JIRA...;;;","13/Sep/05 22:48;jdcasey;see it0068 and it2001;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove the dysfunctional command line arguments,MNG-755,12793701,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,kenneyw,allisonb,allisonb,19/Aug/05 09:11,01/Feb/06 14:44,03/Jan/22 13:13,08/Sep/05 10:22,2.0-beta-1,,,,,2.0-beta-1,,,Plugins and Lifecycle,,,,,0,,,,"I ran ""m2 -fae clean:clean package site:site"" on my top level package to clean up all targets, rebuild the artifacts, and generate a site for every project (I used -fae since I have a problem building the site in one sub-project).  The banner displayed when it started processing was:
[INFO] ----------------------------------------------------------------------------
[INFO] Building Maven Default Project
[INFO]    task-segment: [clean:clean, package, site:site]
[INFO] ----------------------------------------------------------------------------
even though I have a different name in the POM.

A little later, the build fails with:
[INFO] [jar:jar]
[WARNING] JAR will be empty - no content was marked for inclusion!
[INFO] ----------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ----------------------------------------------------------------------------
[INFO] Diagnosis: Error assembling JAR
[INFO] ----------------------------------------------------------------------------
[ERROR] Cause:
org.apache.maven.plugin.MojoExecutionException: Error assembling JAR
        at org.apache.maven.plugin.jar.JarMojo.execute(JarMojo.java:107)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:364)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:470)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:443)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:429)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:266)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:125)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:186)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:316)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: java.lang.NullPointerException
        at org.apache.maven.archiver.MavenArchiver.createArchive(MavenArchiver.java:238)
        at org.apache.maven.plugin.jar.JarMojo.execute(JarMojo.java:100)
        ... 16 more
which is caused by not having any sources in the project (since it is a POM project).  The build also did not run any of the modules.",SVN revision 233464 on Linux,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-720,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28ndj:",9223372036854775807,,,,,,,,,,,,,,,,,,,"19/Aug/05 09:15;allisonb;It looks like ""m2 -fn"" exhibits the same behavior.;;;","21/Aug/05 01:33;brettporter;what is the bug you are reporting here? that -fae doesn't work (ie it didn't fail at the end), or that you got a NPE in the jar building?

For the first one - try --fail-at-end. I believe that the short options don't work and will be removed before the next release
For the NPE, please report a new bug based on that (though if it is just a POM, set packaging = pom and it should work).;;;","22/Aug/05 12:38;allisonb;I wasn't sure if this was one bug or two.  I did not know if the NPE was a result of using the ""Default Maven Project"" or something different.

Using --fail-at-end instead of -fae causes the build to use the POM in the directory rather than a default POM.  I also do not get the NPE.  I guess this can be closed since the whole thing was caused by using the documented but disfunctional command line options.;;;","25/Aug/05 22:17;brettporter;renaming - basically CLI doesn't support command line arguments like ""-fae"". It needs a one letter version. I'd prefer none at all for these, but CLI doesn't support more than one of those either. Maybe the repaired cli-1.0 will work now.;;;","08/Sep/05 10:22;kenney;Fixed in svn revision 279574 by using GnuParser instead of PosixParser.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
lifecycle can end up in an infinite loop,MNG-709,12793309,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,logularjason,logularjason,07/Aug/05 08:45,01/Feb/06 14:43,03/Jan/22 13:13,17/Aug/05 15:46,2.0-beta-1,,,,,2.0-beta-1,,,,,,,,0,,,,"The pom source below used to work for alpha-3 subject to the comment about phase.  I just built maven2 from the trunk head, and AssemblyMojo.execute() no longer gets called.  If I call it from the command-line, it works fine.  Interestingly, if I uncomment the phase clause, the m2 script goes into an infinite loop.

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
           <descriptor>src/assemble/zip-source.xml</descriptor>
        </configuration>
        <executions>
          <execution>
	    <!-- Bug in alpha: phase was not defined in the mojo javadoc so we need the element below -->
            <!--phase>package</phase-->
            <goals>
              <goal>assembly</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>",linux fedora core 3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-483,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i290dj:",9223372036854775807,,,,,,,,,,,,,,,,,,,"09/Aug/05 15:58;jdcasey;is anyone working on this? thought I saw a reference to this issue and some work being done on it via the source-attachment issue...;;;","09/Aug/05 19:18;brettporter;the exclusion of phase was a misunderstanding, but the problem we have here is that it should be possible to bind the assembly mojo to the package phase, but also run it from the command line and get the package phase called. This is closely related to the artifact attachement bug comments.

While adding the cliOnly feature or similar will account for that, we should prevent infinite loops which was the other part of this bug. We should simply not rerun the second time, not throw an error.;;;","10/Aug/05 23:44;jdcasey;which one should win? the @execute phase=""package"" or the <phase>package</phase>? Since the assembly mojo declares that it needs to have the package phase completed before running, I think it would be safer to defer to the mojo developer and forget about binding it to the package phase...maybe handle it as an addendum after the package phase has been run or something...

This is vague because I'm still wrapping my brain around the problem...am I missing something?;;;","11/Aug/05 00:02;logularjason;Would that approach allow me to specify, say, <phase>generate-sources</phase> if I wanted to create some zips for inclusion into tests, etc.?

WRT your question about anyone else working on this - I'm not game to fiddle about with classes like DefaultLifecycleExecutor just yet, so I'll work on the assembly stuff, as described in #MNG-483 and #MNG-723.;;;","11/Aug/05 09:33;jdcasey;linking these to make it easier to track issues related to the assembly mojo and @execute, @cliOnly, and <phase/>;;;","11/Aug/05 09:40;jdcasey;so you're saying you would like to be able to create an assembly as part of the generate-sources phase?? I'm not sure I understand why you'd ever want to do that. I thought the premise of the assembly plugin was to repackage a completed build with it's dependencies and/or other companion files into the sort of distribution file, akin to a war or ear...is that an incorrect assumption? If you're creating an assembly during generate-sources, would it be better to separate the creation of that assembly into a separate project, then depend on that project's result?;;;","11/Aug/05 23:36;logularjason;Yes, you're right; depending on a separate dedicated project is the way to go.  For some reason, I had it in my head that maven would sweep each phase across all projects before proceeding to the next phase, but's its clear that the build system cannot work like this when dependencies are catered for.  My misunderstanding.  Maybe I should have a go at updating the lifecycle or dependency pages to make this explicit for noobs like me.  8-);;;","16/Aug/05 16:07;jdcasey;Just modified to detect whether the current mojo (the forking mojo) exists at an earlier phase of the lifecycle than the phase it's trying to execute in the forked build...then throw a LifecycleExecutionException if this is the case.

Not sure how to improve on this currently...I'd like to print a warning and adjust the build behavior to allow execution to proceed, but I'm not entirely sure how to do this safely. I'll have to keep looking.;;;","17/Aug/05 15:46;jdcasey;Fork-caller is removed from the forked lifecycle, and allowed to execute after the forked lifecycle returns. This will remove any possibility of the caller being reinvoked recursively inside of forked lifecycles.;;;","17/Aug/05 15:56;jdcasey;added a warning when it actually has to remove the mojo in this way...;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Project.getArtifacts() returns artifacts with getFile() pointing to target/classes when that project is in the reactor,MNG-692,12794508,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,kenneyw,kenney,kenney,03/Aug/05 05:05,01/Feb/06 14:43,03/Jan/22 13:13,03/Aug/05 06:30,2.0-beta-1,,,,,2.0-beta-1,,,,,,,,0,,,,"MNG-249 solves the reactor-awareness by setting the File of an Artifact to the Build.outputDirectory if the 
project is in the reactor (more or less).

This leads to problems when plugins want to copy those artifacts: they're now pointing to directories
(try the ear plugin for instance).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29akv:",9223372036854775807,,,,,,,,,,,,,,,,,,,"03/Aug/05 06:30;kenney;As it turns out, the artifacts _are_ pointing to the jars (in the target directory), 
but the maven-ejb-plugin didn't update the Artifact file for the project. 

Personally, I think it's a bad idea to give the packaging plugins that responsibility,
or even to allow them to modify that setting  (breaks abstraction layers).
The lifecycle executor should verify if the artifact (if any) exists after the 'package' lifecycle,
and update the project Artifact with the correct file.
;;;","10/Aug/05 03:00;kenney;fixed the plugins to update the project's artifact;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Crash: in source-plugin, using assembly:assembly goal, on non-SNAPSHOT project.",MNG-687,12793667,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,kenneyw,joakime,joakime,01/Aug/05 21:53,01/Feb/06 14:43,03/Jan/22 13:13,02/Aug/05 07:28,2.0-beta-1,,,,,2.0-beta-1,,,,,,,,0,,,,"When using the assembly:assembly plugin, the following Exception occurs.

java.lang.UnsupportedOperationException
        at java.util.Collections$UnmodifiableCollection.add(Collections.java:1004)
        at org.apache.maven.project.MavenProject.addAttachedArtifact(MavenProject.java:1016)
        at org.apache.maven.plugin.source.JarSourceMojo.execute(JarSourceMojo.java:106)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:361)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:378)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:351)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.forkLifecycle(DefaultLifecycleExecutor.java:437)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:373)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeStandaloneGoal(DefaultLifecycleExecutor.java:359)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:341)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:229)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:123)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:209)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:267)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:303)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:243)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:416)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:363)

Attached is an example project that shows this behaviour.

I used the commands
$ m2 clean:clean package
$ m2 assembly:assembly",2.0-beta-1-SNAPSHOT (from SVN: 20050801-1940) - linux and XP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Aug/05 21:53;joakime;assembly-unmodifiable-exception.tar.gz;https://issues.apache.org/jira/secure/attachment/12711925/assembly-unmodifiable-exception.tar.gz",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28n7z:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"10/Aug/05 03:02;kenney;modified the clone of a MavenProject to have a modifyable attachment list;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
need to be able to operate on a Maven 1 repository,MNG-666,12794990,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,jdcasey,dtoch,dtoch,27/Jul/05 14:41,05/Apr/15 22:08,03/Jan/22 13:13,24/Aug/05 22:11,2.0-alpha-3,,,,,2.0-beta-1,,,Artifacts and Repositories,,,,,0,,,,"I have an ANT script using maven antlib (alpha-3) as follows:

   ...

  <target name=""getdeps"">
    <artifact:remoteRepository
      id=""remote.repository"" url=""http://172.16.40.249/ourrepo"" layout=""legacy""/>

    <artifact:dependencies verbose=""true"">
      <remoteRepository refid=""remote.repository""/>
      <dependency groupId=""sis2"" artifactId=""sis2-common"" version=""0.1""/>
    </artifact:dependencies>
  </target>

  ...

The central repository contains only artifacts with model-3.0.0 POMs (generated by Maven 1.1)

However when executing the ANT target I get the following exception:

--- Nested Exception ---
org.apache.maven.artifact.resolver.TransitiveArtifactResolutionException: Unable to read the metadata file
  sis2:sis2-common:0.1:jar

from the specified remote repositories:
  http://172.16.40.249/ourrepo
Path to dependency:
        1) unspecified:unspecified:jar:0.0


        at org.apache.maven.artifact.resolver.DefaultArtifactCollector.recurse(DefaultArtifactCollector.java:164)
        at org.apache.maven.artifact.resolver.DefaultArtifactCollector.collect(DefaultArtifactCollector.java:66)
        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolveTransitively(DefaultArtifactResolver.java:173)
        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolveTransitively(DefaultArtifactResolver.java:199)
        at org.apache.maven.artifact.ant.DependenciesTask.execute(DependenciesTask.java:115)
        at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:275)
        at org.apache.tools.ant.Task.perform(Task.java:364)
        at org.apache.tools.ant.Target.execute(Target.java:341)
        at org.apache.tools.ant.Target.performTasks(Target.java:369)
        at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1216)
        at org.apache.tools.ant.Project.executeTarget(Project.java:1185)
        at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:40)
        at org.apache.tools.ant.Project.executeTargets(Project.java:1068)
        at org.apache.tools.ant.Main.runBuild(Main.java:668)
        at org.apache.tools.ant.Main.startAnt(Main.java:187)
        at org.apache.tools.ant.launch.Launcher.run(Launcher.java:246)
        at org.apache.tools.ant.launch.Launcher.main(Launcher.java:67)
Caused by: org.apache.maven.artifact.metadata.ArtifactMetadataRetrievalException: Unable to read the metadata file
        at org.apache.maven.project.artifact.MavenMetadataSource.retrieve(MavenMetadataSource.java:88)
        at org.apache.maven.artifact.resolver.DefaultArtifactCollector.recurse(DefaultArtifactCollector.java:151)
        ... 16 more
Caused by: org.apache.maven.project.ProjectBuildingException: Failed to validate POM for 'Artifact [sis2:sis2-common:pom:0.1]'.

  Reason(s):
  [0]  'modelVersion' is missing.

        at org.apache.maven.project.DefaultMavenProjectBuilder.processProjectLogic(DefaultMavenProjectBuilder.java:439)
        at org.apache.maven.project.DefaultMavenProjectBuilder.build(DefaultMavenProjectBuilder.java:317)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository(DefaultMavenProjectBuilder.java:220)
        at org.apache.maven.project.artifact.MavenMetadataSource.retrieve(MavenMetadataSource.java:81)
        ... 17 more


The problem is that in the class DefaultModelValidator (apparently always called when retrieving a dependency) a check is done to verify whether the element <modelVersion> is present in the POM. However for model-3.0.0 POMs this element isn't defined in the XSD!

Regards,
Davy Toch",Not of importance.,"project builder throws InvalidModelException (derived from ProjectBuildingException) when a POM is found to be missing <modelVersion/> as in the case of v3 POMs. In the metadata source, this exception is caught separately from other ProjectBuildingExceptions, and used to (a) warn of an invalid POM - ignoring for dependency resolution, and (b) create an essentially empty ResolutionGroup containing only the POM artifact. This effectively truncates the transitive resolution process for this artifact.;24/Aug/05 22:11;jdcasey;7200",,7200,0,7200,100%,7200,0,7200,,,,,,,MANTTASKS-126,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i298t3:",9223372036854775807,,,,,,,,,,,,,,,,,,,"27/Jul/05 17:51;brettporter;will handle as one;;;","27/Jul/05 17:55;brettporter;this applied to Maven proper as well, however all of the Maven 2 features that require a v4 POM will be disabled (such as transitive dependencies) for anything coming from that repo.

Basically, this means recognising v3 POMs and ignoring them with a warning.;;;","22/Aug/05 17:10;jdcasey;need to (a) allow maven-artifact to read v3.0.x poms, and (b) avoid recursion when using v3.0.x poms.;;;","22/Aug/05 17:48;dtoch;Can't you just ignore v3.0.x POM's when layout=""legacy"", meaning that you don't need a POM for the dependency in order to retrieve it?

This was already the case in Maven 1.x. Remember that there is still a large portion of jars, wars, ... that aren't created by Maven and that have no POM (BEA WebLogic jars, IBM WebSphere jars, ...). Manually creating a POM for these dependencies just in order to be retrievable by the Maven artifact handler just seems stupid.;;;","22/Aug/05 19:43;brettporter;John, please refer to my comment:
""Basically, this means recognising v3 POMs and ignoring them with a warning.""

I don't think we should worry about any on-the-fly conversion, at least right now. I would expect this also reduces the estimate?;;;","22/Aug/05 19:57;jdcasey;sorry, was moving through these a little too fast, I guess...;;;","24/Aug/05 22:11;jdcasey;see it0059;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
verifier doesn't fail test on Windows when exit code is non-zero,MNG-658,12793663,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Won't Fix,,brettporter,brettporter,27/Jul/05 01:11,08/Apr/07 18:38,03/Jan/22 13:13,08/Apr/07 18:38,,,,,,,,,,,,,,0,,,,"eg, failing tests don't get recognised as an error as long as the expected results hold true.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28ln3:",9223372036854775807,,,,,,,,,,,,,,,,,,,"27/Sep/05 19:36;brettporter;not critical to the operation of m2;;;","20/Jun/06 22:22;jdcasey;Personally, I'd like to see if we can simply replace the verifier with a maven plugin running in the integration-test phase rather than fix it.;;;","08/Apr/07 18:38;brettporter;as I understand, this wasn't fixed, but instead not fixed due to not using the verifier any more;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
examine impact of multiple repositories on metadata,MNG-639,12793634,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,brettporter,brettporter,brettporter,25/Jul/05 01:54,01/Feb/06 14:42,03/Jan/22 13:13,03/Sep/05 09:46,,,,,,2.0-beta-1,,,Artifacts and Repositories,,,,,0,,,,"recently introduced metadata could be problematic when there is more than one remote repository, as it is compared to only the single local repository copy:
- latest
- release
- plugins.xml
",,"design work;27/Aug/05 01:09;brettporter;900",";03/Sep/05 09:46;brettporter;10800",3600,0,11700,325%,3600,0,11700,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29cqf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Webapp Resources Not Available to Unit Tests,MNG-635,12793108,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Won't Fix,brettporter,rcoffin,rcoffin,23/Jul/05 17:29,01/Feb/06 14:42,03/Jan/22 13:13,24/Jul/05 17:28,2.0-beta-1,,,,,,,,,,,,,0,,,,"Unit tests that depend on resources in the webapp directory fail because those resources are not available during the test phase.  This makes it impossible to write tests using tools like HttpUnit that rely on information in web.xml file:

Ex:
InputStream webXML = GreeterServlet.class.getResourceAsStream(""/WEB-INF/web.xml"");
ServletRunner sr = new ServletRunner(webXML);","Maven version: 2.0-beta-1-SNAPSHOT

Windows XP

java version ""1.5.0_02""
Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_02-b09)
Java HotSpot(TM) Client VM (build 1.5.0_02-b09, mixed mode, sharing) ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jul/05 17:39;rcoffin;MNG-635.txt;https://issues.apache.org/jira/secure/attachment/12711574/MNG-635.txt",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29973:",9223372036854775807,,,,,,,,,,,,,,,,,,,"23/Jul/05 17:39;rcoffin;There is probably several ways to accomplish this but attached is one simple approach that I tried and got to work.  I created a Webapp plugin that works much like the resources plugin.  It has a single goal that copies resources in the warSourceDirectory to the outputDirectory.  Then I modified the components.xml of the War plugin to call webapp:resources as well as resources:resources.;;;","23/Jul/05 19:55;brettporter;I'm inclined to WON'T FIX this. this is not what classpath resources are for. Your patch would copy all those resources into /WEB-INF/classes as well - eg /WEB-INF/classes/WEB-INF/web.xml if I understand correctly.

Thanks for putting the effort into a patch though - is there some other way we can solve this? In the past I've done these as integration tests that would take the final WAR file and use that instead. See MNG-591 for how we are planning to allow that.;;;","23/Jul/05 22:05;rcoffin;I think that it is important for Maven to provide a facility to unit test all parts of an application including view components such as servlets.  For me what distinguishes unit testing form integration testing is the ability to isolate components from the rest of the system and I can see a lot of value in testing web components in isolation from the rest of the system.  And with the importance descriptors play in the correct functionality of an application bring them under the unit test umbrella is important as well.  That is why I would like to do this in the unit phase instead of integration test phase.

I see your point about the implementation I submitted in the patch though.  Is there a way that we can make webapp resources available in the test classpath and not necessarily on the runtime classpath?  I would be happy to work on a better patch if you could point me in the right direction.;;;","24/Jul/05 00:02;brettporter;the test classpath is under target/test-classes, or a goal can add additional directories to it, but the point I wanted to make here is that it is not really the usual way to access WEB-INF. Under a servlet container, you need to use getServletContext().getResource instead of getClass().getResource (which looks under WEB-INF/classes), so I think it is a good idea to behave similarly here.

Actually, I don't understand how httpunit constructs a whole context with just the web.xml file - shouldn't it need the base directory of the whole webapp?

While I usually recommend using classpath resources instead of File's so that it runs identically in an IDE, it may be better to pass the location of the webapp in to the test using a system property (http://maven.apache.org/maven2/plugins/maven-surefire-plugin/test-mojo.html).

Please let me know if I can close this.



;;;","24/Jul/05 01:34;rcoffin;Agreed that the getServletContext method is the way to go if you're running in container, but this is not the case during unit testing.

But I found a way to decouple my unit test from the web.xml altogether (by using the registerServlet method on the ServletRunner class of HttpUnit for anyone who happens to stumble upon this) so I would be ok with you closing this.  I do think it is unfortunate though that the web.xml isn't available during the test phase.  The integration-test phase is a good alternative though.

Thank you for talking through this with me...I appreciate it.;;;","24/Jul/05 17:28;brettporter;no problem, thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
report executor doesn't perform lifecycle,MNG-629,12793653,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,brettporter,brettporter,brettporter,21/Jul/05 07:46,01/Feb/06 14:43,03/Jan/22 13:13,21/Sep/05 02:03,,,,,,2.0-beta-2,,,,,,,,0,,,,"eg, for clover - it has @execute phase=""test"", but the report is run directly ignoring this. This means that the clover database is not created.",,";21/Sep/05 02:03;brettporter;18000",,21600,0,18000,83%,21600,0,18000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28x6f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
plugin prefix lookups should only be used for CLI invoked goals,MNG-608,12793147,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,jdcasey,brettporter,brettporter,18/Jul/05 18:11,01/Feb/06 14:42,03/Jan/22 13:13,09/Aug/05 14:42,,,,,,2.0-beta-1,,,Plugins and Lifecycle,,,,,0,,,,"this is a potential reproducibility problem. Because the plugin prefix lookup relies on per-user settings, it should only apply to goals run from the command line. However, goals invoked from the lifecycle mappings, for example, also use prefixes - they should be restricted to those plugins in the POM in that case.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29613:",9223372036854775807,,,,,,,,,,,,,,,,,,,"30/Jul/05 11:26;brettporter;this is down to one point in DefaultLifecycleExecutor - the binding of lifecycle goals using prefixes;;;","04/Aug/05 21:28;brettporter;proposed solution:
- add groupId:artifactId:goal syntax to those that can be resolved. This uses a discovered version as currently
- enforce the use of the 3 or 4 element goal name in lifecycle definitions
- allow the old one, but deprecate for beta-1 and remove in beta-2
;;;","09/Aug/05 14:42;jdcasey;prefix:goal is deprecated for lifecycle mappings, g:a:v:goal and g:a:goal are preferred.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
allow updates of repository metadata (currently plugins.xml),MNG-605,12793646,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,brettporter,brettporter,brettporter,18/Jul/05 17:54,01/Feb/06 14:43,03/Jan/22 13:13,03/Sep/05 19:50,,,,,,2.0-beta-1,,,,,,,,0,,,,"currently, local changes get blown away by remote updates. We need to be able to merge the changes.

This can be done by timestamping the last update of an entry. Any newer ones get updated from the remote source.

Removal of elements will require replacing with an empty element instead of just removing it, otherwise the merge process will not be able to determine if it was removed locally, or new remotely.",,"design work;27/Aug/05 01:09;brettporter;900",";03/Sep/05 19:51;brettporter;0",10800,0,900,8%,10800,0,900,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i295wn:",9223372036854775807,,,,,,,,,,,,,,,,,,,"03/Sep/05 19:50;brettporter;was part of the changes for versioning;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
new type handlers cannot be added outside of maven-core,MNG-598,12793644,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,brettporter,brettporter,brettporter,16/Jul/05 19:29,01/Feb/06 14:43,03/Jan/22 13:13,27/Jul/05 02:52,,,,,,2.0-beta-1,,,,,,,,1,,,,adding type handlers in your own plugin will not put them into the map that the lifecycle executor is using. the maps need to be merged.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-576,,,,,,MNG-481,,,,MNG-226,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29d8f:",9223372036854775807,,,,,,,,,,,,,,,,,,,"18/Jul/05 16:32;jdcasey;this is related to the design/implementation changes I made for EAR support.;;;","18/Jul/05 18:33;brettporter;this is implemented for packaging, but there are problems:
- not implemented for type
- implementation currently uses plugins.xml which is per-user configured, which is a reproducibility problem

Needs to use the plugins defined in the POM for finding them, but this introduces more issues:
- is this too onerous for a dependency type definition?
- verifying all of the plugins in the POM before building is inefficient, so it would be good to be able to point directly to the plugin that has the packaging;;;","25/Jul/05 00:54;brettporter;We don't want to have to resolve and search all
the plugins to find a missing dependency type. For this, we can add
<extensions>true|false</extensions> to the <plugin/> element, eg:

<plugin>
  <groupId>org.codehaus.plexus</groupId>
  <artifactId>plexus-maven-plugin</artifactId>
  <extensions>true</extensions>
  <configuration>
    ...
  </configuration>
</plugin>

This will indicate to the plugin manager to pre-load those plugins, and
to search it for any plexus components. When the lifecycle executor is
looking for a packaging handler, it will have to search those plugin
containers also.;;;","26/Jul/05 10:29;brettporter;packaging handlers are done (but that was the easy bit!);;;","26/Jul/05 19:00;brettporter;the type handlers will need to be loaded into the extension classloader, so I'll do MNG-226 first;;;","27/Jul/05 02:52;brettporter;the solution is a little hacky, might want to take another loook at it with the artifact refactoring
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
artifact versions not inherited ,MNG-593,12797029,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,brettporter,kenney,kenney,15/Jul/05 06:43,01/Feb/06 14:42,03/Jan/22 13:13,22/Jul/05 10:38,,,,,,2.0-beta-1,,,,,,,,0,,,,"Artifact versions are not inherited in the following case:

(using short notation:  X.pom = project-X/pom.xml)

root.pom: 
  packaging pom
  dependencyManagement: defines a version for artifact X

componentgroup.pom: 
  packaging pom
  parent pom: root.pom
  dependencies: depends on artifact X, does not define a version

component.pom:
  packaging ejb:
  parent pom: componentgroup.pom
  dependencies: none

I get a 'version cannot be null' error.

When component.pom defines the dependency itself (no version either),
and extends root.pom directly, there's no problem.

I just want to specify a common dependency in a group!

Btw, installing 'componentgroup.pom' works as expected.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i2939b:",9223372036854775807,,,,,,,,,,,,,,,,,,,"18/Jul/05 16:19;jdcasey;it0030 tests for this, and is currently disabled until this issue is resolved.;;;","22/Jul/05 10:38;brettporter;what this actually was was a dependency appearing twice in the list due to inheritence assembly and only one being populated with the defaults injector. Now ensuring the list only gets one.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[maven-plugin-mapping] error retrieving mappings when custom PluginRepository specified,MNG-592,12797131,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,jdcasey,kenney,kenney,15/Jul/05 05:48,01/Feb/06 14:42,03/Jan/22 13:13,09/Aug/05 11:12,2.0-beta-1,,,,,2.0-beta-1,,,,,,,,0,,,,"When a custom PluginRepository is specified in the pom (or a parent pom),
m2 can't load the plugins.xml. When the repository is removed, it can find it again.

It checks both repositories, and fails at the second repo, invalidating/forgetting the plugins.xml from
the first repo.

This is a major problem since now ejb/war builds don't produce the correct artifacts,
even when the plugin is specified in the pom. It seems it's not bound to the lifecycle.

[INFO] ----------------------------------------------------------------------------
[INFO] Retrieving plugins.xml (plugin mappings) for group: 'org.apache.maven.plugins'
[INFO] Retrieving plugins.xml (plugin mappings) for group: 'org.apache.maven.plugins'
[INFO] Cannot find plugins.xml (plugin mappings) for group: 'org.apache.maven.plugins' in remote repository - Using local copy.
[WARNING] Cannot resolve plugin-mapping metadata for groupId: org.apache.maven.plugins - IGNORING.
[ERROR] Nonexistent component: org.apache.maven.lifecycle.mapping.LifecycleMappingejb
[WARNING] Lifecycle mappings not found for packaging: 'ejb'. Using defaults.

[snip]

[INFO] maven-archiver: using locally installed snapshot
[INFO] [jar:jar]
[INFO] Building jar:  [snip]...


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28x8n:",9223372036854775807,,,,,,,,,,,,,,,,,,,"08/Aug/05 17:59;jdcasey;this should no longer impact the lifecycle-mapping stuff, but I'll verify that the other bit has been fixed.;;;","09/Aug/05 11:12;jdcasey;should work now, refer to it2000 for testing.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in org.apache.maven.artifact.DefaultArtifact.hashCode,MNG-590,12793648,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,,steve_l,steve_l,14/Jul/05 13:52,01/Feb/06 14:43,03/Jan/22 13:13,20/Jul/05 07:32,2.0-alpha-3,,,,,2.0-beta-1,,,,,,,,0,,,,"Getting an NPE when attempting to write a POM/. Now, an NPE in a hashCode usually means a gulf between the classes expectatoins and what fields are configured. I dont see anything obvious missing from my pom, though of course I am just learning maven. Either the hashcode operator needs fixing to handle missing data, or something upstream should fail with a meaningful error.

java.lang.NullPointerException
	at org.apache.maven.artifact.DefaultArtifact.hashCode(DefaultArtifact.java:193)
	at java.util.HashMap.hash(HashMap.java:264)
	at java.util.HashMap.put(HashMap.java:382)
	at java.util.HashSet.add(HashSet.java:194)
	at org.apache.maven.artifact.factory.DefaultArtifactFactory.createArtifacts(DefaultArtifactFactory.java:44)
	at org.apache.maven.project.DefaultMavenProjectBuilder.processProjectLogic(DefaultMavenProjectBuilder.java:266)
	at org.apache.maven.project.DefaultMavenProjectBuilder.build(DefaultMavenProjectBuilder.java:198)
	at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromSourceFile(DefaultMavenProjectBuilder.java:129)
	at org.apache.maven.project.DefaultMavenProjectBuilder.build(DefaultMavenProjectBuilder.java:117)
	at org.apache.maven.DefaultMaven.getProject(DefaultMaven.java:266)
	at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:170)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:102)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:233)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)constituent
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:303)
	at org.codehaus.classworlds.Launcher.launch(Launcher.java:243)
	at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:416)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:363)

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jul/05 13:52;steve_l;pom.xml;https://issues.apache.org/jira/secure/attachment/12711570/pom.xml",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28t6v:",9223372036854775807,,,,,,,,,,,,,,,,,,,"20/Jul/05 07:32;brettporter;avoiding NPE.

The problem is that the POM ignores all attributes, so it is effectively <dependency />, which has no group, artifact or version.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Last artifactId under project/plugins/plugin overrides project/artifactId,MNG-573,12794797,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Duplicate,,carlos,carlos,12/Jul/05 02:11,01/Feb/06 14:42,03/Jan/22 13:13,20/Jul/05 07:41,2.0-alpha-3,2.0-beta-1,,,,,,,Artifacts and Repositories,,,,,0,,,,"When calling install with this pom it gets installed under $REPO/org\apache\maven\plugins\maven-surefire-plugin\1.2.1\maven-surefire-plugin-1.2.1.pom

<project>
  <modelVersion>4.0.0</modelVersion>
  <groupId>springframework</groupId>
  <artifactId>spring-parent</artifactId>
  <version>1.2.1</version>
  <packaging>pom</packaging>

  <plugins>
     <plugin>
       <groupId>org.apache.maven.plugins</groupId>
       <artifactId>maven-compiler-plugin</artifactId>
       <configuration>
         <source>1.5</source>
         <target>1.5</target>
       </configuration>
     </plugin>
     <plugin>
       <groupId>org.apache.maven.plugins</groupId>
       <artifactId>maven-surefire-plugin</artifactId>
           <goals>
           <goal>
              <id>test</id>
              <configuration>
                 <includes>
                    <include implementation=""java.lang.String"">**/*Tests.*</include>
                 </includes>
             </configuration>
            </goal>
           </goals>
     </plugin>
   </plugins>

</project>

The bug also happens when removing the packaging tag.",m2 alpha 3 and latest from SVN,,,,,,,,,,,,,,,,,,,,,,,MNG-558,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28myf:",9223372036854775807,,,,,,,,,,,,,,,,Yes,,,"13/Jul/05 12:53;carlos;Seems that the <build> tag is missing, but m2 should throw an error of xml validation, not take that artifactId;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
surefire does not run tests,MNG-572,12794673,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Duplicate,,larry,larry,12/Jul/05 01:37,01/Feb/06 14:43,03/Jan/22 13:13,20/Jul/05 04:31,2.0-alpha-3,,,,,,,,,,,,,0,,,,"I have three unit tests, one is extending BaseTestCase, in src/test/java named *Test.java.  I haven't configured surefire or any plugins in the pom.xml. I have junit as a dependency.

When I run m2 test I see this in the console:
[INFO] [compiler:testCompile]
Compiling 4 source files to xxx

Results :
[surefire] Tests run: 0, Failures: 0, Errors: 0

m2 compiled the tests but surefire did not run any of them. Removing two of the tests makes surefire run one of the tests. And adding 
   <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <goals>
          <goal>  
           <id>test</id>
           <configuration>
             <includes>
               <include implementation=""java.lang.String"">**/*Test.java</include>
             </includes>
           </configuration>
         </goal>
        </goals>
      </plugin>
    </plugins>

Makes it run two of them, with one disabled.

","Windows 2000
JDK 1.4.2
CygWin",,,,,,,,,,,,,,,,,,,,,,,MNG-539,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28tkv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Repository migration,MNG-568,12793609,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,brettporter,larry,larry,11/Jul/05 08:25,01/Feb/06 14:43,03/Jan/22 13:13,01/Aug/05 01:51,2.0-alpha-3,,,,,2.0-beta-1,,,,,,,,0,,,,"Currently there is no tool for migrating the maven repository. repoclean which is in the sandbox is broken as this thread shows:
http://marc.theaimsgroup.com/?l=turbine-maven-user&m=111995229716446&w=2

There's a patch here:
http://marc.theaimsgroup.com/?l=turbine-maven-user&m=112002144922286&w=2

I've tested it and it seems to work.","Windows 2000
JDK 1.4.2
CygWin",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i2915z:",9223372036854775807,,,,,,,,,,,,,,,,,,,"30/Jul/05 11:12;brettporter;John talked about taking an initial crack at this (John - see patch in comment that will help start resolving the API change issues);;;","01/Aug/05 01:51;brettporter;builds now, we'll release it with beta-1;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Incorrect groupId, artifactId, version used during install",MNG-558,12794764,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,,ejit,ejit,07/Jul/05 16:15,01/Feb/06 14:43,03/Jan/22 13:13,20/Jul/05 12:13,2.0-alpha-3,,,,,2.0-beta-1,,,Artifacts and Repositories,,,,,0,,,,"When <pluginManagement> is present in pom.xml with ""pom"" packaging,
then the last plugin artifact information (groupId, artifactId,
version) is used during m2 install.

<?xml version=""1.0"" encoding=""UTF-8""?>
<project>
 <modelVersion>4.0.0</modelVersion>

 <groupId>org.example</groupId>
 <artifactId>sample</artifactId>
 <version>alpha-1</version>
 <packaging>pom</packaging>

 <pluginManagement>
   <plugins>
     <plugin>
       <groupId>org.apache.maven.plugins</groupId>
       <artifactId>maven-compiler-plugin</artifactId>
       <version>1.0-alpha-1</version>
     </plugin>
   </plugins>
 </pluginManagement>

</project>

[INFO] ----------------------------------------------------------------------------
[INFO] Building org.apache.maven.plugins:maven-compiler-plugin:pom:1.0-alpha-1
[INFO] ----------------------------------------------------------------------------
[INFO] maven-install-plugin: resolved to version 2.0-alpha-3 from
local repository
[INFO] [install:install]
[INFO] Installing C:\Development\Projects\sample\pom.xml to
C:\Documents and
Settings\jfallows\.m2\repository\org\apache\maven\plugins\maven-compiler-plugin\1.0-alpha-1\maven-compiler-plugin-1.0-alpha-1.pom
[INFO] ----------------------------------------------------------------------------
[INFO] BUILD SUCCESSFUL
[INFO] ----------------------------------------------------------------------------
[INFO] Total time: 1 second
[INFO] Finished at: Thu Jul 07 11:14:11 PDT 2005
[INFO] Final Memory: 1M/3M
[INFO] ----------------------------------------------------------------------------

However, if <pluginManagement> is removed, giving:

<?xml version=""1.0"" encoding=""UTF-8""?>
<project>
 <modelVersion>4.0.0</modelVersion>

 <groupId>org.example</groupId>
 <artifactId>sample</artifactId>
 <version>alpha-1</version>
 <packaging>pom</packaging>

</project>

then everything works as expected, as shown below:

[INFO] ----------------------------------------------------------------------------
[INFO] Building org.example:sample:pom:alpha-1
[INFO] ----------------------------------------------------------------------------
[INFO] maven-install-plugin: resolved to version 2.0-alpha-3 from
local repository
[INFO] [install:install]
[INFO] Installing C:\Development\Projects\sample\pom.xml to
C:\Documents and
Settings\jfallows\.m2\repository\org\example\sample\alpha-1\sample-alpha-1.pom
[INFO] ----------------------------------------------------------------------------
[INFO] BUILD SUCCESSFUL
[INFO] ----------------------------------------------------------------------------
[INFO] Total time: 1 second
[INFO] Finished at: Thu Jul 07 11:15:54 PDT 2005
[INFO] Final Memory: 1M/3M
[INFO] ----------------------------------------------------------------------------

It doesn't appear to be limited to ""pom"" packaging, after changing to
""jar"" packaging, the m2 install behavior is still incorrectly
influenced by the existence of <pluginManagement> in the pom.","Maven 2.0-alpha-3, Java 1.5.0_02, WinXP SP2",,,,,,,,,,,,,,,,MNG-573,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28qhj:",9223372036854775807,,,,,,,,,,,,,,,,,,,"20/Jul/05 07:42;brettporter;as with MNG-573, it is a missing <Build> section;;;","20/Jul/05 09:58;brettporter;this should have been fixed in the last release, but it doesn't appear to be applied;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
POM XSD and site doco out of sync and both may be out of sync with code,MNG-555,12793594,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,brettporter,andyglick,andyglick,07/Jul/05 08:25,01/Feb/06 14:42,03/Jan/22 13:13,05/Oct/05 21:58,2.0-alpha-3,,,,,2.0 (RC),,,POM,,,,,4,,,,"It looks as if the XML schema is out of sync with the POM documentation page and both may be out of sync with the code.

The following fragment from Plugin type's definition on the POM documentation page does not appear in the published XSD:

http://maven.apache.org/maven2/maven-model/maven.html

<executions>
  <pluginExecution>
    <id/>
    <phase/>
    <goals/>
    <inherited/>
    <configuration/>
  </pluginExecution>
</executions>

Maven 2 XSD http://maven.apache.org/maven-v4_0_0.xsd

In addition, in a post from the Maven User mailing list the following fragment was reported to work, and it matches neither of the published formats:

<executions>
  <execution>
    <goals>
      <goal>sablecc</goal>
    </goals>
  </execution>
</executions>

http://marc.theaimsgroup.com/?l=turbine-maven-user&m=112064009313457&w=2
","Win 2K, Java 1.4.2 & Java 1.5.0",,,1800,1800,,0%,1800,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29bpr:",9223372036854775807,,,,,,,,,,,,,,,,,,,"03/Oct/05 08:18;jrduncans;Additionally, what the documentation (and code) currently state should be <reporting>, the XSD file currently specifies should be <reports>;;;","04/Oct/05 13:10;davesag;i just hit this problem in my project.  have been trying to bind checkstyle to the test phase so that the tests will fail if checkstyle reports errors.

so far this has proved impossible with the beta-2 codebase.

my valid POM says
<build>
    <plugins>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
           <configuration>
                <propertiesFile>checkstyle-src.xml</propertiesFile>
                <failsOnError>true</failsOnError>
            </configuration>
            <goals>
                <goal>
                    <id>test</id>
                 </goal>
            </goals>
        </plugin>
    </plugins>
</build>

which is validated by my fancy pants xml tool (Turbo XML - it's sluggish but neat)

but the spec mentions all this <executions><execution>...</...> stuff in some places and <executions><pluginExecution>.. in others.

i tried all manner of things but the only valid combinations i found just give me deprecation warnings and blow.

please keep it simple is all i ask - why deprecate putting the goals up there anyway?  it's easy and it worked.

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DefaultPluginManager does not take into account parameters defined in a custom lifecycle for report mojos,MNG-531,12794444,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Duplicate,,vmassol,vmassol,27/Jun/05 03:52,01/Feb/06 14:42,03/Jan/22 13:13,21/Jul/05 07:56,2.0-alpha-3,,,,,,,,Plugins and Lifecycle,,,,,0,,,,"I have a mojo with some required parameters that are provided by a custom lifecycle. When DefaultPluginManager.getReports() gets exectued it calls checkRequiredParameters() which reports missing parameters even though they are provided by the custom liecycle:

[INFO] [site:site]
[INFO] maven-clover-plugin: using locally installed snapshot
[INFO] ----------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ----------------------------------------------------------------------------
[INFO] Diagnosis: Error getting reports
[INFO] ----------------------------------------------------------------------------
[ERROR] Cause:
org.apache.maven.plugin.MojoExecutionException: Error getting reports
        at org.apache.maven.doxia.DoxiaMojo.getReports(DoxiaMojo.java:797)
        at org.apache.maven.doxia.DoxiaMojo.execute(DoxiaMojo.java:203)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:401)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:169)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeStandaloneGoal(DefaultLifecycleExecutor.java:150)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:133)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:103)
        at org.apache.maven.DefaultMaven.processProject(DefaultMaven.java:261)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:180)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:269)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:303)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:243)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:416)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:363)
Caused by: org.apache.maven.plugin.PluginParameterException: Invalid or missing parameters: [Mojo parameter [name: 'cloverDatabase
'; alias: 'null'], Mojo parameter [name: 'cloverOutputDirectory'; alias: 'null']] for mojo: org.apache.maven.plugins:maven-clover-
plugin:1.0-SNAPSHOT:instrument
        at org.apache.maven.plugin.DefaultPluginManager.checkRequiredParameters(DefaultPluginManager.java:764)
        at org.apache.maven.plugin.DefaultPluginManager.getConfiguredMojo(DefaultPluginManager.java:527)
        at org.apache.maven.plugin.DefaultPluginManager.getReports(DefaultPluginManager.java:457)
        at org.apache.maven.doxia.DoxiaMojo.getReports(DoxiaMojo.java:770)
        ... 17 more",,,,,,,,,,,,,,,,,,,,,,,,MNG-530,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i2930n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Non-report mojos are added by DefaultPluginManager.getReports(),MNG-530,12793572,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,brettporter,vmassol,vmassol,27/Jun/05 03:49,01/Feb/06 14:43,03/Jan/22 13:13,21/Jul/05 07:15,2.0-alpha-3,,,,,2.0-beta-1,,,Plugins and Lifecycle,,,,,1,,,,"I have a plugin (clover) that have both ""normal"" mojos and report mojos. getReports() adds all of them. There is a todo in the code to fix that too.",,,,,,,,,,,,,,,,,MNG-531,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29c6v:",9223372036854775807,,,,,,,,,,,,,,,,,,,"28/Jun/05 02:06;evenisse;I added a test in site plugin for check objects return by getReports;;;","28/Jun/05 02:53;vmassol;cool but should'nt getReports() be modified to return only reports (as its name implies)?;;;","28/Jun/05 03:00;evenisse;yes, but we need to do some refactoring in core (see MNG-386). Actually, maven-reporting is a runtime dependency and I don't want to change it to compile scope;;;","21/Jul/05 01:58;brettporter;this is easily fixed now;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
plugin version prompting,MNG-498,12793552,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,brettporter,brettporter,21/Jun/05 06:51,01/Feb/06 14:44,03/Jan/22 13:13,21/Jun/05 22:28,,,,,,2.0-alpha-3,,,Plugins and Lifecycle,,,,,0,,,,"I pressed ENTER with no input on the prompt for a plugin, and it ended up in the rejected versions. The default appears to be Yes to use it, which is what I'd expect.

In addition, the bootstrap should blow away the plugin registry, or at least ignore it.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28vrj:",9223372036854775807,,,,,,,,,,,,,,,,,,,"21/Jun/05 20:35;brettporter;this is still happening for me after an update and bootstrap.

Group ID: org.apache.maven.plugins
Artifact ID: maven-pmd-plugin

Detected (NEW) Version: 2.0-alpha-1-SNAPSHOT

Would you like to use this new version from now on? ( [Y]es, [n]o, [a]ll, n[o]ne )

[INFO] NOT updating plugin version to 2.0-alpha-1-SNAPSHOT
[WARNING] Cannot add rejectedVersion entry for: 2.0-alpha-1-SNAPSHOT.


I get that every run. Any ideas?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"add backwards compatibility for the local repository setting, with a deprecation warning",MNG-487,12793532,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,brettporter,brettporter,18/Jun/05 03:15,01/Feb/06 14:43,03/Jan/22 13:13,18/Jun/05 17:38,2.0-alpha-3,,,,,2.0-alpha-3,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28pqn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
sort out artifact attachment,MNG-483,12793534,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,brettporter,brettporter,17/Jun/05 04:03,01/Feb/06 14:42,03/Jan/22 13:13,17/Aug/05 14:33,,,,,,2.0-beta-1,,,,,,,,0,,,,"currently, there is an attachArtifact call inside the plugin building the attachment. It imposes a m-a and m-p dependency, as well as an artifactFactory requirement to be able to construct the artifact to attach.

sort out
- if there is an easier way to achieve this
- how to retain the default source binding, but also how to turn it off
- how to make the source binding happen only on ""release"" (bear in mind people may not be using the release plugin... a profile was the original idea)
- how to bind assembly similarly

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-709,,,,,,MNG-427,,,,,"14/Aug/05 09:24;logularjason;assembly-050814-1.zip;https://issues.apache.org/jira/secure/attachment/12711577/assembly-050814-1.zip",,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i292kv:",9223372036854775807,,,,,,,,,,,,,,,,,,,"05/Aug/05 01:02;brettporter;I think the current code attachment will suffice for now.

I think removing the SNAPSHOT check and letting users add a release profile that the release plugin always uses (but that they can use too) is a good way to do this.

I'm not yet sure how to enable the source binding by default, and how to disable it once enabled. Thoughts?;;;","05/Aug/05 01:06;brettporter;tricky thing to watch out for here:

assembly:assembly has an @execute phase=""package"", but what we want is to bind it to package and have it run after the normal packaging. We will end up running packaging twice. Hmmm.

;;;","07/Aug/05 01:11;brettporter;1) Jason Grant is looking at implementing the attaching of artifacts during assembly:assembly which is a part of this

2) on my ""tricky bit"" comment above, this can probably be resolved by having that be @execute phase=""package"" cliOnly=""true"" (where cliOnly is a new construct indicating the goal had to be called explicitly to trigger it, instead of during the lifecycle for package). This hearkens back to ""reverse lookup of the lifecycle for a goal"", so should review that issue first to see whether there are other reasons to beware of here.;;;","09/Aug/05 11:55;jdcasey;I'm not sure I have enough background on this issue to keep up.

1. How would you activate a profile that introduces the attachment in the case of the release plugin?

2. What do you mean by disabling the source binding once enabled, and in the case of enabling it by default are you talking about some sort of POM addition or something? What's the issue here, exactly?

3. What SNAPSHOT check are you referring to? Determining whether to attach the source artifact based on snapshot vs. not?

4. I like the cliOnly annotation idea, and I think it may have more general applicability.;;;","09/Aug/05 20:38;brettporter;1) I was thinking a property or ID documented and used by the release plugin specifically for that purpose

2) I want it possible to have the source binding enabled by default, and make it possible to disable it easily from a pom, but this isn't how inheritence has tended to work

3) currently in the source plugin it only generates if it is not a snapshot (as I think it only makes sense to enable this by default as part of the release, actually, not for snapshot generation and normal builds)

4) ok, let's go with that. I tried alternatives and kept coming back to it.;;;","10/Aug/05 14:34;jdcasey;1. Okay, I get it now...that's easy enough to handle.

2. What about having something like:

<project>
  ...
  <build>
    ...
    <attachments>
      <source>true</source>
    </attachments>
  </build>
</project>

in order to turn on/off source attachments? the values in the attachments stanza could be a free-form DOM or somesuch, with the maven-source-plugin checking for ${project.buildAttachments}.isEnabled( ""source"" ) or somesuch...and the inheritance assembler could do a DOM merge with local-wins for the child to override the value in the super-pom. WDYT?

3. I'd agree that maybe the super-pom should have a profile inline that specifies the source plugin, and is activated by -DsourceArtifact=true or somesuch. Then, we get away from checking for -SNAPSHOT, and only releases and very explicit usages would activate that profile.

4. will do. Is someone already working on this part (or on the assembly mojo's lack of execution in the package phase)?;;;","10/Aug/05 23:46;logularjason;A bit of background with regard to Brett's mention of me looking at the attachment of artifacts, above.

I've been using assembly to produce zip files, and asked questions on IRC about how best to get these across to the local repo so that other project could depend on them.  If I understand correctly, Brett suggested an enhancement to AssemblyMojo that will attach all assemblies to the project as artifacts.  Then, when the project is installed, these artifacts will wind up in the local repo.

There was some talk of only doing this if the project packaging was of [new] type ""assembly"", but I think we agreed to do it whatever the packaging is (see below).  I'm happy to have a go at this - I'll build it on top of my contribution sent as a patch in http://jira.codehaus.org/browse/MNG-723 if other folk agree. 

So just to be clear, my contribution to this issue has quite limited scope.  I'm too green to understand some of the content above.

-----------------------

(15:58:29) jasong: [junk snipped] just thinking ahead though - I was going to modify AssemblyMojo to simply attach each archive to the project.  Is that a reasonable start, or should I be considering what the project's packaging is?
(16:05:05) brett: jasong: attach away! That's great, because then anyone generating an assembly (even for a jar) will be able to install/deploy it. Thanks!;;;","11/Aug/05 09:33;jdcasey;linking these to make it easier to track issues related to the assembly mojo and @execute, @cliOnly, and <phase/>;;;","14/Aug/05 09:24;logularjason;I've made the change described in my comment above.  Hope it finds its way into svn soon.

Note that this attachment builds on the AssemblyMojo that was contributed in #MNG-723 (the new unpack goal).  I'll make a note there too.

I still intend to contribute an integration test for this in the near future.;;;","14/Aug/05 20:11;brettporter;reponses to http://jira.codehaus.org/browse/MNG-483#action_44258

1) cool

2) how about just having an ""attach"" parameter on each mojo that can do it? Now that I think about it, that seems much easier.

3) this should tie into (1). So (2) would always default to false, then the super POM would have a profile with the release ID that enables sources and javadocs. I'm almost inclined to leave this out and make people specify it, but put it in the archetypes...

4) I think Jason's patch takes care of this?
;;;","14/Aug/05 23:07;logularjason;Re (4): My patch does *not* cater for the cliOnly idea; it simply attaches all assemblies as project artifacts as described in #action_44289 above.  I'm not game to start making changes to the core lifecycle algorithms until I graduate from novice status!;;;","14/Aug/05 23:10;brettporter;oops, I was looking at the 4th point at the top... sorry!;;;","15/Aug/05 22:57;logularjason;Would you like me to check my enhancements in to svn?  I notice that Daniel Krisher has patched the assembly plugin off the trunk, over in #MNG-735.  He is probably unaware of the 'unpack' work (#MNG-723) and I think that Daniels directory patch will have implications for automatic addition of artifacts, as described here; i.e. we probably don't want to add a directory as a project artifact, right?;;;","15/Aug/05 23:17;jdcasey;I've already applied this patch locally...I'll check it in soon, when I can get a good build. Then, we can go from there wrt MNG-735.;;;","16/Aug/05 13:24;jdcasey;cliOnly annotation parameter has been changed to @requiresDirectInvocation to reflect potential embedded mode, and to act as a flag like @requiresProject does.;;;","17/Aug/05 07:47;brettporter;I am getting an extra artifact on normal jar projects, with -artifactClassifier.artifactExtension on the end.;;;","17/Aug/05 14:33;jdcasey;see it0051 and it0052 (which I will be creating now);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
unable to override the default central repository,MNG-479,12793517,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,elpunzalan,elpunzalan,16/Jun/05 20:05,20/Aug/10 08:02,03/Jan/22 13:13,22/Aug/05 16:02,2.0-alpha-2,,,,,2.0-beta-1,,,Plugins and Lifecycle,,,,,2,,,,"Adding to my pom.xml:
....
    <repositories>
        <repository>
            <id>central</id>
            <name>custom repository</name>
            <url>http://maven.company.com/maven2</url>
        </repository>
    </repositories>
....

did not override the central repository but instead uses the above configured repository as backup/mirror.",WinXP,"just verifying that MNG-757 fix also fixed this one...it0054 should do that.;22/Aug/05 16:03;jdcasey;3600",,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-4769,,,,,,,,,,,"20/Jul/05 06:08;rahul;DefaultModelInheritanceAssembler-with-updated-JUnitTest.diff;https://issues.apache.org/jira/secure/attachment/12711642/DefaultModelInheritanceAssembler-with-updated-JUnitTest.diff","20/Jul/05 05:38;rahul;DefaultModelInheritanceAssembler.diff;https://issues.apache.org/jira/secure/attachment/12711501/DefaultModelInheritanceAssembler.diff","26/Jul/05 10:31;kenneyw;it0042.tgz;https://issues.apache.org/jira/secure/attachment/12711430/it0042.tgz",,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28qt3:",9223372036854775807,,,,,,,,,,,,,,,,,,,"17/Jun/05 04:06;brettporter;when speaking to Jason we came to the conclusion that this shouldn't be allowed, but we need to review and then document and do a failure in this instance instead of the current non-determinate behaviour.;;;","12/Jul/05 18:22;jdcasey;Actually, I disagree. I believe that this could be a very useful feature in certain circumstances. For example, if a company wishes to have ultimate control over what is and isn't used in their projects (whether for security, IP, or other reasons), then a logical first step might be to run m2 in an isolated environment and never access the default central repository. In this case, they would even mirror those artifacts found on ibiblio that they want to use - perhaps after somehow vetting them for security or IP concerns. If we disallow overriding of the central repository, then the best experience they can expect is to have error after error in their build process because they have a firewall or router that blocks connections to ibiblio.

There are perfectly valid use cases for not using the default central repository.;;;","20/Jul/05 05:38;rahul;Minor patch. Haven't tested as the latest svn build is broken. ;;;","20/Jul/05 06:08;rahul;Please use this one. Tested along with updated unit test. ;;;","22/Jul/05 00:24;brettporter;applied, thanks!;;;","26/Jul/05 10:29;kenney;The patch didn't fix it, see attached integration test.;;;","26/Jul/05 10:31;kenney;An integration test using projecthelp:effective-pom to see if the central repository has been overridden.;;;","27/Jul/05 01:21;brettporter;patch was back to front, ensuring the parent always won (including the test case).

reversed - fixed.;;;","04/Aug/05 02:35;kenney;Still doesn't work when specified in either the pom or the settings.xml.
It seems only direct dependencies of the project are resolved in the overrided repo's.
As soon as an indirect dep is found the super-pom seems to be the parent of that indirect dep's pom,
effectively erasing the override. This is even the case when override repo's  are specified in settings.xml.
The closest I got to overriding is specifying a mirror, but that doesn't work for snapshot repo's, so some snapshots cannot be found.;;;","10/Aug/05 14:49;jdcasey;I've been rethinking this one a little bit, and I'm not sure we should allow redefinition of repositories. The problem is the intention of doing this: what you're really trying to achieve is isolation from the public repositories, right? Otherwise, why redefine the 'central' repository? So, if you're doing that, you really want your overridden repository to be used by everything in your transitive dependency graph. However, since POMs must have the ability to state their own build environment - including the repositories used to track down their dependencies - they must resolve using a repository list independent of the project being built...which means that the overridden 'central' repository is reverted to the one specified in the super-pom for transitive deps. This is what Kenney is describing above.

I believe what a user would be actually trying to achieve is mirroring of the central repository in this case. Currently, this is possible using the settings.xml, which can also be configured at the global installation level. Not ideal if each developer workstation has a separate install of maven, but maybe ok as a first step...

I think we should actively warn if a user tries to override pre-existing repositories, and drop the override. We can tell them to use the mirror functionality instead.;;;","14/Aug/05 01:45;brettporter;honestly, I think we should get rid of id's altogether and start keying by the url, with hostname as a generalisation.

We should add a settings element that specifies whether the default repositories are used - I don't know if a project ever really needs to knock them out itself (besides, its transitive deps are going to go right back there...)
;;;","15/Aug/05 10:41;jdcasey;Will we retain the mirroring functionality, and just identify mirror-master relationships by the master's URL, then? That seems like a pretty good way to do things, except for one lingering problem: authentication. We're currently keying in on the repository id in order to lookup authentication info out of the settings.xml...if we go by full URL, there will be a lot of duplication. I suppose this is where you're talking about the hostname being used?;;;","21/Aug/05 02:11;brettporter;I don't want this bug to track the changes in IDs - there is a separate bug for that already.

but yes, key based on URL, authenticate based on the hostname part of the URL and the protocol used.

That's probably not rich enough. I'd like to think about it some more. We might live with id's for v2.0;;;","22/Aug/05 15:48;jdcasey;updating the original estimate to reflect the time needed to setup the test and verify the results. This has been fixed by the fix for MNG-757. Will close as soon as it's verified.;;;","22/Aug/05 16:02;jdcasey;added integration test under it0054.

This has been obsoleted by the fix for MNG-757;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
site:deploy only partially deploys site,MNG-476,12797479,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,brettporter,le.du.yann@gmail.com,le.du.yann@gmail.com,16/Jun/05 06:47,06/Apr/15 01:53,03/Jan/22 13:13,19/Aug/05 01:04,2.0-alpha-2,,,,,2.0-beta-1,,,,,,,,0,,,,"I have forged a site in target/site (since site:site doesn't work yet, see http://jira.codehaus.org/browse/MNG-389). Here is what I get when I try to deploy it : log1.txt

When I look in //server/home/user, the directory www/docs/foo is created, but it's either empty, either incomplete (it depends).

My guess is that these two commands :
   cd /home/user/www/docs/foo/;unzip -o site6665.zip
   rm  /home/user/www/docs/foo//site6665.zip
were running concurrently, and the ZIP file was deleted before unzip was finished.

To check this, I have tried to pause the process at different points, and here is the result : log2.txt

I've tried to check out the Maven source code to fix and build it at my place, but I got a lot of error messages at compile-time, so I gave up :)

Here is the fix that I would have tried (I didn't make a diff since I'm not sure of the fix) : fix.txt","Windows XP for local run
IBM AIX for deployment server",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-1938,,,,,,WAGON-169,,,,,,,,,,,"08/Jul/05 11:11;MNG-476.txt;https://issues.apache.org/jira/secure/attachment/12711638/MNG-476.txt","16/Jun/05 06:47;fix.txt;https://issues.apache.org/jira/secure/attachment/12711422/fix.txt","16/Jun/05 06:47;log1.txt;https://issues.apache.org/jira/secure/attachment/12711421/log1.txt","16/Jun/05 06:47;log2.txt;https://issues.apache.org/jira/secure/attachment/12711368/log2.txt",,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28uxz:",9223372036854775807,,,,,,,,,,,,,,,,,,,"17/Jun/05 21:44;brettporter;applied. I will file a bug to investigate in Wagon, as it may be symptomatic of not properly waiting for a command to finish,;;;","05/Jul/05 05:12;le.du.yann@gmail.com;Tried again with alpha3 and got the same thing. I got the following log :

Executing command:  cd /var/www/html/maven/site/COMMON/common-framework/;unzip -o site32070.zip; rm  /var/www/html/maven/site/COMMON/common-framework//site32070.zip

... but the site is still incomplete. I am rather lost... Must be something in our system here.;;;","05/Jul/05 06:52;evenisse;We have rollback your patch because in some case, it was silently failing.

it's pehaps a problem on your system. Can you try find it and provide a patch?;;;","05/Jul/05 07:09;kenney;I've got the same issues and concurrency could very well be the cause.
The silent failing of previous commands can be avoided by using '&&' instead of ';'.

So:

cmd = "" cd "" + basedir + "" && "" + unzipCommand + "" "" + zipFile.getName() + "" && "" + ""rm  "" + basedir + ""/"" + zipFile.getName() + ""\n"";

(&& only executes next command if previous command's exit code was 0). This assumes a UNIX like remote system,
though the 'unzip' utility isn't readily available on windows either so I guess this isn't a problem?;;;","08/Jul/05 11:10;le.du.yann@gmail.com;I think I've found a solution and need to reopen the issue to attach the patch.;;;","08/Jul/05 11:11;le.du.yann@gmail.com;If it wasn't executed on Unix, 'rm' would fail anyway... :)

&& didn't solve the issue. Moreover, it seemed to be a problem in cases when unzip gave a warning like "" warning:  site53426.zip appears to use backslashes as path separators "" (did it exit with a different code or... ? )

Anyway, I solved the issue in a clumsy - yet efficient :)  - way : redirecting the standard output of the unzip command seems to ""force"" the system to wait for command termination :
unzip site53426.zip > output.txt

I don't know if such a patch is OK for you, but here's the diff...;;;","13/Jul/05 08:14;jvanzyl;2.0-alpha-3 has been released already;;;","04/Aug/05 12:16;brettporter;problem could be anything, but it isn't working at all right now. Maybe it doesn't support multiple commands on a single line.

We need to fix the ChannelExec code to properly handle the i/o streams, then check the exit status and the err stream;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
multiple <execution/>'s with no goals not considered when running a goal directly from the CLI,MNG-472,12793892,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Won't Fix,,jdcasey,jdcasey,14/Jun/05 11:18,01/Feb/06 14:44,03/Jan/22 13:13,16/Jun/05 02:49,,,,,,,,,Plugins and Lifecycle,,,,,0,,,,"assume you specify a plugin in the pom with multiple <execution/> sections, each containing configurations.

It should be possible to directly invoke a goal within this plugin, and have that goal run once per execution, despite the fact that the goal is not explicitly specified in the <execution/>.

This is not the case now.

Workaround: specify the goal for each execution in which you want it to run.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28t0f:",9223372036854775807,,,,,,,,,,,,,,,,,,,"14/Jun/05 11:19;jdcasey;upgrading to Critical priority, since this will affect the way this functionality is used.;;;","14/Jun/05 18:05;brettporter;John, I don't understand - can you give an example?

I thought we talked about this as a nice to have, not something critical - I'd really like to see an example of what you are thinking of.;;;","14/Jun/05 21:53;jdcasey;My main concern here is consistency with existing plugin functionality.

For example, if I used 'm2 surefire:test' directly, and I'd added a <plugin/> for surefire with some configuration like such:

...
<build>
  <plugins>
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-surefire-plugin</artifactId>

      <configuration>
        <test>**/SomethingTest*</test>
      </configuration>
    </plugin>
  </plugins>
</build>
...

then I would expect the 'test' goal invocation to pickup the value for ${test} without needing to add a <goals/> stanza to the plugin definition.

In the same way, if I had this:

...
<build>
  <plugins>
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-surefire-plugin</artifactId>

      <executions>
        <execution>
          <id>test1</id>
          <configuration>
            <test>**/SomethingTest*</test>
          </configuration>
        </execution>

        <execution>
          <id>test2</id>
          <configuration>
            <test>**/SomethingElseTest*</test>
          </configuration>
        </execution>
      </executions>
    </plugin>
  </plugins>
</build>
...

and I executed 'm2 surefire:test', I would expect it to pickup both executions and run 'test' twice, regardless of the fact that I didn't configure the <goals/> stanza in each execution.

Maybe this is incorrect behavior, but I listed this as critical as it struck me as potentially inconsistent - and something likely to popup in a bug report if we didn't talk about it and/or document it. So I filed this to make sure we talked about it.
;;;","14/Jun/05 22:16;brettporter;for the first one: most definitely.

for the second: definitely not :)

I'd see an execution on the command line as a theoretical execution element of its own, so the configuration in the plugin should apply, but not that of any individual execution. It certainly should not run twice.

Do you agree?;;;","15/Jun/05 06:34;jdcasey;even if the that specific goal has been provided in one or more execution sections? What if that goal has no phase binding? It will never be executed multiple times, in that scenario.

Are we saying that only mojos with @phase are eligible for mulitple execution?

I'd expect that if I told it to run multiple times (explicitly, through specification in <goals/>) then it should do that when I invoke it drectly from the command line.

I do agree that unless it is specifically in a <goals/> for an execution, it should NOT be implied...after all, who's to say which executions we meant it to run with? We could easily provide an execution (using full goal specification) where that goal was excluded. However, if the goal is listed in multiple execution sections, I think we have to run it multiple times even when it's directly invoked...;;;","15/Jun/05 11:50;brettporter;IMO, executions only apply to mojos with a phase binding. It's all about the lifecycle. This has nothing to do with the command line.

basically, the command line is a one goal lifecycle, so the executions have nowhere to bind, and so they are separate. The general plugin configuration is picked up, however - just not any of the exec. config.

Maybe, looking back, the executions name is misleading, because two executions don't actually mean that. It is two different configurations of a goal, bound to the one lifecycle.

Hopefully I can polish off the lifecycle doc early tomorrow, and that will clear it up.;;;","16/Jun/05 02:49;brettporter;the lifecycle doc has clarified this. Possibly the only outstanding item is whether to rename executions...;;;","13/Nov/05 10:05;chisisi;one note on this issue..

if you specify the <phase> in the execution it will not process multiple <execution> elements using the default lifecycle (ie, mvn install)...the plugin declares the phase and the plugins can't mention the phase, even if it is the same one since that causes only the first one to be executed..;;;","13/Nov/05 17:46;brettporter;Jesse - is that a bug or something that needs to be documented?

It'll get lost in this closed issue, so please either file a new issue or create a doc (with an example, as I have no idea what you are talking about here pre-coffee :);;;","19/Nov/05 11:52;chisisi;brett - I haven't put it together enough to think of it as a bug or not...  or to warrent its own ticket really.

in essense, if a mojo has a @phase specificed in the class lvl javadoc, and that mojo is used in multiple executions and you specify the <phase> in the execution, multiple executions will not occur, even if the <phase> is set to the same as the @phase in the mojo itself...remove the <phase> from the execution and it multiple of them will execution.

I'll play with this a bit and see about opening an issue or just leaving this little trace here...worst case if ought to be mentioned somewhere as a potential gotcha;;;","21/Nov/05 00:15;brettporter;yes, sounds like a gotcha to document;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
site:site Exception,MNG-389,12797026,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,jvanzyl,thomas.vdvelde,thomas.vdvelde,14/May/05 02:51,07/Apr/15 12:25,03/Jan/22 13:13,14/May/05 20:57,2.0-alpha-2,,,,,2.0-alpha-3,,,,,,,,0,,,,"I've build a skeleton project with 

m2 archetype:create -DgroupId=org.maven.m2 -DartifactId=Maven2

Then ran site:site for the generated project.

Result:
$ m2 site:site
[INFO] -------------------------------------------------------------------------
---
[INFO] Building Maven Quick Start
[INFO] -------------------------------------------------------------------------
---
[INFO] maven-jar-plugin: resolved to version 2.0-alpha-2 from local repository
[INFO] maven-site-plugin: resolved to version 2.0-alpha-1 from local repository
[INFO] [site:site]
[INFO] -------------------------------------------------------------------------
---
[ERROR] BUILD ERROR
[INFO] -------------------------------------------------------------------------
---
[ERROR] Cause:
org.apache.maven.plugin.MojoExecutionException: Error during site generation
        at org.apache.maven.doxia.DoxiaMojo.execute(DoxiaMojo.java:181)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPlugi
nManager.java:415)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.processGoals(Defa
ultLifecycleExecutor.java:169)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLi
fecycleExecutor.java:90)
        at org.apache.maven.DefaultMaven.processProject(DefaultMaven.java:253)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:167)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:246)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:303)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:243)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:416)

        at org.codehaus.classworlds.Launcher.main(Launcher.java:363)
Caused by: java.lang.NullPointerException
        at org.codehaus.plexus.util.StringUtils.interpolate(StringUtils.java:206
5)
        at org.apache.maven.doxia.DoxiaMojo.getSiteDescriptor(DoxiaMojo.java:283
)
        at org.apache.maven.doxia.DoxiaMojo.execute(DoxiaMojo.java:176)
        ... 14 more",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i291vj:",9223372036854775807,,,,,,,,,,,,,,,,,,,"14/May/05 20:57;brettporter;JAson has fixed this;;;","21/Jun/05 04:43;elpunzalan;I tried this and I still get the same error... is this really fixed?;;;","21/Jun/05 06:12;brettporter;you tried building the latest from SVN?;;;","21/Jun/05 19:45;elpunzalan;Its fine now with the version from SVN. Thanks;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
revisit inclusion of reports in the plugin manager,MNG-366,12793514,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,brettporter,brettporter,brettporter,03/May/05 20:03,01/Feb/06 14:43,03/Jan/22 13:13,21/Jul/05 01:48,2.0-alpha-2,,,,,2.0-beta-1,,,"Design, Patterns & Best Practices",,,,,0,,,,"We've so far included the reports directly into the plugin manager - so reports are plugins. This was done to reduce duplication, and to make it easier to create plugins that do both tasks (Eg clover doing a report, but also a test that fails if under a certain threshold).

The downsides are:
- doxia is now loaded into the core
- this might make it harder to reuse from Ant tasks
- it is inconsistent with the POM definition, and a report may need to be declared twice unnecessarily.

We need to revisit whether this was the right choice - and if so, whether separating build from report plugins in the pom is the best idea.

Doxia being loaded into the core could definitely be avoided by correct plugin classloader handling.

Original mail before decision:

Firstly, are report JARs regular plugins, or should they have the type
""maven-report""? We believe they should be one JAR - ie only a
maven-plugin type.
- On the upside, this means that when you have a goal and a report doing
similar things (eg the clover test that fails if a certain coverage % is
missed, as well as the generated report), the code is all together and
there are just a mojo and report class in the JAR.
- On the downside, you are incurring a maven-plugin-api dependency on
someone only doing reporting, and a maven-reporting-api dependency on
someone only doing a plugin when the JAR provides both. I don't believe
this is a big deal. An alternative is to have the reporting mojo in a
separate jar that depends on the mojo, overcoming the latter which is
probably the only real problem. Thoughts?

Now, currently the report manager is a separate entity, used by the site
plugin. It resolves the reports on demand, similarly to the plugin
manager. If a report is a plugin, should the single plugin manager be
used? I think that it probably should, but we can defer the work on this
until we are certain.

Also, I think we need to introduce a pluginManagement section to
<reports /> so that report plugin configuration can be done in the same
way as build plugin configuration. Does everyone agree?
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-469,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28ptr:",9223372036854775807,,,,,,,,,,,,,,,,,,,"15/May/05 22:23;brettporter;needs more thought, but here is what we have come up with so far.

- it is ok for reports to be plugins, and probably loaded by the plugin manager
- should elminiate MavenConfiguration, this could be replaced with a single MavenProject instance, and we seem to be ok with allowing a dependency on thatas most reports will need it (eg dependency report should use it instead of the model to get transitive deps)

Issues:
- need to sort out how they are configured. Should the report objects reuse the mojo tools so become components with configuration also?
- need to check how configuration of the mojo overlaps with the report. I think the reporting parameters should mostly come from the <reports/> section, and anything in the plugins section just defines the execution parameters that wouldn't be specfied on the site itself.
- how is report inheritence defined? Would like consistency with plugins to support aggregation and inheritence, but pushing the config to the site.xml doesn't seem to allow inheritence at all. Needs to be looked at ni conjuction with site inheritence overall - perhaps the descriptor is made a resource and the pom refers to it using a URL/artifact identifier



;;;","06/Jun/05 02:27;brettporter;outstanding:
- remove MavenReportConfiguration. AbstractMavenReport should have a outputDirectory and project field
- move the loading of the reports into the doxia mojo, out of the expression evaluator and core
- due to the way locales are done, this will moving the output directory creation into the abstract report where it can concat the locale;;;","06/Jun/05 23:43;brettporter;have moved the reports out of the core, however it has highlighted an issue that existed: we have no way of identifying exactly what reports a project wants to display (as one plugin may have >1 report).

We should leverage the fact that reports are mojos now.

;;;","06/Jun/05 23:52;brettporter;more thoughts on how it should be configured: 
- if in <reports> the configuration applies to the report, which may be different to the mojo in <build/> if the plugin is executed there. So we need that separate section.
- currently, the report is not configured at all, as we use a map lookup
- similar to executeMojo, a getReport method should get a configured MavenReport
- really, the site mojo is like another lifecycle executor in its role for hooking into the plugin manager and executing a report instead of a mojo. share commons code. It may actually be another lifecycle?
- also remove the MavenConfiguration inline with this, as above

<reports>
  <plugins>
    <plugin>
      <g/a/v>
      <configuration />
      <report>
        <id>mail-lists</id>
        <configuration />

- how does this correlate to the new <executions/> element? Should also apply here, so a report can run twice with different configurations. 
    
;;;","13/Jun/05 07:31;brettporter;done the separation. See MNG-469 for configuration issues.;;;","18/Jun/05 11:56;brettporter;reporting api is back in the core;;;","20/Jul/05 03:56;brettporter;also look into why components.xml is required for reporting plugins;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Running integration tests: java.lang.NoClassDefFoundError: org/apache/maven/it/Verifier,MNG-352,12793450,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Won't Fix,,mhinterseher,mhinterseher,24/Apr/05 16:40,01/Feb/06 14:43,03/Jan/22 13:13,24/Apr/05 19:35,2.0-alpha-2,,,,,,,,,,,,,0,,,,"I tried to bootstrap m2 and failed with following exception:
...
Running integration tests
Exception in thread ""main"" java.lang.NoClassDefFoundError: org/apache/maven/it/Verifier",,,,1800,1800,,0%,1800,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28nvj:",9223372036854775807,,,,,,,,,,,,,,,,,,,"24/Apr/05 19:35;brettporter;I'm going to assume this is becuase of MNG-350, please reopen if that is not the case;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DeployMojo not compileable against ArtifactDeployer,MNG-351,12793448,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Won't Fix,,mhinterseher,mhinterseher,24/Apr/05 16:33,01/Feb/06 14:42,03/Jan/22 13:13,24/Apr/05 19:34,2.0-alpha-2,,,,,,,,,,,,,0,,,,"I tried to bootstrap m2 and got following error:

Compiling 1 source file to C:\org\apache\m2\maven-plugins\maven-deploy-plugin\target\classes
[INFO] ----------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ----------------------------------------------------------------------------
[INFO] Reason: Compilation failure
[INFO] ----------------------------------------------------------------------------
[INFO] C:\org\apache\m2\maven-plugins\maven-deploy-plugin\src\main\java\org\apache\maven\plugin\deploy\DeployMojo.java:[98,31]  Wrong number of arguments in method.

[INFO] ----------------------------------------------------------------------------
[INFO] Total time: 3 seconds

It tries to compile against maven-artifact-2.0-20050407.164450-2.jar.",,,,1800,1800,,0%,1800,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28vbj:",9223372036854775807,,,,,,,,,,,,,,,,,,,"24/Apr/05 19:34;brettporter;same reason as MNG-350;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
unable to bootstrap: update in dependcy lost  ArtifactRepository  <-> Repository ,MNG-350,12793487,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Won't Fix,,mhinterseher,mhinterseher,24/Apr/05 15:50,01/Feb/06 14:43,03/Jan/22 13:13,24/Apr/05 19:34,2.0-alpha-2,,,,,,,,Artifacts and Repositories,,,,,0,,,,"I failed to bootstrap during compile:
Resolved version: 1.0-alpha-3-20050422.075233-11
Downloading http://repo1.maven.org/maven2/org/apache/maven/wagon/wagon-provider-api/1.0-alpha-3-SNAPSHOT/wagon-provider-
api-1.0-alpha-3-20050422.075233-11.jar
Compiling sources ...
Compiling 49 source files to C:\org\apache\m2test\m2\maven-artifact\target\classes
C:\org\apache\m2test\m2\maven-artifact\src\main\java\org\apache\maven\artifact\repository\ArtifactRepository.java:71: ca
nnot find symbolRepository
symbol  : constructor (java.lang.String,java.lang.String,org.apache.maven.wagon.authentication.AuthenticationI
nfo)
location: class org.apache.maven.wagon.repository.Repository
        super( id, url, authInfo );
        ^
C:\org\apache\m2test\m2\maven-artifact\src\main\java\org\apache\maven\artifact\deployer\DefaultArtifactDeployer.java:70:
 cannot find symbol
symbol  : method getAuthenticationInfo()
location: class org.apache.maven.artifact.repository.ArtifactRepository
        if ( deploymentRepository.getAuthenticationInfo() == null )
                                 ^
2 errors
Failure executing javac, but could not parse the error:


Exception in thread ""main"" java.lang.Exception: Compilation error.
        at MBoot.compile(MBoot.java:905)
        at MBoot.buildProject(MBoot.java:563)
        at MBoot.run(MBoot.java:314)
        at MBoot.main(MBoot.java:116)
Rebuilding maven2 plugins

Caused by: Changes introduced to Repository constructor were lost/not in the wagon-provider-
api-1.0-alpha-3-20050422.075233-11.jar",,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28xn3:",9223372036854775807,,,,,,,,,,,,,,,,,,,"24/Apr/05 19:34;brettporter;sorry, the site its out of date. We moved to Subversion last week, so the code you were using is out of date and won't work with newer snapshots.

svn co http://svn.apache.org/repos/asf/maven/components;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
figure out why commons-logging-1.0.4 won't convert via the repoclean process,MNG-328,12793373,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,jdcasey,jdcasey,jdcasey,19/Apr/05 21:02,01/Feb/06 14:41,03/Jan/22 13:13,20/Apr/05 17:52,2.0-alpha-1,,,,,2.0-alpha-2,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-309,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28y1z:",9223372036854775807,,,,,,,,,,,,,,,,,,,"20/Apr/05 17:52;jdcasey;nasty little boolean logic mixup.

Will wait to deploy this fix until I have more of the repoclean issues resolved. I'll deploy what I have fixed tonight before bed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
better defined module ordering,MNG-326,12793409,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,brettporter,brettporter,brettporter,19/Apr/05 18:27,01/Feb/06 14:43,03/Jan/22 13:13,28/Jul/05 01:52,2.0-alpha-1,,,,,2.0-beta-1,,,Plugins and Lifecycle,,,,,0,,,," It should be in the following order:
- dependencies
- parent relationships
- module ordering in pom",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i29333:",9223372036854775807,,,,,,,,,,,,,,,,,,,"18/Jul/05 18:26;brettporter;note also that plugin use should add a dependency as well (just like parent does);;;","28/Jul/05 01:52;brettporter;added reports, plugins and extensions. Not doing any other alphabetical or module based ordering. It starts out ordered by modules, then pushes any dependencies above the project that depends on it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"when packaging = pom, the repository should store it in the groupID directory",MNG-321,12793387,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Won't Fix,brettporter,brettporter,brettporter,16/Apr/05 04:14,01/Feb/06 14:43,03/Jan/22 13:13,10/May/05 11:19,,,,,,,,,Artifacts and Repositories,,,,,0,,,,"eliminate the artifactId from the path when packaging is pom, so the repository matches the source tree and is easier to browse, avoiding directories like:
org/apache/maven/maven/maven-2.0-alpha-1.pom

To allow migration, we should have the repo tools copy these into both locations if found in either, then stop that and clean up at the release of alpha-3 (allowing users to remain a release behind).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-332,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28opr:",9223372036854775807,,,,,,,,,,,,,,,,,,,"20/Apr/05 19:22;jdcasey;are we also excluding the ${version} directory for poms, or only the ${artifactId} dir?

It's a difference between these results (from example given):

org/apache/maven/2.0-alpha-1/maven-2.0-alpha-1.pom (with version dir)

and

org/apache/maven/maven-2.0-alpha-1.pom (without)

Once we answer this, it's a [relatively] simple matter of changing the DefaultArtifactLayout's pathOfMetadata(..) method.;;;","22/Apr/05 09:53;jdcasey;this has to be resolved in a very specific order:

1.  make the change on localhost/localrepo
2.  install repoclean instance with new version of maven-artifact
3.  run tests
4.  sync new repoclean instance with [temp] instance on beaver
5.  perform conversion of to-ibiblio/maven2 to temp repo location
6.  change super-pom repository to point at temp repo
7.  clear local repository
8.  bootstrap m2 using temp remote repo
9.  restore super-pom repository specification
10. swap temp repo with ""real"" /maven2 dir
11. sync new /maven2 dir with ibiblio
12. re-bootstrap m2 with new layout on ibiblio
13. commit changes
14. verify CI

NOTE: changes must be made to the DefaultRepositoryLayout class in maven-artifact, as well as the layout used in MBoot2 and [possibly] in the core-it-verifier.;;;","22/Apr/05 21:58;brettporter;what's really needed is for the repo tool to process the m2 repo in place, adding extra poms, md5s, etc - but this is going to take more work which we can leave for the repository project itself.

I've whipped up a shell script to do the conversion in the repo, so can finish this one off.;;;","22/Apr/05 22:54;brettporter;where this will presently fall down is the difference in snapshot location. This isn't a major flaw, and we can live with it until alpha-3 when the old poms can be removed;;;","23/Apr/05 01:15;brettporter;ok, did this - and have backed it out because of the changes to maven-artifact required. IT can't deal with the duality of ""pom"" artifact vs ""pom"" metadata. It should, and will - but not yet.

I'm also skeptical about whether this is really the right thing to do. We might be reintroducing a problem with scalability when we start putting snapshots in one directory again.

Let's hold off on this for the moment - on the upside, related things are more robust now :);;;","27/Apr/05 21:25;brettporter;need to roll this back if MNG-321 is rolled back for good.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
mojos should be able to declare project independence,MNG-282,12793421,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,jdcasey,brettporter,brettporter,11/Apr/05 01:16,29/Oct/07 17:56,03/Jan/22 13:13,03/Aug/05 15:45,2.0-alpha-1,,,,,2.0-beta-1,,,Sites & Reporting,,,,,0,,,,"currently, a dummy project is created if there is none, or the project is passed on.

mojo's like archetype:create will never care about the current project (unless they were to modify the existing <modules> definition, perhaps).

However, they run in to problems, because it runs across all submodules of the currnet project when you really just intend to create one under the current directory.

For this to happen - the relationship between goals and reactor may need to be reversed as has been looked at in another issue.

It may be that the goal just needs to not be executed inside the reactor?
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28wv3:",9223372036854775807,,,,,,,,,,,,,,,,,,,"12/Jul/05 18:05;jdcasey;perhaps when a mojo declares @requiresProject == false:

if that mojo is the only one in the task list we can skip iteration through the project hierarchy and simply execute at the current location.;;;","03/Aug/05 15:45;jdcasey;also added:

@requiresProject false

to the archetype plugin. The maven-core-it-plugin now has a core-it:light-touch mojo that operates in this way, too...it's used to test it0045.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
need to be able to dynamically register providers for wagon and scm,MNG-226,12793270,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,brettporter,brettporter,brettporter,29/Mar/05 02:11,05/Apr/15 22:08,03/Jan/22 13:13,27/Jul/05 09:54,,,,,,2.0-beta-1,,,"Design, Patterns & Best Practices",,,,,0,,,,"currently, only what is a dependency on the using plugin, or in maven2/lib is used. Need to be able to add these on the fly - perhaps this is a plexus artifact container thing that can register certain roles with groupID/artifactId patterns so a hint of ""file"" can always go and get wagon-file?

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,MNG-598,MANTTASKS-61,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i295tz:",9223372036854775807,,,,,,,,,,,,,,,,,,,"29/Mar/05 06:43;trygvis@inamo.no;This issue should be a breeze once the Plexus one is done.;;;","15/Apr/05 10:28;jdcasey;working on this in tandem with multiple plexus.xml support, since this is the most compelling use case.;;;","18/Apr/05 10:34;jdcasey;This issue is blocked by the same problem which caused problems with the assembly plugin, namely that class realms are getting mixed up. One plugin loads a component, and that component stays in the container even after that plugin is finished executing. Then, a second plugin comes along with a requirement on the same (pre-loaded this time) component. This time, the container uses the component defined from the last plugin's execution, which means that the current plugin and the component which has been wired to it have incompatible class realms.

The specific case for scripting language support means that the component factory doesn't have access to the scripts, taglibs, etc. which are defined in this current plugin, since it cannot use the classloader to discover scripting parts inside the plugin (the plugin and component-factory have sibling, and isolated, class realms).

Until we have a better way of really sharing components inside of plexus, including shared classloading, etc. for loaded components, this will remain a problem.;;;","18/Apr/05 12:11;jdcasey;Came back around to this issue again, to see what the specific problem is. I looked in the code, and it's already doing a lookup on the container per-call to the getWagon() method, so it should be able to use dynamically-added wagons.

What is the specific problem WRT DefaultWagonManager and wagon lookup?;;;","05/Jun/05 21:05;jdcasey;the current problem is this:

we have a core plexus container used by the maven application, which defines things like WagonManager; and for each plugin, we have a child container which loads that plugin's specific dependencies (those not filtered by the exclusion filter in DefaultPluginManager). In the deploy plugin, the plugin contained (this has been worked around for now) declared a dependency on wagon-ssh...which means that the scp wagon should have been visible to WagonManager for this plugin's context. HOWEVER, since WagonManager is defined in the parent container, it cannot see components in the child (plugin) container, and therefore has no idea of the scp wagon's existence in the system.

This situation has other implications as well. For example, if we define a new wagon capable of artifact deployment - say webdav - we have to redeploy the maven-deploy-plugin with this new wagon as a dependency. It would probably be smarter in these cases to have a lookup mechanism which is similar to maven's plugin location process (brett's idea), and which would be reusable across maven-artifact, maven-scm, maven-core (plugins), etc.

As for component-factories, the new reliance on nested DefaultPlexusContainer instances rather than a single DefaultArtifactContainer should fix this. This is a special case, since the ComponentFactoryManager is a core plexus component, and is therefore defined in every container instance.

For now, wagon-ssh is included in maven-core's runtime dependencies, and we'll revisit this post-2.0;;;","05/Jun/05 21:07;jdcasey;moving this to post-2.0, since the remaining problems will require a much more intensive fix that we're not prepared to implement for the 2.0 release cycle;;;","07/Jun/05 10:50;jdcasey;marmalade and beanshell mojo support is now excluded from the core, and included on-demand via plugin dependencies.

As noted before, a similar solution for wagon-based things will require a refactor of the WagonManager implementation to allow PluginManager-style lookups.;;;","22/Jul/05 02:23;brettporter;bringing back to 2.0-beta-1 as I have a simple idea for a fix, if it works;;;","25/Jul/05 00:56;brettporter;We have ""build extensions"" - ie providers for wagon, scm that are not
really plugins but additional providers for a particular plexus role.
Currently, these need to be dropped into M2_HOME/lib along with their
dependencies which is not ideal. (SCM ones can be a dependency on the
SCM/release plugin, but there is no scope to later add a new one). In
the future, repository metadata might help us locate plexus components
with a particular role and role hint, but this will hold us over until then.

While we should still make the ""standard"" ones available out of the box,
it needs to be easy to add more via the project in a reproducible way,
so I propose:

<build>
  <extensions>
    <extension>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-ftp</artifactId>
      <version>1.0-alpha-4</version>
    </extension>
  </extensions>
</build>

This is here instead of in dependencies for clarity and so that you can
use them both as an extension and as a dependency without having to
worry about matching versions or scope.
 Extensions are:
- inherited from the parent
- have NO configuration
- the version can be omitted (use RELEASE) or use ranges like a plugin
and will be populated by the release plugin

At execution, it needs to be available to the core code (eg
DefaultWagonManager), and also particular plugins (eg maven-scm-plugin).
For now, I just intend to push the extensions into the core classloader.
I think we might eventually need to construct a per-project execution
realm as a basis for plugin realms and recreate those plugin realms for
each project (currently it is only ever created for one plugin - so
mutliple versions of a plugin might have problems).

;;;","26/Jul/05 19:00;brettporter;the type handlers will need to be loaded into the extension classloader, so I'll do MNG-226 first;;;","27/Jul/05 01:06;brettporter;implemented <extensions/> with some limitations which have been filed separately for later milestones;;;","27/Jul/05 07:54;brettporter;needs to be added for pluginManagement;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"lifecycle is not cleared on successive runs, leaving behind cruft",MNG-209,12793257,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,brettporter,brettporter,brettporter,16/Mar/05 16:57,01/Feb/06 14:42,03/Jan/22 13:13,16/Mar/05 18:28,,,,,,2.0-alpha-1,,,,,,,,0,,,,"currently, the lifecycle is only initialised once, and then the bindings are all gathered up.

As a result of this, new bindings for projects previously executed in the reactor are used on subsequent projects, whereas the lifecycle bindings should be fresh each time.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28ulb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
plexus mojo no longer compiles - runtime builder,MNG-144,12793186,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Blocker,Fixed,brettporter,brettporter,brettporter,14/Feb/05 01:18,01/Feb/06 14:42,03/Jan/22 13:13,15/Feb/05 19:38,,,,,,,,,,,,,,0,,,,"it looks like changes in the builder prevent the plexus mojo from building at the moment. This is preventing me from building doxia, as the deployed dependencies are sufficient.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28qv3:",9223372036854775807,,,,,,,,,,,,,,,,,,,"14/Feb/05 18:49;brettporter;error:

[INFO] [plugin:descriptor]
[INFO] [compiler:compile]
Compiling 6 source files to c:\home\Brett\cvs\maven-2\mojo\maven-plexus-plugin\target\classes
[INFO] ----------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ----------------------------------------------------------------------------
[INFO] Reason: Compilation failure
[INFO] ----------------------------------------------------------------------------
[INFO] c:\home\Brett\cvs\maven-2\mojo\maven-plexus-plugin\src\main\java\org\apache\maven\plugin\plexus\PlexusServiceGenerator.java:[37,7]  Class org.codehaus.plexus.builder.service.ServiceBuilder not found in import.
c:\home\Brett\cvs\maven-2\mojo\maven-plexus-plugin\src\main\java\org\apache\maven\plugin\plexus\PlexusApplicationGenerator.java:[172,24]  Method assemble(java.lang.String, java.io.File, java.util.Set, org.apache.maven.artifact.repository.ArtifactRepository, java.util.Set, java.io.File, java.io.File, java.io.File) not found in interface org.codehaus.plexus.builder.application.ApplicationBuilder.
c:\home\Brett\cvs\maven-2\mojo\maven-plexus-plugin\src\main\java\org\apache\maven\plugin\plexus\PlexusBundleApplicationMojo.java:[90,22]  Method bundle(java.io.File, java.io.File) not found in interface org.codehaus.plexus.builder.application.ApplicationBuilder.
c:\home\Brett\cvs\maven-2\mojo\maven-plexus-plugin\src\main\java\org\apache\maven\plugin\plexus\PlexusBundleRuntimeMojo.java:[90,22]  Method bundle(java.io.File, java.io.File) not found in interface org.codehaus.plexus.builder.runtime.PlexusRuntimeBuilder.
c:\home\Brett\cvs\maven-2\mojo\maven-plexus-plugin\src\main\java\org\apache\maven\plugin\plexus\PlexusContainerGenerator.java:[137,21]  Wrong number of arguments in method.

[INFO] ----------------------------------------------------------------------------
[INFO] Total time: 2 seconds
[INFO] Finished at: Tue Feb 15 10:44:52 EST 2005
[INFO] Final Memory: 1M/2M
[INFO] ----------------------------------------------------------------------------;;;","15/Feb/05 19:38;brettporter;fixed.

A lot of remote dependencies are out of date, but it now compiles from the local source - though I had to make some changes to the runtime builder to accommodate John's recent changes to maven-core.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
versions of managed dependencies attached to transdeps are not resolved correctly,MNG-115,12795780,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,jdcasey,jdcasey,jdcasey,03/Feb/05 22:38,06/Apr/15 01:36,03/Jan/22 13:13,04/Mar/07 18:13,,,,,,3.0-alpha-1,,,,,,,,0,,,,"When resolving dependencies transitively, each dependency's POM is retrieved, read, and parsed for its dependencies, and the cycle continues. Since we're dealing with Model's here, and not MavenProject's, dependency management has not taken place. This means the managed dependencies in that model will have a version (and other info, potentially) which is null. This leads to a NPE in the transdeps resolution process.

Proposal: Switch transitive resolution to use MavenProject rather than Model, which will alleviate any problems with post-processing and inheritance calculations on the Model. This will make inclusion of parent POM's easier too, along with resolution of interpolated values within the POM.",all,,,10800,10800,,0%,10800,10800,,,,,,,,,,,,,,,,,,,,,,,,,,,,SUREFIRE-306,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28m53:",9223372036854775807,,,,,,,,,,,,,,,,,,,"03/Feb/05 23:06;jdcasey;alright, so it didn't take 3 hours...

replaced Model/MavenXpp3Reader with MavenProjectBuilder in MavenMetadataSource, to incorporate all post-processing and inheritance calculations in a model before using it to transitively retrieve artifacts.

I've tested this in marmalade/marmalade-taglibs/jelly-core. I'm not sure the maven-core-it-verifier will allow me to conduct one integration test with 2-3 POM's, so I'm unsure how best to setup an integration test for this.;;;","04/Mar/07 17:11;handyande;This appears to still be problematic on trunk, but only when running surefire tests.
perhaps someone can comment on this? there was a lot of ""flux"" with surefire recently.
;;;","04/Mar/07 18:13;handyande;Sorry, not a re-open reason, will create a new related issue;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Classloader error when maven-artifact is a dependency for a plugin,MNG-72,12793124,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,,jvanzyl,jason,19/Aug/04 13:30,07/Apr/15 11:44,03/Jan/22 13:13,04/Dec/04 23:15,,,,,,2.0-alpha-1,,,,,,,,0,,,,If maven-artifact is used as a dependency in a plugin then we get a class cast exception during the execution of the plugin. The maven-artifact JAR is being filtered out from the realm used by the plugin but some other loading is going on that's causing a problem.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28l4n:",9223372036854775807,,,,,,,,,,,,,,,,,,,"04/Dec/04 23:15;jvanzyl;Artifact filtering mechanism has resolved this issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MavenXpp3Writer writes empty  parentElement to pom,MNG-7,12793048,Bug,Closed,MNG,Maven,software,mavendevlist,"Carefully read <strong><a href=""http://www.chiark.greenend.org.uk/~sgtatham/bugs.html"">How to Report Bugs Effectively</a></strong>.
Failure to provide a good bug report will delay or even prevent resolution of your issue.
<br/><br/>
<strong>Proper bug reports include self-contained example projects with precise instructions on how to reproduce the bug</strong>.
As a minimum, a debug log (<code>mvn -X <i>goal</i> > build.log</code>) is required to collect necessary information about your software stack (OS, Java, Maven, plugins) like versions and configuration. Please note that the plugin configuration dumps in a debug log might contain sensitive information like passwords, so be sure to erase those before log submission.
<br/><br/>
Before reporting a new bug, please <strong>double check whether the bug is still present in the latest release version</strong> of Maven. There is generally no reason to fill duplicate bug reports for issues that have already been fixed in newer releases.
<br/><br/>
The MNG JIRA project is for <strong>bugs and feature requests targetting the core of Apache Maven</strong>.
Problems with any of the following components should be filled against their specific issue trackers:
<ul>
<li><a href=""https://issues.apache.org/jira/browse/MNGSITE"">Apache Maven Website</a></li>
<li><a href=""http://maven.apache.org/plugins/index.html"">Apache Maven Plugins</a>, <a href=""http://www.mojohaus.org/plugins"">MojoHaus Plugins</a>, etc.</li>
<li><a href=""https://issues.sonatype.org/browse/MVNCENTRAL"">Contents of the Central Repository</a></li>
<li><a href=""https://issues.apache.org/jira/browse/MPOM"">Apache Parent POM</a></li>
</ul>

Issues encountered with embedded use of Maven inside an IDE or CI server need to be filled against the respective integrator:
<ul>
<li><a href=""https://www.eclipse.org/m2e/"">Eclipse m2e</a></li>
<li><a href=""http://netbeans.org/community/issues.html"">NetBeans</a></li>
</ul>

<strong>The issue tracker is not a support forum.</strong>
Questions regarding the usage of Maven belong to the <a href=""http://maven.apache.org/mail-lists.html"">user list</a>.
Follow netiquette before asking questions:
<ul>
<li>Search the <a href=""http://maven.apache.org/mail-lists.html"">mail archives</a> first</li>
<li>Read the <a href=""http://maven.apache.org/general.html"">official FAQ</a> </li>
<li>Use your favorite web search engine to locate existing information about the topic</li>
</ul>

Useful Resources:
<ul>
<li><a href=""http://maven.apache.org/guides/development/guide-maven-development.html#Creating_and_submitting_a_patch"">Submitting a Patch</a></li>
<li><a href=""http://maven.apache.org/guides/development/guide-helping.html"">Guide to Helping with Maven</a></li>
<li><a href=""https://cwiki.apache.org/confluence/display/MAVEN/Creating+a+Maven+Integration+Test"">Creating a Maven Integration Test</a></li>
<li><a href=""https://cwiki.apache.org/MAVEN/maven-3x-compatibility-notes.html"">Maven 3.x Compatibility Notes</a></li>
</ul>",http://maven.apache.org/,Critical,Fixed,trygvis,rhill,rhill,17/Apr/04 12:28,01/Feb/06 14:43,03/Jan/22 13:13,26/Jul/04 14:16,,,,,,2.0-alpha-1,,,,,,,,0,,,,"MavenXpp3Writer writes empty  parentElement to pom, thus making us unable to read the pom again due to ""missing artifact id in parent element"". ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,,,,,,,,,"0|i28xzj:",9223372036854775807,,,,,,,,,,,,,,,,,,,"17/Apr/04 12:51;rhill;actually all elements are outputted even if they are empty. true for top level elements (like parent, scm, mailingLists, etc.) but also for nested elements like //excludes;;;","17/Jul/04 14:01;trygvis@inamo.no;This should have been fixed in modello now so that the generated writer skips the entire element if the lists.size is 0.

Could you check that the output is what you like now and let me know?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
