Summary,Issue key,Issue id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Component/s,Due Date,Votes,Labels,Description,Environment,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Inward issue link (Duplicate),Outward issue link (Duplicate),Inward issue link (Relate),Attachment,Custom field (Epic Link),Custom field (First Response Date),Custom field (Global Rank),Custom field (Last updater),Custom field (Pull Request URL),Custom field (Rank),Custom field (Rank (Obsolete)),Custom field (Ranking),Custom field (Reference URL),Custom field (Spring Forum Reference),Comment,Comment,Comment,Comment,Comment,Comment,Comment
"5.3.5. Using Sort: typo ""be either""",DATAJPA-1792,87868,Bug,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Trivial,Done,schauder,chealer,chealer,09/Oct/20 7:51 PM,30/Dec/20 1:19 PM,01/Jan/22 11:34 AM,15/Oct/20 6:29 AM,2.3.4 (Neumann SR4),2.2.11 (Moore SR11),2.3.5 (Neumann SR5),2.4 GA (2020.0.0),Documentation,,0,triage.2.will-fix,"Section 5.3.5. _Using Sort_ starts with:
{quote}Sorting can be done be either providing a {{PageRequest}} or by using {{Sort}} directly.
{quote}
""*be* either"" should read ""*by* either"".",,1800,1800,,0%,1800,1800,,,,,,,,2020-12-30 13:19:18.67,9223372036854775807,issuemaster(issuemaster),,"0|i0cbuf:",9223372036854775807,9223372036854775807,https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#jpa.query-methods.sorting,,"30/Dec/20 1:19 PM;issuemaster;Spring Data has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-data-jpa#2087|https://github.com/spring-projects/spring-data-jpa/issues/2087]. ",,,,,,
When creating JPA starter with Spring Initializr there is no dependency for embedded DB,DATAJPA-1461,83111,Bug,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Trivial,Invalid,olivergierke,gtuz,gtuz,22/Nov/18 7:20 PM,30/Dec/20 1:16 PM,01/Jan/22 11:35 AM,22/Nov/18 9:21 PM,,,,,Infrastructure,,0,Initializer,"On [https://start.spring.io/,] if you create a simple project only with JPA module selected you will get the following pom.xml
{code:xml}
<project xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.example</groupId>
    <artifactId>demo</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>demo</name>
    <description>Demo project for Spring Boot</description>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.0.RELEASE</version>
        <relativePath/>
        <!-- lookup parent from repository -->
    </parent>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>{code}
There is no embedded DB dependency - this leads to a build issue
{code:java}
[INFO] 
[INFO] Results:
[INFO] 
[ERROR] Errors: 
[ERROR]   DemoApplicationTests.contextLoads » IllegalState Failed to load ApplicationCon...
[INFO] 
[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0
[INFO] 
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 29.827 s
[INFO] Finished at: 2018-11-22T20:19:42+01:00
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.22.1:test (default-test) on project demo: There are test failures.
 {code}
Would't be better to have H2 (or anything else) by default?",,28800,28800,,0%,28800,28800,,,,,,,,2018-11-22 21:21:16.697,9223372036854775807,issuemaster(issuemaster),,"0|i0bm47:",9223372036854775807,9223372036854775807,,,"22/Nov/18 9:21 PM;olivergierke;We don't control start.spring.io. However, the general consensus for that is that we cannot know what database you're going to want to use. Defaulting to an in-memory database is most certainly the wrong choice for a production-ready application.

You might wanna raise an issue with [Spring Initializr](https://github.com/spring-io/initializr) but I guess you're gonna get the same response.","22/Nov/18 9:43 PM;gtuz;For sure the wrong choice for production ready application, but it might be the default for test - having a starter whose build fails is kind of unexpected. Thanks for the tip, I am gonna open the issue with Spring Initializr","22/Nov/18 9:47 PM;gtuz;If someone is interested, here is the issue opened to Spring Initializr

[https://github.com/spring-io/initializr/issues/776]

 ","22/May/19 9:05 AM;schauder;Batch closing resolved issue without a fix version and a resolution indicating that there is nothing to release (Won't fix, Invalid ...)","30/Dec/20 1:16 PM;issuemaster;Spring Data has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-data-jpa#1781|https://github.com/spring-projects/spring-data-jpa/issues/1781]. ",,
Sample in README broken,DATAJPA-849,67351,Bug,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Trivial,Fixed,olivergierke,is-alex,is-alex,19/Jan/16 11:56 AM,30/Dec/20 1:12 PM,01/Jan/22 11:34 AM,19/Jan/16 1:11 PM,,1.10 M1 (Hopper),,,Documentation,,0,,,,300,300,,0%,300,300,,,,,,,,2016-01-19 12:06:52.492,9223372036854775807,issuemaster(issuemaster),https://github.com/spring-projects/spring-data-jpa/pull/162,"0|i090an:",9223372036854775807,9223372036854775807,,,"19/Jan/16 12:06 PM;olivergierke;Would you mind to elaborate?","19/Jan/16 12:56 PM;is-alex;I'd like to fix sampleTestCase in quick start section of README","19/Jan/16 1:11 PM;olivergierke;That's merged, thanks! 🙃","30/Dec/20 1:12 PM;issuemaster;Spring Data has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-data-jpa#1206|https://github.com/spring-projects/spring-data-jpa/issues/1206]. ",,,
Documentation PDF - Missing info about version referenced in PDF document,DATAJPA-577,58935,Bug,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Trivial,Fixed,olivergierke,staleks,staleks,21/Jul/14 11:33 PM,30/Dec/20 1:10 PM,01/Jan/22 11:34 AM,20/Aug/16 4:49 PM,1.6.1 (Dijkstra SR1),1.7.3 (Evans SR3),,,Documentation,,0,,"When you open PDF Spring-Data-JPA document, there is text ""version;"" but there should be version number referencing version to which this document is applicable",,,,,,,,,,,,,"21/Jul/14 11:33 PM;staleks;Spring-Data-JPA-documentation-missing-version.png;https://jira.spring.io/secure/attachment/22132/Spring-Data-JPA-documentation-missing-version.png",,2016-08-20 14:50:55.865,45094,issuemaster(issuemaster),,"0|i07q5j:",45109,44796,,,"20/Aug/16 2:50 PM;icoderman;Hi,
looks like this issue has been fixed since 1.7.2.RELEASE:
[http://docs.spring.io/spring-data/jpa/docs/1.7.2.RELEASE/reference/pdf/spring-data-jpa-reference.pdf]
[http://docs.spring.io/spring-data/jpa/docs/current/reference/pdf/spring-data-jpa-reference.pdf]
So probably it can be marked as resolved.","20/Aug/16 4:49 PM;olivergierke;Thanks for the ping, [~icoderman]. Resolving as fixed as of 1.7.","30/Dec/20 1:10 PM;issuemaster;Spring Data has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-data-jpa#965|https://github.com/spring-projects/spring-data-jpa/issues/965]. ",,,,
OSGi headers mandate minimum version 3.2.8,DATAJPA-482,55948,Bug,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Trivial,Works as Designed,olivergierke,ieugen,ieugen,26/Feb/14 1:35 PM,30/Dec/20 1:09 PM,01/Jan/22 11:34 AM,12/Mar/14 3:52 AM,1.5 GA (Codd),,,,Core,,0,,"I'm working with spring data in osgi (Karaf) and I noticed the latest release requires using version 3.2.8 of springframework. 

I expect 3.2.x branch to be API stable hence I should be able to replace 3.2.8 with 3.2.4 without major issues. 

Lines like: org.springframework.aop.framework;version=""[3.2.8.RELEASE,4.1.0)"" make using spring data inside OSGi a pain since a minor version is forced on you. 

I believe that the version should be [3.2.0,4.1.0) (provided all 3.2.x releases are backwards compatible)",,,,,,,,,,,,DATAJPA-494,,,2014-03-03 01:59:54.137,42424,issuemaster(issuemaster),,"0|i07c5j:",42841,42126,,,"03/Mar/14 1:59 AM;baumgartner;I have to agree about the version issues, as there are missing imports for aspectj dependencies (if you use auditing). I'll raise multiple tickets in the next days to improve OSGi support. ","03/Mar/14 2:04 AM;ieugen;Thank you. Any chance it will get in a minor release in the next future (a month or so)? I could test it. ","03/Mar/14 2:06 AM;olivergierke;@Marint - If there were missing declarations at all, wouldn't Bundlor bark at build time? I can clearly see the declaration of AspectJ in the {{template.mf}}. 

No, we're not going to lower the boundary to a .0 version as it's not about general compatibility but methods in Spring that were made public for us to use. Beyond that, we build against 3.2.8 and I don't want to imply a compatibility that we haven't tested against. If you're running a 3.2 version of Spring, you should be able to use (and in fact use) the latest bugfix version. 3.2.8 is crucial in particular because of a security fix included (the sole reason, why it was released so immediately after 3.2.7)

3.2.8 *is* the version we require and it is correctly stated in the OSGi Manifest.","03/Mar/14 4:22 AM;baumgartner;Bundlor only takes all import packages statements inside of classes and the template-manifest and creates Import-Package-statements inside the Manifest. If you use dynamic classloading inside your application (classLoader.loadClass(""foo.Bar"")), the bundlor is not able to resolve the dependency of package ""foo"" nor the dependencies of Bar. 
In case of the auditing-feature in Spring-Data-JPA, [JpaAuditingRegistrar|https://github.com/spring-projects/spring-data-jpa/blob/master/src/main/java/org/springframework/data/jpa/repository/config/JpaAuditingRegistrar.java] loads org.springframework.beans.factory.aspectj.AnnotationBeanConfigurerAspect in line 94, but the required imports of the class are not available inside the cloassloader, because they are missing inside the manifest, and you will end up with a ClassNotFoundException. 

In spring-data-jpa-1.3 the [Manifest|http://grepcode.com/file/repo1.maven.org/maven2/org.springframework.data/spring-data-jpa/1.3.5.RELEASE/META-INF/MANIFEST.MF?av=f] was missing the import package of org.springframework.beans.factory.aspectj, so by trying to use auditing you ended up with the message inside from the BeanDefinitionStoreException without pointing to source. Took me quite a while to figure it out, as it seemed the exception itself was thrown by the spring framework and full stack trace wasn't displayed. (It seems to me the context builder catched the exception and throwed it again, so the full stack trace wasn't available.) 
Due to this case, i want to suggest to add the full classname to all kind of expections which are caused by dynammic classloading, because ""spring-foo.jar is missing"" doesn't help in this situation. 

I didn't know about the API changes of spring 3.2.8. 

PS: I found this issue 3 weeks ago, but due to vacation and work i have been to busy to validate and contribute.
PPS: Import-Template inside of template.mf only advices Bundlor to use the specified version of the import if it is needed. If there is no import, bundlor won't create an Import-Package statement inside of Manifest.MF. To add a package which is not referenced by an import, you need to set Import-Package inside of Manifest. http://docs.spring.io/s2-bundlor/1.0.x/user-guide/html/ch05s05.html ","12/Mar/14 3:52 AM;olivergierke;See DATAJPA-494 for the related fix about the auditing configuration contributed by Martin.","22/May/19 9:05 AM;schauder;Batch closing resolved issue without a fix version and a resolution indicating that there is nothing to release (Won't fix, Invalid ...)","30/Dec/20 1:09 PM;issuemaster;Spring Data has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-data-jpa#881|https://github.com/spring-projects/spring-data-jpa/issues/881]. "
"Sorting properties can not be named strings that are the keys of the database,such as 'type'，'name'...",DATAJPA-131,41157,Bug,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Trivial,Works as Designed,olivergierke,opszl,opszl,03/Dec/11 9:21 PM,30/Dec/20 1:07 PM,01/Jan/22 11:34 AM,11/Jan/12 1:09 AM,1.0.1,,,,Documentation,,0,,,"1、spring data jpa 1.0.1
2、eclipseLink 2.3.0.v20110604-r9504
3、mysql（or oracle）
4、spring data jpa 1.0.1GA",7200,7200,,0%,7200,7200,,,DATAJPA-130,,,,,2011-12-04 07:39:36.877,28486,issuemaster(issuemaster),,"0|i02p7b:",15792,14969,,,"04/Dec/11 7:39 AM;olivergierke;Shouldn't that be obvious from the fact that there are reserved column and key words of the underlying database? So I wonder why you think it makes sense for us to document something that should be found in the documentation of the database being used or the persistence provider used?","04/Dec/11 9:23 PM;opszl;// in entity
@Entity
public class Department {
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO, generator = ""UIMSID"")
    @Column(length = 32)
    private String id;

    @Column(nullable = false)
    private String code;

    @Column(nullable = false)
    private String name;

    @Column
    private String type;

    ...
}

// in controller
    @RequestMapping(""consume/page"")
    public
    @ResponseBody
    Map consumePage(FlexiGridRequest fgr) { 
        Pageable pageable = fgr.getPageRequet(); // owned the Sort(Sort.Direction.ASC, ""type"");
        Page<Department> page = departmentRepository.findAll();
        return UIAdaptor.transform(page).toFlexiGrid();
    }

// get error 
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is Exception [EclipseLink-4002] (Eclipse Persistence Services - 2.3.0.v20110604-r9504): org.eclipse.persistence.exceptions.DatabaseException
Internal Exception: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ASC LIMIT 0, 15' at line 1
Error Code: 1064
Call: SELECT t1.ID AS a1, t1.CODE AS a2, t1.DESCRIPTION AS a3, t1.NAME AS a4, t1.VERSION AS a5, t1.TYPE_ID AS a6 FROM T_DICTIONARY t0, T_DICTIONARY t1 WHERE (t0.ID = t1.TYPE_ID) ORDER BY  ASC LIMIT ?, ?
	bind => [2 parameters bound]
Query: ReadAllQuery(referenceClass=Dictionary sql=""SELECT t1.ID AS a1, t1.CODE AS a2, t1.DESCRIPTION AS a3, t1.NAME AS a4, t1.VERSION AS a5, t1.TYPE_ID AS a6 FROM T_DICTIONARY t0, T_DICTIONARY t1 WHERE (t0.ID = t1.TYPE_ID) ORDER BY  ASC LIMIT ?, ?"")
	org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:681)
	org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:585)
","05/Dec/11 8:06 AM;olivergierke;This still seems to be an issue with your persistence provider's MySQL dialect not properly reporting reserved field names but building invalid SQL instead.","30/Dec/20 1:07 PM;issuemaster;Spring Data has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-data-jpa#557|https://github.com/spring-projects/spring-data-jpa/issues/557]. ",,,
"Sorting properties can not be named strings that are the keys of the database,such as 'type、'，''",DATAJPA-130,41156,Bug,Closed,DATAJPA,Spring Data JPA,software,schauder,,http://projects.spring.io/spring-data-jpa,Trivial,Duplicate,olivergierke,opszl,opszl,03/Dec/11 9:14 PM,30/Dec/20 1:07 PM,01/Jan/22 11:35 AM,05/Dec/11 8:04 AM,1.0.1,,,,Infrastructure,,0,,,mysql,,,,,,,,,,DATAJPA-131,,,,2020-12-30 13:07:26.103,28485,issuemaster(issuemaster),,"0|i02p73:",15791,14968,,,"30/Dec/20 1:07 PM;issuemaster;Spring Data has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-data-jpa#555|https://github.com/spring-projects/spring-data-jpa/issues/555]. ",,,,,,
